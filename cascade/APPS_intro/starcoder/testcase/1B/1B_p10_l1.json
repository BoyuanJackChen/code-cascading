[
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n-----\\nInput\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\nOutput\\n5\\n1 8 6\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    8\n    1 2\n    2 3\n    3 4\n    4 5\n    4 6\n    3 7\n    3 8\n''') == '5\\n1 8 6'\n\nassert solution('''\n    8\n    1 2\n    2 3\n    3 4\n    4 5\n    4 6\n    3 7\n    3 8\n''') == '5\\n1 8 6'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n\") == \"5\\n1 8 6\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '5'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected, f\"Solution is not correct. Expected: {expected}, Received: {solution}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8') == '5\\n1 8 6'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8') == '5\\n1 8 6'",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution ==",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"5\\n1 8 6\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 5\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 20, \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"\nassert solution(\"10\\n1 1\") == \"1 1\"\nassert solution(\"10\\n1 1 1\") == \"1 1\"",
        "num_ids_2": 55,
        "num_ids_4": 75
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8', \"Test case 1 failed.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == (20, 8), \"Expected (20, 8), got {}\".format(solution())",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '20 8', \"The given solution is incorrect. Please check your code.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    10\n    10 2 8 1 2 4 1 20 4 5\n    '''\n) == '20 8'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\\n\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\\n\"\n\nsolution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\")\nsolution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\")",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'Output\\n56\\n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6') == '56'",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\n\nassert solution('''\n5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"24\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n\") == \"56\"\nassert solution(\"1 2 3 4\\n1 3 5 7 2\\n2 4 8 10 3\\n3 5 11 13 4\\n4 6 14 16 5\\n\") == \"168\"",
        "num_ids_2": 116,
        "num_ids_4": 185
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Received: {solution(input_data)}\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 4 3 2\\n\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 5 4 2\\n\") == \"6\\nLRLRRR\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\nR\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRR\"\n",
        "num_ids_2": 61,
        "num_ids_4": 108
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 4 3 2\\n\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 5 4 2\\n\") == \"6\\nLRLRRR\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\nR\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRR\"\n\nsolution(\"5\\n1 2 4 3 2\\n\") == \"4\\nLRRR\"\nsolution(\"7\\n1 3 5 6 5 4 2\\n\") == \"6\\nLRLRRR\"\nsolution(\"3\\n2 2 2\\n\") == \"1\\nR\"\nsolution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRR\"",
        "num_ids_2": 61,
        "num_ids_4": 108
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 4\nassert solution(7) == 6\nassert solution(3) == 1\nassert solution(4) == 4",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 4 3 2\\n\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 5 4 2\\n\") == \"6\\nLRLRRR\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\nR\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRR\"",
        "num_ids_2": 61,
        "num_ids_4": 108
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 4 3 2\\n\") == \"4\\nLRRR\\n\"\nassert solution(\"7\\n1 3 5 6 5 4 2\\n\") == \"6\\nLRLRRR\\n\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\nR\\n\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRR\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 116
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5') == '4\\nLRRR'\nassert solution('7') == '6\\nLRLRRR'\nassert solution('3') == '1\\nR'\nassert solution('4') == '4\\nLLRR'",
        "num_ids_2": 31,
        "num_ids_4": 58
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 4 3 2\\n') == '4\\nLRRR'\nassert solution('7\\n1 3 5 6 5 4 2\\n') == '6\\nLRLRRR'\nassert solution('3\\n2 2 2\\n') == '1\\nR'\nassert solution('4\\n1 2 4 3\\n') == '4\\nLLRR'",
        "num_ids_2": 61,
        "num_ids_4": 108
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input') == 'Output' # This solution will be accepted",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == '4'\nassert solution(7) == '6'\nassert solution(3) == '1'\nassert solution(4) == '4'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"LRRR\"\nassert solution(input()) == \"LRLRRR\"\nassert solution(input()) == \"R\"\nassert solution(input()) == \"LLRR\"",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n1 4 4 7 4 1\\n\\n5\\n2 2 5 2 5\\n\\n4\\n1 3 3 7\\n\\n2\\n2 8\\n') == '3\\n'\nassert solution('5\\n2 2 5 2 5\\n\\n4\\n1 3 3 7\\n\\n2\\n2 8\\n') == '3\\n'\nassert solution('4\\n1 3 3 7\\n\\n2\\n2 8\\n') == '-1\\n'\nassert solution('2\\n2 8\\n') == '3\\n'",
        "num_ids_2": 116,
        "num_ids_4": 168
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([6, 1, 4, 4, 7, 4, 1]) == 3\nassert solution([5, 2, 2, 5, 2, 5]) == 3\nassert solution([4, 1, 3, 3, 7]) == -1\nassert solution([2, 2, 8]) == 3",
        "num_ids_2": 51,
        "num_ids_4": 87
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 4 4 7 4 1\") == \"3\"\nassert solution(\"5 2 2 5 2 5\") == \"3\"\nassert solution(\"4 1 3 3 7\") == \"-1\"\nassert solution(\"2 2 8\") == \"3\"",
        "num_ids_2": 40,
        "num_ids_4": 72
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([1, 4, 4, 7, 4, 1]) == \"3\"\nassert solution([2, 2, 5, 2, 5]) == \"3\"\nassert solution([1, 3, 3, 7]) == \"-1\"\nassert solution([2, 2, 8]) == \"3\"",
        "num_ids_2": 47,
        "num_ids_4": 82
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n1 4 4 7 4 1\\n') == '3\\n'\nassert solution('5\\n2 2 5 2 5\\n') == '3\\n'\nassert solution('4\\n1 3 3 7\\n') == '-1\\n'\nassert solution('2\\n2 8\\n') == '3\\n'",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 3, \"Expected 3, but got {}\".format(solution(2))\nassert solution(4) == 3, \"Expected 3, but got {}\".format(solution(4))\nassert solution(5) == 3, \"Expected 3, but got {}\".format(solution(5))\nassert solution(6) == -1, \"Expected -1, but got {}\".format(solution(6))\nassert solution(7) == 3, \"Expected 3, but got {}\".format(solution(7))",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3\"\nassert solution(6) == \"3\"\nassert solution(5) == \"3\"\nassert solution(4) == \"-1\"\nassert solution(2) == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 4 4 7 4 1\\n\") == \"3\"\nassert solution(\"5\\n2 2 5 2 5\\n\") == \"3\"\nassert solution(\"4\\n1 3 3 7\\n\") == \"-1\"\nassert solution(\"2\\n2 8\\n\") == \"3\"",
        "num_ids_2": 48,
        "num_ids_4": 86
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    6\n    1 4 4 7 4 1\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    5\n    2 2 5 2 5\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    4\n    1 3 3 7\n    \"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"\n    2\n    2 8\n    \"\"\"\n) == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Your code is wrong.\\nOutput: {output}, Expected: {output}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n') == 'YES'\nassert solution('3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n') == 'YES'\nassert solution('0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n') == 'YES'",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\\n3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\\n5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\\n0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\\n5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\\n0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\\n\") == \"YES\"",
        "num_ids_2": 305,
        "num_ids_4": 305
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\\n\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\\n\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\\n\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 194
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n') == 'YES'\nassert solution('3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n') == 'YES'\nassert solution('0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n') == 'YES'\nassert solution('') == 'NO'",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n') == 'NO'\nassert solution('3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n') == 'YES'\nassert solution('0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n') == 'YES'",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\\n3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\\n5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\\n0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\\n\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\\n5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\\n0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\\n\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\\n0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\\n\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\\n\"",
        "num_ids_2": 305,
        "num_ids_4": 492
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1098\") == \"20\", \"The expected output is '20', but it is actually '\"+solution(\"1098\")+\"'.\"\nassert solution(\"10\") == \"19\", \"The expected output is '19', but it is actually '\"+solution(\"10\")+\"'.\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1098) == 20\nassert solution(10) == 19",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1098) == \"20\"\nassert solution(10) == \"19\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1098\") == \"20\", \"Test case 1 failed\"\nassert solution(\"10\") == \"19\", \"Test case 2 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1098\") == \"20\", \"1098\"\nassert solution(\"10\") == \"19\", \"10\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1098) == \"20\"\nassert solution(10) == \"19\"\n\nsolution = input() -> str",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1098) == \"20\", \"Your function is not correct\"\nassert solution(10) == \"19\", \"Your function is not correct\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1098') == 20, \"Expected 20, got {}\".format(solution('1098'))\nassert solution('10') == 19, \"Expected 19, got {}\".format(solution('10'))\n\nprint('All tests passed.')",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1098) == 20, \"Output: {}\\nInput: 1098\\nExpected output: 20\".format(solution(1098))\nassert solution(10) == 19, \"Output: {}\\nInput: 10\\nExpected output: 19\".format(solution(10))\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1098) == 20, \"Test failed\"\nassert solution(10) == 19, \"Test failed\"\nassert solution(1) == 1, \"Test failed\"\nassert solution(0) == 0, \"Test failed\"\nassert solution(-1) == 0, \"Test failed\"\nassert solution(1000) == 100, \"Test failed\"",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"5\\n3\\n1\\n2\\n4 \"\nassert solution(7) == \"7\\n3\\n2\\n1\\n4\\n5\\n6 \"\nassert solution(7) == \"7\\n3\\n2\\n1\\n4\\n5\\n6 \"\nassert solution(5) == \"2\\n1\\n4\\n5\\n3\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"5 3 1 2 4 \n7 3 2 1 4 5 6 \n7 4 2 3 6 5 1 \n2 1 4 5 3\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n5 0 0 2 4\\n') == '5 3 1 2 4\\n'\nassert solution('7\\n7 0 0 1 4 0 6\\n') == '7 3 2 1 4 5 6\\n'\nassert solution('7\\n7 4 0 3 0 5 1\\n') == '7 4 2 3 6 5 1\\n'\nassert solution('5\\n2 1 0 0 0\\n') == '2 1 4 5 3\\n'",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Solution is {solution(input())}, but expected {expected}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2 1 4 5 3', 'The solution should return \"2 1 4 5 3\".'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 0 0 2 4\\n\") == \"5 3 1 2 4\\n\"\nassert solution(\"7\\n7 0 0 1 4 0 6\\n\") == \"7 3 2 1 4 5 6\\n\"\nassert solution(\"7\\n7 4 0 3 0 5 1\\n\") == \"7 4 2 3 6 5 1\\n\"\nassert solution(\"5\\n2 1 0 0 0\\n\") == \"2 1 4 5 3\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '3 2 4 5 6 1', \"Expected Output: '3 2 4 5 6 1', but got: '{}'\".format(solution(3))",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''5 3 1 2 4\n7 3 2 1 4 5 6\n7 4 2 3 6 5 1\n2 1 4 5 3''', 'Your solution is incorrect.'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 0 0 2 4\\n\") == \"5 3 1 2 4\\n\"\nassert solution(\"7\\n7 0 0 1 4 0 6\\n\") == \"7 3 2 1 4 5 6\\n\"\nassert solution(\"7\\n7 4 0 3 0 5 1\\n\") == \"7 4 2 3 6 5 1\\n\"\nassert solution(\"5\\n2 1 0 0 0\\n\") == \"2 1 4 5 3\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '''2 1 4 5 3\n2 1 4 5 3\n2 1 4 5 3\n2 1 4 5 3\n2 1 4 5 3'''",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n4 2\\n1 2 2 3\\n\\nOutput\\nYES\\n1 1 2 2\\n\\nInput\\n5 2\\n3 2 1 2 3\\n\\nOutput\\nYES\\n2 1 1 2 1\\n\\nInput\\n5 2\\n2 1 1 2 1\\n\\nOutput\\nNO\\n') == 'YES\\n1 1 2 2\\n\\nYES\\n2 1 1 2 1\\n\\nNO\\n'",
        "num_ids_2": 144,
        "num_ids_4": 144
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\\n\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\\n\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 72,
        "num_ids_4": 97
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\\n\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\\n\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 99
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 2 3\") == \"YES\\n1 1 2 2\"\nassert solution(\"3 2 1 2 3\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"2 1 1 2 1\") == \"NO\"\nassert solution(\"4 2\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\") == \"NO\"",
        "num_ids_2": 54,
        "num_ids_4": 93
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\\n\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\\n\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 99
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Expected output {output}, got {solution(input)}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\\n1 1 2 2\\n\"\nassert solution(input()) == \"YES\\n2 1 1 2 1\\n\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 44,
        "num_ids_4": 54
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 5 2\\n11010100101\") == \"1\\n\"\nassert solution(\"11 5 1\\n11010100101\") == \"3\\n\"\n\nfrom typing import List",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 5 2\") == \"1\\n\"\nassert solution(\"11 5 1\") == \"3\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 5 2\\n11010100101\\n\") == \"1\"\nassert solution(\"11 5 1\\n11010100101\\n\") == \"3\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 5 2\\n11010100101\\n\") == \"1\\n\"\nassert solution(\"11 5 1\\n11010100101\\n\") == \"3\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('11 5 2\\n11010100101\\n') == '1\\n'\nassert solution('11 5 1\\n11010100101\\n') == '3\\n'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"example.txt\", \"r\").read()) == \"YES\\nYES\\nNO\\nYES\\nNO\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"YES\"\n\nimport itertools",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"NO\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(5) ==",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'YES', \"Test case #1 failed\"\nassert solution(stdin) == 'YES', \"Test case #2 failed\"\nassert solution(stdin) == 'NO', \"Test case #3 failed\"\nassert solution(stdin) == 'YES', \"Test case #4 failed\"\nassert solution(stdin) == 'NO', \"Test case #5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\" or solution(input()) == \"NO\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5\") == \"YES\\nYES\\nNO\\nYES\\nNO\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\" or solution(stdin) == \"NO\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\") == \"Output\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"99999\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == \"1557\"\nassert solution(5) == \"99999\"\nassert solution(2) == \"33\"",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\") == \"1557\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\"\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\") == \"33\"",
        "num_ids_2": 78,
        "num_ids_4": 112
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4') == '1557'\nassert solution('5') == '99999'\nassert solution('2') == '33'",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"33\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\") == \"1557\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\"\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\") == \"33\"",
        "num_ids_2": 78,
        "num_ids_4": 112
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\") == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1337\", \"1 2 5 4 6 6 3 1 9\") == \"1553\"\nassert solution(\"11111\", \"9 8 7 6 5 4 3 2 1\") == \"99999\"\nassert solution(\"33\", \"1 1 1 1 1 1 1 1 1\") == \"33\"",
        "num_ids_2": 72,
        "num_ids_4": 103
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\") == \"1557\"\nassert solution(\"Input\") == \"99999\"\nassert solution(\"Input\") == \"33\"",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1 1 3\\n102\"\nassert solution(input()) == \"114 228 456\\n4\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"",
        "num_ids_2": 29,
        "num_ids_4": 117
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\"\nprint(\"All test cases passed successfully\")\n",
        "num_ids_2": 179,
        "num_ids_4": 179
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got {solution(stdin)}\"\nfor _ in range(t):\n    a, b, c = map(int, input().split())\n    res = min(min(a, b), c)\n    print(res)\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"\nassert solution(\"1 2 3\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\\n1 2 3\") == \"3\\n2 1 3\\n15\\n146 202 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"",
        "num_ids_2": 367,
        "num_ids_4": 367
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\\n\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"",
        "num_ids_2": 189,
        "num_ids_4": 189
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([1, 2, 3]) == '1\\n1 1 3'\nassert solution([123, 321, 456]) == '1\\n102'\nassert solution([5, 10, 15]) == '1\\n18'\nassert solution([15, 18, 21]) == '1\\n18'\nassert solution([100, 100, 101]) == '1\\n1'\nassert solution([1, 22, 29]) == '1\\n1 1 29'\nassert solution([3, 19, 38]) == '1\\n1 3 38'\nassert solution([6, 30, 46]) == '1\\n6'",
        "num_ids_2": 50,
        "num_ids_4": 95
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\\n\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"",
        "num_ids_2": 189,
        "num_ids_4": 189
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\\n\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\\n\"",
        "num_ids_2": 194,
        "num_ids_4": 194
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Output does not match. Expected: '{output}', Received: '{solution(input())}'\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'Output\\n2\\n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\"  # expected output: 2",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 3 7\\n2\\n1 100000\") == \"2\"\nassert solution(\"2\\n1 100000\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"0\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 3 7\\n2\\n1 100000\\n0\") == \"2\\n\"\nassert solution(\"2\\n1 100000\\n0\") == \"0\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n4\\n1 3 3 7\\n\\nOutput\\n2\\n\\nInput\\n2\\n1 100000\\n\\nOutput\\n0\\n\\n\") == \"Output\\n2\\n\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 3 7\\n2\\n1 100000\\n0\") == \"2\\n\"\nassert solution(\"2\\n1 100000\\n0\") == \"0\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n4\\n1 3 3 7\\n\") == \"Output\\n2\\n\"\nassert solution(\"Input\\n2\\n1 100000\\n\") == \"Output\\n0\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 2 3 0 3 \\n\"\nassert solution() == \"-1 \\n\"\nassert solution() == \"2 2 2 1 1 0 4 3 4 4 \\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2\\n1 3 1\\n1 5 1\\n\\n3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n') == '1 2 3 0 3 \\n-1 \\n2 2 2 1 1 0 4 3 4 4'\nassert solution('3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n') == '-1 \\n'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n') == '2 2 2 1 1 0 4 3 4 4'",
        "num_ids_2": 172,
        "num_ids_4": 227
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 2 3 0 3\\n1 2 3 0 3\\n-1\\n2 2 2 1 1 0 4 3 4 4\"\nassert solution(\"5 2\\n1 3 1\\n1 5 1\\n\\n3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n\") == \"-1\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n\") == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\\n\") == \"-1\"",
        "num_ids_2": 133,
        "num_ids_4": 220
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n\") == \"1 2 3 0 3\\n\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\") == \"-1\\n\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\") == \"2 2 2 1 1 0 4 3 4 4\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 125
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"1 2 3 0 3\n2 2 1 1 1 0 4 3 4 4\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n3 2\\n1 3 1\\n1 2 1\\n\") == \"1 2 3 0 3\\n\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\") == \"-1\\n\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\") == \"2 2 2 1 1 0 4 3 4 4\\n\"",
        "num_ids_2": 87,
        "num_ids_4": 144
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2\\n1 3 1\\n1 5 1\\n\\n3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n2 2 2 1 1 0 4 3 4 4 ') == '1 2 3 0 3 \\n-1 \\n2 2 2 1 1 0 4 3 4 4 \\n'",
        "num_ids_2": 135,
        "num_ids_4": 135
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n\") == \"1 2 3 0 3\\n\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\") == \"-1\\n\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\") == \"2 2 2 1 1 0 4 3 4 4\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 125
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n\") == \"1 2 3 0 3\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\") == \"-1\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\") == \"2 2 2 1 1 0 4 3 4 4\"",
        "num_ids_2": 64,
        "num_ids_4": 119
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"120 51840\") == \"7\\n\", \"The output is incorrect.\"\nassert solution(\"42 42\") == \"0\\n\", \"The output is incorrect.\"\nassert solution(\"48 72\") == \"-1\\n\", \"The output is incorrect.\"",
        "num_ids_2": 48,
        "num_ids_4": 70
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_data, stdout_data)\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 7, \"Expected 7, got {}\".format(solution(3))\nassert solution(48) == 0, \"Expected 0, got {}\".format(solution(48))\nassert solution(42) == -1, \"Expected -1, got {}\".format(solution(42))",
        "num_ids_2": 48,
        "num_ids_4": 73
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"7\\n\"\nassert solution(input()) == \"0\\n\"\nassert solution(input()) == \"-1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"120 51840\") == \"7\\n\"\nassert solution(\"42 42\") == \"0\\n\"\nassert solution(\"48 72\") == \"-1\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"7\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 4, \"aba\") == \"ababababa\"\nassert solution(3, 2, \"cat\") == \"catcat\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"\n\nfrom typing import List\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'\n\nfrom typing import List",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution does not match expected output: {solution(input())}!= {output}\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"ababababa\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 4) == 'ababababa'\nassert solution(3, 2) == 'catcat'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0') == '3\\n4 1 5\\n2'\nassert solution('4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0') == '2\\n1 4 '\nassert solution('5\\n2 1 2 4 3\\n0') == '0'\n",
        "num_ids_2": 101,
        "num_ids_4": 125
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\") == \"2\\n1 4\"\nassert solution(\"5\") == \"0\"\nassert solution(\"2 1 2 4 3\") == \"2\\n1 4\"",
        "num_ids_2": 40,
        "num_ids_4": 73
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3') == '0'",
        "num_ids_2": 52,
        "num_ids_4": 73
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\") == \"3\\n4 1 5\\n0\"\nassert solution(\"4\\n8 3 5 2\\n5\\n2 1 2 4 3\") == \"2\\n1 4\\n0\"\nassert solution(\"5\\n2 1 2 4 3\\n\") == \"0\"",
        "num_ids_2": 98,
        "num_ids_4": 121
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 73
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 73
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3') == '0'\n\nprint(\"All test cases passed\")",
        "num_ids_2": 52,
        "num_ids_4": 73
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"3\\n4 1 5\"\nassert solution(4) == \"2\\n1 4\"\nassert solution(5) == \"0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 42
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3') == '0'",
        "num_ids_2": 52,
        "num_ids_4": 73
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\nasdf\\n\") == 4\nassert solution(\"5 6\\naaaaa\\n\") == 15\nassert solution(\"5 7\\naaaaa\\n\") == -1\nassert solution(\"10 100\\najihiushda\\n\") == 233",
        "num_ids_2": 34,
        "num_ids_4": 75
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4\nassert solution() == 15\nassert solution() == -1\nassert solution() == 233",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nasdf\\n\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\\n\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\\n\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\\n\") == \"233\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 87
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 6\naaaaa\n\"\"\") == \"15\"\n\nassert solution(\"\"\"\n5 7\naaaaa\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n10 100\najihiushda\n\"\"\") == \"233\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\") == \"233\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\nasdf\\n\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\\n\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\\n\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\\n\") == \"233\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 87
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nasdf\\n\") == \"4\"\nassert solution(\"5 6\\naaaaa\\n\") == \"15\"\nassert solution(\"5 7\\naaaaa\\n\") == \"-1\"\nassert solution(\"10 100\\najihiushda\\n\") == \"233\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5\\nasdf\\n') == '4\\n'\nassert solution('5 6\\naaaaa\\n') == '15\\n'\nassert solution('5 7\\naaaaa\\n') == '-1\\n'\nassert solution('10 100\\najihiushda\\n') == '233\\n'",
        "num_ids_2": 40,
        "num_ids_4": 87
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\"",
        "num_ids_2": 108,
        "num_ids_4": 142
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n2 1\\n2 3\\n3 4\\n\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n1 2\\n1 3\\n4 1\\n\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"NO\"",
        "num_ids_2": 116,
        "num_ids_4": 152
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"NO\"",
        "num_ids_2": 112,
        "num_ids_4": 148
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'YES\\n2 1\\n2 3\\n3 4'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\"",
        "num_ids_2": 108,
        "num_ids_4": 142
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n2 1\\n2 3\\n3 4\\n'\nassert solution('4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n1 2\\n1 3\\n4 1\\n'\nassert solution('4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'NO'",
        "num_ids_2": 116,
        "num_ids_4": 152
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution == \"YES\\n1 2\\n1 3\\n4 1\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'''\n    4 5 1\n    1 2\n    1 3\n    1 4\n    2 3\n    3 4\n    ''') == 'YES\\n2 1\\n2 3\\n3 4'\n\nassert solution(r'''\n    4 5 3\n    1 2\n    1 3\n    1 4\n    2 3\n    3 4\n    ''') == 'YES\\n1 2\\n1 3\\n4 1'\n\nassert solution(r'''\n    4 4 3\n    1 2\n    1 4\n    2 3\n    3 4\n    ''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n2 1\\n2 3\\n3 4\\n\"\nassert solution(\"Input\\n4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n1 2\\n1 3\\n4 1\\n\"\nassert solution(\"Input\\n4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"NO\"",
        "num_ids_2": 122,
        "num_ids_4": 161
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution() == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution() == \"YES\\n1 2\\n1 4\\n2 3\\n3 4\"\nassert solution() == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution() == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution() == \"YES\\n1 2\\n1 4\\n2 3\\n3 4\"\nassert solution() == \"YES\\n1 2\\n1 3\\n4 1\"",
        "num_ids_2": 46,
        "num_ids_4": 97
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\nassert solution(\"01:02\\n03:02\") == \"02:02\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10:00\\n11:00') == '10:30\\n'\nassert solution('11:10\\n11:12') == '11:11\\n'\nassert solution('01:02\\n03:02') == '02:02\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10:00\\n11:00') == '10:30\\n'\nassert solution('11:10\\n11:12') == '11:11\\n'\nassert solution('01:02\\n03:02') == '02:02\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\nassert solution(\"01:02\\n03:02\") == \"02:02\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10:00\\n11:00\\n\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\\n\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\\n\") == \"02:02\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\") == \"02:02\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(input())) == \"10:30\"\nassert solution(solution(input())) == \"11:11\"\nassert solution(solution(input())) == \"02:02\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\") == \"02:02\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\nassert solution(\"01:02\\n03:02\") == \"02:02\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10:00\\n11:00') == '10:30'\nassert solution('11:10\\n11:12') == '11:11'\nassert solution('01:02\\n03:02') == '02:02'",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(42) == 6\nassert solution(27) == 5\nassert solution(1) == 1\nassert solution(4) == 2",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 1, \"Solution does not work as expected.\"\nassert solution(4) == 2, \"Solution does not work as expected.\"\nassert solution(27) == 5, \"Solution does not work as expected.\"\nassert solution(42) == 6, \"Solution does not work as expected.\"",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == '1'\nassert solution(4) == '2'\nassert solution(27) == '5'\nassert solution(42) == '6'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 1, \"Test 1\"\nassert solution(4) == 2, \"Test 2\"\nassert solution(27) == 5, \"Test 3\"\nassert solution(42) == 6, \"Test 4\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 1, \"Input: 2\\nOutput: 1\"\nassert solution(4) == 2, \"Input: 4\\nOutput: 2\"\nassert solution(27) == 5, \"Input: 27\\nOutput: 5\"\nassert solution(42) == 6, \"Input: 42\\nOutput: 6\"",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(42) == 6\nassert solution(27) == 5\nassert solution(4) == 2\nassert solution(2) == 1",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\"\n",
        "num_ids_2": 70,
        "num_ids_4": 121
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\") == \"1\\n\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\") == \"2\\n\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\") == \"0\\n\"\nassert solution(\"2\\n3 10\\n1 5\") == \"7\\n\"\n\nsolution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\") # 1\nsolution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\") # 2\nsolution(\"3\\n4 5\\n1 2\\n9 20\") # 0\nsolution(\"2\\n3 10\\n1 5\") # 7",
        "num_ids_2": 70,
        "num_ids_4": 121
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 3\\n2 6\\n0 4\\n3 3\\n') == '1\\n'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2\\n'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0\\n'\nassert solution('2\\n3 10\\n1 5\\n') == '7\\n'",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\") == \"0\"\nassert solution(\"2\\n3 10\\n1 5\") == \"7\"",
        "num_ids_2": 66,
        "num_ids_4": 113
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\") == \"0\"\nassert solution(\"2\\n3 10\\n1 5\") == \"7\"",
        "num_ids_2": 66,
        "num_ids_4": 113
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\"\nassert solution(input3) == output3, \"Test 3 failed\"\nassert solution(input4) == output4, \"Test 4 failed\"\nassert solution(input5) == output5, \"Test 5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"1\"\nassert solution(2) == \"2\"\nassert solution(4) == \"1\"\nassert solution(5) == \"2\"\nassert solution(1) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\") == \"1\\n\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\") == \"2\\n\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\") == \"0\\n\"\nassert solution(\"2\\n3 10\\n1 5\") == \"7\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 121
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4\\n1 3\\n2 6\\n0 4\\n3 3\\n\\nOutput\\n1\\n\\nInput\\n5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\\nOutput\\n2\\n\\nInput\\n3\\n4 5\\n1 2\\n9 20\\n\\nOutput\\n0\\n\\nInput\\n2\\n3 10\\n1 5\\n\\nOutput\\n7\") == \"1\\n\\nInput\\n3\\n4 5\\n1 2\\n9 20\\n\\nOutput\\n0\\n\\nInput\\n2\\n3 10\\n1 5\\n\\nOutput\\n7\"",
        "num_ids_2": 201,
        "num_ids_4": 201
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3\\n2 6\\n0 4\\n3 3\\n') == '1\\n'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2\\n'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0\\n'\nassert solution('2\\n3 10\\n1 5\\n') == '7\\n'",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES\\n'\nassert solution('3\\n4 5 3\\n') == 'NO\\n'\nassert solution('2\\n10 10\\n') == 'YES\\n'\n",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"NO\"\nassert solution(\"2\\n10 10\") == \"YES\"",
        "num_ids_2": 38,
        "num_ids_4": 55
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"NO\"\nassert solution(\"2\\n10 10\") == \"YES\"",
        "num_ids_2": 38,
        "num_ids_4": 55
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == \"YES\"\nassert solution(1) == \"NO\"\nassert solution(2) == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10') == 'YES'\nassert solution('3\\n4 5 3\\n\\n2\\n10 10') == 'NO'\nassert solution('2\\n10 10') == 'YES'",
        "num_ids_2": 74,
        "num_ids_4": 91
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\\n\"\nassert solution(\"3\\n4 5 3\\n\") == \"NO\\n\"\nassert solution(\"2\\n10 10\\n\") == \"YES\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES\\n'\nassert solution('3\\n4 5 3\\n') == 'NO\\n'\nassert solution('2\\n10 10\\n') == 'YES\\n'",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"NO\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"",
        "num_ids_2": 42,
        "num_ids_4": 61
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"NO\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"",
        "num_ids_2": 42,
        "num_ids_4": 61
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"",
        "num_ids_2": 25,
        "num_ids_4": 42
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4\nassert solution() == 15\nassert solution() == -1\nassert solution() == 233\n\nfrom typing import List",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"",
        "num_ids_2": 25,
        "num_ids_4": 42
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\") == \"233\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\\n\"\nassert solution(\"5 6\\nanaaa\") == \"15\\n\"\nassert solution(\"5 7\\nanaaa\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\") == \"233\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 77
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nasdf\") == 4\nassert solution(\"5 6\\naaaaa\") == 15\nassert solution(\"5 7\\naaaaa\") == -1\nassert solution(\"10 100\\najihiushda\") == 233",
        "num_ids_2": 30,
        "num_ids_4": 67
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\") == \"233\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"Input\\n4 5\\nasdf\\n\") == \"4\\n\"\nassert solution(stdin=\"Input\\n5 6\\naaaaa\\n\") == \"15\\n\"\nassert solution(stdin=\"Input\\n5 7\\naaaaa\\n\") == \"-1\\n\"\nassert solution(stdin=\"Input\\n10 100\\najihiushda\\n\") == \"233\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 107
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\") == \"233\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\\n\") == \"4\"\nassert solution(\"3 2 2\\n\") == \"7\"\nassert solution(\"1 100 1\\n\") == \"3\"\nassert solution(\"30 20 10\\n\") == \"39\"",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"expected '{expected}', got '{solution(input())}'\"\n\nfrom typing import List",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(1)) == \"4\"\nassert solution(str(2)) == \"7\"\nassert solution(str(3)) == \"3\"\nassert solution(str(100)) == \"3\"\nassert solution(str(30)) == \"39\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\\n3 2 2\\n1 100 1\\n30 20 10\") == \"4\\n7\\n3\"\nassert solution(\"3 2 2\\n1 100 1\\n30 20 10\") == \"7\\n39\\n3\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"7\"\nassert solution(3) == \"3\"\nassert solution(30) == \"39\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 4\nassert solution(2) == 7\nassert solution(3) == 3\nassert solution(30) == 39\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('day05.txt', 'r')) == '3\\n'\nassert solution(open('day05.txt', 'r')) == '7\\n'\nassert solution(open('day05.txt', 'r')) == '3\\n'",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, got: {solution(input_data)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Test case {index+1} failed. Output: {output}, Explanation: {explanation}\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1\n''') == 'YES\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Test failed. Expected {output}, but got {solution(input)}\"\nprint(\"Test passed\")\n\nfor i in range(t):\n    n, m = map(int, input().split())\n    tiles = []\n    for _ in range(n):\n        tiles.append(list(map(int, input().split())))\n    tiles.sort(key=lambda x: (-x[0], x[1]))\n\n    def is_valid(tiles):\n        rows = [[tiles[i][j] for j in range(m)] for i in range(n)]\n        cols = [list(row) for row in zip(*rows)]\n        return all(all(tiles[i][j] == tiles[j][i] for j in range(m)) for i in range(n)) and all(tiles[i][j] == tiles[j][m - 1 - i] for i in range(n))\n\n    def is_symmetric(tiles):\n        n = len(tiles)\n        for i in range(n // 2):\n            for j in range(n - i - 1):\n                if tiles[i][j]!= tiles[n - i - 1 - j][i]:\n                    return False\n        return True\n\n    if is_valid(tiles) and is_symmetric(tiles):\n        print(\"YES\")\n    else:\n        print(\"NO\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    6\n    3 4\n    1 2\n    5 6\n    5 7\n    7 4\n    8 9\n    9 8\n    2 5\n    1 1\n    1 1\n    2 2\n    2 2\n    1 100\n    10 10\n    10 10\n    1 2\n    4 5\n    8 4\n    2 2\n    1 1\n    1 1\n    1 2\n    3 4\n    1 2\n    1 1\n    1 1\n''') == 'YES\\nNO\\nYES\\nNO\\nYES\\nYES'\n\nassert solution('''\n    6\n    3 4\n    1 2\n    5 6\n    5 7\n    7 4\n    8 9\n    9 8\n    2 5\n    1 1\n    1 1\n    2 2\n    2 2\n    1 100\n    10 10\n    10 10\n    1 2\n    4 5\n    8 4\n    2 2\n    1 1\n    1 1\n    1 2\n    3 4\n    1 2\n    1 1\n    1 1\n''') == 'YES\\nNO\\nYES\\nNO\\nYES\\nYES'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1''') == 'YES'\nassert solution('''6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1''') == 'NO'\nassert solution('''6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1''') == 'YES'\nassert solution('''6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1''') == 'NO'\nassert solution('''6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1''') == 'YES'\nassert solution('''6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1''') == 'NO'\nassert solution('''6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1''') == 'YES'\nassert solution('''6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1''') == 'NO'\nassert solution('''6\n3 4\n1 2\n5 6\n5 7\n7 4\n8",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nYES\\nYES\\nYES\\n\"\nassert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\n\"\nassert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\\n\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\n\"",
        "num_ids_2": 350,
        "num_ids_4": 529
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: '{expected_output}', got: '{solution(input_str)}'\"\n\nfrom typing import List",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, f\"Test case {i+1} failed. Expected output: '{output_str}', got: '{solution(input_str)}'.\" for i, (input_str, output_str) in enumerate(zip(test_input, test_output))",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1\nassert solution(6) == 1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"0\"\nassert solution(5) == \"1\"\nassert solution(6) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3') == '0', \"Incorrect Output for example 1\"\nassert solution('5') == '1', \"Incorrect Output for example 2\"\nassert solution('6') == '1', \"Incorrect Output for example 3\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n\") == \"0\\n\"\nassert solution(\"5\\n\") == \"1\\n\"\nassert solution(\"6\\n\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == \"0\", \"Input 1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == \"1\", \"Input 2\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == \"1\", \"Input 3\"",
        "num_ids_2": 64,
        "num_ids_4": 96
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1\nassert solution(6) == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 0, \"Test 1 failed\"\nassert solution(5) == 1, \"Test 2 failed\"\nassert solution(6) == 1, \"Test 3 failed\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n3\\n\") == \"Output\\n0\\n\"\nassert solution(\"Input\\n5\\n\") == \"Output\\n1\\n\"\nassert solution(\"Input\\n6\\n\") == \"Output\\n1\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n()))()\\n\") == 5\nassert solution(\"3\\n(()\\n\") == 4\nassert solution(\"2\\n(((\\n\") == 0",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n()))()\\n\") == 5\nassert solution(\"3\\n(()\\n\") == 4\nassert solution(\"2\\n(((\\n\") == 0\n\nprint(solution(\"5\\n()))()\\n\")\nprint(solution(\"3\\n(()\\n\")\nprint(solution(\"2\\n(((\\n\")\nprint(solution(\"1\\n()()\\n\") # Since s is a substring of the 2nd regular bracket sequence, there is no regular sequence of length 4 containing \"(((\" as a substring",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5') == '5\\n'\nassert solution('3') == '4\\n'\nassert solution('2') == '0\\n'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n()))()\\n') == '5\\n'\nassert solution('3\\n(()\\n') == '4\\n'\nassert solution('2\\n(((\\n') == '0\\n'",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n()))()\\n\") == \"5\\n\"\nassert solution(\"3\\n(()\\n\") == \"4\\n\"\nassert solution(\"2\\n(((\\n\") == \"0\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == 5\nassert solution(3) == 4\nassert solution(2) == 0",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''5\n()))()''') == 5\nassert solution('''3\n(()\n''') == 4\nassert solution('''2\n(((\n''') == 0",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n())()\\n3\\n(()\\n2\\n(((\\n\") == 5\nassert solution(\"3\\n(()\\n2\\n(((\\n\") == 4\nassert solution(\"2\\n(((\\n\") == 0\n\nprint(solution(input()))",
        "num_ids_2": 46,
        "num_ids_4": 60
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n())()\\n\") == \"5\\n\"\nassert solution(\"3\\n(()\\n\") == \"4\\n\"\nassert solution(\"2\\n(((\\n\") == \"0\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5071) == '4'\nassert solution(705) == '1'\nassert solution(1241367) == '-1'",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5071') == '4', \"Expected '4', got '{}'\".format(solution('5071'))\nassert solution('705') == '1', \"Expected '1', got '{}'\".format(solution('705'))\nassert solution('1241367') == '-1', \"Expected '-1', got '{}'\".format(solution('1241367'))",
        "num_ids_2": 58,
        "num_ids_4": 94
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5071) == '4'\nassert solution(705) == '1'\nassert solution(1241367) == '-1'",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5071) == '4'\nassert solution(705) == '1'\nassert solution(1241367) == '-1'",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5071) == 4\nassert solution(705) == 1\nassert solution(1241367) == -1",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5071) == \"4\"\nassert solution(705) == \"1\"\nassert solution(1241367) == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5071) == \"4\"\nassert solution(705) == \"1\"\nassert solution(1241367) == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5071) == \"4\", \"Test failed\"\nassert solution(705) == \"1\", \"Test failed\"\nassert solution(1241367) == \"-1\", \"Test failed\"",
        "num_ids_2": 33,
        "num_ids_4": 53
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5071) == 4, \"Expected 4 moves, got {}\".format(solution(5071))\nassert solution(705) == 1, \"Expected 1 move, got {}\".format(solution(705))\nassert solution(1241367) == -1, \"Expected -1 move, got {}\".format(solution(1241367))\n",
        "num_ids_2": 58,
        "num_ids_4": 94
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5071) == 4\nassert solution(705) == 1\nassert solution(1241367) == -1",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == 1\nassert solution(8) == 2\nassert solution(7) == 3\nassert solution(5) == 1\nassert solution(9) == 2\nassert solution(10) == 2",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\") == \"2\"\nassert solution(\"8\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"5\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(9) == 2\nassert solution(8) == 2\nassert solution(7) == 3\nassert solution(5) == 1",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\nababacbecfd\") == \"2\\n1 1 2 1 2 1 2 1 2 \"\nassert solution(\"8\\naaabbcbb\") == \"2\\n1 2 1 2 1 2 1 1\"\nassert solution(\"7\\nabcdedc\") == \"3\\n1 1 1 1 1 2 3\"\nassert solution(\"5\\nabcde\") == \"1\\n1 1 1 1 1 1\"",
        "num_ids_2": 67,
        "num_ids_4": 124
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacbecfd\") == \"1 1 2 1 2 1 2 1 2\"\nassert solution(\"aaabbcbb\") == \"1 2 1 2 1 2 1 1\"\nassert solution(\"abcdedc\") == \"1 1 1 1 1 2 3\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"",
        "num_ids_2": 55,
        "num_ids_4": 100
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abcde\") == \"def\"\nassert solution(\"aabbcc\") == \"cba\"\nassert solution(\"abacbecfd\") == \"111222111\"\nassert solution(\"aaabbcbb\") == \"12112111\"\nassert solution(\"abcdedc\") == \"11112211222111\"\nassert solution(\"abcde\") == \"def\"",
        "num_ids_2": 22,
        "num_ids_4": 62
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9\\nabcbecfd\\n') == '2\\n1 1 2 1 2 1 2 1 2\\n'\nassert solution('8\\naaabbcbb\\n') == '2\\n1 2 1 2 1 2 1 1\\n'\nassert solution('7\\nabcdedc\\n') == '3\\n1 1 1 1 1 2 3\\n'\nassert solution('5\\nabcde\\n') == '1\\n1 1 1 1 1 1\\ndef solution(stdin: str) -> str:\n    pass'",
        "num_ids_2": 74,
        "num_ids_4": 147
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacbecfd\") == \"2\\n1 1 2 1 2 1 2 1 2\"\nassert solution(\"aaabbcbb\") == \"2\\n1 2 1 2 1 2 1 1\"\nassert solution(\"abcdedc\") == \"3\\n1 1 1 1 1 2 3\"\nassert solution(\"abcde\") == \"1\\n1 1 1 1 1 1\"\n",
        "num_ids_2": 61,
        "num_ids_4": 112
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\nabacbecfd\") == \"2\\n1 1 2 1 2 1 2 1 2\"\nassert solution(\"8\\naaabbcbb\") == \"2\\n1 2 1 2 1 2 1 1\"\nassert solution(\"7\\nabcdedc\") == \"3\\n1 1 1 1 1 2 3\"\nassert solution(\"5\\nabcde\") == \"1\\n1 1 1 1 1 1\"",
        "num_ids_2": 66,
        "num_ids_4": 123
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('abcde') == 'def'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(5) == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('YES') == 'YES\\na\\nb\\nc\\nd\\ne'\nassert solution('NO') == 'NO'\nassert solution('YES\\nabc\\nxyz\\nabc\\nxyz\\nabc') == 'YES\\na\\nb\\nc\\nd\\ne'\nassert solution('NO\\nabc\\nxyz\\nabc\\nxyz\\nabc') == 'NO'\nassert solution('YES\\nqwerty\\nqwerty\\nqwerty') == 'YES\\nqwerty\\nqwerty\\nqwerty'\nassert solution('NO\\nqwerty\\nqwerty\\nqwerty') == 'NO'\nassert solution('YES\\nabc\\nxyz\\nabc\\nxyz\\nabc') == 'YES\\na\\nb\\nc\\nd\\ne'\nassert solution('NO\\nabc\\nxyz\\nabc\\nxyz\\nabc') == 'NO'\nassert solution('YES\\nqwerty\\nqwerty\\nqwerty') == 'YES\\nqwerty\\nqwerty\\nqwerty'\nassert solution('NO\\nqwerty\\nqwerty\\nqwerty') == 'NO'\nassert solution('YES\\nabc\\nxyz\\nabc\\nxyz\\nabc') == 'YES\\na\\nb\\nc\\nd\\ne'\nassert solution('NO\\nabc\\nxyz\\nabc\\nxyz\\nabc') == 'NO'\nassert solution('YES\\nqwerty\\nqwerty\\nqwerty') == 'YES\\nqwerty\\nqwerty\\nqwerty'\nassert solution('NO\\nqwerty\\nqwerty\\nqwerty') == 'NO'",
        "num_ids_2": 30,
        "num_ids_4": 90
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\") == \"YES\\na\\ba\\aba\\aba\"\nassert solution(\"Input\") == \"YES\\na\\ba\\aba\\aba\"\nassert solution(\"Input\") == \"YES\\na\\ba\\aba\\aba\"\nassert solution(\"Input\") == \"YES\\na\\ba\\aba\\aba\"\nassert solution(\"Input\") == \"YES\\na\\ba\\aba\\aba\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"YES\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\na\\naba\\nabacaba\\nba\\naba\\n\") == \"YES\\na\\nba\\naba\\naba\\nabacaba\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Solution '{solution(input())}' is not correct.\"\nfor _ in range(input()):\n    a, *strings = input().split()\n    for i, s in enumerate(strings):\n        for j in range(i + 1, len(strings)):\n            if s[:j] == s[j:]:\n                print(\"NO\")\n                return\n    print(\"YES\")\n    for s in strings:\n        print(s)\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a\\naba\\nabacaba\\nba\\nabacaba\\nabab\\n\") == \"YES\\na\\nba\\nabacaba\\nabacaba\\nabab\"\nassert solution(\"a\\naba\\nabacaba\\nba\\nabacaba\\nabab\\n\") == \"YES\\na\\nba\\nabacaba\\nabacaba\\nabab\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"ba\") == \"NO\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\n\nassert solution(\"qwerty\") == \"YES\"\nassert solution(\"qwerty\") == \"YES\"\nassert solution(\"qwerty\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(5) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"ba\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\n\nprint(\"YES\")\nprint(\"a\")\nprint(\"ba\")\nprint(\"aba\")\nprint(\"aba\")\nprint(\"abacaba\")",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'",
        "num_ids_2": 52,
        "num_ids_4": 82
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\"",
        "num_ids_2": 52,
        "num_ids_4": 82
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\\n\") == \"5\\n\"\nassert solution(\"5 2\\n3 1 2 1 3\\n\") == \"0\\n\"\nassert solution(\"5 100\\n12 34 55 43 21\\n\") == \"5\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 94
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\"",
        "num_ids_2": 52,
        "num_ids_4": 82
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '5', \"Test failed\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5, \"The output is not 5.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\\n\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\\n\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 88
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == 0\nassert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == 5\nassert solution(\"5 2\\n3 1 2 1 3\") == 0\nassert solution(\"5 100\\n12 34 55 43 21\") == 5",
        "num_ids_2": 35,
        "num_ids_4": 86
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\\n\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\\n\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 88
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\\n\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\\n\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 88
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"12\\n\", \"The correct output for the first example is 12.\"\nassert solution(\"3 9\") == \"14\\n\", \"The correct output for the second example is 14.\"\nassert solution(\"9 3\") == \"14\\n\", \"The correct output for the third example is 14.\"\nassert solution(\"3 6\") == \"12\\n\", \"The correct output for the fourth example is 12.\"\nassert solution(\"506 2708\") == \"3218\\n\", \"The correct output for the fifth example is 3218.\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"12\", \"Example 1 incorrect\"\nassert solution(\"3 9\") == \"14\", \"Example 2 incorrect\"\nassert solution(\"9 3\") == \"14\", \"Example 3 incorrect\"\nassert solution(\"3 6\") == \"12\", \"Example 4 incorrect\"\nassert solution(\"506 2708\") == \"3218\", \"Example 5 incorrect\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"12\\n\"\nassert solution(\"3 9\") == \"14\\n\"\nassert solution(\"9 3\") == \"14\\n\"\nassert solution(\"3 6\") == \"12\\n\"\nassert solution(\"506 2708\") == \"3218\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4, 4) == 12\nassert solution(3, 9) == 14\nassert solution(9, 3) == 14\nassert solution(3, 6) == 12\nassert solution(506, 2708) == 3218",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"12\"\nassert solution(input()) == \"14\"\nassert solution(input()) == \"14\"\nassert solution(input()) == \"12\"\nassert solution(input()) == \"3218\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n\") == \"12\"\nassert solution(\"3 9\\n\") == \"14\"\nassert solution(\"9 3\\n\") == \"14\"\nassert solution(\"3 6\\n\") == \"12\"\nassert solution(\"506 2708\\n\") == \"3218\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4, 4) == \"12\"\nassert solution(3, 9) == \"14\"\nassert solution(9, 3) == \"14\"\nassert solution(3, 6) == \"12\"\nassert solution(506, 2708) == \"3218\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n\") == \"12\"\nassert solution(\"3 9\\n\") == \"14\"\nassert solution(\"9 3\\n\") == \"14\"\nassert solution(\"3 6\\n\") == \"12\"\nassert solution(\"506 2708\\n\") == \"3218\"\nassert solution(\"9 1\\n\") == \"1\"\nassert solution(\"9 3\\n\") == \"2\"\nassert solution(\"4 4\\n\") == \"8\"\nassert solution(\"2 2\\n\") == \"4\"\nassert solution(\"4 1\\n\") == \"1\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") == \"20\"\nassert solution(\"10 10\\n\") == \"40\"\nassert solution(\"5 5\\n\") ==",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\") == \"YES\\n001010101\"\nassert solution(\"8\") == \"YES\\n01011011\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"5\") == \"YES\\n00000\"",
        "num_ids_2": 41,
        "num_ids_4": 68
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\n001010101\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES\\n01011011\\nNO\\n'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaabbcbb\") == \"YES\\n01011011\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9abacbecfd\") == \"YES\\n001010101\"\nassert solution(\"8aaabbcbb\") == \"YES\\n01011011\"\nassert solution(\"7abcdedc\") == \"NO\"\nassert solution(\"5abcde\") == \"YES\\n00000def solution(stdin: str) -> str:\\npass\"",
        "num_ids_2": 48,
        "num_ids_4": 92
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('9') == 'YES\\n001010101'\nassert solution('8') == 'YES\\n01011011'\nassert solution('7') == 'NO'\nassert solution('5') == 'YES\\n00000'",
        "num_ids_2": 41,
        "num_ids_4": 68
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(9, \"abacbecfd\") == \"YES\\n001010101\"\nassert solution(8, \"aaabbcbb\") == \"YES\\n01011011\"\nassert solution(7, \"abcdedc\") == \"NO\"\nassert solution(5, \"abcde\") == \"YES\\n00000def solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 52,
        "num_ids_4": 97
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abcde\") == \"YES\\n00000\"\nassert solution(\"aaabbcbb\") == \"YES\\n01011011\"\nassert solution(\"abacbecfd\") == \"YES\\n001010101\"\nassert solution(\"abcdedc\") == \"NO\"",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(8) == 'YES\\n01011011'\nassert solution(9) == 'YES\\n001010101'\nassert solution(5) == 'YES\\n00000'\nassert solution(7) == 'NO'",
        "num_ids_2": 41,
        "num_ids_4": 68
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\", \"abacbecfd\") == \"YES\\n001010101\"\nassert solution(\"8\", \"aaabbcbb\") == \"YES\\n01011011\"\nassert solution(\"7\", \"abcdedc\") == \"NO\"\nassert solution(\"5\", \"abcde\") == \"YES\\n00000\"\n",
        "num_ids_2": 52,
        "num_ids_4": 88
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == 25\nprint(\"pass\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"5 8\") == \"25\"\nassert solution(\"10 10\") == \"25\"\nassert solution(\"20 10\") == \"-1\"\nassert solution(\"15 10\") == \"25\"\nassert solution(\"5 10\") == \"25\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"1 10\") == \"-1\"\nassert solution(\"0 0\") == \"-1\"\nassert solution(\"100 100\") == \"25\"\nassert solution(\"10 20\") == \"25\"\nassert solution(\"5 20\") == \"20\"\nassert solution(\"10 50\") == \"25\"\nassert solution(\"15 30\") == \"25\"\nassert solution(\"25 50\") == \"50\"\nassert solution(\"100 0\") == \"-1\"\nassert solution(\"100 10\") == \"-1\"\nassert solution(\"100 1000\") == \"25\"\nassert solution(\"1000000000000 1000000000000\") == \"25\"\nassert solution(\"1 0\") == \"-1\"\nassert solution(\"0 1000000000000\") == \"-1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"25\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"25\\n\"\nassert solution(\"3 4\") == \"25\\n\"\nassert solution(\"4 5\") == \"25\\n\"\nassert solution(\"5 6\") == \"-1\\n\"\nassert solution(\"1 2\") == \"-1\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == 25\nassert solution(\"3 5\") == 25\nassert solution(\"4 10\") == 25\nassert solution(\"1 5\") == -1\nassert solution(\"6 20\") == 25",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"25\"\nprint(\"Test Passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"3 1\") == -1",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2') == 25\nassert solution('3 3') == -1\nassert solution('1 5') == 25\nassert solution('2 7') == 26",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2 2\\n\") == \"25\\n\"\nassert solution(stdin=\"3 2\\n\") == \"-1\\n\"\nassert solution(stdin=\"1 2\\n\") == \"25\\n\"\nassert solution(stdin=\"5 1\\n\") == \"-1\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Got {solution(stdin)}, expected {expected_output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Input {stdin} should return {output}, but got {solution(stdin)}\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(26, 6) == \"YES\\n1 2 4 5 6 8\"\nassert solution(8, 3) == \"NO\"\nassert solution(1, 1) == \"YES\\n1\"\nassert solution(9, 4) == \"NO\"",
        "num_ids_2": 40,
        "num_ids_4": 69
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\\n1 2 4 5 6 8\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\\n1\"",
        "num_ids_2": 33,
        "num_ids_4": 46
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('26 6') == 'YES\\n1 2 4 5 6 8'\nassert solution('8 3') == 'NO'\nassert solution('1 1') == 'YES\\n1'\nassert solution('9 4') == 'NO'",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"\nprint(\"All tests passed!\")",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"\n",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8 \"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1 \"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"NO\\n\", \"Expected NO but got {}\".format(solution(stdin))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 5, \"Incorrect solution!\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"3\\n\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\\n\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 121
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1\\n') == '3\\n'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5\\n'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123\\n') == '3\\n'",
        "num_ids_2": 82,
        "num_ids_4": 121
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"3\\n\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\\n\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\") == \"3\\n\"\n",
        "num_ids_2": 78,
        "num_ids_4": 115
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\"",
        "num_ids_2": 78,
        "num_ids_4": 115
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {i+1} failed: expected output '{expected_output}', got '{solution(input())}'\"\nprint(\"Test Passed\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4) == 3\nassert solution(5, 20) == 5\nassert solution(3, 2) == 3\nassert solution(3, 1) == 1\nassert solution(3, 200) == 3\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected, f\"Got '{solution}', expected '{expected}'\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"3\\n\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\\n\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 121
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\") == \"3\"",
        "num_ids_2": 74,
        "num_ids_4": 109
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\\n\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\n\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\\n\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\n\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\") == \"NO\"\n\nassert solution(\"1\\n10\\n\") == \"YES\\n10\"",
        "num_ids_2": 131,
        "num_ids_4": 196
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\\n\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"Input\\n3\\n1 1 1 1 1 3 3 3 3\\n\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"Input\\n4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\") == \"NO\"\nassert solution(\"Input\\n1\\n10\\n\") == \"YES\\n10\"",
        "num_ids_2": 137,
        "num_ids_4": 208
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"1\\n10\") == \"YES\\n10\"",
        "num_ids_2": 129,
        "num_ids_4": 190
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"1\\n10\") == \"YES\\n10\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\\n\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n\n''') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\n\nassert solution('''\n3\n1 1 1 1 1 3 3 3 3\n\n''') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1\n\nassert solution('''\n4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n\n''') == 'NO\n\nassert solution('''\n1\n10\n\n''') == 'YES\\n10",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3 3 3 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4 1 2 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"1 10\") == \"YES\\n10\"",
        "num_ids_2": 121,
        "num_ids_4": 178
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"10\") == \"YES\\n10\"",
        "num_ids_2": 121,
        "num_ids_4": 176
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1\\n') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3\\n') == 'YES'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0\\n') == 'NO'",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\") == \"NO\"",
        "num_ids_2": 55,
        "num_ids_4": 114
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\") == \"NO\"\n",
        "num_ids_2": 57,
        "num_ids_4": 121
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\"",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Output is '{solution(input())}', but expected '{expected_output}'\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\"\n",
        "num_ids_2": 57,
        "num_ids_4": 125
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\"",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\\n\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\\n\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\\n\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\\n\"\n",
        "num_ids_2": 63,
        "num_ids_4": 135
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case_num} failed.\" for test_case_num, expected_output in enumerate([(\"YES\", True), (\"NO\", False)])",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\n0 1 0 2 2 0 3\"\nassert solution() == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution() == \"YES\\n0 0 0 0 0 0 0 0 0 0\"\nassert solution() == \"NO\"",
        "num_ids_2": 52,
        "num_ids_4": 89
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 1 5\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\nassert solution(\"7 3 2\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 65,
        "num_ids_4": 138
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''7 3 2\n1 2 1''') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('''10 1 11\n1''') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('''10 1 5\n2''') == 'YES\\n0 0 0 0 1 1 0 0 0 0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\n\nsolution(\"1 2 1\\n1 2 1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 0\"\nsolution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nsolution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nsolution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'YES\\n0 1 0 2 2 0 3'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\n0 1 0 2 2 0 3\"\nassert solution() == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution() == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 52,
        "num_ids_4": 81
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\\n1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 76,
        "num_ids_4": 117
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''7 3 2\n1 2 1''') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('''10 1 11\n1''') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('''10 1 5\n2''') == 'YES\\n0 0 0 0 1 1 0 0 0 0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 3 2\\n1 2 1\\n') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11\\n1\\n') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0'",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nprint(\"All tests passed.\")",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"aabbc\") == 1\nassert solution(\"aa\") == 0",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution_input_1) == solution_output_1, \"Test 1 failed.\"\nassert solution(solution_input_2) == solution_output_2, \"Test 2 failed.\"\nassert solution(solution_input_3) == solution_output_3, \"Test 3 failed.\"\nassert solution(solution_input_4) == solution_output_4, \"Test 4 failed.\"\nassert solution(solution_input_5) == solution_output_5, \"Test 5 failed.\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1.200000\") == \"3 2\", \"Expected output: 3 2\"\nassert solution(\"2.572479\") == \"10 3\", \"Expected output: 10 3\"\nassert solution(\"4.024922\") == \"9 9\", \"Expected output: 9 9\"",
        "num_ids_2": 58,
        "num_ids_4": 86
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1.200000\") == \"3 2\", \"Test 1: Valid solution\"\nassert solution(\"2.572479\") == \"10 3\", \"Test 2: Valid solution\"\nassert solution(\"4.024922\") == \"9 9\", \"Test 3: Valid solution\"",
        "num_ids_2": 55,
        "num_ids_4": 82
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1.200000') == '3 2', \"Test 1\"\nassert solution('2.572479') == '10 3', \"Test 2\"\nassert solution('4.024922') == '9 9', \"Test 3\"",
        "num_ids_2": 49,
        "num_ids_4": 73
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1.200000') == '3 2', 'Test 1'\nassert solution('2.572479') == '10 3', 'Test 2'\nassert solution('4.024922') == '9 9', 'Test 3'",
        "num_ids_2": 49,
        "num_ids_4": 73
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1.200000') == '3 2', 'Test 1'\nassert solution('2.572479') == '10 3', 'Test 2'\nassert solution('4.024922') == '9 9', 'Test 3'",
        "num_ids_2": 49,
        "num_ids_4": 73
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1.200000\") == \"3 2\", \"Test 1\"\nassert solution(\"2.572479\") == \"10 3\", \"Test 2\"\nassert solution(\"4.024922\") == \"9 9\", \"Test 3\"",
        "num_ids_2": 49,
        "num_ids_4": 73
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 3 3\\n') == 'YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n'\nassert solution('6 2 3\\n') == 'NO\\n'\nassert solution('10 4 3\\n') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n'\nassert solution('8 5 3\\n') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n'",
        "num_ids_2": 61,
        "num_ids_4": 222
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"\n",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n6 3 3\\n\\nOutput\\nYES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\\nInput\\n6 2 3\\n\\nOutput\\nNO\\n\\nInput\\n10 4 3\\n\\nOutput\\nYES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\\nInput\\n8 5 3\\n\\nOutput\\nYES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\\nYES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"",
        "num_ids_2": 259,
        "num_ids_4": 259
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"1 2 3\") == \"YES\\n1 2\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"\n",
        "num_ids_2": 27,
        "num_ids_4": 104
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"\n\nfrom typing import List",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"\nassert solution(\"6 2 3\") == \"NO\"\n",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == \"YES\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"1100\", \"Test failed\"\nassert solution(\"3 3 3\") == \"101100\", \"Test failed\"\nassert solution(\"5 3 6\") == \"01010100\", \"Test failed\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 44,
        "num_ids_4": 69
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"1100\", \"Expected 1100, got {} instead.\".format(solution(\"2 2 1\"))\nassert solution(\"3 3 3\") == \"101100\", \"Expected 101100, got {} instead.\".format(solution(\"3 3 3\"))\nassert solution(\"5 3 6\") == \"01010100\", \"Expected 01010100, got {} instead.\".format(solution(\"5 3 6\"))\n",
        "num_ids_2": 82,
        "num_ids_4": 129
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"1100\"\nassert solution(str(input())) == \"110100\"\nassert solution(str(input())) == \"101100\"\nassert solution(str(input())) == \"100110\"\nassert solution(str(input())) == \"011001\"\nassert solution(str(input())) == \"001101\"\nassert solution(str(input())) == \"010011\"\nassert solution(str(input())) == \"001011\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2, 2, 1) == \"1100\"\nassert solution(3, 3, 3) == \"101100\"\nassert solution(5, 3, 6) == \"01010100\"",
        "num_ids_2": 40,
        "num_ids_4": 63
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"1100\", \"Input '2 2 1' should return '1100'\"\nassert solution(\"3 3 3\") == \"101100\", \"Input '3 3 3' should return '101100'\"\nassert solution(\"5 3 6\") == \"01010100\", \"Input '5 3 6' should return '01010100'\"",
        "num_ids_2": 72,
        "num_ids_4": 114
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ab\") == \"acbbac\"\nassert solution(\"bc\") == \"cacbacbab\"\nassert solution(\"cb\") == \"abc\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ab\") == \"acbbac\", \"Test case 1 failed\"\nassert solution(\"bc\") == \"cacbacbab\", \"Test case 2 failed\"\nassert solution(\"ac\") == \"abc\", \"Test case 3 failed\"\nassert solution(\"aa\") == \"cacbacbab\", \"Test case 4 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ab\") == \"YES\\nacbbac\"\nassert solution(\"bc\") == \"YES\\ncacbacbab\"\nassert solution(\"ac\") == \"YES\\nabc\"\nassert solution(\"cb\") == \"NO\"",
        "num_ids_2": 29,
        "num_ids_4": 52
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ab\") == \"acbbac\"\nassert solution(\"bc\") == \"cacbacbab\"\nassert solution(\"ac\") == \"abc\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(read_line()) == \"YES\"\nassert solution(read_line()) == \"YES\"\nassert solution(read_line()) == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == \"YES\\nacbbac\"\nassert solution(3) == \"YES\\ncacbacbab\"\nassert solution(1) == \"YES\\nabc\"",
        "num_ids_2": 29,
        "num_ids_4": 42
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ab\") == \"acbbac\"\nassert solution(\"bc\") == \"cacbacbab\"\nassert solution(\"aa\") == \"cacbacbab\"\nassert solution(\"cb\") == \"abc\"",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\\nacbbac\\n\"\nassert solution(stdin) == \"YES\\nacbbac\\n\"\nassert solution(stdin) == \"YES\\nacbbac\\n\"\nassert solution(stdin) == \"YES\\nacbbac\\n\"\nassert solution(stdin) == \"YES\\nacbbac\\n\"\nassert solution(stdin) == \"YES\\nacbbac\\n\"\nassert solution(stdin) == \"YES\\nacbbac\\n\"\nassert solution(stdin) == \"YES\\nacbbac\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nab\\nbc\") == \"YES\\nacbbac\"\nassert solution(\"3\\naa\\nbc\") == \"YES\\ncacbacbab\"\nassert solution(\"1\\ncb\\nac\") == \"YES\\nabc\"",
        "num_ids_2": 40,
        "num_ids_4": 58
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5 \"\nassert solution(\"4\\n-1 2 2\") == \"-1\"",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5 \"\nassert solution(\"4\\n-1 2 2\") == \"-1 \"",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n-2 1\\n\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\\n\") == \"1 2 3 4 5 \"\nassert solution(\"4\\n-1 2 2\\n\") == \"-1\"",
        "num_ids_2": 51,
        "num_ids_4": 71
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    3\n    -2 1\n\"\"\") == \"3 1 2\"\n\nassert solution(\"\"\"\n    5\n    -1 2 2\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n    4\n    -1 2 2\n\"\"\") == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5 \"\nassert solution(\"4\\n-1 2 2\") == \"-1\"",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n-2 1\\n') == '3 1 2 '\nassert solution('5\\n1 1 1 1\\n') == '1 2 3 4 5 '\nassert solution('4\\n-1 2 2\\n') == '-1'",
        "num_ids_2": 51,
        "num_ids_4": 71
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3 1 2\"\nassert solution(5) == \"1 2 3 4 5\"\nassert solution(4) == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 42
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5 \"\nassert solution(\"4\\n-1 2 2\") == \"-1\"",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5 \"\nassert solution(\"4\\n-1 2 2\") == \"-1\"",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3') == '1'\nassert solution('5\\n2 2 2 3 3') == '2'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\n\nsolution = '''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\\n\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n') == '1\\n'\nassert solution('5\\n2 2 2 3 3\\n') == '2\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == 1\nassert solution(\"5\") == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 1\nassert solution(5) == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\\n\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1\nassert solution(5) == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 1\nassert solution(5) == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10') == '5', 'Test 1'\nassert solution('100') == '5', 'Test 2'\nassert solution('1000000000') == '5', 'Test 3'\nassert solution('1000000001') == '6', 'Test 4'\nassert solution
        "num_ids_2": 33,
        "num_ids_4": 81
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\", \"Testcase failed\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\"\nprint(\"Correct\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"Your solution is incorrect\"\n\nfrom typing import List",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"5\\n(2,5) can be reached in five moves.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"Invalid Input\"\nassert solution(\"\") == \"Invalid Input\"\nassert solution(\"10\") == \"Invalid Input\"\nassert solution(\"1000000000\") == \"Invalid Input\"",
        "num_ids_2": 20,
        "num_ids_4": 52
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"5\\n(2,5) can be reached in five moves.\"\nassert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n\") == \"5\\n\"\nassert solution(\"5\\n\") == \"5\\n\"\nassert solution(\"15\\n\") == \"2\\n\"\nassert solution(\"30\\n\") == \"5\\n\"\nassert solution(\"0\\n\") == \"0\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\\n\") == \"0 1\\n\"\nassert solution(\"15\\n5 5 5\\n5 5 5\\n\") == \"0 15\\n\"\nassert solution(\"3\\n0 0 3\\n3 0 0\\n\") == \"3 3\\n\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n\") == \"22 334\\n\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\\n\"\n\nfrom typing import List",
        "num_ids_2": 62,
        "num_ids_4": 137
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"Incorrect output. Please provide the expected output ({expected_output}), not {solution}.\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"0 1\"\nassert solution(2) == \"0 1\"\nassert solution(3) == \"3 3\"\nassert solution(686) == \"22 334\"\nassert solution(319) == \"119 226\"\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution('2\\n0 1 1\\n1 1 0\\n')) == '0 1'\nassert solution(solution('15\\n5 5 5\\n5 5 5\\n')) == '0 15'\nassert solution(solution('3\\n0 0 3\\n3 0 0\\n')) == '3 3'\nassert solution(solution('686\\n479 178 29\\n11 145 530\\n')) == '22 334'\nassert solution(solution('319\\n10 53 256\\n182 103 34\\n')) == '119 226'",
        "num_ids_2": 62,
        "num_ids_4": 137
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"rock_paper_scissors.in\", \"r\").read()) == \"0 1\\n0 15\"\nassert solution(open(\"best_outcome.in\", \"r\").read()) == \"22 334\"\nassert solution(open(\"optimal_strategy.in\", \"r\").read()) == \"119 226\"",
        "num_ids_2": 59,
        "num_ids_4": 86
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\") == \"0 1\\n\"\nassert solution(\"15\\n5 5 5\\n5 5 5\") == \"0 15\\n\"\nassert solution(\"3\\n0 0 3\\n3 0 0\") == \"3 3\\n\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n182 103 34\") == \"22 334\\n\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 141
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\") == \"0 1\\n\"\nassert solution(\"15\\n5 5 5\\n5 5 5\") == \"0 15\\n\"\nassert solution(\"3\\n0 0 3\\n3 0 0\") == \"3 3\\n\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n\") == \"22 334\\n\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 131
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\\n\") == \"0 1\\n\"\nassert solution(\"15\\n5 5 5\\n5 5 5\\n\") == \"0 15\\n\"\nassert solution(\"3\\n0 0 3\\n3 0 0\\n\") == \"3 3\\n\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n\") == \"22 334\\n\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 137
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 1 1\\n1 1 0\\n') == '0 1\\n'\nassert solution('15\\n5 5 5\\n') == '0 15\\n'\nassert solution('3\\n0 0 3\\n3 0 0\\n') == '3 3\\n'\nassert solution('686\\n479 178 29\\n11 145 530\\n') == '22 334\\n'\nassert solution('319\\n10 53 256\\n182 103 34\\n') == '119 226\\n'",
        "num_ids_2": 52,
        "num_ids_4": 127
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\\n\") == \"0 1\\n\"\nassert solution(\"15\\n5 5 5\\n5 5 5\\n\") == \"0 15\\n\"\nassert solution(\"3\\n0 0 3\\n3 0 0\\n\") == \"3 3\\n\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n\") == \"22 334\\n\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 137
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 85,
        "num_ids_4": 124
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"\n",
        "num_ids_2": 85,
        "num_ids_4": 124
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1 2 2 1 5 3\") == \"3\"\nassert solution(\"11 -5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\"\nassert solution(\"4 1 1 1 1\") == \"4\"",
        "num_ids_2": 55,
        "num_ids_4": 73
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11 -5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4 1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"\n",
        "num_ids_2": 80,
        "num_ids_4": 118
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"7\n4 1 2 2 1 5 3\"\"\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"\"\"11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\"\"\") == \"2\\n3 4\\n1 1\"\nassert solution(\"\"\"4\n1 1 1 1\"\"\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 11,
        "num_ids_4": 16
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n7\\n4 1 2 2 1 5 3\\n\\nOutput\\n3\\n7 7\\n2 3\\n4 5\\n\\nInput\\n11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\\nOutput\\n2\\n3 4\\n1 1\\n\\nInput\\n4\\n1 1 1 1\\n\\nOutput\\n4\\n4 4\\n1 1\\n2 2\\n3 3\\n\") == \"3\\n7 7\\n2 3\\n4 5\\n\"",
        "num_ids_2": 166,
        "num_ids_4": 166
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 85,
        "num_ids_4": 124
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\"",
        "num_ids_2": 85,
        "num_ids_4": 114
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n7\\n4 1 2 2 1 5 3\\n\\nInput\\n11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\\nInput\\n4\\n1 1 1 1') == 'Output\\n3\\n7 7\\n2 3\\n4 5\\n\\n'",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3\\n\\n3\\n3 1 2\\n\\n2\\n3 1 2\\n\\n1\\n2 3') == 'YES'\nassert solution('3\\n1 2 3\\n\\n3\\n3 1 2\\n\\n2\\n3 1 2\\n\\n1\\n2 3') == 'NO'",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n3 1 2\\n3\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n4\\n3 1 2\\n3\") == \"NO\"\nassert solution(\"5\\n1 2 3 4 5\\n6\\n6 4 3 2 1\\n5\\n5 4 3 2 1\") == \"NO\"\nassert solution(\"3\\n1 2 3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n2 1 3\\n2 3 1\\n1 2 3\") == \"NO\"",
        "num_ids_2": 60,
        "num_ids_4": 133
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3 1 2\\n\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n3 2 1\\n\") == \"NO\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n3 1 2\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n3\\n1 2 3\") == \"NO\"\nassert solution(\"3\\n3 1 2\\n3\\n1 2 4\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n3\\n4 1 2\") == \"NO\"\nassert solution(\"3\\n3 1 2\\n3\\n4 1 3\") == \"YES\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n3 1 2\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n4\\n5 6 7\") == \"NO\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n3 1 2\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n3\\n1 3 2\") == \"NO\"\nassert solution(\"3\\n1 2 3\\n4\\n1 2 3\") == \"YES\"\nassert solution(\"4\\n1 2 3\\n1 3 2\\n2 1 3\") == \"NO\"",
        "num_ids_2": 54,
        "num_ids_4": 112
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected output: '{output}', got: '{solution(input())}'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abc\") == 3\nassert solution(\"a\") == 1\nassert solution(\"abcdef\") == 1\nassert solution(\"abdfec\") == 2\nassert solution(\"accd\") == -1\nassert solution(\"acde\") == 1\nassert solution(\"a\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\\n\") == \"4\\n3 5 4 5 \"\nassert solution(\"4\\nabcd\\naccd\\n\") == \"-1\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\") == \"4\\n3 5 4 5\"\nassert solution(\"4\\nabcd\\naccd\") == \"-1\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6) == '4\\n3 5 4 5'\nassert solution(4) == '-1'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == -1\nassert solution(6) == 4\nassert solution(1) == 0",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '4\\n3 5 4 5\\n'\nassert solution() == '-1'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"PPSS\"\nassert solution(\"ababa\") == \"SPSPSPS\"\nassert solution(\"aa\") == \"PPSS\"\nassert solution(\"abc\") == \"PS\"\nassert solution(\"c\") == \"PS\"",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\nba\\na\\nabab\\na\\nabba\\nab\\naba') == 'SPPSPSPS'\nassert solution('3\\na\\naa\\na\\n') == 'PPSS'\nassert solution('2\\na\\nc') == 'PS'",
        "num_ids_2": 52,
        "num_ids_4": 66
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\nba\\na\\nab\\na\\nab\\nbaba\\na\\nab\\nab') == 'SPPSPSPS'\nassert solution('3\\na\\naa\\naa\\na\\n') == 'PPSS'\nassert solution('2\\na\\nc\\n') == 'PS'",
        "num_ids_2": 57,
        "num_ids_4": 73
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"PPSS\"\nassert solution(\"a\") == \"PS\"\nassert solution(\"abab\") == \"SPPSPSPS\"\nassert solution(\"baba\") == \"SPPSPSPS\"\nassert solution(\"ababa\") == \"SPPSPSPS\"\nassert solution(\"aaba\") == \"PPSS\"\nassert solution(\"aabc\") == \"PS\"",
        "num_ids_2": 21,
        "num_ids_4": 50
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nba\\na\\nabba\\na\\naba\\nbaba\\nab\\naba\\n\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\na\\na\\na\") == \"PPSS\"\nassert solution(\"2\\na\\nc\\n\") == \"PS\"",
        "num_ids_2": 56,
        "num_ids_4": 72
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"PSPSP\"\nassert solution(\"a\") == \"PPSS\"\nassert solution(\"c\") == \"PS\"\nassert solution(\"a\") == \"PPSS\"\nassert solution(\"a\") == \"PPSS\"\nassert solution(\"aba\") == \"PSPSP\"\nassert solution(\"a\") == \"PPSS\"",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nba\\na\\nabba\\na\\nab\\naba\\nab\\nab\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\naa\\naa\\na\") == \"PPSS\"\nassert solution(\"2\\na\\nc\") == \"PS\"",
        "num_ids_2": 54,
        "num_ids_4": 68
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ba\") == \"SPPSPSPS\"\nassert solution(\"a\") == \"PPSS\"\nassert solution(\"abab\") == \"SPPSPSPS\"\nassert solution(\"a\") == \"PS\"\nassert solution(\"aabc\") == \"PS\"\nassert solution(\"a\") == \"PS\"\nassert solution(\"ac\") == \"SP\"\nassert solution(\"ca\") == \"SS\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"SPS\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"5\\nba\\na\\nabba\\na\\nabba\\nbaba\\nab\\nabba\\nab\", \"SPPSPSPS\"),\n    (\"3\\na\\naa\\naa\\na\\n\", \"PPSS\"),\n    (\"2\\na\\nc\\n\", \"PS\")\n]",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 4 6 8 10') == '1'\n\nassert solution('1 2 3 4 5') == '0'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\\n\"\nassert solution(\"5 2 1 3 4\") == \"5\\n\"\nassert solution(\"1 0 0 0 0\") == \"1\\n\"\nassert solution(\"2 0 0 0 0\") == \"2\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4 6 8 10') == '1', \"Your solution is incorrect\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\" \") == \"\"\n\na = list(map(int, input().split()))\nassert len(a) == 5\nassert all(0 <= a[i] <= 100 for i in range(5))",
        "num_ids_2": 13,
        "num_ids_4": 44
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 6 8 10\") == 1, \"Output should be 1\"\nassert solution(\"1 2 3 4 5\") == 5, \"Output should be 5\"\nassert solution(\"1 1 1 1 1\") == 1, \"Output should be 1\"\nassert solution(\"1 0 0 0 0\") == 0, \"Output should be 0\"\nassert solution(\"2 4 -6 8 10\") == 0, \"Output should be 0\"\nassert solution(\"1 2 3 4 5 6\") == 0, \"Output should be 0\"\nassert solution(\"1 1 1 1 1 1\") == 1, \"Output should be 1\"",
        "num_ids_2": 51,
        "num_ids_4": 101
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed with input: {input_string}, expected output: {expected_output}\"\nfor i in range(1, len(input_string) + 1):\n    print(i, end=\" \")\nprint()\n\nprint(\"=\" * 80)\n\nprint(\"Solution:\")\nprint(\"=\" * 80)\n\nprint(\"def solution(stdin: str) -> int:\")\nprint(\"\u00a0\u00a0\u00a0\u00a0return 0\")\nprint(\"=\" * 80)\n\nprint(\"assert solution(input_string) == expected_output, f\\\"Test failed with input: {input_string}, expected output: {expected_output}\\\"\")\nprint(\"for i in range(1, len(input_string) + 1):\")\nprint(\"\u00a0\u00a0\u00a0\u00a0print(i, end=\" \")\")\nprint(\"print()\")\n\nprint(\"=\" * 80)\n\nprint(\"Solution:\")\nprint(\"=\" * 80)\n\nprint(\"def solution(stdin: str) -> int:\")\nprint(\"\u00a0\u00a0\u00a0\u00a0return 0\")\nprint(\"=\" * 80)\n\nprint(\"assert solution(input_string) == expected_output, f\\\"Test failed with input: {input_string}, expected output: {expected_output}\\\"\")\nprint(\"for i in range(1, len(input_string) + 1):\")\nprint(\"\u00a0\u00a0\u00a0\u00a0print(i, end=\" \")\")\nprint(\"print()\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 1, \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\\n\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"0\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 78
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 53,
        "num_ids_4": 72
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0') == '2'\nassert solution('5\\n1 1 0 0 0') == '0'\nassert solution('4\\n1 1 1 1') == '0'",
        "num_ids_2": 53,
        "num_ids_4": 72
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0') == '2'\nassert solution('5\\n1 1 0 0 0') == '0'\nassert solution('4\\n1 1 1 1') == '0'",
        "num_ids_2": 53,
        "num_ids_4": 72
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\\n\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\\n\") == \"0\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\"",
        "num_ids_2": 57,
        "num_ids_4": 78
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\\n\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\\n\") == \"0\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\"",
        "num_ids_2": 57,
        "num_ids_4": 78
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == 0\nassert solution(10) == 2\nassert solution(4) == 0",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 2\nassert solution(1) == 0\nassert solution(5) == 0\nassert solution(4) == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(3)) == 2\nassert solution(str(10)) == 2\nassert solution(str(5)) == 0\nassert solution(str(4)) == 0",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5') == '1\\n'\nassert solution('6') == '4\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([1, 2, 3, 4, 5]) == 1\nassert solution([6, 90, 12, 18, 30, 18]) == 4",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(6) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\", \"Test Case 1 failed\"\n\nassert solution(stdin) == \"1\\n\", \"Test Case 2 failed\"\n\nassert solution(stdin) == \"4\\n\", \"Test Case 3 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"Test 1 failed\"\nassert solution() == 4, \"Test 2 failed\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"6 90 12 18 30 18\") == \"4\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == 1\nassert solution(\"6\\n6 90 12 18 30 18\") == 4",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\", \"The function should return the correct output for the given example.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1, \"Expected 1, got {}\".format(solution())  # expected 1, got 1\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([2, 4, 6, 2, 10]) == 1\nassert solution([6, 90, 12, 18, 30, 18]) == 4",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n4\\n3\\n3\\n2\\n\") == \"2\\n\"\nassert solution(\"1\\n100\\n\") == \"1\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"The minimum number of pockets needed to distribute all the coins is 2.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 4 3 3 2\\n6\") == \"2\"\nassert solution(\"1\\n100\") == \"1\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 4 3 3 2\") == \"2\"\nassert solution(\"100\") == \"1\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\", \"Incorrect output\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6, [1, 2, 4, 3, 3, 2]) == 2\nassert solution(1, [100]) == 1\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 4 3 3 2\\n1\\n100\") == \"2\"\nprint(solution(\"1\\n100\"))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\") == \"2\"\nassert solution(\"5 10\\n0 0 0 0 0\") == \"-1\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == \"3\"",
        "num_ids_2": 48,
        "num_ids_4": 106
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n0 0 0 0 0\\n') == '3\\n'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1\\n') == '3\\n'",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"-1\\n\"\nassert solution(stdin) == \"3\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\n\", \"Test 1 failed\"\nassert solution(stdin) == \"2\\n\", \"Test 2 failed\"\nassert solution(stdin) == \"-1\\n\", \"Test 3 failed\"\nassert solution(stdin) == \"3\\n\", \"Test 4 failed\"\nassert solution(stdin) == \"2\\n\", \"Test 5 failed\"\nassert solution(stdin) == \"3\\n\", \"Test 6 failed\"\nassert solution(stdin) == \"2\\n\", \"Test 7 failed\"\nassert solution(stdin) == \"3\\n\", \"Test 8 failed\"\nassert solution(stdin) == \"2\\n\", \"Test 9 failed\"\nassert solution(stdin) == \"3\\n\", \"Test 10 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\\n\") == \"3\\n\"\nassert solution(\"5 3\\n1 0 0 0 1\\n\") == \"2\\n\"\nassert solution(\"5 10\\n0 0 0 0 0\\n\") == \"-1\\n\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == \"3\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 122
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 3) == 2\nassert solution(5, 10) == -1\nassert solution(10, 3) == 3",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 3, \"The solution should be 3\"\nassert solution() == 2, \"The solution should be 2\"\nassert solution() == -1, \"The solution should be -1\"\nassert solution() == 3, \"The solution should be 3\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('5 3\\n1 0 0 0 1') == 2\nassert solution('5 10\\n0 0 0 0 0') == -1\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1') == 3\n",
        "num_ids_2": 46,
        "num_ids_4": 102
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n6 2\\n0 1 1 0 0 1\\n\\nInput\\n5 3\\n1 0 0 0 1\\n\\nInput\\n5 10\\n0 0 0 0 0\\n\\nInput\\n10 3\\n0 0 1 1 0 1 0 0 0 1\\n\\nOutput\\n3\\n\\nOutput\\n2\\n\\nOutput\\n-1\\n\\nOutput\\n3\\n') == 'Output\\n3\\n\\nOutput\\n2\\n\\nOutput\\n-1\\n\\nOutput\\n3\\n'",
        "num_ids_2": 168,
        "num_ids_4": 168
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"10\") == \"0\"\nassert solution(\"5\") == \"3\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-1\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n\") == \"3\\n\", \"Output is incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\\n\", \"Test case failed\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\\n\"\nassert solution(\"4\") == \"0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"3\\n\"  # Example Output",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n\", \"The solution should return 3.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '3\\n', 'Please provide the correct input'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"6\n(((())\n\"\"\") == 3\nassert solution(\"\"\"6\n()()()\n\"\"\") == 0\nassert solution(\"\"\"1\n)\n\"\"\") == 0\nassert solution(\"\"\"8\n)))(((((\n\"\"\") == 0",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"(((())\") == 3\nassert solution(\"()()()\") == 0\nassert solution(\"()\") == 0\nassert solution(\"()()()()\") == 0\nassert solution(\"()()()((()())())\") == 0",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(6) == 3\nassert solution(6) == 0\nassert solution(1) == 0\nassert solution(8) == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n(((()\\n') == 3\nassert solution('6\\n()()()\\n') == 0\nassert solution('1\\n) \\n') == 0\nassert solution('8\\n)))(((((\\n') == 0",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n6\n(((())\n\nOutput\n3\n\nInput\n6\n()()()\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))(((((\n\nOutput\n0\n''') == 0, \"Test case 1 failed\"\n\nassert solution('''\n6\n()()()\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))(((((\n\nOutput\n0\n''') == 0, \"Test case 2 failed\"\n\nassert solution('''\n1\n)\n\nOutput\n0\n\nInput\n8\n)))(((((\n\nOutput\n0\n''') == 0, \"Test case 3 failed\"\n\nassert solution('''\n6\n()()\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))(((((\n\nOutput\n0\n''') == 0, \"Test case 4 failed\"\n\nassert solution('''\n1\n)\n\nOutput\n0\n\nInput\n8\n)))(((((\n\nOutput\n0\n''') == 0, \"Test case 5 failed\"\n\nassert solution('''\n6\n)\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))(((((\n\nOutput\n0\n''') == 0, \"Test case 6 failed\"\n\nassert solution('''\n1\n)\n\nOutput\n0\n\nInput\n8\n)))(((((\n\nOutput\n0\n''') == 0, \"Test case 7 failed\"\n\nassert solution('''\n6\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n)\n\nOutput\n0\n\nInput\n8\n)))\n\nOutput\n0\n\nInput\n1\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n((())\\n\", \"6\\n()()\\n\", \"1\\n)\\n\", \"8\\n)))(((((\\n\") == 3)\nassert solution(\"6\\n()()\\n\", \"6\\n()()\\n\", \"1\\n)\\n\", \"8\\n)))(((((\\n\") == 0)\nassert solution(\"1\\n)\\n\", \"1\\n)\\n\", \"1\\n)\\n\", \"1\\n)\\n\") == 0",
        "num_ids_2": 79,
        "num_ids_4": 113
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"()\") == \"1+1\"\nassert solution(\"()())\") == \"1+(1)\"\nassert solution(\"()())())\") == \"1+(1)+(1)\"\nassert solution(\"(())())\") == \"1+1\"\nassert solution(\"(())()\") == \"1+1\"\nassert solution(\"((()))\") == \"1+1\"\n\nn = int(input())\ns = input()\n\ncount = 0\nfor i in range(n):\n    if s[i] == ')':\n        count += 1\n    elif s[i] == '(':\n        count -= 1\n        if count < 0:\n            count = 0\n\nprint(count)",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n(((())\") == 3\nassert solution(\"6\\n()()()\\n\") == 0\nassert solution(\"1\\n) \") == 0\nassert solution(\"8\\n)))(((((\\n\") == 0\n\nprint(solution(\"6\\n(((())\"))\nprint(solution(\"6\\n()()()\\n\"))\nprint(solution(\"1\\n) \"))\nprint(solution(\"8\\n)))(((((\\n\"))",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n(((())\\n\") == 3\nassert solution(\"6\\n()()()\\n\") == 0\nassert solution(\"1\\n)()\\n\") == 0\nassert solution(\"8\\n)))(((((\\n\") == 0",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"()()\\n((()))\\n(()())\\n(((())))\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"\nprint(\"All test cases pass\")",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 1\") == \"2\", \"Test Case 1 failed\"\nassert solution(\"3 4 5 6\") == \"6\", \"Test Case 2 failed\"\nassert solution(\"1 3 5 7\") == \"15\", \"Test Case 3 failed\"\nassert solution(\"1000000000 1000000000 1000000000 1000000000\") == \"1000000000000\", \"Test Case 4 failed\"\nassert solution(\"1000000000 1000000000 1000000000 1000000000\") == \"1000000000000\", \"Test Case 5 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 141
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 1 1') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 1\") == \"2\", \"Test Case 1\"\nassert solution(\"3 4 1 1\") == \"4\", \"Test Case 2\"\nassert solution(\"1 1 5 1\") == \"7\", \"Test Case 3\"\nassert solution(\"1 2 5 1\") == \"10\", \"Test Case 4\"\nassert solution(\"1 1 1 5\") == \"15\", \"Test Case 5\"",
        "num_ids_2": 44,
        "num_ids_4": 89
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"4 3 5 3\") == \"6\"\nassert solution(\"2 5 1 4\") == \"4\"\nassert solution(\"5 3 2 6\") == \"14\"\nassert solution(\"1 1 1 1\") == \"1\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"3 4 5 6\") == \"0\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"2 2 2 2\") == \"4\"\nassert solution(\"1 1 1 1\") == \"0\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1 1\") == \"2\", \"The answer should be 2.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b\"1 2 1 1\") == \"2\", \"Test 1 failed\"\nassert solution(b\"1000 5000 10000 20000\") == \"2000000\", \"Test 2 failed\"\nassert solution(b\"1000 1000 10000 10000\") == \"100000000000000000000000000000\", \"Test 3 failed\"\nassert solution(b\"1000000 10000000 100000000 1000000000\") == \"1000000000000000000000000000000\", \"Test 4 failed\"\nassert solution(b\"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 68,
        "num_ids_4": 219
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nprint(\"All tests passed.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2\\n'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"2\", \"Test 1\"\nassert solution(10) == \"1\", \"Test 2\"\nassert solution(50) == \"2\", \"Test 3\"\nassert solution(1000) == \"1\", \"Test 4\"\nassert solution(10000) == \"2\", \"Test 5\"",
        "num_ids_2": 31,
        "num_ids_4": 65
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nd_1 d_2... d_N\\n\") == \"2\\n\"\nassert solution(\"6\\nd_1 d_2... d_N\\n1 1 1\\n\") == \"1\\n\"\nassert solution(\"6\\nd_1 d_2... d_N\\n1 1 1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"6\\nd_1 d_2... d_N\\n1 1 1 1 1 1 1 1\\n\") == \"2\\n\"\nassert solution(\"6\\nd_1 d_2... d_N\\n1 1 1 1 1 1 1 1 1\\n\") == \"3\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 137
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n9 1 4 4 6 7') == '2'\nassert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('5\\n9 1 4 4 6 7') == '1'\nassert solution('3\\n9 1 4 4 6 7') == '0'\nassert solution('4\\n9 1 4 4 6 7') == '0'",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"7\\n9 2 5 6 7\") == \"1\"\nassert solution(\"5\\n5 5 5 5 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"3\\n1 2 3 4 5\") == \"0\"\nassert solution(\"10\\n3 1 5 2 6 3\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n1 2 3 4",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 9 1 4 4 6 7\") == \"2\\n\"\n\nimport sys\nsys.setrecursionlimit(10 ** 6)\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n9 1 4 4 6 7\") == \"2\\n\"\nprint(\"All test cases passed\")\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"3\\n1 1 2 2 3 3\") == \"1\"\nassert solution(\"6\\n5 6 7 8 9 10\") == \"0\"",
        "num_ids_2": 46,
        "num_ids_4": 70
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\" # correct\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") ==",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"10 30 45 25\") == \"2\"\nassert solution(\"30 25 15 10\") == \"3\"\nassert solution(\"20 15 10 5\") == \"3\"\nassert solution(\"10 20 15 20\") == \"3\"\nassert solution(\"10 20 10 20\") == \"3\"\nassert solution(\"1 2 3 4\") == \"4\"",
        "num_ids_2": 61,
        "num_ids_4": 100
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"3\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input_, output in zip(stdin_list, stdout_list)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"0\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"3\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"6 12 18 12\\n16 14 15 19 18 12 21\") == \"2\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"6 12 18 12\\n16 14 15 19 18 12 21\") == \"2\"",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nprint(\"All tests passed.\")",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 3",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, got: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3\nassert solution(4) == 4\nassert solution(5) == 1\nassert solution(6) == 3\nassert solution(7) == 3\nassert solution(8) == 4\nassert solution(9) == 4\nassert solution(10) == 4\nassert solution(11) == 4\nassert solution(12) == 5\nassert solution(13) == 5\nassert solution(14) == 6\nassert solution(15) == 6\nassert solution(16) == 6\nassert solution(17) == 7\nassert solution(18) == 7\nassert solution(19) == 7\nassert solution(20) == 7\nassert solution(21) == 8\nassert solution(22) == 8\nassert solution(23) == 9\nassert solution(24) == 9\nassert solution(25) == 9\nassert solution(26) == 9\nassert solution(27) == 10\nassert solution(28) == 10\nassert solution(29) == 11\nassert solution(30) == 11\nassert solution(31) == 12\nassert solution(32) == 12\nassert solution(33) == 13\nassert solution(34) == 13\nassert solution(35) == 13\nassert solution(36) == 13\nassert solution(37) == 14\nassert solution(38) == 14\nassert solution(39) == 14\nassert solution(40) == 14\nassert solution(41) == 15\nassert solution(42) == 15\nassert solution(43) == 15\nassert solution(44) == 15\nassert solution(45) == 16\nassert solution(46) == 16\nassert solution(47) == 16\nassert solution(48) == 16\nassert solution(49) == 16\nassert solution(50) == 17\nassert solution(51) == 17\nassert solution(52) == 17\nassert solution(53) == 17\nassert solution(54) == 17\nassert solution(55) == 18\nassert solution(56) == 18\nassert solution(57) == 18\nassert solution(58) == 18\nassert solution(59) == 18\nassert solution(60) == 18\nassert solution(61) == 19\nassert solution(62) == 19\nassert solution(63) == 19\nassert solution(64) == 19\nassert solution(65) == 19\nassert solution(66) == 19\nassert solution(67) == 20\nassert solution(68) == 20\nassert solution(69) == 20\nassert solution(70) == 20\nassert solution(71) == 20\nassert solution(72) == 20\nassert solution(73) == 21\nassert solution(74) == 21\nassert solution(75) == 21\nassert solution(76) == 21\nassert solution(77) == 21\nassert solution(78) == 21\nassert solution(79) == 21\nassert solution(80) == 21\nassert solution(81) == 22\nassert solution(82) == 22\nassert solution(83) == 22\nassert solution(84) == 22\nassert solution(85) == 22\nassert solution(86) == 22\nassert solution(87) == 23\nassert solution(88) == 23\nassert solution(89) == 23\nassert solution(90) == 23\nassert solution(91) == 23\nassert solution(92) == 23\nassert solution(93) == 23\nassert solution(94) == 23\nassert solution(95) == 24\nassert solution(96) == 24\nassert solution(97) == 24\nassert solution(98) == 24\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n10\\n1 2 5 6 7 10 21 23 24 49\\n\\nOutput\\n4\\n\\nInput\\n5\\n2 10 50 110 250\\n\\nOutput\\n1\\n\\nInput\\n6\\n4 7 12 100 150 199\\n\\nOutput\\n3\") == \"Output\\n4\\n\\nInput\\n5\\n2 10 50 110 250\\n\\nOutput\\n1\\n\\nInput\\n6\\n4 7 12 100 150 199\\n\\nOutput\\n3\\n\"",
        "num_ids_2": 191,
        "num_ids_4": 191
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4\\n'\nassert solution('5\\n2 10 50 110 250') == '1\\n'\nassert solution('6\\n4 7 12 100 150 199') == '3\\n'",
        "num_ids_2": 68,
        "num_ids_4": 100
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('5\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199') == '3'",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 3",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"\n\nfrom typing import List",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 4 8 3 6\\n5\\n5 2 11 3 7\\n6\\n2 5 10 1 10 2\\n\") == \"1 2\\n2 4\\n\"\nassert solution(\"6\\n2 5 10 1 10 2\\n2 3 7 8 9\\n5\\n1 2 3 4 5\\n\") == \"1 4\\n\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 4 8 3 6\\n\") == \"1 2\"\nassert solution(\"5\\n5 2 11 3 7\\n\") == \"2 4\"\nassert solution(\"6\\n2 5 10 1 10 2\\n\") == \"1 4\"",
        "num_ids_2": 51,
        "num_ids_4": 80
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 8 3 6\") == \"1 2\"\nassert solution(\"5 2 11 3 7\") == \"2 4\"\nassert solution(\"6 2 5 10 1 10 2\") == \"1 4\"",
        "num_ids_2": 41,
        "num_ids_4": 67
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 4 8 3 6\\n\") == \"1 2\\n\"\nassert solution(\"5\\n5 2 11 3 7\\n\") == \"2 4\\n\"\nassert solution(\"6\\n2 5 10 1 10 2\\n\") == \"1 4\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 86
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == \"1 2\"\nassert solution(5) == \"2 4\"\nassert solution(6) == \"1 4\"\nassert solution(8) == \"1 2\"\nassert solution(9) == \"2 3\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"1 2\"\nassert solution(4) == \"2 3\"\nassert solution(5) == \"2 4\"\nassert solution(6) == \"1 4\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 4 8 3 6\") == \"1 2\\n\"\nassert solution(\"5\\n5 2 11 3 7\") == \"2 4\\n\"\nassert solution(\"6\\n2 5 10 1 10 2\") == \"1 4\\n\"\nassert solution(\"1\\n2 3 4 5 6\") == \"1 3\\n\"\nassert solution(\"5\\n1 1 2 3 4\") == \"1 4\\n\"\n",
        "num_ids_2": 51,
        "num_ids_4": 105
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=None) == 'Output\\n1 2\\n2 4\\n'\nassert solution(stdin='5\\n2 4\\n6\\n3 6\\n\\n\\n') == 'Output\\n1 2\\n2 4\\n'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '''\n1\n2\n'''\n\nassert solution(stdin) == '''\n2\n4\n'''\n\nassert solution(stdin) == '''\n1\n4\n'''",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n121\\n') == '021'\nassert solution('6\\n000000\\n') == '001122'\nassert solution('6\\n211200\\n') == '211200'\nassert solution('6\\n120110\\n') == '120120'",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, '121') == '021'\nassert solution(6, '000000') == '001122'\nassert solution(6, '211200') == '211200'\nassert solution(6, '120110') == '120120'",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, \"121\") == \"021\"\nassert solution(6, \"000000\") == \"001122\"\nassert solution(6, \"211200\") == \"211200\"\nassert solution(6, \"120110\") == \"120120\"",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '001122'\nassert solution('6') == '211200'\nassert solution('6') == '120120'",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"021\"\nassert solution(6) == \"001122\"\nassert solution(6) == \"211200\"\nassert solution(6) == \"120120\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n121\\n\") == \"021\"\nassert solution(\"6\\n000000\\n\") == \"001122\"\nassert solution(\"6\\n211200\\n\") == \"211200\"\nassert solution(\"6\\n120110\\n\") == \"120120\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n121\\n\") == \"021\"\nassert solution(\"6\\n000000\\n\") == \"001122\"\nassert solution(\"6\\n211200\\n\") == \"211200\"\nassert solution(\"6\\n120110\\n\") == \"120120\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n121\\n\") == \"021\\n\"\nassert solution(\"6\\n000000\\n\") == \"001122\\n\"\nassert solution(\"6\\n211200\\n\") == \"211200\\n\"\nassert solution(\"6\\n120110\\n\") == \"120120\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"121\") == \"021\"\nassert solution(\"000000\") == \"001122\"\nassert solution(\"211200\") == \"211200\"\nassert solution(\"120110\") == \"120120\"",
        "num_ids_2": 34,
        "num_ids_4": 74
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n121\\n\") == \"021\"\nassert solution(\"6\\n000000\\n\") == \"001122\"\nassert solution(\"6\\n211200\\n\") == \"211200\"\nassert solution(\"6\\n120110\\n\") == \"120120\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\\n\"\nassert solution(\"4 1\\n5\\n\") == \"0\\n\"\nassert solution(\"10 2\\n1\\n\") == \"11\\n\"\nassert solution(\"10 2\\n2\\n\") == \"10\\n\"\nassert solution(\"10 2\\n3\\n\") == \"0\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\\n\"\nprint(\"OK\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\\n\"\nassert solution(\"3 1\\n2\\n1\\n\") == \"3\\n\"\nassert solution(\"1 1\\n2\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n2\\n3\\n4\\n\") == \"1\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 79
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\\n\"\nassert solution(\"10 5\\n5\\n2\\n1\\n3\\n4\\n\") == \"10\\n\"\nassert solution(\"5 5\\n3\\n2\\n1\\n\") == \"10\\n\"\nassert solution(\"5 1\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"3\\n\"\n",
        "num_ids_2": 52,
        "num_ids_4": 97
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\"\nassert solution(\"6 1\\n1\\n\") == \"1\"\nassert solution(\"6 1\\n2\\n\") == \"2\"\nassert solution(\"6 1\\n3\\n\") == \"4\"\nassert solution(\"6 1\\n4\\n\") == \"1\"\nassert solution(\"6 1\\n5\\n\") == \"2\"\nassert solution(\"6 1\\n6\\n\") == \"3\"\nassert solution(\"6 1\\n7\\n\") == \"4\"\nassert solution(\"6 1\\n8\\n\") == \"1\"\nassert solution(\"6 1\\n9\\n\") == \"2\"\nassert solution(\"6 1\\n10\\n\") == \"3\"\nassert solution(\"6 1\\n11\\n\") == \"4\"\nassert solution(\"6 1\\n12\\n\") == \"1\"\nassert solution(\"6 1\\n13\\n\") == \"2\"\nassert solution(\"6 1\\n14\\n\") == \"3\"\nassert solution(\"6 1\\n15\\n\") == \"4\"\nassert solution(\"6 1\\n16\\n\") == \"1\"\nassert solution(\"6 1\\n17\\n\") == \"2\"\nassert solution(\"6 1\\n18\\n\") == \"3\"\nassert solution(\"6 1\\n19\\n\") == \"4\"\nassert solution(\"6 1\\n20\\n\") == \"1\"\nassert solution(\"6 1\\n21\\n\") == \"2\"\nassert solution(\"6 1\\n22\\n\") == \"3\"\nassert solution(\"6 1\\n23\\n\") == \"4\"\nassert solution(\"6 1\\n24\\n\") == \"1\"\nassert solution(\"6 1\\n25\\n\") == \"2\"\nassert solution(\"6 1\\n26\\n\") == \"3\"\nassert solution(\"6 1\\n27\\n\") == \"4\"\nassert solution(\"6 1\\n28\\n\") == \"1\"\nassert solution(\"6 1\\n29\\n\") == \"2\"\nassert solution(\"6 1\\n30\\n\") == \"3\"\nassert solution(\"6 1\\n31\\n\") == \"4\"\nassert solution(\"6 1\\n32\\n\") == \"1\"\nassert solution(\"6 1\\n33\\n\") == \"2\"\nassert solution(\"6 1\\n34\\n\") == \"3\"\nassert solution(\"6 1\\n35\\n\") == \"4\"\nassert solution(\"6 1\\n36\\n\") == \"1\"\nassert solution(\"6 1\\n37\\n\") == \"2\"\nassert solution(\"6 1\\n38\\n\") == \"3\"\nassert solution(\"6 1\\n39\\n\") == \"4\"\nassert solution(\"6 1\\n40\\n\") == \"1\"\nassert solution(\"6 1\\n41\\n\") == \"2\"\nassert solution(\"6 1\\n42\\n\") == \"3\"\nassert solution(\"6 1\\n43\\n\") == \"4\"\nassert solution(\"6 1\\n44\\n\") == \"1\"\nassert solution(\"6 1\\n45\\n\") == \"2\"\nassert solution(\"6 1\\n46\\n\") == \"3\"\nassert solution(\"6 1\\n47\\n\") == \"4\"\nassert solution(\"6 1\\n48\\n\") == \"1\"\nassert solution(\"6 1\\n49\\n\") == \"2\"\nassert solution(\"6 1\\n50\\n\") == \"3\"\nassert solution(\"6 1\\n51\\n\") == \"4\"\nassert solution(\"6 1\\n52\\n\") == \"1\"\nassert solution(\"6 1\\n53\\n\") == \"2\"\nassert solution(\"6 1\\n54\\n\") == \"3\"\nassert solution(\"6 1\\n55\\n\") == \"4\"\nassert solution(\"6 1\\n56\\n\") == \"1\"\nassert solution(\"6 1\\n57",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n3\") == \"4\"\n\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 1\\n3') == '4'\n\nassert solution('5 5\\n1') == '1'\n\nassert solution('5 5\\n5') == '2'\n\nassert solution('5 5\\n10') == '1'\n\nassert solution('5 5\\n1000000000') == '1'",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"6 3\\n2\\n\") == \"2\\n\"\nassert solution(\"4 6\\n3\\n\") == \"2\\n\"\nassert solution(\"10 6\\n1\\n\") == \"3\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\\n\"\nassert solution(\"6 1\\n10\\n\") == \"233\\n\"\nassert solution(\"6 1\\n1000000000\\n\") == \"5128076051\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 78
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 4\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2 4\") == \"2\\n\", \"Test failed\"\nassert solution(\"4 1 2\") == \"2\\n\", \"Test failed\"\nassert solution(\"5 10 3\") == \"5\\n\", \"Test failed\"\nassert solution(\"10 10 1\") == \"0\\n\", \"Test failed\"\nassert solution(\"0 0 0\") == \"0\\n\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 40,
        "num_ids_4": 83
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2 4\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"Enter the values for X, K, D: \")) == \"2\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2 4\") == \"2\\n\"  # Sample Output",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2 4\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2 4\") == \"2\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\nassert solution(\"2128506\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\nassert solution(\"2128506\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\") == \"2\", \"Solution should return 2\"\nassert solution(\"14\") == \"0\", \"Solution should return 0\"\nassert solution(\"61441\") == \"2\", \"Solution should return 2\"\nassert solution(\"571576\") == \"10\", \"Solution should return 10\"\nassert solution(\"2128506\") == \"3\", \"Solution should return 3\"",
        "num_ids_2": 36,
        "num_ids_4": 81
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\") == 2, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(\"14\") == 0, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(\"61441\") == 2, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(\"571576\") == 10, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(\"2128506\") == 3, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"",
        "num_ids_2": 72,
        "num_ids_4": 152
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\nassert solution(\"2128506\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(11) == 2, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(14) == 0, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(61441) == 2, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(571576) == 10, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(2128506) == 3, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"",
        "num_ids_2": 72,
        "num_ids_4": 152
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == 1, \"Function should return 1\"\nassert solution(\"2\\n\") == 2, \"Function should return 2\"\nassert solution(\"3\\n\") == 3, \"Function should return 3\"\nassert solution(\"4\\n\") == 4, \"Function should return 4\"\nassert solution(\"5\\n\") == 5, \"Function should return 5\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"27\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 27, \"Test failed for input 3\"\nassert solution(4) == 55, \"Test failed for input 4\"\nassert solution(5) == 89, \"Test failed for input 5\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 27, \"Solution should return 27\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(13) == 1, \"Input 13 should be 1\"\nassert solution(927) == 1, \"Input 927 should be 1\"\nassert solution(48) == 0, \"Input 48 should be 0\"",
        "num_ids_2": 44,
        "num_ids_4": 65
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(13) == '1'\nassert solution(927) == '1'\nassert solution(48) == '0'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(13) == 1, \"Input 13 should output 1.\"\nassert solution(927) == 1, \"Input 927 should output 1.\"\nassert solution(48) == 0, \"Input 48 should output 0.\"",
        "num_ids_2": 44,
        "num_ids_4": 65
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(13) == 1, \"Input 13 is not equal to 1\"\nassert solution(927) == 1, \"Input 927 is not equal to 1\"\nassert solution(48) == 0, \"Input 48 is not equal to 0\"",
        "num_ids_2": 48,
        "num_ids_4": 71
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(13) == \"1\"\nassert solution(927) == \"1\"\nassert solution(48) == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(13) == '1', \"Incorrect output 1\"\nassert solution(927) == '1', \"Incorrect output 2\"\nassert solution(48) == '0', \"Incorrect output 3\"",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 5 3 1\") == 4\nassert solution(\"5\\n2 5 3 1\") == 25\nassert solution(\"2\\n2 5 3 1\") == 2\nassert solution(\"1\\n2 5 3 1\") == 1\nassert solution(\"3\\n2 5 3 1\") == 0\nassert solution(\"5\\n2 5 3 1\") == 0",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"DO YOU EXPECT ME TO FIND THIS OUT?\"\nassert solution(stdin) == \"string\", \"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"DON'T BYTE OF MORE THAN YOU CAN CHEW\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"SAYING \\\"ABRACADABRA\\\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"I HAVE NO ARRAY AND I MUST SCREAM\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"ELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE\"",
        "num_ids_2": 57,
        "num_ids_4": 140
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output: 4\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n2 5 3 1') == 4\nassert solution('5\\n2 5 3 1') == 5\nassert solution('3\\n2 5 3 1') == 6\nassert solution('1\\n2 5 3 1') == 4",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Solution doesn't match the expected output.\\nExpected: {expected}\\nOutput: {solution(input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 5 3 1\") == 4\nassert solution(\"5\\n1 2 3 4 5\") == 5\nassert solution(\"10\\n2 4 6 8 10\") == 10\nassert solution(\"6\\n7 8 9 10 11\") == 6\nassert solution(\"11\\n1 1 2 3 4 5 6 7 8 9 10\") == 11\nassert solution(\"100\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == 100\n",
        "num_ids_2": 38,
        "num_ids_4": 83
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'4\\n2 5 3 1') == 4\nassert solution(b'5\\n1 2 3 4') == 5\nassert solution(b'6\\n1 2 3 4 5') == 6\nassert solution(b'7\\n1 2 3 4 5 6') == 7\nassert solution(b'8\\n1 2 3 4 5 6 7') == 8\nassert solution(b'9\\n1 2 3 4 5 6 7 8') == 9",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5 3 1\") == 4, \"Output: 4\\n\"\n\nassert solution(\"DO YOU EXPECT ME TO FIND THIS OUT?\") == 10, \"Output: 10\\n\"\n\nassert solution(\"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\") == 11, \"Output: 11\\n\"\n\nassert solution(\"DON'T BYTE OF MORE THAN YOU CAN CHEW\") == 8, \"Output: 8\\n\"\n\nassert solution(\"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\") == 21, \"Output: 21\\n\"\n\nassert solution(\"SAYING \\\"ABRACADABRA\\\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\") == 15, \"Output: 15\\n\"\n\nassert solution(\"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\") == 39, \"Output: 39\\n\"\n\nassert solution(\"I HAVE NO ARRAY AND I MUST SCREAM\") == 7, \"Output: 7\\n\"\n\nassert solution(\"ELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE\") == 6, \"Output: 6\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 112
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == '4\\n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 4\nassert solution(stdin) == 4\nassert solution(stdin) == 4\nassert solution(stdin) == 4\nassert solution(stdin) == 4",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\", \"Expected: 2\\nActual: \" + solution(stdin)",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") == \"2\\n8\\n1\\n999999733\\n1\"\nassert solution(\"9 5\\n1 10\\n1 5\\n10 100\") == \"3\\n5\\n1\\n10\\n5\"\nassert solution(\"1000000000 999999999\") == \"999999999\"\nassert solution(\"1 1\") == \"1\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 129,
        "num_ids_4": 178
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") == \"2\\n8\\n1\\n999999733\\n1\\n\\n\"\nassert solution(\"5\\n8 7\\n8 1\\n6 10\\n999999733 999999733\\n999999733 999999733\") == \"8\\n1\\n\\n\"\nassert solution(\"5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") == \"1\\n999999733\\n1\\n\\n\"",
        "num_ids_2": 167,
        "num_ids_4": 253
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 7\") == \"2\\n\"\nassert solution(\"8 1\") == \"8\\n\"\nassert solution(\"6 10\") == \"8\\n\"\nassert solution(\"999999733 999999732\") == \"2\\n\"\nassert solution(\"999999733 999999733\") == \"8\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 73
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n8\\n1\\n999999733\\n1\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") == \"2\\n8\\n1\\n999999733\\n1\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case failed!\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected: {expected}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 7\") == \"2\"\nassert solution(\"8 1\") == \"8\"\nassert solution(\"6 10\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\\n\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == 1\nprint(\"All tests passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"1 1\\n2 2\\n2 1\\n1 2\\n2 1\\n1 2\") == \"2\"\nassert solution(\"1 2\\n2 2\\n1 1\\n1 2\\n1 2\\n2 2\") == \"1\"\nassert solution(\"1 2\\n2 2\\n1 1\\n1 2\\n1 2\\n2 2\\n1 1\") == \"2\"",
        "num_ids_2": 66,
        "num_ids_4": 145
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\\n\"\nassert solution(\"1 3\\n2 3 2\\n3 1\\n2 2\\n1 3\\n0 2\") == \"0\\n\"\nassert solution(\"1 2\\n3 1\\n1 2\\n0 1\") == \"1\\n\"\nassert solution(\"2 3\\n1 2\\n2 3\\n1 2\") == \"1\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\") == \"0\\n\"\nassert solution(\"3 3\\n3 3\\n3 3\\n3 3\") == \"0\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 130
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_solution\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == \"1\\n\"\nprint(\"1\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\\n\"\nassert solution(\"1 2\\n2 3 4\\n5 6 7\\n8 9 10\") == \"4\\n\"\nassert solution(\"1 3\\n2 4 5\\n3 6 7\\n4 8 9\\n5 10 11\") == \"3\\n\"\nassert solution(\"1 3\\n2 5 6\\n3 7 8\\n4 9 10\\n5 11 12\") == \"2\\n\"\nassert solution(\"1 2\\n2 3 4\\n3 4 5\\n4 5 6\") == \"6\\n\"\nassert solution(\"1 2\\n2 4 6\\n3 5 7\\n4 6 8\\n5 7 9\\n6 8 10\\n7 9 11\\n8 10 12\\n9 11 13\\n10 12 14\\n11 13 15\\n12 14 16\\n13 15 17\\n14 16 18\\n15 17 19\\n16 18 20\\n17 19 21\\n18 20 22\\n19 21 23\\n20 22 24\\n21 23 25\\n22 24 26\\n23 25 27\\n24 26 28\\n25 27 29\\n26 28 30\\n27 29 31\\n28 30 32\\n29 31 33\\n30 32 34\\n31 33 35\\n32 34 36\\n33 35 37\\n34 36 38\\n35 37 39\\n36 38 40\\n37 39 41\\n38 40 42\\n39 41 43\\n40 42 44\\n41 43 45\\n42 44 46\\n43 45 47\\n44 46 48\\n45 47 49\\n46 48 50\\n47 49 51\\n48 50 52\\n49 51 53\\n50 52 54\\n51 53 55\\n52 54 56\\n53 55 57\\n54 56 58\\n55 57 59\\n56 58 60\\n57 59 61\\n58 60 62\\n59 61 63\\n60 62 64\\n61 63 65\\n62 64 66\\n63 65 67\\n64 66 68\\n65 67 69\\n66 68 70\\n67 69 71\\n68 70 72\\n69 71 73\\n70 72 74\\n71 73 75\\n72 74 76\\n73 75 77\\n74 76 78\\n75 77 79\\n76 78 80\\n77 79 81\\n78 80 82\\n79 81 83\\n80 82 84\\n81 83 85\\n82 84 86\\n83 85 87\\n84 86 88\\n85 87 89\\n86 88",
        "num_ids_2": 67,
        "num_ids_4": 156
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"1 1\\n2 3\\n3 1\\n1 2\") == \"1\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\") == \"0\"\nassert solution(\"1 1\\n1 1\\n0 0\\n1 1\") == \"0\"\n",
        "num_ids_2": 56,
        "num_ids_4": 110
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\", \"Test Case 1 failed.\"\nassert solution(\"3 4 12 0\") == \"5.00000000000000000000\", \"Test Case 2 failed.\"\nassert solution(\"3 4 0 0\") == \"5.00000000000000000000\", \"Test Case 3 failed.\"\nassert solution(\"3 4 -1 0\") == \"5.00000000000000000000\", \"Test Case 4 failed.\"\nassert solution(\"3 4 12 59\") == \"5.00000000000000000000\", \"Test Case 5 failed.\"",
        "num_ids_2": 89,
        "num_ids_4": 177
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\", \"The two hands will be in the positions shown in the figure below, so the answer is 5 centimeters.\"\nprint(\"Test Passed\")",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3 4 9 0\") == \"5.00000000000000000000\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5.00000000000000000000\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5.00000000000000000000\", \"Test failed\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '5.00000000000000000000', 'Your solution is incorrect'\n\nfrom typing import List\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\\n\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\\n\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\") == \"97\\n\"\n",
        "num_ids_2": 51,
        "num_ids_4": 100
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"8\\n\"\nassert solution(3) == \"6\\n\"\nassert solution(15) == \"97\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\\n\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\\n\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n\") == \"97\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 94
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\"\nassert solution(\"3 1\\n1 1 1\") == \"6\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\"",
        "num_ids_2": 43,
        "num_ids_4": 82
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4\\n1 4 5 60 4') == '8'\nassert solution('3 1\\n1 1 1') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3') == '97'",
        "num_ids_2": 43,
        "num_ids_4": 88
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\\n\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\\n\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\") == \"97\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 100
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '8', 'Your solution is incorrect'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n\") == \"6\\n2\\n1 4 \\n\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n\") == \"7\\n2\\n3 2 \\n\"\nassert solution(\"1 0\\n1000000\\n\") == \"0\\n0\\n\"",
        "num_ids_2": 110,
        "num_ids_4": 138
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"6\n2\n1 4 \"\"\"\n\nassert solution() == \"\"\"7\n2\n3 2 \"\"\"\n\nassert solution() == \"\"\"0\n0 \"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '6', 'Test case 1 failed'\nassert solution() == '7', 'Test case 2 failed'\nassert solution() == '0', 'Test case 3 failed'",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6\\n2\\n1 4\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\") == \"7\"\nassert solution(\"1 0\\n1000000\") == \"0\"",
        "num_ids_2": 86,
        "num_ids_4": 107
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\\n2\\n1 4\\n7\\n2\\n3 2\\n0\\n0\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n1 4\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\") == \"7\\n2\\n3 2\"\nassert solution(\"1 0\\n1000000\") == \"0\\n0\"",
        "num_ids_2": 102,
        "num_ids_4": 126
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6\\n2\\n1 4\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5') == '7\\n2\\n3 2\\n'\nassert solution('1 0\\n1000000') == '0\\n0\\n'",
        "num_ids_2": 106,
        "num_ids_4": 132
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == \"6\\n2\\n1 4\\n7\\n2\\n3 2\\n0\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"Yes\"\nassert solution(\"aa\") == \"Yes\"\nassert solution(\"bad\") == \"Yes\"\nassert solution(\"babc\") == \"Yes\"\nassert solution(\"YEs\") == \"Yes\"\nassert solution(\"no\") == \"No\"\nassert solution(\"yES\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\nassert solution('az') == 'Yes'\nassert solution('aa') == 'Yes'\nassert solution('bad') == 'Yes'\nassert solution('babc') == 'Yes'",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"No\"\nassert solution(\"aa\") == \"No\"\nassert solution(\"bad\") == \"No\"\nassert solution(\"babc\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"Yes\"\nassert solution(\"aa\") == \"Yes\"\nassert solution(\"bad\") == \"No\"\nassert solution(\"babc\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"8\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\nassert solution('az') == 'No'\nassert solution('aa') == 'No'\nassert solution('bad') == 'No'\nassert solution('babc') == 'No'\n\nfrom typing import List",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"Yes\"\nassert solution(\"aa\") == \"Yes\"\nassert solution(\"bad\") == \"Yes\"\nassert solution(\"babc\") == \"Yes\"\nassert solution(\"defg\") == \"No\"\n\nfrom typing import List\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abcde') == 'No'\nassert solution('abcdefg') == 'Yes'\nassert solution('hello') == 'No'\nassert solution('z') == 'No'\nassert solution('aaaabbbbccccdddd') == 'Yes'\nassert solution('') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('abc') == 'No'\nassert solution('a') == 'No'\nassert solution('abc') == 'Yes'\nassert solution('aaabbbcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc",
        "num_ids_2": 20,
        "num_ids_4": 1027
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '6\\n2\\n4 1 \\n'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5''') == '7\\n2\\n3 2 \\n'\n\nassert solution('''1 0\n1000000''') == '0\\n0\\n'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n\") == \"6\\n2\\n4 1 \"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n\") == \"7\\n2\\n3 2 \"\nassert solution(\"1 0\\n1000000\\n\") == \"0\\n0 \"",
        "num_ids_2": 106,
        "num_ids_4": 132
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n4 1 \"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n2\") == \"7\\n2\\n3 2 \"\nassert solution(\"1 0\\n1000000\") == \"0\\n0\"",
        "num_ids_2": 105,
        "num_ids_4": 129
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"TODO\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n4 1 \"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\") == \"7\\n2\\n3 2 \"\nassert solution(\"1 0\\n1000000\") == \"0\\n0\"",
        "num_ids_2": 102,
        "num_ids_4": 126
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''1 0\n1000000\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with input {input()}, expected output {expected_output}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == expected_output, \"Test case failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"The output is incorrect. Expected: {expected_output}, Got: {solution(input_data)}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4\\nLRRR'\nassert solution('7\\n1 3 5 6 7 4 2\\n') == '7\\nLRLRLLL'\nassert solution('3\\n1 2 3\\n') == '3\\nLLL'\nassert solution('4\\n1 2 4 3\\n') == '4\\nLLRL'",
        "num_ids_2": 61,
        "num_ids_4": 109
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4\\nLRRR'\nassert solution('7\\n1 3 5 6 7 4 2') == '7\\nLRLRLLL'\nassert solution('3\\n1 2 3') == '3\\nLLL'\nassert solution('4\\n1 2 4 3') == '4\\nLLRL'\n\nfrom typing import List",
        "num_ids_2": 57,
        "num_ids_4": 101
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4\\nLRRR'\nassert solution('7\\n1 3 5 6 7 4 2\\n') == '7\\nLRLRLLL'\nassert solution('3\\n1 2 3\\n') == '3\\nLLL'\nassert solution('4\\n1 2 4 3\\n') == '4\\nLLRL'\n\nfrom typing import List",
        "num_ids_2": 61,
        "num_ids_4": 109
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 5 4 3\") == \"4\"\nassert solution(\"7 1 3 5 6 7 4 2\") == \"7\"\nassert solution(\"3 1 2 3\") == \"3\"\nassert solution(\"4 1 2 4 3\") == \"4\"",
        "num_ids_2": 42,
        "num_ids_4": 76
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4\\nLRRR'\nassert solution('7\\n1 3 5 6 7 4 2\\n') == '7\\nLRLRLLL'\nassert solution('3\\n1 2 3\\n') == '3\\nLLL'\nassert solution('4\\n1 2 4 3\\n') == '4\\nLLRL'",
        "num_ids_2": 61,
        "num_ids_4": 109
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'LRRR'\nassert solution(input()) == 'LRLRLLL'\nassert solution(input()) == 'LLL'\nassert solution(input()) == 'LLRL'",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4\\nLRRR'\nassert solution('7\\n1 3 5 6 7 4 2') == '7\\nLRLRLLL'\nassert solution('3\\n1 2 3') == '3\\nLLL'\nassert solution('4\\n1 2 4 3') == '4\\nLLRL'",
        "num_ids_2": 57,
        "num_ids_4": 101
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 5 4 3\\n\") == \"4\\nLRRR\\n\"\nassert solution(\"7\\n1 3 5 6 7 4 2\\n\") == \"7\\nLRLRLLL\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\\nLLL\\n\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRL\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 117
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\\n\"\nassert solution(\"2\\n1 2\") == \"2\\n\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 67
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 5 3 4\n''') == '''4'''\n\nassert solution('''2\n1 2\n''') == '''2'''\n\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '''2'''",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\\n4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())} instead.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n\") == \"0\"",
        "num_ids_2": 64,
        "num_ids_4": 344
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2 4 5\") == \"1\\n\"\nassert solution(\"1 2 3 4 5\") == \"2\\n\"\nassert solution(\"1 2 3 3 3\") == \"0\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 2 4 5\\n5 3\\n1 2 3 4 5\\n5 3\\n1 2 3 3 3') == '1\\n2\\n0'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Output', 'Test case failed'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(1)) == \"1\"\nassert solution(str(10)) == \"2\"\nassert solution(str(25)) == \"1\"\nassert solution(str(30)) == \"1\"\nassert solution(str(50)) == \"1\"\nassert solution(str(51)) == \"1\"\nassert solution(str(52)) == \"1\"\nassert solution(str(53)) == \"1\"\nassert solution(str(54)) == \"1\"\nassert solution(str(55)) == \"1\"\nassert solution(str(56)) == \"1\"\nassert solution(str(57)) == \"1\"\nassert solution(str(58)) == \"1\"\nassert solution(str(59)) == \"1\"\nassert solution(str(60)) == \"1\"\nassert solution(str(61)) == \"1\"\nassert solution(str(62)) == \"1\"\nassert solution(str(63)) == \"1\"\nassert solution(str(64)) == \"1\"\nassert solution(str(65)) == \"1\"\nassert solution(str(66)) == \"1\"\nassert solution(str(67)) == \"1\"\nassert solution(str(68)) == \"1\"\nassert solution(str(69)) == \"1\"\nassert solution(str(70)) == \"1\"\nassert solution(str(71)) == \"1\"\nassert solution(str(72)) == \"1\"\nassert solution(str(73)) == \"1\"\nassert solution(str(74)) == \"1\"\nassert solution(str(75)) == \"1\"\nassert solution(str(76)) == \"1\"\nassert solution(str(77)) == \"1\"\nassert solution(str(78)) == \"1\"\nassert solution(str(79)) == \"1\"\nassert solution(str(80)) == \"1\"\nassert solution(str(81)) == \"1\"\nassert solution(str(82)) == \"1\"\nassert solution(str(83)) == \"1\"\nassert solution(str(84)) == \"1\"\nassert solution(str(85)) == \"1\"\nassert solution(str(86)) == \"1\"\nassert solution(str(87)) == \"1\"\nassert solution(str(88)) == \"1\"\nassert solution(str(89)) == \"1\"\nassert solution(str(90)) == \"1\"\nassert solution(str(91)) == \"1\"\nassert solution(str(92)) == \"1\"\nassert solution(str(93)) == \"1\"\nassert solution(str(94)) == \"1\"\nassert solution(str(95)) == \"1\"\nassert solution(str(96)) == \"1\"\nassert solution(str(97)) == \"1\"\nassert solution(str(98)) == \"1\"\nassert solution(str(99)) == \"1\"\nassert solution(str(100)) == \"1\"\nassert solution(str(101)) == \"1\"\nassert solution(str(102)) == \"1\"\nassert solution(str(103)) == \"1\"\nassert solution(str(104)) == \"1\"\nassert solution(str(105)) == \"1\"\nassert solution(str(106)) == \"1\"\nassert solution(str(107)) == \"1\"\nassert solution(str(108)) == \"1\"\nassert solution(str(109)) == \"1\"\nassert solution(str(110)) == \"1\"\nassert solution(str(111)) == \"1\"\nassert solution(str(112)) == \"1\"\nassert solution(str(113)) == \"1\"\nassert solution(str(114)) == \"1\"\nassert solution(str(115)) == \"1\"\nassert solution(str(116)) == \"1\"\nassert solution(str(117)) == \"1\"\nassert solution(str(118)) == \"1\"\nassert solution(str(119)) == \"1\"\nassert solution(str(120)) == \"1\"\nassert solution(str(121)) == \"1\"\nassert solution(str(122)) == \"1\"\nassert solution(",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed: expected '{expected}', got '{solution(stdin)}'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2 4 5\") == \"1\\n\"\nassert solution(\"1 2 3 4 5\") == \"2\\n\"\nassert solution(\"1 2 3 3 3\") == \"0\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"8 4 5\") == \"6\"\nassert solution(\"10 1 1\") == \"1\"\nassert solution(\"10 2 3\") == \"1\"\nassert solution(\"10 3 2\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\"\nassert solution(\"1 2 3\") == \"0\\n\"\nassert solution(\"5 0 3\") == \"0\\n\"\nassert solution(\"5 1 3\") == \"1\\n\"\nassert solution(\"5 2 3\") == \"2\\n\"\nassert solution(\"5 3 3\") == \"3\\n\"\nassert solution(\"5 4 3\") == \"4\\n\"\nassert solution(\"5 5 3\") == \"5\\n\"\nassert solution(\"5 6 3\") == \"6\\n\"\nassert solution(\"5 7 3\") == \"7\\n\"\nassert solution(\"5 8 3\") == \"8\\n\"\nassert solution(\"5 9 3\") == \"9\\n\"\nassert solution(\"5 10 3\") == \"10\\n\"\nassert solution(\"5 11 3\") == \"11\\n\"\nassert solution(\"5 12 3\") == \"12\\n\"\nassert solution(\"5 13 3\") == \"13\\n\"\nassert solution(\"5 14 3\") == \"14\\n\"\nassert solution(\"5 15 3\") == \"15\\n\"\nassert solution(\"5 16 3\") == \"16\\n\"\nassert solution(\"5 17 3\") == \"17\\n\"\nassert solution(\"5 18 3\") == \"18\\n\"\nassert solution(\"5 19 3\") == \"19\\n\"\nassert solution(\"5 20 3\") == \"20\\n\"\nassert solution(\"5 21 3\") == \"21\\n\"\nassert solution(\"5 22 3\") == \"22\\n\"\nassert solution(\"5 23 3\") == \"23\\n\"\nassert solution(\"5 24 3\") == \"24\\n\"\nassert solution(\"5 25 3\") == \"25\\n\"\nassert solution(\"5 26 3\") == \"26\\n\"\nassert solution(\"5 27 3\") == \"27\\n\"\nassert solution(\"5 28 3\") == \"28\\n\"\nassert solution(\"5 29 3\") == \"29\\n\"\nassert solution(\"5 30 3\") == \"30\\n\"\nassert solution(\"5 31 3\") == \"31\\n\"\nassert solution(\"5 32 3\") == \"32\\n\"\nassert solution(\"5 33 3\") == \"33\\n\"\nassert solution(\"5 34 3\") == \"34\\n\"\nassert solution(\"5 35 3\") == \"35\\n\"\nassert solution(\"5 36 3\") == \"36\\n\"\nassert solution(\"5 37 3\") == \"37\\n\"\nassert solution(\"5 38 3\") == \"38\\n\"\nassert solution(\"5 39 3\") == \"39\\n\"\nassert solution(\"5 40 3\") == \"40\\n\"\nassert solution(\"5 41 3\") == \"41\\n\"\nassert solution(\"5 42 3\") == \"42\\n\"\nassert solution(\"5 43 3\") == \"43\\n\"\nassert solution(\"5 44 3\") == \"44\\n\"\nassert solution(\"5 45 3\") == \"45\\n\"\nassert solution(\"5 46 3\") == \"46\\n\"\nassert solution(\"5 47 3\") == \"47\\n\"\nassert solution(\"5 48 3\") == \"48\\n\"\nassert solution(\"5 49 3\") == \"49\\n\"\nassert solution(\"5 50 3\") == \"50\\n\"\nassert solution(\"5 51 3\") == \"51\\n\"\nassert solution(\"5 52 3\") == \"52\\n\"\nassert solution(\"5 53 3\") == \"53\\n\"\nassert solution(\"5 54 3\") == \"54\\n\"\nassert solution(\"5 55 3\") == \"55\\n\"\nassert solution(\"5 5",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"5 3 2\") == \"1\"\nassert solution(\"6 5 6\") == \"6\"\nassert solution(\"8 2 1\") == \"0\"\nassert solution(\"4 2 4\") == \"4\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3 4\") == \"4\", \"The output should be 4.\"\nassert solution(\"1 3 4\") == \"3\", \"The output should be 3.\"\nassert solution(\"100 10 10\") == \"50\", \"The output should be 50.\"",
        "num_ids_2": 44,
        "num_ids_4": 72
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b\"8 3 4\") == \"4\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\", \"Takahashi has many red balls and blue balls.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\", \"Test Case 1 Failed\"\nassert solution(input()) == \"4\", \"Test Case 2 Failed\"\nassert solution(input()) == \"4\", \"Test Case 3 Failed\"\nassert solution(input()) == \"4\", \"Test Case 4 Failed\"\nassert solution(input()) == \"4\", \"Test Case 5 Failed\"\nassert solution(input()) == \"4\", \"Test Case 6 Failed\"\nassert solution(input()) == \"4\", \"Test Case 7 Failed\"\nassert solution(input()) == \"4\", \"Test Case 8 Failed\"\nassert solution(input()) == \"4\", \"Test Case 9 Failed\"\nassert solution(input()) == \"4\", \"Test Case 10 Failed\"\nassert solution(input()) == \"4\", \"Test Case 11 Failed\"\nassert solution(input()) == \"4\", \"Test Case 12 Failed\"\nassert solution(input()) == \"4\", \"Test Case 13 Failed\"\nassert solution(input()) == \"4\", \"Test Case 14 Failed\"\nassert solution(input()) == \"4\", \"Test Case 15 Failed\"\nassert solution(input()) == \"4\", \"Test Case 16 Failed\"\nassert solution(input()) == \"4\", \"Test Case 17 Failed\"\nassert solution(input()) == \"4\", \"Test Case 18 Failed\"\nprint(\"All Test Cases Passed\")",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3 4\") == \"4\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\", \"Test 1 failed\"\n\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3 4\") == \"4\"  # Test Case 1\nassert solution(\"6 3 6\") == \"3\"  # Test Case 2\nassert solution(\"10 1 2\") == \"0\"  # Test Case 3\nassert solution(\"1000000 1 1\") == \"400000\"  # Test Case 4",
        "num_ids_2": 40,
        "num_ids_4": 92
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"48\\n4\"\nassert solution(input()) == \"-1\\n-1\"\nassert solution(input()) == \"4\\n4\"",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8\\n8 2 12 6 4 24 16 3\\n1\\n2') == 48\nassert solution('1\\n2') == -1",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"48\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Output\\n48\\n4\\n'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '48'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input, output in zip(input_data, output_data)\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"48\\n4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n1 2 3\\n3 4\") == 48\nassert solution(\"2\\n1\\n1 2 3\\n3 4\") == 4\nassert solution(\"2\\n1\\n2 3\\n3 4\") == -1\nassert solution(\"3\\n1\\n1 2 3 4 5\\n3 4 5\") == 48\nassert solution(\"4\\n2\\n1 2 3 4 5\\n3 4 5\") == 4\nassert solution(\"3\\n1\\n1 2 3 4 5\\n5 4 3\") == -1",
        "num_ids_2": 49,
        "num_ids_4": 102
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 5 5 1 6 1\\n5\\n2 4 2 4 4\\n5\\n6 6 6 6 6\") == \"3\\n5 6 1 \"\nassert solution(\"5\\n6 6 6 6 6\\n5\\n2 4 2 4 4\") == \"2\\n2 4 \"\nassert solution(\"5\\n6 6 6 6 6\\n5\\n2 4 2 4 4\") == \"1\\n6 \"",
        "num_ids_2": 98,
        "num_ids_4": 136
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'5') == '1'\nassert solution(r'1 5 5 1 6 1') == '3'\nassert solution(r'5 2 4 2 4') == '2'\nassert solution(r'5 6 6 6 6') == '1'",
        "num_ids_2": 34,
        "num_ids_4": 74
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n5\\n2 4 2 4 4\\n5\\n6 6 6 6 6') == '3\\n5 6 1\\n2\\n2 4'\nassert solution('5\\n2 4 2 4 4\\n5\\n6 6 6 6 6') == '2\\n2 4'\nassert solution('5\\n6 6 6 6 6\\n6') == '1\\n6'",
        "num_ids_2": 106,
        "num_ids_4": 133
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1\\n\"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4\\n\"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 86
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test failed. Output: {solution(input())}, Expected Output: {output()}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\\n5\\n2 4 2 4 4\\n5\\n6 6 6 6 6\\n1\\n6 \") == \"3\\n5 6 1 \\n2\\n2 4 \\n1\\n1\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test cases do not match\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\\n5\\n2 4 2 4 4\\n5\\n6 6 6 6 6\") == \"3\\n5 6 1 \\n2\\n2 4 \\n1\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1\"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4\"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6\"",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(432) == \"435\", \"Test case 1 failed\"\nassert solution(99) == \"103\", \"Test case 2 failed\"\nassert solution(237) == \"237\", \"Test case 3 failed\"\nassert solution(42) == \"44\", \"Test case 4 failed\"",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(432) == '435'\nassert solution(99) == '103'\nassert solution(237) == '237'\nassert solution(42) == '44'",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(432) == 435, \"Polycarp should find the nearest larger or equal interesting number for the given number 432\"\nassert solution(99) == 103, \"Polycarp should find the nearest larger or equal interesting number for the given number 99\"\nassert solution(237) == 237, \"Polycarp should find the nearest larger or equal interesting number for the given number 237\"\nassert solution(42) == 44, \"Polycarp should find the nearest larger or equal interesting number for the given number 42\"",
        "num_ids_2": 70,
        "num_ids_4": 139
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(432) == 435, \"Polycarp should find the nearest larger or equal interesting number for 432\"\nassert solution(99) == 103, \"Polycarp should find the nearest larger or equal interesting number for 99\"\nassert solution(237) == 237, \"Polycarp should find the nearest larger or equal interesting number for 237\"\nassert solution(42) == 44, \"Polycarp should find the nearest larger or equal interesting number for 42\"",
        "num_ids_2": 64,
        "num_ids_4": 127
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(432) == 435\nassert solution(99) == 103\nassert solution(237) == 237\nassert solution(42) == 44",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"abac\") == \"aac\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"a\"\nassert solution(\"38 13 24 14 11 5 3 24 17 0\") == \"aba\"\nassert solution(\"10\") == \"aba\"\nassert solution(\"2 1 0\") == \"a\"\nassert solution(\"abcde\") == \"c\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"ab\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abac\\n3\\n2 1 0\\nabc\\n1\\n0\\nabba\\n3\\n1 0 1\\necoosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aac\\nb\\aba\\codeforces\"\nassert solution(\"abac\\n3\\n2 1 0\\nabc\\n1\\n0\\nabba\\n3\\n1 0 1\\necoosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aac\\nb\\aba\\codeforces\"\nassert solution(\"abac\\n3\\n2 1 0\\nabc\\n1\\n0\\nabba\\n3\\n1 0 1\\necoosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aac\\nb\\aba\\codeforces\"",
        "num_ids_2": 180,
        "num_ids_4": 270
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abac\") == \"aac' \"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"a\"\nassert solution(\"38 13 24 14 11 5 3 24 17 0\") == \"aba\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\"\"\"\n) == \"aac\\nb\\naba\\ncodeforces\"\n\nassert solution(\n    \"\"\"abac\n2\n3 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\"\"\"\n) == \"aac\\nb\\naba\\ncodeforces\"\n\nassert solution(\n    \"\"\"abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\"\"\"\n) == \"aac\\nb\\naba\\ncodeforces\"\n\nassert solution(\n    \"\"\"abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\"\"\"\n) == \"aac\\nb\\naba\\ncodeforces\"\n\nassert solution(\n    \"\"\"abac\n2\n3 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\"\"\"\n) == \"aac\\nb\\naba\\ncodeforces\"\n\nassert solution(\n    \"\"\"abac\n2\n3 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\"\"\"\n) == \"aac\\nb\\naba\\ncodeforces\"\n\nassert solution(\n    \"\"\"abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\"\"\"\n) == \"aac\\nb\\naba\\ncodeforces\"\n\nassert solution(\n    \"\"\"abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\"\"\"\n) == \"aac\\nb\\naba\\ncodeforces\"\n\nassert solution(\n    \"\"\"abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\"\"\"\n) == \"aac\\nb\\naba\\ncodeforces\"\n\nassert solution(\n    \"\"\"abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\"\"\"\n) == \"aac\\nb\\naba\\ncodeforces\"\n\nassert solution(\n    \"\"\"abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\"\"\"\n) == \"aac\\nb\\naba\\ncodeforces\"\n\nassert solution(\n    \"\"\"abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"38 13 24 14 11 5 3 24 17 0\") == \"aba\"\nassert solution(\"10\") == \"aba\"\nassert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"b\"\nassert solution(\"3\") == \"c\"\nassert solution(\"1abc\") == \"a\"\nassert solution(\"abbc\") == \"a\"\nassert solution(\"1a\") == \"a\"\nassert solution(\"1b\") == \"b\"\nassert solution(\"1c\") == \"c\"\nassert solution(\"a\") == \"a\"\nassert solution(\"aa\") == \"aa\"\nassert solution(\"abcabc\") == \"abc\"\nassert solution(\"abcd\") == \"abcd\"\nassert solution(\"abcc\") == \"abcc\"\nassert solution(\"abcdxyz\") == \"abcdxyz\"\nassert solution(\"123456789012345678901234567890\") == \"abc\"\nassert solution(\"123456789012345678901234567891\") == \"1234567890\"\nassert solution(\"123456789012345678901234567892\") == \"12345678901234567890\"\nassert solution(\"123456789012345678901234567893\") == \"12345678901234567890123456789\"\nassert solution(\"123456789012345678901234567894\") == \"1234567890123456789012345678901234567890\"\nassert solution(\"123456789012345678901234567895\") == \"12345678901234567890123456789012345678901234567890\"\nassert solution(\"123456789012345678901234567896\") == \"123456789012345678901234567890123456789012345678901234567890\"\nassert solution(\"123456789012345678901234567897\") == \"1234567890123456789012345678901234567890123456789012345678901234567890\"\nassert solution(\"123456789012345678901234567898\") == \"12345678901234567890123456789012345678901234567890123456789012345678901234567890\"\nassert solution(\"123456789012345678901234567899\") == \"12345678901234567890123456789012345678901234567",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"aac\\nb\\nab\\ncodeforces\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"a\\nb\\nc\\naba\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"aac\\nb\\naba\\ncodeforces\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"a\"\nassert solution(\"abac\") == \"aac\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1000000000000001) == \"b\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"b\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000000000000001 dogs suddenly appeared under the roof of Roger's house, all of which he decided to keep. The dogs had been numbered 1 through 1000000000000001, but he gave them new names:\\n - the dogs numbered 1,2,\\cdots,26 were respectively given the names a, b,..., z;\\n - the dogs numbered 27,28,29,\\cdots,701,702  were respectively given the names aa, ab, ac,..., zy, zz;\\n - the dogs numbered 703,704,705,\\cdots,18277,18278  were respectively given the names aaa, aab, aac,..., zzy, zzz;\\n - the dogs numbered 18279,18280,18281,\\cdots,475253,475254  were respectively given the names aaaa, aaab, aaac,..., zzzy, zzzz;\\n - the dogs numbered 475255,475256,\\cdots  were respectively given the names aaaaa, aaaab,...;\\n - and so on.To sum it up, the dogs numbered 1, 2, \\cdots were respectively given the following names:\\na, b,..., z, aa, ab,..., az, ba, bb,..., bz,..., za, zb,..., zz, aaa, aab,..., aaz, aba, abb,..., abz,..., zzz, aaaa,...\") == \"b\"",
        "num_ids_2": 402,
        "num_ids_4": 402
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"b\", \"Your solution is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"b\"\nassert solution(\"3\") == \"aa\"\nassert solution(\"4\") == \"aaa\"\nassert solution(\"5\") == \"aaaa\"\nassert solution(\"6\") == \"aaaaa\"\nassert solution(\"7\") == \"aaaaaa\"\nassert solution(\"8\") == \"aaaaaaaa\"\nassert solution(\"9\") == \"aaaaaaaaa\"\nassert solution(\"10\") == \"aaaaaaaaaa\"\nassert solution(\"11\") == \"aaaaaaaaaaa\"\nassert solution(\"12\") == \"aaaaaaaaaaaa\"\nassert solution(\"13\") == \"aaaaaaaaaaaaa\"\nassert solution(\"14\") == \"aaaaaaaaaaaaaa\"\nassert solution(\"15\") == \"aaaaaaaaaaaaaaa\"\nassert solution(\"16\") == \"aaaaaaaaaaaaaaaa\"\nassert solution(\"17\") == \"aaaaaaaaaaaaaaaaa\"\nassert solution(\"18\") == \"aaaaaaaaaaaaaaaaaa\"\nassert solution(\"19\") == \"aaaaaaaaaaaaaaaaaaa\"\nassert solution(\"20\") == \"aaaaaaaaaaaaaaaaaaaa\"\nassert solution(\"21\") == \"aaaaaaaaaaaaaaaaaaaaa\"\nassert solution(\"22\") == \"aaaaaaaaaaaaaaaaaaaaaa\"\nassert solution(\"23\") == \"aaaaaaaaaaaaaaaaaaaaaaa\"\nassert solution(\"24\") == \"aaaaaaaaaaaaaaaaaaaaaaab\"\nassert solution(\"25\") == \"aaaaaaaaaaaaaaaaaaaaaaab\"\nassert solution(\"26\") == \"aaaaaaaaaaaaaaaaaaaaaaac\"\nassert solution(\"27\") == \"aaaaaaaaaaaaaaaaaaaaaaac\"\nassert solution(\"28\") == \"aaaaaaaaaaaaaaaaaaaaaaad\"\nassert solution(\"29\") == \"aaaaaaaaaaaaaaaaaaaaaaad\"\nassert solution(\"30\") == \"aaaaaaaaaaaaaaaaaaaaaaae\"\nassert solution(\"31\") == \"aaaaaaaaaaaaaaaaaaaaaaae\"\nassert solution(\"32\") == \"aaaaaaaaaaaaaaaaaaaaaaaf\"\nassert solution(\"33\") == \"aaaaaaaaaaaaaaaaaaaaaaaf\"\nassert solution(\"34\") == \"aaaaaaaaaaaaaaaaaaaaaaag\"\nassert solution(\"35\") == \"aaaaaaaaaaaaaaaaaaaaaaag\"\nassert solution(\"36\") == \"aaaaaaaaaaaaaaaaaaaaaaah\"\nassert solution(\"37\") == \"aaaaaaaaaaaaaaaaaaaaaaah\"\nassert solution(\"38\") == \"aaaaaaaaaaaaaaaaaaaaaaai\"\nassert solution(\"39\") == \"aaaaaaaaaaaaaaaaaaaaaaai\"\nassert solution(\"40\") == \"aaaaaaaaaaaaaaaaaaaaaaaj\"\nassert solution(\"41\") == \"aaaaaaaaaaaaaaaaaaaaaaaj\"\nassert solution(\"42\") == \"aaaaaaaaaaaaaaaaaaaaaaak\"\nassert solution(\"43\") == \"aaaaaaaaaaaaaaaaaaaaaaak\"\nassert solution(\"44\") == \"aaaaaaaaaaaaaaaaaaaaaaal\"\nassert solution(\"45\") == \"aaaaaaaaaaaaaaaaaaaaaaal\"\nassert solution(\"46\") == \"aaaaaaaaaaaaaaaaaaaaaaam\"\nassert solution(\"47\") == \"aaaaaaaaaaaaaaaaaaaaaaam\"\nassert solution(\"48\") == \"aaaaaaaaaaaaaaaaaaaaaaan\"\nassert solution(\"49\") == \"aaaaaaaaaaaaaaaaaaaaaaan\"\nassert solution(\"50\") == \"aaaaaaaaaaaaaaaaaaaaaab\"\nassert solution(\"51\") == \"aaaaaaaaaaaaaaaaaaaaaab\"\nassert solution(\"52\") == \"aaaaaaaaaaaaaaaaaaaaaac\"\nassert solution(\"53\") == \"aaaaaaaaaaaaaaaaaaaaaac\"\nassert solution(\"54\") == \"aaaaaaaaaaaaaaaaaaaaaad\"\nassert solution(\"55\") == \"aaaaaaaaaaaaaaaaaaaaaad\"\nassert solution(\"56\") == \"aaaaaaaaaaaaaaaaaaaaaae\"\nassert solution(\"57\") == \"aaaaaaaaaaaaaaaaaaaaaae\"\nassert solution(\"58\") == \"aaaaaaaaaaaaaaaaaaaaaaf\"\nassert solution(\"59\") == \"aaaaaaaaaaaaaaaaaaaaaaf\"\nassert solution(\"60\") == \"aaaaaaaaaaaaaaaaaaaaaag\"\nassert solution(\"61\") == \"aaaaaaaaaaaaaaaaaaaaaag\"\nassert solution(\"62\") == \"aaaaaaaaaaaaaaaaaaaaaah\"\nassert solution(\"63\") == \"aaaaaaaaaaaaaaaaaaaaaah\"\nassert solution(\"64\") == \"aaaaaaaaaaaaaaaaaaaaaai\"\nassert solution(\"65\") == \"aaaaaaaaaaaaaaaaaaaaaai\"\nassert solution(\"66\") == \"aaaaaaaaaaaaaaaaaaaaaaj\"\nassert solution(\"67\") == \"aaaaaaaaaaaaaaaaaaaaaaj\"\nassert solution(\"68\") == \"aaaaaaaaaaaaaaaaaaaaaak\"\nassert solution(\"69\") == \"aaaaaaaaaaaaaaaaaaaaaak\"\nassert solution(\"70\") == \"aaaaaaaaaaaaaaaaaaaaael\"\nassert solution(\"71\") == \"aaaaaaaaaaaaaaaaaaaaael\"\nassert solution(\"72\") == \"aaaaaaaaaaaaaaaaaaaaaaam\"\nassert solution(\"73\") == \"aaaaaaaaaaaaaaaaaaaaaaam\"\nassert solution(\"74\") == \"aaaaaaaaaaaaaaaaaaaaaaan\"\nassert solution(\"75\") == \"aaaaaaaa",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"b\", \"The solution should return 'b', but it returned '{}' instead.\".format(solution(\"2\"))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'b'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\"",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\"\nassert solution(\"5\\nabab a a ab ab\\n\") == \"4\"",
        "num_ids_2": 46,
        "num_ids_4": 86
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nto be or not to be\\n10\\na ab a a b ab a a b c\\n6\\naa bb aa aa bb bb\\n10\") == \"12\\n\"\nassert solution(\"10\\na b c d e f g h i j\\n10\\na a a a a a a a\\n10\") == \"13\\n\"\nassert solution(\"6\\naa bb aa aa bb bb\\n10\\naaaaaaa\") == \"11\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 122
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\"\nassert solution(\"10\\nA ab a a b ab a a b c\\n\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\"",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"12\"\nassert solution(\"a ab a a b ab a a b c\") == \"13\"\nassert solution(\"aa bb aa aa bb bb\") == \"11\"",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nto be or not to be\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\") == \"11\"",
        "num_ids_2": 42,
        "num_ids_4": 61
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '12', 'Output is wrong'\nassert solution(stdin) == '13', 'Output is wrong'\nassert solution(stdin) == '11', 'Output is wrong'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\nto be or not to be') == '12'\nassert solution('10\\na ab a a b ab a a b c') == '13'\nassert solution('6\\naa bb aa aa bb bb') == '11'",
        "num_ids_2": 42,
        "num_ids_4": 61
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"12\"\nassert solution() == \"13\"\nassert solution() == \"11\"",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '13'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 3\\n5 4 2 6 5 1 9 2\\n\\n20\\n3 2 3\\n\\n5 1\\n1 1 1 1 1\\n\\n4 2\\n1 2000 2000 2\\n\\n4000\\n2 2\\n') == '20\\n3 2 3\\n5 1\\n1 1 1 1 1\\n4 2\\n1 2000 2000 2\\n4000\\n2 2'\nassert solution('5 1\\n1 1 1 1 1\\n\\n1\\n5\\n\\n1\\n1\\n\\n1\\n5\\n') == '1\\n5\\n1\\n1 1 1 1'\nassert solution('4 2\\n1 2000 2000 2\\n\\n4000\\n2 2\\n') == '4000\\n2 2'\nprint('All test cases pass')",
        "num_ids_2": 216,
        "num_ids_4": 266
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\n5 4 2 6 5 1 9 2\\n\") == \"20\"\nassert solution(\"5 1\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"4 2\\n1 2000 2000 2\\n\") == \"4000\"\n",
        "num_ids_2": 57,
        "num_ids_4": 89
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1\\n1 1 1 1 1\") == \"1\\n5\"\nassert solution(\"4 2\\n1 2000 2000 2\") == \"4000\\n2 2\"\nassert solution(\"8 3\\n5 4 2 6 5 1 9 2\") == \"20\"\nassert solution(\"5 3\\n2 4 5 6 7 8\") == \"3\"\nassert solution(\"4 3\\n1 2 3 4 5 6 7 8\") == \"3\"",
        "num_ids_2": 61,
        "num_ids_4": 116
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '20\\n3 2 3'\nassert solution() == '1\\n5'\nassert solution() == '4000\\n2 2'",
        "num_ids_2": 27,
        "num_ids_4": 43
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 3) == '2'\nassert solution(1, 1) == '1'\nassert solution(4, 2) == '4000'\nassert solution(4, 1) == '3'\nassert solution(3, 2) == '2'\nassert solution(4, 2) == '4000'\nassert solution(8, 3) == '20'",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"20\", \"Expected output: '20', but got: '{}'.\".format(solution())",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Solution({input()})!= expected({expected})\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\n5 4 2 6 5 1 9 2\") == \"20\"\nassert solution(\"5 1\\n1 1 1 1 1\") == \"1\"\nassert solution(\"4 2\\n1 2000 2000 2\") == \"4000\"\n",
        "num_ids_2": 53,
        "num_ids_4": 83
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n5 4 2 6 5 1 9 2\") == \"20\\n3 2 3\"\nassert solution(\"5 1\\n1 1 1 1 1\") == \"1\\n5\"\nassert solution(\"4 2\\n1 2000 2000 2\") == \"4000\\n2 2\"\n",
        "num_ids_2": 63,
        "num_ids_4": 98
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 3\\n5 4 2 6 5 1 9 2') == '20'\nassert solution('5 1\\n1 1 1 1 1') == '1'\nassert solution('4 2\\n1 2000 2000 2') == '4000'",
        "num_ids_2": 53,
        "num_ids_4": 83
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() # Test cases",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == \"1\"\nassert solution(5) == \"0\"\nassert solution(9) == \"6\"\nassert solution(8) == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 -5 3 2\") == \"1\\n\"\nassert solution(\"5\\n4 -2 3 -9 2\") == \"0\\n\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\\n\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\") == \"3\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 109
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 -5 3 2') == '1'\nassert solution('5\\n4 -2 3 -9 2') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'",
        "num_ids_2": 40,
        "num_ids_4": 101
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Test Case {t} has incorrect output. Expected: {output}, Received: {solution(input)}\" for t, input, output in [\n    (1, [1, -5, 3, 2], 1),\n    (2, [1, -5, 3, 2], 0),\n    (3, [4, -2, 3, -9, 2], 0),\n    (4, [4, -2, 3, -9, 2], 3),\n    (5, [4, -2, 3, -9, 2], 0),\n    (6, [16, -5, -11, -15, 10, 5, 4, -4], 3),\n    (7, [16, -5, -11, -15, 10, 5, 4, -4], 6),\n    (8, [16, -5, -11, -15, 10, 5, 4, -4], 0),\n    (9, [16, -5, -11, -15, 10, 5, 4, -4], 0),\n]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test {test_case} failed, got '{solution(input())}' expected '{output()}' for input '{input()}'\"\nfor test_case in range(1, 10):\n    print(f\"Test {test_case}:\")\n    assert solution(input()) == output(), f\"Test {test_case} failed, got '{solution(input())}' expected '{output()}' for input '{input()}'\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 -5 3 2\") == \"1\\n\"\nassert solution(\"5\\n4 -2 3 -9 2\") == \"0\\n\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\\n\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\") == \"3\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 109
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 10\nassert solution(1) == 0\nassert solution(2) == 2\nassert solution(5) == 11\nassert solution(2) == 1\nassert solution(100) == 0\nassert solution(1000000000) == 1000000000",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\\n2\\n10\\n1000000000\\n2000000000\", \"Incorrect output\"\nprint(\"All test cases passed\")",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0\\n2\\n10\\n1000000000\\n2000000000'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == '0\\n2\\n10\\n1000000000\\n2000000000'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\nassert solution(input()) == expected\nassert solution(input()) == expected\nassert solution(input()) == expected\nassert solution(input()) == expected\nprint(solution(input()))",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n100\\n2\\n2\\n5\\n5\\n2\\n1000000000\\n1000000000\\n\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"2\\n1\\n100\\n2\\n2\\n5\\n5\\n2\\n1000000000\\n1000000000\\n\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"1\\n100\\n2\\n2\\n5\\n5\\n2\\n1000000000\\n1000000000\\n\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"1\\n100\\n2\\n2\\n5\\n5\\n2\\n1000000000\\n1000000000\\n\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"1\\n100\\n2\\n2\\n5\\n5\\n2\\n1000000000\\n1000000000\\n\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"",
        "num_ids_2": 177,
        "num_ids_4": 351
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0'\nassert solution() == '2'\nassert solution() == '10'\nassert solution() == '1000000000'",
        "num_ids_2": 16,
        "num_ids_4": 42
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"101\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"101\") == 4, \"The output should be 4, but it is {}\".format(solution(\"101\"))  # correct solution\nassert solution(\"10\") == -1, \"The output should be -1, but it is {}\".format(solution(\"10\"))  # incorrect solution",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"111\") == \"None of 7, 77, and 777 is a multiple of 111, but 7777 is.\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"-1\"",
        "num_ids_2": 53,
        "num_ids_4": 73
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 4\nassert solution(\"\") == -1",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 4\nassert solution(input()) == -1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"102\") == \"-1\"\nassert solution(\"112\") == \"4\"\nassert solution(\"212\") == \"6\"\nassert solution(\"1001\") == \"4\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"100\") == \"None of 7, 77, and 777 are a multiple of 100, but 7777 is.\"\nassert solution(\"201\") == \"None of 7, 77, and 777 are a multiple of 201, but 7777 is.\"\nassert solution(\"300\") == \"None of 7, 77, and 777 are a multiple of 300, but 7777 is.\"\nassert solution(\"501\") == \"None of 7, 77, and 777 are a multiple of 501, but 7777 is.\"\nassert solution(\"700\") == \"4\"\nassert solution(\"701\") == \"-1\"",
        "num_ids_2": 53,
        "num_ids_4": 135
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"101\") == \"4\"\nprint(\"None of 7, 77, and 777 is a multiple of 101, but 7777 is.\")\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\"",
        "num_ids_2": 46,
        "num_ids_4": 97
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n5 4\n2 4 5 3 1\n''') == '4\\n'\n\nassert solution('''\n5 5\n1 2 3 4 5\n''') == '1\\n'\n\nassert solution('''\n15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == \"4\\n\"\nassert solution(str(input())) == \"1\\n\"\nassert solution(str(input())) == \"48\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\"",
        "num_ids_2": 46,
        "num_ids_4": 97
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4\nassert solution() == 1\nassert solution() == 48",
        "num_ids_2": 14,
        "num_ids_4": 22
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 4\\n2 4 5 3 1') == '4'\nassert solution('5 5\\n1 2 3 4 5') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '48'\n",
        "num_ids_2": 46,
        "num_ids_4": 97
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\"",
        "num_ids_2": 46,
        "num_ids_4": 97
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\"",
        "num_ids_2": 46,
        "num_ids_4": 97
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\\n7 10\\n1 3 4 2 1 4 2\\n\\n5 15\\n5 5 5 5 5\\n\\n5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\") == 4\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\\n5 15\\n5 5 5 5 5\\n\\n5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\") == 2\nassert solution(\"5 15\\n5 5 5 5 5\\n\\n5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\") == 1\nassert solution(\"5 26\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\") == -1\nassert solution(\"5 26\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\") == -1",
        "num_ids_2": 224,
        "num_ids_4": 384
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    5 8\n    2 3 1 1 2\n    '''\n) == '4\\n'\n\nassert solution(\n    '''\n    7 10\n    1 3 4 2 1 4 2\n    '''\n) == '2\\n'\n\nassert solution(\n    '''\n    5 15\n    5 5 5 5 5\n    '''\n) == '1\\n'\n\nassert solution(\n    '''\n    5 16\n    5 5 5 5 5\n    '''\n) == '2\\n'\n\nassert solution(\n    '''\n    5 26\n    5 5 5 5 5\n    '''\n) == '-1\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution() == \"4\"\nassert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"-1\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5 8\n    2 3 1 1 2\n    ''') == '4'\nassert solution('''\n    7 10\n    1 3 4 2 1 4 2\n    ''') == '2'\nassert solution('''\n    5 15\n    5 5 5 5 5\n    ''') == '1'\nassert solution('''\n    5 16\n    5 5 5 5 5\n    ''') == '2'\nassert solution('''\n    5 26\n    5 5 5 5 5\n    ''') == '-1'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\\n\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\\n\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\\n\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\\n\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5 8\n2 3 1 1 2\n\"\"\") == \"4\"\n\nassert solution(\"\"\"7 10\n1 3 4 2 1 4 2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"5 15\n5 5 5 5 5\n\"\"\") == \"1\"\n\nassert solution(\"\"\"5 16\n5 5 5 5 5\n\"\"\") == \"2\"\n\nassert solution(\"\"\"5 26\n5 5 5 5 5\n\"\"\") == \"-1\"",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == 4\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == 2\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == 1\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == 2\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == -1",
        "num_ids_2": 53,
        "num_ids_4": 103
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n\ninput_data = [\n    ('5 8', '2 3 1 1 2'),\n    ('7 10', '1 3 4 2 1 4 2'),\n    ('5 15', '5 5 5 5 5'),\n    ('5 16', '5 5 5 5 5'),\n    ('5 26', '5 5 5 5 5'),\n]\n\nexpected = [4, 2, 1, -1]\nfor input_, output in zip(input_data, expected):\n    assert solution(input_) == output, f\"Expected {output}, got {solution(input_)} for input {input_}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"24 21 14 10\") == \"3\\n\"\nassert solution(\"2500 500\") == \"0\\n\"\nassert solution(\"3 14 5 1\") == \"-1\\n\"\nassert solution(\"1 3 6 9 12\") == \"1\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"24 21 14 10\") == \"3\", \"Case 1\"\nassert solution(\"2\") == \"0\", \"Case 2\"\nassert solution(\"3\") == \"-1\", \"Case 3\"\nassert solution(\"5\") == \"1\", \"Case 4\"",
        "num_ids_2": 40,
        "num_ids_4": 70
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input\\n4\\n24 21 14 10\\n\\nOutput\\n3\\n\\nInput\\n2\\n500 500\\n\\nOutput\\n0\\n\\nInput\\n3\\n14 5 1\\n\\nOutput\\n-1\\n\\nInput\\n5\\n1 3 6 9 12\\n\\nOutput\\n1\\n') == 'Output\\n3\\n\\nInput\\n2\\n500 500\\n\\nOutput\\n0\\n\\nInput\\n3\\n14 5 1\\n\\nOutput\\n-1\\n\\nInput\\n5\\n1 3 6 9 12\\n\\nOutput\\n1\\n'",
        "num_ids_2": 197,
        "num_ids_4": 197
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n24 21 14 10') == '3\\n'\nassert solution('2\\n500 500') == '0\\n'\nassert solution('3\\n14 5 1') == '-1\\n'\nassert solution('5\\n1 3 6 9 12') == '1\\n'",
        "num_ids_2": 46,
        "num_ids_4": 90
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 5 5\\n\") == \"3\"\nassert solution(\"2\\n500 500\\n\") == \"0\"\nassert solution(\"3\\n14 5 1\\n\") == \"-1\"\nassert solution(\"5\\n1 3 6 9 12\\n\") == \"1\"",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n24 21 14 10\\n\\n2\\n500 500\\n\\n3\\n14 5 1\\n\\n5\\n1 3 6 9 12\\n\") == \"3\\n\"\nassert solution(\"2\\n500 500\\n\\n3\\n14 5 1\\n\\n5\\n1 3 6 9 12\\n\") == \"0\\n\"\nassert solution(\"3\\n14 5 1\\n\\n5\\n1 3 6 9 12\\n\") == \"-1\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 163
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n24 21 14 10\\n2\\n500 500\\n3\\n14 5 1\\n5\\n1 3 6 9 12\\n\") == \"3\\n\"\nassert solution(\"2\\n500 500\\n0\\n3\\n14 5 1\\n\") == \"0\\n\"\nassert solution(\"3\\n14 5 1\\n-1\\n\") == \"-1\\n\"\nassert solution(\"5\\n1 3 6 9 12\\n\") == \"1\\n\"",
        "num_ids_2": 102,
        "num_ids_4": 154
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n24 21 14 10\\n2\\n500 500\\n3\\n14 5 1\\n5\\n1 3 6 9 12\\n\") == \"3\\n\"\nassert solution(\"2\\n500 500\\n3\\n14 5 1\\n5\\n1 3 6 9 12\\n\") == \"0\\n\"\nassert solution(\"3\\n14 5 1\\n5\\n1 3 6 9 12\\n\") == \"-1\\n\"\nassert solution(\"5\\n1 3 6 9 12\\n\") == \"1\\n\"",
        "num_ids_2": 114,
        "num_ids_4": 177
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n21 14 10\\n') == '3'\nassert solution('2\\n500 500\\n') == '0'\nassert solution('3\\n14 5 1\\n') == '-1'\nassert solution('5\\n1 3 6 9 12\\n') == '1'",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n24 21 14 10\") == 3\nassert solution(\"2\\n500 500\") == 0\nassert solution(\"3\\n14 5 1\") == -1\nassert solution(\"5\\n1 3 6 9 12\") == 1",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n5 2\\n1 2 15 15 15\\n\\nInput\\n6 1\\n36 4 1 25 9 16\\n\\nInput\\n4 4\\n1 10 100 1000\\n\\nOutput\\n5\\n\\nOutput\\n2\\n\\nOutput\\n4\\n') == '5\\n\\n2\\n\\n4\\n'",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == 5\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == 2\nassert solution(\"4 4\\n1 10 100 1000\\n\") == 4",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\nassert solution(open('test_case1.txt', 'r')) == '5'\nassert solution(open('test_case2.txt', 'r')) == '2'\nassert solution(open('test_case3.txt', 'r')) == '4'\nassert solution(open('test_case4.txt', 'r')) == '4'",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\", \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\") == \"5\\n\"\nassert solution(\"6 1\\n36 4 1 25 9 16\") == \"2\\n\"\nassert solution(\"4 4\\n1 10 100 1000\") == \"4\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\") == \"5\\n\"\nassert solution(\"6 1\\n36 4 1 25 9 16\") == \"2\\n\"\nassert solution(\"4 4\\n1 10 100 1000\") == \"4\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for input: {stdin}\"\nfor solution_name, expected_output in [(\"Test case 1\", 5), (\"Test case 2\", 2), (\"Test case 3\", 4)]:\n    assert solution(solution_name) == expected_output, f\"Test failed for input: {solution_name}\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2\\n1 2 15 15 15\\n') == '5\\n'\nassert solution('6 1\\n36 4 1 25 9 16\\n') == '2\\n'\nassert solution('4 4\\n1 10 100 1000\\n') == '4\\n'",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 5, \"Expected output 5, got {}\".format(solution())",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == \"5\\n\"\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == \"2\\n\"\nassert solution(\"4 4\\n1 10 100 1000\\n\") == \"4\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\\n\"\nassert solution(\"5 10 15\\n8 10 15\\n\") == \"8\\n\"\nassert solution(\"5 10 10\\n8 10 10\\n\") == \"8\\n\"\nassert solution(\"5 10 7\\n8 10 9\\n\") == \"-1\\n\"\nassert solution(\"5 10 7\\n8 10 10\\n\") == \"-1\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 114
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == 8\nassert solution(\"5 10 7\\n8 10 2 6\") == 8\nassert solution(\"5 10 7\\n8 10 3 5\") == -1",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == '8'\nprint('All tests pass.')",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == '8\\n'\nassert solution('5 10 7\\n8 10 2 6\\n') == '7\\n'\nassert solution('5 10 7\\n8 9 3 6\\n') == '-1\\n'\nassert solution('5 10 7\\n8 10 3 5\\n') == '-1\\n'\nassert solution('5 10 7\\n8 10 3 6\\n') == '-1\\n'",
        "num_ids_2": 58,
        "num_ids_4": 115
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\\n\"\nassert solution(\"5 10 8\\n6 10 3\") == \"6\\n\"\nassert solution(\"5 10 7\\n8 10 6\") == \"-1\\n\"\nassert solution(\"5 10 6\\n8 10 3\") == \"-1\\n\"\n",
        "num_ids_2": 52,
        "num_ids_4": 102
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == 8\nprint(\"All tests passed.\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"5 10 5\") == \"-1\"\nassert solution(\"5 10 10\") == \"8\"\n",
        "num_ids_2": 40,
        "num_ids_4": 56
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 9 6\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 5\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\\n\"\nassert solution(\"5 5 5\") == \"5\\n\"\nassert solution(\"5 5 10\") == \"-1\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 60
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\\n\"\nassert solution(\"5 10 12\\n7 8 9 10 11\") == \"-1\\n\"\nassert solution(\"4 8 10\\n6 8 9 10\") == \"-1\\n\"\nassert solution(\"5 10 6\") == \"2\\n\"\nassert solution(\"5 10 8\") == \"2\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 102
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"1 2 3 4\\n1\\n2\\n3\\n4\\n5\\n6\\n\") == \"No\\nYes\\nNo\\nNo\\nNo\\n\"\n",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"5 4 2\\n1\\n3\\n2\\n4\\n1\\n\") == \"No\\nNo\\nNo\\nNo\\nYes\\n\"\nassert solution(\"1 1 1\\n1\\n1\\n1\\n1\\n\") == \"Yes\\nYes\\nYes\\nYes\\nYes\\n\"\nassert solution(\"1 2 1\\n1\\n2\\n2\\n1\\n\") == \"Yes\\nYes\\nNo\\nNo\\nNo\\n\"\nassert solution(\"1 1 2\\n1\\n1\\n1\\n1\\n\") == \"No\\nNo\\nNo\\nNo\\nYes\\n\"",
        "num_ids_2": 87,
        "num_ids_4": 171
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n3\") == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n3\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n3\\n3\") == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n3\\n3\") == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\\n\"",
        "num_ids_2": 91,
        "num_ids_4": 188
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"\nassert solution(\"8 6 4\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"\nassert solution(\"10 5 3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"\nassert solution(\"5 3 1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"",
        "num_ids_2": 102,
        "num_ids_4": 231
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\"",
        "num_ids_2": 80,
        "num_ids_4": 160
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"5 1 2\\n1\\n3\\n2\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"5 1 2\\n1\\n3\\n2\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"5 1 2\\n1\\n3\\n2\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 162
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n2\\n1\\n\") == \"No\\nNo\\nNo\\nNo\\nYes\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n2\\n\") == \"No\\nNo\\nNo\\nYes\\nNo\\nNo\\n\"",
        "num_ids_2": 87,
        "num_ids_4": 129
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected_output, f\"Error: {solution(input)}!= {expected_output}\"\nfor i in range(2):\n    assert solution(f\"6 3 {i}\") == \"No\"\n    assert solution(f\"6 3 {i}\") == \"No\"\n    assert solution(f\"6 3 {i}\") == \"Yes\"\n    assert solution(f\"6 3 {i}\") == \"No\"\n    assert solution(f\"6 3 {i}\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n2 2\\n1 1\\n0 1\\n\") == \"YES\\n00\\n10\\n\"\nassert solution(\"Input\\n3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\\n010\\n0000\\n\"\nassert solution(\"Input\\n3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\") == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 94,
        "num_ids_4": 148
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\\n010\\n0000\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\") == \"NO\"",
        "num_ids_2": 82,
        "num_ids_4": 117
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"YES\\n010\\n0000\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"NO\"\nassert solution(\"2 1\\n1 1\\n1 0\") == \"YES\\n01\\n10\"\n",
        "num_ids_2": 80,
        "num_ids_4": 143
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n\") == \"YES\\n00\\n10\\n\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\\n010\\n0000\\n\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\") == \"NO\"",
        "num_ids_2": 88,
        "num_ids_4": 123
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\\n010\\n0000\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\") == \"NO\"",
        "num_ids_2": 84,
        "num_ids_4": 119
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(example1()) == \"YES\\n00\\n10\"\nassert solution(example2()) == \"YES\\n010\\n0000\"\nassert solution(example3()) == \"YES\\n01111111\"\nassert solution(example4()) == \"NO\"",
        "num_ids_2": 41,
        "num_ids_4": 73
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"YES\\n010\\n0000\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"NO\"",
        "num_ids_2": 80,
        "num_ids_4": 113
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"YES\\n010\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"NO\"",
        "num_ids_2": 70,
        "num_ids_4": 103
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(0) == \"NO\"\nassert solution(1) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(4) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('test_input.txt', 'r')) == 'YES\\n010\\n0000'\nassert solution(open('test_input.txt', 'r')) == 'YES\\n0010\\n0010'\nassert solution(open('test_input.txt', 'r')) == 'NO'",
        "num_ids_2": 61,
        "num_ids_4": 80
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"373\") == \"Yes\", \"The input should be of length between 1 and 10 inclusive.\"\nassert solution(\"121\") == \"No\", \"The input should be of length between 1 and 10 inclusive.\"\nassert solution(\"436\") == \"Yes\", \"The input should be of length between 1 and 10 inclusive.\"",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"373\") == \"Yes\", \"Test 1\"\nassert solution(\"121\") == \"No\", \"Test 2\"\nassert solution(\"436\") == \"Yes\", \"Test 3\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"373\") == \"Yes\", \"Test 1\"\nassert solution(\"121\") == \"No\", \"Test 2\"\nassert solution(\"436\") == \"Yes\", \"Test 3\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"373\") == \"Yes\", \"Your solution is incorrect.\"\nassert solution(\"121\") == \"No\", \"Your solution is incorrect.\"\nassert solution(\"436\") == \"Yes\", \"Your solution is incorrect.\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"373\") == \"Yes\", \"Output should be 'Yes'\"\nassert solution(\"121\") == \"No\", \"Output should be 'No'\"\nassert solution(\"436\") == \"Yes\", \"Output should be 'Yes'\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0\\n') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1\\n') == '3'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == \"5\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match expected output: \\nInput: {input()} \\nExpected Output: {expected_output} \\nActual Output: {solution(input())}\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '5'\nassert solution() == '3'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\\n\") == \"5\\n\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\\n\") == \"3\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == 5\nassert solution('6 2 1\\n1 0 0 1 0 1') == 3",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0\\n') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1\\n') == '3'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0\\n') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1\\n') == '3'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == \"5\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375\n",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4, \"The reference solution is incorrect. Expected output: 4, actual output: {}\".format(solution('8-7+6-5+4-3+2-1-0'))\n\nassert solution('2+2') == -46, \"The reference solution is incorrect. Expected output: -46, actual output: {}\".format(solution('2+2'))\n\nassert solution('112-37') == 375, \"The reference solution is incorrect. Expected output: 375, actual output: {}\".format(solution('112-37'))",
        "num_ids_2": 104,
        "num_ids_4": 151
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"Input 8-7+6-5+4-3+2-1-0\"\nassert solution(\"2+2\") == -46, \"Input 2+2\"\nassert solution(\"112-37\") == 375, \"Input 112-37\"",
        "num_ids_2": 67,
        "num_ids_4": 94
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4\nassert solution('2+2') == -46\nassert solution('112-37') == 375",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375\n",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\", \"Incorrect output for the given expression.\"\nassert solution(\"2+2\") == \"-46\", \"Incorrect output for the given expression.\"\nassert solution(\"112-37\") == \"375\", \"Incorrect output for the given expression.\"",
        "num_ids_2": 55,
        "num_ids_4": 80
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"",
        "num_ids_2": 95,
        "num_ids_4": 108
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"\nassert solution(\"\") == \"NO\"\nassert solution(\"4 3 5\") == \"NO\"\nassert solution(\"10 4 6\") == \"NO\"\nassert solution(\"13 4 7\") == \"NO\"\n",
        "num_ids_2": 95,
        "num_ids_4": 116
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution('13 4') == 'NO'",
        "num_ids_2": 95,
        "num_ids_4": 108
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"",
        "num_ids_2": 95,
        "num_ids_4": 108
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\\n\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 94,
        "num_ids_4": 104
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"",
        "num_ids_2": 95,
        "num_ids_4": 108
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'Input\\n4 3\\nYES\\n3 1\\n1 3\\n3 2\\n2 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution(r'Input\\n10 4\\nYES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\nYES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution(r'Input\\n13 4\\nNO\\ndef solution(stdin: str) -> str:\\n    pass\\n') == 'NO'\nassert solution(r'Input\\n4 3\\nYES\\n3 1\\n1 3\\n3 2\\n2 3\\n4 3\\n3 1\\n2 2\\n1 1\\nYES\\n3 1\\n1 3\\n3 2\\n2 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution(r'Input\\n10 4\\nYES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\nYES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n2 2\\n1 1\\n2 4\\n3 2') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution(r'Input\\n13 4\\nNO\\ndef solution(stdin: str) -> str:\\n    pass\\n') == 'NO'",
        "num_ids_2": 234,
        "num_ids_4": 374
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"",
        "num_ids_2": 95,
        "num_ids_4": 108
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3') == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution('10 4') == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution('13 4') == \"NO\"",
        "num_ids_2": 95,
        "num_ids_4": 108
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\") == \"100\"",
        "num_ids_2": 60,
        "num_ids_4": 87
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\") == \"100\"",
        "num_ids_2": 60,
        "num_ids_4": 87
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5, 2, 3) == 18\nassert solution(6, 1, 5) == -1\nassert solution(4, 3, 1) == 100",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == 100",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    5 2 3\n    5 1 3 10 1\n    ''') == 18\n\nassert solution('''\n    6 1 5\n    10 30 30 70 10 10\n    ''') == -1\n\nassert solution('''\n    4 3 1\n    1 100 1 1\n    ''') == 100",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10') == '-1'\nassert solution('4 3 1\\n1 100 1 1') == '100'",
        "num_ids_2": 60,
        "num_ids_4": 87
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\\n\"\nassert solution(\"6 1\\n000000\") == \"21\\n\"\nassert solution(\"4 1\\n0011\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\") == \"15\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"21\"\nassert solution(\"4 1\\n0011\") == \"4\"\nassert solution(\"12 6\\n000010000100\") == \"15\"",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\\n\"\nassert solution(\"6 1\\n000000\") == \"21\\n\"\nassert solution(\"4 1\\n0011\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\") == \"15\\n\"\nassert solution(\"5 1\\n10\") == \"5\\n\"\nassert solution(\"5 1\\n01\") == \"1\\n\"\nassert solution(\"5 1\\n11\") == \"5\\n\"\nassert solution(\"10 1\\n11\") == \"10\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output\", \"Input error\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3, \"Incorrect output\"\nassert solution() == 21, \"Incorrect output\"\nassert solution() == 4, \"Incorrect output\"\nassert solution() == 15, \"Incorrect output\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n00100') == '3'\nassert solution('6\\n000000') == '21'\nassert solution('4\\n0011') == '4'\nassert solution('12\\n000010000100') == '15'",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"21\"\nassert solution(\"4 1\\n0011\") == \"4\"\nassert solution(\"12 6\\n000010000100\") == \"15\"",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n00100\\n\") == \"3\\n\"\nassert solution(\"6 1\\n000000\\n\") == \"21\\n\"\nassert solution(\"4 1\\n0011\\n\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\\n\") == \"15\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2\\n00100') == '3'\nassert solution('6 1\\n000000') == '21'\nassert solution('4 1\\n0011') == '4'\nassert solution('12 6\\n000010000100') == '15'",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\"\nassert solution(\"Hello\\nWorld\") == \"No\"\nassert solution(\"abc\\ndef\\nghi\") == \"No\"\nassert solution(\"az\\nba\\ncz\") == \"Yes\"",
        "num_ids_2": 27,
        "num_ids_4": 58
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"azzel\") == \"Yes\", \"The solution is incorrect\"\nassert solution(\"apple\") == \"Yes\", \"The solution is incorrect\"\nassert solution(\"azze\") == \"No\", \"The solution is incorrect\"\nassert solution(\"zab\") == \"No\", \"The solution is incorrect\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\", \"Test failed for example input.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"azzel\\napple\\n\") == \"Yes\"\nassert solution(\"hello\\nworld\\n\") == \"No\"\nassert solution(\"aaa\\nbbb\\nccc\\nddd\\neee\\n\") == \"No\"\nassert solution(\"aaaa\\nbbbb\\ncccc\\ndddd\\neeee\\n\") == \"Yes\"",
        "num_ids_2": 31,
        "num_ids_4": 79
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"Yes\"\nassert solution(\"applea\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"azzel\") == \"Yes\", \"The solution should return Yes for the given input\"\nassert solution(\"apple\") == \"No\", \"The solution should return No for the given input\"\nassert solution(\"a\") == \"No\", \"The solution should return No for the given input\"\nassert solution(\"aaaa\") == \"No\", \"The solution should return No for the given input\"",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\"\nassert solution(\"abca\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"aab\") == \"No\"\nassert solution(\"aaa\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('azzel') == 'Yes', 'Test case 1 failed'\nassert solution('apple') == 'No', 'Test case 2 failed'\nassert solution('banana') == 'No', 'Test case 3 failed'\nassert solution('python') == 'No', 'Test case 4 failed'\nassert solution('hello') == 'No', 'Test case 5 failed'",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\", \"Solution not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\\nNo\", \"Test Case 1 failed\"\nassert solution(\"apple\\napple\") == \"Yes\\nNo\", \"Test Case 2 failed\"\nassert solution(\"zzz\\naaa\") == \"Yes\\nNo\", \"Test Case 3 failed\"\nassert solution(\"abcd\\nabcd\") == \"Yes\\nNo\", \"Test Case 4 failed\"\nassert solution(\"abcd\\nabcde\") == \"No\\nYes\", \"Test Case 5 failed\"",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan).\\nIf he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher.\\nDetermine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"The minimum amount of money needed to achieve this objective is $150,000.\\n\"",
        "num_ids_2": 221,
        "num_ids_4": 221
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"Yes, it is possible to achieve the minimum amount of money needed to achieve the objective.\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"No, it is not possible to achieve the minimum amount of money needed to achieve the objective.\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"Yes, it is possible to achieve the minimum amount of money needed to achieve the objective.\"",
        "num_ids_2": 419,
        "num_ids_4": 628
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M). There is no other way to increase the understanding levels of the algorithms.\\nTakahashi\\'s objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.') == 'Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M). There is no other way to increase the understanding levels of the algorithms.\\nTakahashi\\'s objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it. You have reached the solution.\\nMinimum amount of money needed: $10,000,000\\n\\nMinimum amount of money needed: $1,000,000\\n\\nMinimum amount of money needed: $500,000\\n\\nMinimum amount of money needed: $200,000\\n\\nMinimum amount of money needed: $100,000\\n\\nMinimum amount of money needed: $50,000\\n\\nMinimum amount of money needed: $20,000\\n\\nMinimum amount of money needed: $10,000\\n\\nMinimum amount of money needed: $5,000\\n\\nMinimum amount of money needed: $2,500\\n\\nMinimum amount of money needed: $1,250\\n\\nMinimum amount of money needed: $500\\n\\nMinimum amount of money needed: $250\\n\\nMinimum amount of money needed: $125\\n\\nMinimum amount of money needed: $625\\n\\nMinimum amount of money needed: $312.5\\n\\nMinimum amount of money needed: $156.25\\n\\nMinimum amount of money needed: $781.25\\n\\nMinimum amount of money needed: $390.625\\n\\nMinimum amount of money needed: $195.3125\\n\\nMinimum amount of money needed: $976.875\\n\\nMinimum amount of money needed: $488.4375\\n\\nMinimum amount of money needed: $244.21875\\n\\nMinimum amount of money needed: $122.109375\\n\\nMinimum amount of money needed: $61.0546875\\n\\nMinimum amount of money needed: $30.52734375\\n\\nMinimum amount of money needed: $15.263671875\\n\\nMinimum amount of money needed: $7.6318359375\\n\\nMinimum amount of money needed: $3.81591796875\\n\\nMinimum amount of money needed: $1.907958984375\\n\\nMinimum amount of money needed: $0.953125\\n\\nMinimum amount of money needed: $0.453125\\n\\nMinimum amount of money needed: $0.2265625\\n\\nMinimum amount of money needed: $0.11328125\\n\\nMinimum amount of money needed: $0.05468",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"Minimum amount of money needed to achieve the objective: 110000 yen\\n\"",
        "num_ids_2": 220,
        "num_ids_4": 220
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"1200\\n\"\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"2400\\n\"\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"3600\\n\"\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"5000\\n\"\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visit",
        "num_ids_2": 584,
        "num_ids_4": 980
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\\n2\\n1\\n3\\n5\\n4\\n0\\n1\\n0\\n4\\n0\\n\") == \"115\"\nassert solution(\"0\\n0\\n1\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n\") == \"35\"\nassert solution(\"0\\n1\\n0\\n1\\n0\\n0\\n0\\n1\\n0\\n0\\n\") == \"50\"\nassert solution(\"10000\\n10000\\n10000\\n10000\\n10000\\n\") == \"1000000000\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\"",
        "num_ids_2": 84,
        "num_ids_4": 177
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"6\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == \"6\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"10\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 82
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '5' # Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\nassert solution(input()) == '2' # Initially, his understanding level of each of the M algorithms is 0.\nassert solution(input()) == '1000' # Takahashi is visiting a bookstore, where he finds N books on algorithms.\nassert solution(input()) == '5000' # The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nassert solution(input()) == '50' # There is no other way to increase the understanding levels of the algorithms.\nassert solution(input()) == '3000' # Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.",
        "num_ids_2": 59,
        "num_ids_4": 173
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\nInitially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher.\\nDetermine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"There is no minimum amount of money needed to achieve the objective.\"",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5 6\") == \"1 2 3 4 5\"\nassert solution(\"1 2 3 4 5 6 7\") == \"1 2 3 4 5 6\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"1 2 3 4 5 6 7\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"1 2 3 4 5 6 7 8\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1 2 3 4 5 6 7 8 9\"",
        "num_ids_2": 46,
        "num_ids_4": 114
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nprint(\"All tests passed.\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 700\\n3 500\\n5 800') == '3'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\\n\") == \"3\\n\"\nassert solution(\"1 1000\\n2 2000\\n3 3000\\n\") == \"2\\n\"\nassert solution(\"1 1000\\n2 2000\\n3 3000\\n4 4000\\n\") == \"4\\n\"\nassert solution(\"1 1000\\n2 2000\\n3 3000\\n4 4000\\n5 5000\\n\") == \"5\\n\"\nassert solution(\"1 1000\\n2 2000\\n3 3000\\n4 4000\\n5 5000\\n6 6000\\n7 7000\\n8 8000\\n9 9000\\n\") == \"8\\n\"\nassert solution(\"1 1000\\n2 2000\\n3 3000\\n4 4000\\n5 5000\\n6 6000\\n7 7000\\n8 8000\\n9 9000\\n10 10000\\n\") == \"10\\n\"\nassert solution(\"1 1000\\n2 2000\\n3 3000\\n4 4000\\n5 5000\\n6 6000\\n7 7000\\n8 8000\\n9 9000\\n10 10000\\n11 11000\\n12 12000\\n13 13000\\n14 14000\\n15 15000\\n16 16000\\n17 17000\\n18 18000\\n19 19000\\n20 20000\\n21 21000\\n22 22000\\n23 23000\\n24 24000\\n25 25000\\n26 26000\\n27 27000\\n28 28000\\n29 29000\\n30 30000\\n31 31000\\n32 32000\\n33 33000\\n34 34000\\n35 35000\\n36 36000\\n37 37000\\n38 38000\\n39 39000\\n40 40000\\n41 41000\\n42 42000\\n43 43000\\n44 44000\\n45 45000\\n46 46000\\n47 47000\\n48 48000\\n49 49000\\n50 50000\\n51 51000\\n52 52000\\n53 53000\\n54 54000\\n55 55000\\n56 56000\\n57 57000\\n58 58000\\n59 59000\\n60 60000\\n61 61000\\n62 62000\\n63 63000\\n64 64000\\n65 65000\\n66 66000\\n67 67000\\n68 68000\\n69 69000\\n70 70000\\n71 ",
        "num_ids_2": 67,
        "num_ids_4": 161
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\\n\") == \"3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\\n\"\nassert solution(\"2 800\\n3 600\\n4 700\") == \"4\\n\"\nassert solution(\"3 100\\n4 300\\n5 500\") == \"5\\n\"\nassert solution(\"100 200\\n100 100\\n100 300\") == \"2\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\") == \"19\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 126
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\\n\") == \"3\"\nprint(\"All test cases pass\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\\n\"\nassert solution(\"1 100\\n5 200\\n10 300\\n15 400\\n20 500\") == \"2\\n\"\nassert solution(\"1 100\\n20 300\\n40 500\\n60 700\\n80 900\") == \"3\\n\"\nassert solution(\"1 100\\n2 200\\n3 300\\n4 400\\n5 500\") == \"2\\n\"\nassert solution(\"1 100\\n100 200\\n200 300\\n400 500\\n600 700\\n800 900\") == \"3\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 169
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"2 600\\n3 400\\n5 700\") == \"4\"\nassert solution(\"2 800\\n3 500\\n5 700\") == \"4\"\nassert solution(\"2 900\\n3 600\\n5 800\") == \"4\"\nassert solution(\"2 1000\\n3 700\\n5 900\") == \"5\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"1 200\\n2 300\\n3 400\\n4 500\\n5 600\\n6 700\\n7 800\\n8 900\\n9 1000\") == \"3\"\nassert solution(\"1 200\\n2 300\\n3 400\\n4 500\\n5 600\\n6 700\\n7 800\\n8 900\\n9 1000\\n10 1100\\n11 1200\\n12 1300\\n13 1400\\n14 1500\\n15 1600\\n16 1700\\n17 1800\\n18 1900\\n19 2000\\n20 2100\\n21 2200\\n22 2300\\n23 2400\\n24 2500\\n25 2600\\n26 2700\\n27 2800\\n28 2900\\n29 3000\\n30 3100\\n31 3200\\n32 3300\\n33 3400\\n34 3500\\n35 3600\\n36 3700\\n37 3800\\n38 3900\\n39 4000\\n40 4100\\n41 4200\\n42 4300\\n43 4400\\n44 4500\\n45 4600\\n46 4700\\n47 4800\\n48 4900\\n49 5000\\n50 5100\\n51 5200\\n52 5300\\n53 5400\\n54 5500\\n55 5600\\n56 5700\\n57 5800\\n58 5900\\n59 6000\\n60 6100\\n61 6200\\n62 6300\\n63 6400\\n64 6500\\n65 6600\\n66 6700\\n67 6800\\n68 6900\\n69 7000\\n70 7100\\n71 7200\\n72 7300\\n73 7400\\n74 7500\\n75 7600\\n76 7700\\n77 7800\\n78 7900\\n79 8000\\n80 8100\\n81 8200\\n82 8300\\n83 8400\\n84 8500\\n85 8600\\n86 8700\\n87 8800\\n88 8900\\n89 9000\\n90 9100\\n91 9200\\n92 9300\\n93 9400\\n94 9500\\n95 9600\\n96 9700\\n97 9800\\n98 9900\\n99 10000\") == \"3\"\nassert solution(\"1 200\\n2 300\\n3 400\\n4 500\\n5 600\\n6 700\\n",
        "num_ids_2": 99,
        "num_ids_4": 1027
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 700\\n3 500\\n5 800\\n') == '3'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == \"2\\n\"\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == \"2\\n\"\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == \"3\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 2 # your solution here",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2', \"Tanya's Candy Plan\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(7) == 2\nassert solution(8) == 2\nassert solution(9) == 3",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n7\\n5 5 4 5 5 5 6\\n\\nOutput\\n2\\n\\nInput\\n8\\n4 8 8 7 8 4 4 5\\n\\nOutput\\n2\\n\\nInput\\n9\\n2 3 4 2 2 3 2 2 4\\n\\nOutput\\n3') == '2\\n\\n3\\n'\n",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\", \"Expected answer: 2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == \"2\"\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == \"2\"\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 81
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == \"2\"\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == \"2\"\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 81
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1') == 18\nassert solution('6 1 5\\n10 30 30 70 10 10') == -1\nassert solution('4 3 1\\n1 100 1 1') == 100",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '18'\nassert solution() == '-1'\nassert solution() == '100'",
        "num_ids_2": 17,
        "num_ids_4": 27
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\") == 100\n",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\\n\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\\n\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\\n\"\n",
        "num_ids_2": 68,
        "num_ids_4": 99
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == 100\n",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    5 2 3\n    5 1 3 10 1\n    \"\"\") == \"18\"\n\nassert solution(\"\"\"\n    6 1 5\n    10 30 30 70 10 10\n    \"\"\") == \"-1\"\n\nassert solution(\"\"\"\n    4 3 1\n    1 100 1 1\n    \"\"\") == \"100\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\") == 100\n\nfrom typing import List",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'your_answer'  # Add your solution here",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution(stdin)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\\n\", \"Incorrect output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"Yes\\n\", \"Test Case 1\"\nassert solution(\"2\") == \"No\\n\", \"Test Case 2\"\nassert solution(\"5\") == \"No\\n\", \"Test Case 3\"\nassert solution(\"10\") == \"Yes\\n\", \"Test Case 4\"\nassert solution(\"20\") == \"Yes\\n\", \"Test Case 5\"",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\\n\") == \"Yes\\n\"\nassert solution(\"10\\n\") == \"Yes\\n\"\nassert solution(\"5\\n\") == \"No\\n\"\nassert solution(\"0\\n\") == \"No\\n\"\nassert solution(\"15\\n\") == \"No\\n\"\nassert solution(\"30\\n\") == \"Yes\\n\"\nassert solution(\"60\\n\") == \"Yes\\n\"\nassert solution(\"100\\n\") == \"Yes\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"Yes\", \"The correct output should be Yes.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"50\") == \"No\"\nassert solution(\"20\") == \"Yes\"\nassert solution(\"5\") == \"No\"\nassert solution(\"10\") == \"Yes\"\nassert solution(\"500\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"Yes\", \"Your solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"15\") == \"No\"\nassert solution(\"5\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"10\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6\\n'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the number of coordinates: \")) == output(\"2 2 6\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0 0 0\"  # Empty input\nassert solution(\"4\") == \"0 0 0\"  # Invalid input\nassert solution(\"2\\n2 3 5\") == \"2 2 6\"  # Correct input",
        "num_ids_2": 34,
        "num_ids_4": 59
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6'\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nprint(\"All tests passed!\")",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nassert solution(\"\") == \"\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10 10 10\") == \"10 10 10\"",
        "num_ids_2": 45,
        "num_ids_4": 79
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6\\n'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"redcoder\") == \"1\", \"The solution is incorrect\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"redcoder\") == \"1\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"redcoder\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"racecar\") == \"2\"\nassert solution(\"hello\") == \"1\"\nassert solution(\"aabb\") == \"1\"\nassert solution(\"abcd\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('redcoder') == '1'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"Yes\\n\"\nassert solution(\"20\") == \"No\\n\"\nassert solution(\"100\") == \"Yes\\n\"\nassert solution(\"5\") == \"No\\n\"\nassert solution(\"1000\") == \"Yes\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"Yes\\n\"\nassert solution(\"15\") == \"No\\n\"\nassert solution(\"0\") == \"No\\n\"\nassert solution(\"1\") == \"No\\n\"\nassert solution(\"100\") == \"No\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Yes\\n\", \"Test failed!\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\", \"Test Failed\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"Yes\\n\"\nassert solution(\"20\") == \"No\\n\"\nassert solution(\"30\") == \"No\\n\"\nassert solution(\"40\") == \"No\\n\"\nassert solution(\"50\") == \"Yes\\n\"\nassert solution(\"60\") == \"No\\n\"\nassert solution(\"70\") == \"No\\n\"\nassert solution(\"80\") == \"Yes\\n\"\nassert solution(\"90\") == \"No\\n\"\nassert solution(\"100\") == \"No\\n\"\nassert solution(\"101\") == \"Yes\\n\"\nassert solution(\"102\") == \"No\\n\"\nassert solution(\"103\") == \"No\\n\"\nassert solution(\"104\") == \"No\\n\"\nassert solution(\"105\") == \"Yes\\n\"\nassert solution(\"106\") == \"No\\n\"\nassert solution(\"107\") == \"No\\n\"\nassert solution(\"108\") == \"Yes\\n\"\nassert solution(\"109\") == \"No\\n\"\nassert solution(\"110\") == \"No\\n\"\nassert solution(\"111\") == \"Yes\\n\"\nassert solution(\"112\") == \"No\\n\"\nassert solution(\"113\") == \"No\\n\"\nassert solution(\"114\") == \"No\\n\"\nassert solution(\"115\") == \"Yes\\n\"\nassert solution(\"116\") == \"No\\n\"\nassert solution(\"117\") == \"No\\n\"\nassert solution(\"118\") == \"Yes\\n\"\nassert solution(\"119\") == \"No\\n\"\nassert solution(\"120\") == \"No\\n\"\nassert solution(\"121\") == \"Yes\\n\"\nassert solution(\"122\") == \"No\\n\"\nassert solution(\"123\") == \"No\\n\"\nassert solution(\"124\") == \"No\\n\"\nassert solution(\"125\") == \"Yes\\n\"\nassert solution(\"126\") == \"No\\n\"\nassert solution(\"127\") == \"No\\n\"\nassert solution(\"128\") == \"Yes\\n\"\nassert solution(\"129\") == \"No\\n\"\nassert solution(\"130\") == \"No\\n\"\nassert solution(\"131\") == \"Yes\\n\"\nassert solution(\"132\") == \"No\\n\"\nassert solution(\"133\") == \"No\\n\"\nassert solution(\"134\") == \"No\\n\"\nassert solution(\"135\") == \"Yes\\n\"\nassert solution(\"136\") == \"No\\n\"\nassert solution(\"137\") == \"No\\n\"\nassert solution(\"138\") == \"Yes\\n\"\nassert solution(\"139\") == \"No\\n\"\nassert solution(\"140\") == \"No\\n\"\nassert solution(\"141\") == \"Yes\\n\"\nassert solution(\"142\") == \"No\\n\"\nassert solution(\"143\") == \"No\\n\"\nassert solution(\"144\") == \"No\\n\"\nassert solution(\"145\") == \"Yes\\n\"\nassert solution(\"146\") == \"No\\n\"\nassert solution(\"147\") == \"No\\n\"\nassert solution(\"148\") == \"Yes\\n\"\nassert solution(\"149\") == \"No\\n\"\nassert solution(\"150\") == \"No\\n\"\nassert solution(\"151\") == \"Yes\\n\"\nassert solution(\"152\") == \"No\\n\"\nassert solution(\"153\") == \"No\\n\"\nassert solution(\"154\") == \"No\\n\"\nassert solution(\"155\") == \"Yes\\n\"\nassert solution(\"156\") == \"No\\n\"\nassert solution(\"157\") == \"No\\n\"\nassert solution(\"158\") == \"Yes\\n\"\nassert solution(\"159\") == \"No\\n\"\nassert solution(\"160\") == \"No\\n\"\nassert solution(\"161\") == \"Yes\\n\"\nassert solution(\"162\") == \"No\\n\"\nassert solution(\"163\") == \"No\\n\"\nassert solution(\"164\") == \"No\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n\") == \"Yes\\n\"  # Test 1\nassert solution(\"20\\n\") == \"No\\n\"  # Test 2\nassert solution(\"1\\n\") == \"No\\n\"  # Test 3\nassert solution(\"9\\n\") == \"Yes\\n\"  # Test 4\nassert solution(\"100\\n\") == \"No\\n\"  # Test 5",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test Failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 9 7 5\") == \"5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 50
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\"\nassert solution(\"6\\n5 6 4 8 9\") == \"0\\n\"\nassert solution(\"7\\n10 5 15 3 9\") == \"4\\n\"\nassert solution(\"8\\n1 4 8 12 9\") == \"2\\n\"\nassert solution(\"9\\n2 3 6 10 8\") == \"0\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 95
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\"\nassert solution(\"10\\n1 1 2 3 4\") == \"0\"\nassert solution(\"5\\n4 5 6 7 8\") == \"12\"\nassert solution(\"10\\n1 1 2 3 4 5\") == \"16\"\nassert solution(\"6\\n1 2 3 4 5\") == \"42\"",
        "num_ids_2": 43,
        "num_ids_4": 90
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\"\nassert solution(\"7\\n3 4 5 6 7\") == \"2\"\nassert solution(\"10\\n4 4 9 7 5\") == \"12\"\nassert solution(\"1\\n1 1 1 1 1\") == \"1\"\nassert solution(\"6\\n4 4 9 7 5\") == \"1\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '5\\n', \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"5\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n4 4 9 7 5') == '5\\n'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\\n\", \"The given code does not work\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\\n\"\nassert solution(\"1 2\") == \"-1\\n\"\nassert solution(\"2 5 3\") == \"-1\\n\"\nassert solution(\"100 0\") == \"-1\\n\"\nassert solution(\"-10 -5\") == \"-1\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 72
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\\n2 5 = 10.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '10\\n2 \\times 5 = 10.'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"10\"\nprint(\"2 \\times 5 = 10.\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"10\", \"Expected result is 10, but got: \" + solution(\"2 5\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'\nprint(\"All tests passed.\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"2 3\\n10 12 1 2 14\") == \"3\"\nassert solution(\"2 3\\n10 12 2 1 14\") == \"3\"\nassert solution(\"2 2\\n10 12 1 2 14\") == \"2\"\nassert solution(\"2 3\\n10 12 2 1 14\\n1 2 3 4\") == \"4\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"10 12 1 2 14\") == \"5\"\nassert solution(\"10 12 1 2 14\") == \"5\"\nassert solution(\"10 12 1 2 14\") == \"5\"",
        "num_ids_2": 47,
        "num_ids_4": 89
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: Expected output {expected_output}, but got {solution(input())}\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n1110\\n1011\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n\\n5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5') == 2\nassert solution('4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n') == 1\nassert solution('5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == 2",
        "num_ids_2": 117,
        "num_ids_4": 162
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\") == \"2\\n1110\\n1011\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\") == \"1\\n101001\\n111100\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\") == \"2\\n111100\\n110110\"\n",
        "num_ids_2": 116,
        "num_ids_4": 176
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3\n\nOutput\n2\n1110\n1011''') == '2\\n1110\\n1011'\nassert solution('''4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n\nOutput\n1\n101001''') == '1\\n110011\\n100111'\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n\nOutput\n2\n111100\n110110''') == '2\\n111100\\n110110'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\") == \"2\\n1110\\n1011\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 4\\n1 3\") == \"1\\n101001\\n110110\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\") == \"2\\n111100\\n110110\"\nassert solution(\"4 4 3\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\") == \"2\\n0111\\n1111\"",
        "num_ids_2": 126,
        "num_ids_4": 262
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3') == '2\\n1110\\n1011\\n'\n\nassert solution('4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 4\\n1 3') == '1\\n101001\\n'\n\nassert solution('5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5') == '2\\n111100\\n110110\\n'",
        "num_ids_2": 122,
        "num_ids_4": 184
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, f\"Input: {input_data}\\nExpected Output: {expected_output}\\nOutput: {solution(input_data)}\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\\n\"\nassert solution(\"3\\n4 5 3\\n\\n2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\\n\"\nassert solution(\"2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\\n\"",
        "num_ids_2": 106,
        "num_ids_4": 160
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(10) == \"YES\"\nassert solution(1) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"YES\"\nassert solution(\"2\\n10 10\") == \"YES\"\nassert solution(\"3\\n1 2 3\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10\\n\\n3\\n1 2 3\\n') == 'YES\\nYES\\nYES\\nNO'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\"\nassert solution(open(\"input.txt\", \"r\")) == \"YES\"\nassert solution(open(\"input.txt\", \"r\")) == \"YES\"\nassert solution(open(\"input.txt\", \"r\")) == \"YES\"\nassert solution(open(\"input.txt\", \"r\")) == \"NO\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 2 5\\n\") == \"YES\\n\"\nassert solution(\"3\\n4 5 3\\n\") == \"YES\\n\"\nassert solution(\"2\\n10 10\\n\") == \"YES\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\\n\"\n",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, Received: {solution(stdin)}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == 9\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == 4999999999996\nassert solution(\"10 4\\n-3 -6 5 4\") == -1",
        "num_ids_2": 84,
        "num_ids_4": 106
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '-1\\n'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996\\n'\nassert solution('10 4\\n-3 -6 5 4') == '-1\\n'",
        "num_ids_2": 90,
        "num_ids_4": 115
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == -1\nassert solution() == 9\nassert solution() == 4999999999996\n\nfrom typing import List\n",
        "num_ids_2": 14,
        "num_ids_4": 33
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"-1\\n\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\\n\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\\n\"\n",
        "num_ids_2": 90,
        "num_ids_4": 115
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"-100 -200 -300 125 77 -4\") == \"9\"\nassert solution(\"-1000000000000 5\") == \"4999999999996\"\nassert solution(\"-10 4\") == \"-1\"",
        "num_ids_2": 65,
        "num_ids_4": 78
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '4999999999996', 'Expected 4999999999996, got {}'.format(solution())",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\\n\") == \"9\\n\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\\n\") == \"4999999999996\\n\"\nassert solution(\"10 4\\n-3 -6 5 4\\n\") == \"-1\\n\"",
        "num_ids_2": 94,
        "num_ids_4": 121
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996'\nassert solution('10 4\\n-3 -6 5 4') == '-1'",
        "num_ids_2": 86,
        "num_ids_4": 109
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"AB\"\nassert solution(\"5\") == \"ZZ\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"5ZZZAA\") == \"ZZ\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nZZZAA\") == \"ZZ\"\nassert solution(\"7\\nABACABA\") == \"AB\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\") == \"AB\"\nassert solution(\"5\") == \"ZZ\"\nassert solution(\"10\") == \"ABACABA\"",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"AB\"\nassert solution(\"5\") == \"ZZ\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"ZZ\"\nassert solution(\"7\") == \"AB\"\nassert solution(\"5\") == \"ZZ\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"5ZZZAA\") == \"ZZ\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: '{expected_output}'. Got: '{solution(input())}'.\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\") == \"AB\"\nassert solution(\"5\") == \"ZZ\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('test') == 'est'\nassert solution('west') == ''\nassert solution('codeforces') == 'es'\nassert solution('yes') == 'es'\nassert solution('b') == 'ab'\nassert solution('ab') == 'ab'\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('test') == 'est', \"Test case 1 failed\"\nassert solution('west') == '', \"Test case 2 failed\"\nassert solution('codeforces') == 'codeforces', \"Test case 3 failed\"\nassert solution('yes') == 'es', \"Test case 4 failed\"\nassert solution('b') == 'ab', \"Test case 5 failed\"",
        "num_ids_2": 32,
        "num_ids_4": 72
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"b\"\nassert solution(\"ab\") == \"b\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"b\"\nassert solution(\"ab\") == \"ab\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('test') == 'est'\nassert solution('west') == 'here'\nassert solution('codeforces') == 'es'\nassert solution('yes') == 'es'\nassert solution('b') == 'ab'",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"es\"\nassert solution(\"ab\") == \"es\"\nassert solution(\"test\") == \"est\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"test\") == \"est\", \"Test Case 1\"\nassert solution(\"west\") == \"here\", \"Test Case 2\"\nassert solution(\"codeforces\") == \"es\", \"Test Case 3\"\nassert solution(\"yes\") == \"es\", \"Test Case 4\"\nassert solution(\"b\") == \"a\", \"Test Case 5\"\nassert solution(\"ab\") == \"a\", \"Test Case 6\"\nassert solution(\"\") == \"\", \"Test Case 7\"\n\nfrom typing import List",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"test\") == \"est\", \"test\"\nassert solution(\"west\") == \"here\", \"west\"\nassert solution(\"codeforces\") == \"es\", \"codeforces\"\nassert solution(\"yes\") == \"es\", \"yes\"\nassert solution(\"b\") == \"ab\", \"b\"",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n\"\nprint(\"Correct\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"4\\n\"\nassert solution(\"5 5\\n2 3 4 5 6\") == \"5\\n\"\nassert solution(\"3 3\\n1 2 3\") == \"1\\n\"\n",
        "num_ids_2": 47,
        "num_ids_4": 93
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 7 11') == '2'\nassert solution('2 1\\n4 6 8') == '3'\nassert solution('4 2\\n-5 -3 0') == '2'\nassert solution('10 1000000') == '2'\nassert solution('1 1 1') == '1'",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"\nassert solution(\"5 6\\n1 2 3 4 5\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1\") == \"1\"\nassert solution(\"2 2\\n1 1 1\") == \"1\"",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"\nassert solution(\"3 5\\n1 7 11\") == \"5\"\nassert solution(\"5 6\\n1 7 11\") == \"12\"\nassert solution(\"4 4\\n1 2 3 4\") == \"1\"\nassert solution(\"4 6\\n1 2 3 4\") == \"10\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 7 11\\n\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"\nassert solution(\"4 3\\n1 2 3 4\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"3\\n\"\nassert solution(\"6 3\\n1 2 3 4 5 6\") == \"3\\n\"\nassert solution(\"7 3\\n1 2 3 4 5 6 7\") == \"4\\n\"\nassert solution(\"8 3\\n1 2 3 4 5 6 7 8\") == \"4\\n\"\nassert solution(\"9 3\\n1 2 3 4 5 6 7 8 9\") == \"5\\n\"\nassert solution(\"10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"5\\n\"\nassert solution(\"11 3\\n1 2 3 4 5 6 7 8 9 10 11\") == \"6\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 97
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"AmanacApaman\") == \"Yes\"\nassert solution(\"racecar\") == \"No\"\nassert solution(\"hello\") == \"No\"\nassert solution(\"aabbcc\") == \"Yes\"\nassert solution(\"A man, a plan, a canal, Panama!\") == \"Yes\"",
        "num_ids_2": 26,
        "num_ids_4": 47
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"Test case 1 failed\"\nassert solution(\"hello\") == \"No\", \"Test case 2 failed\"\nassert solution(\"racecar\") == \"No\", \"Test case 3 failed\"\nassert solution(\"I love you\") == \"Yes\", \"Test case 4 failed\"\nassert solution(\"thequickbrownfoxjumpsoverthelazydog\") == \"No\", \"Test case 5 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"12345\") == \"No\"\nassert solution(\"a\") == \"No\"\nassert solution(\"helloworld\") == \"No\"\nassert solution(\"\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('hello') == 'No'\nassert solution('racecar') == 'No'\nassert solution('akasakaa') == 'No'\nassert solution('aaa') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('akasaka') == 'Yes'\nprint(\"All tests passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"Expected Yes, but got: {}\".format(solution(\"akasaka\"))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"hello\") == \"No\"\nassert solution(\"racecar\") == \"No\"\nassert solution(\"abc\") == \"Yes\"\nassert solution(\"a\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"S is not a strong palindrome.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"hello\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"akasaka\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"198 1.10\") == \"217\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"1000 0.000001\") == \"0\"\nassert solution(\"-1000 0.000001\") == \"0\"\nassert solution(\"1000 0.00000001\") == \"0\"\nassert solution(\"1000 0.000000001\") == \"0\"",
        "num_ids_2": 41,
        "num_ids_4": 87
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nprint(\"All tests passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 217, \"Your code is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"3.14 0.00001\") == \"3\"\nassert solution(\"0 0.001\") == \"0\"\nassert solution(\"1 0.01\") == \"1\"\nassert solution(\"-1 0.001\") == \"0\"",
        "num_ids_2": 40,
        "num_ids_4": 71
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"198 1.10\") == \"217\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"1.2 3.4\") == \"6.8\"\nassert solution(\"0.5 3.0\") == \"3.0\"\nassert solution(\"-2.5 -1.0\") == \"-5.0\"\nassert solution(\"1.0 0.0\") == \"1.0\"",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"198 1.10\") == \"217\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"4 0.4\") == \"0\"\nassert solution(\"0.1 0.2\") == \"0\"\nassert solution(\"1.0000000000000001 0.00000000000000001\") == \"0\"\nassert solution(\"1.0000000000000001 1\") == \"1\"",
        "num_ids_2": 33,
        "num_ids_4": 96
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"198 1.10\") == \"217\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3\nassert solution() == 0\nassert solution() == 0\nassert solution() == 1\nassert solution() == 999999999\nassert solution() == 381621773",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3\\n0\\n0\\n1\\n999999999\\n381621773'\nprint(\"All test cases passed successfully!\")\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == 3\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n1000000000\\n2500000000\") == 0\nassert solution(\"1\\n1\\n1\\n1\\n1\") == 0\nassert solution(\"2000000000\\n763243547\\n1000000000\\n2500000000\") == 1\nassert solution(\"1000000000\\n2500000000\") == 999999999\nassert solution(\"381621773\") == 3\nassert solution(\"1000000000\\n2500000000\\n3000000000\\n4500000000\\n6000000000\\n7500000000\") == 381621773",
        "num_ids_2": 112,
        "num_ids_4": 186
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(6,7,1,2,3,2000000000,763243547) == 3, \"Alice will get 1,2,3 candies, Betty will get 1,2,3 candies, and each sister will get a unique number of candies, so Alice will get a greater amount of candies than Betty (i.e. 1,2,3 > 2), and Alice will get 6 candies.\"\nassert solution(10,5,3,2,1,1000000000) == 1, \"Alice will get 3,1 candies, Betty will get 2,1 candies, and each sister will get a unique number of candies, so Alice will get a greater amount of candies than Betty (i.e. 3,1 > 2), and Alice will get 3 candies.\"\nassert solution(2,3,1,3,4,1000000000) == 1, \"Alice will get 3,1 candies, Betty will get 4,1 candies, and each sister will get a unique number of candies, so Alice will get a greater amount of candies than Betty (i.e. 3,1 > 4), and Alice will get 1 candies.\"\nassert solution(2,4,1,2,3,2000000000) == 1, \"Alice will get 2,1 candies, Betty will get 3,1 candies, and each sister will get a unique number of candies, so Alice will get a greater amount of candies than Betty (i.e. 2,1 > 3), and Alice will get 1 candies.\"\nassert solution(2,2,2,1,1,1000000000) == 1, \"Alice will get 2,2 candies, Betty will get 2,1 candies, and each sister will get a unique number of candies, so Alice will get a greater amount of candies than Betty (i.e. 2,2 > 2), and Alice will get 1 candies.\"\nassert solution(10,7,2,1,3,2000000000) == 3, \"Alice will get 2,1 candies, Betty will get 1,3 candies, and each sister will get a unique number of candies, so Alice will get a greater amount of candies than Betty (i.e. 2,1 > 1,3), and Alice will get 6 candies.\"\nassert solution(10,10,2,1,2,1000000000) == 3, \"Alice will get 2,1 candies, Betty will get 1,2 candies, and each sister will get a unique number of candies, so Alice will get a greater amount of candies than Betty (i.e. 2,1 > 1,2), and Alice will get 6 candies.\"",
        "num_ids_2": 225,
        "num_ids_4": 433
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\nprint(\"pass\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == 3\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == 0\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == 0\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == 1\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == 999999999\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == 381621773",
        "num_ids_2": 92,
        "num_ids_4": 184
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=None) == \"\"\"3\n0\n0\n1\n999999999\n381621773\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"The output does not match the expected output. Input: {input()}, Output: {output}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(7) == 3\nassert solution(10) == 0\nassert solution(50) == 0\nassert solution(1000000000) == 1\nassert solution(763243547) == 999999999\nassert solution(2000000000) == 381621773",
        "num_ids_2": 19,
        "num_ids_4": 47
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"3\\n0\\n0\\n1\\n999999999\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([5, 4, 5]) == 1\nassert solution([9, 9, 1]) == 3\nassert solution([1, 2]) == 0\nassert solution([1, 2, 3, 4, 5, 6, 7, 8]) == 3\n",
        "num_ids_2": 30,
        "num_ids_4": 72
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n\") == \"3\\n\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"1\\n\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n\") == \"3\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"1\"\nassert solution(\"\") == \"0\"\nprint(\"All tests passed!\")",
        "num_ids_2": 97,
        "num_ids_4": 105
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(example_input1) == \"3\"\nassert solution(example_input2) == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '1'\nassert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1') == '3'\nassert solution('10 9 1\\n1 2\\n2 3\\n3 4\\n4 1\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n4 10\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\\n6 7\\n6 8\\n6 9\\n6 10\\n7 8\\n7 9\\n7 10\\n8 9\\n8 10\\n9 10') == '0'",
        "num_ids_2": 93,
        "num_ids_4": 367
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '3'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1') == '3\\n'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '1\\n'",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but the expected output is {expected_output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n\\nOutput\\n3\\n\\nInput\\n5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\\nOutput\\n1\") == \"3\\n\\n1\"\nassert solution(\"Input\\n5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\\nOutput\\n1\") == \"1\"",
        "num_ids_2": 160,
        "num_ids_4": 160
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Test failed: expected '{output}', got '{solution(input)}'\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\") == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4\\n3 2 4 1\\nOutput\\n4\\n\") == \"4\\n\"\nassert solution(\"Input\\n6\\n1 1 1 4 4 4\\nOutput\\n5\\n\") == \"5\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    4\n    3 2 4 1\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    6\n    1 1 1 4 4 4\n    \"\"\"\n) == \"5\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 4 1\") == \"4\"\nassert solution(\"6 1 1 4 4 4\") == \"5\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nfor i in range(input()):\n    assert solution(input()) == output\nprint(output)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test case not passing\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 4 1\") == \"4\\n\", \"Expected output: 4\\n, but got: \" + solution(\"3 2 4 1\")\nassert solution(\"6 1 1 4 4 4\") == \"5\\n\", \"Expected output: 5\\n, but got: \" + solution(\"6 1 1 4 4 4\")",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 2 4 1\") == \"4\\n\"\nassert solution(\"6\\n1 1 1 4 4 4\") == \"5\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n3 2 4 1') == 4\nassert solution('6\\n1 1 1 4 4 4') == 5",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\"\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\\n\"\nprint(solution(\"2 3\\n1 32\\n2 63\\n1 12\")) # Output: \"000001000002\\n000002000001\\n000001000001\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}, Expected Output: {output()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\"\nprint(solution(\"2 3\\n1 32\\n2 63\\n1 12\"))",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Output {solution(input())} is incorrect. Expected {output}.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test case failed: expected output {output}, got {solution(input)}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\\n\"\nassert solution(\"1 3\\n2 32\\n1 63\\n2 12\") == \"000002000003\\n000001000001\\n000002000003\\n\"\nassert solution(\"1 100000000\\n2 200000000\") == \"000000000001\\n000000000002\\n000000000003\\n000000000004\\n000000000005\\n000000000006\\n000000000007\\n000000000008\\n000000000009\\n000000000010\\n\"\nassert solution(\"1 100000000\\n1 200000000\") == \"000000000001\\n000000000002\\n\"\nassert solution(\"1 100000000\\n2 200000000\") == \"000000000001\\n000000000002\\n\"\nassert solution(\"1 100000000\\n2 200000000\\n1 300000000\") == \"000000000001\\n000000000002\\n000000000003\\n\"",
        "num_ids_2": 142,
        "num_ids_4": 374
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(4)) == 2\nassert solution(str(5)) == 2\nassert solution(str(6)) == 2\nassert solution(str(7)) == 2\nassert solution(str(8)) == 2\nassert solution(str(9)) == 2\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\", \"Test failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"The minimum possible final health of the last monster alive should be 2.\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"4\\n\") == \"0\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 72
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"5\\n3 4 5 6 7 8 9\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\"",
        "num_ids_2": 38,
        "num_ids_4": 84
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n2 10 8 40') == '2\\n'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\", \"The minimum possible final health of the last monster alive should be 2.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\", \"Test 1\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\", \"Test 2\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\", \"Test 3\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\", \"Test 4\"",
        "num_ids_2": 57,
        "num_ids_4": 145
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"\n",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010', 'Test 1 failed'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false', 'Test 2 failed'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341', 'Test 3 failed'\nassert solution('?(__+___+__-___):-___>__.') == '0101', 'Test 4 failed'",
        "num_ids_2": 59,
        "num_ids_4": 149
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'?(_-_/___*__):-___>__.') == '0010'\nassert solution(r'?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution(r'?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution(r'?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 51,
        "num_ids_4": 133
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 11\\n2 1 5\\n7 10 0\\n12 6 4') == '3\\n'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '5\\n'\nassert solution('3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '0\\n'",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\\n\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\\n\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\\n\"\n",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\\n') == '3\\n'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n') == '5\\n'\nassert solution('3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n') == '0\\n'",
        "num_ids_2": 87,
        "num_ids_4": 150
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 3, 11) == 3\nassert solution(3, 4, 2) == 5\nassert solution(3, 4, 1000000000000000000) == 0",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 11\\n2 1 5\\n7 10 0\\n12 6 4') == '3'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '5'\nassert solution('3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '0'\n",
        "num_ids_2": 79,
        "num_ids_4": 138
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('example1.txt').read()) == '3\\n'\nassert solution(open('example2.txt').read()) == '5\\n'\nassert solution(open('example3.txt').read()) == '0\\n'",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\\n\") == \"3\\n\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n\") == \"5\\n\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n\") == \"0\\n\"",
        "num_ids_2": 87,
        "num_ids_4": 150
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3, \"Expected 3, got {}\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\"",
        "num_ids_2": 79,
        "num_ids_4": 138
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"codeforces\"\nassert solution(\"16\") == \"thisisexampletwo\"\nassert solution(\"1\") == \"z\"",
        "num_ids_2": 30,
        "num_ids_4": 40
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\", \"Test 1: Input 'rocesfedoc' should decrypt to 'codeforces'.\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\", \"Test 2: Input 'plmaetwoxesisiht' should decrypt to 'thisisexampletwo'.\"\nassert solution(\"z\") == \"z\", \"Test 3: Input 'z' should decrypt to 'z'.\"",
        "num_ids_2": 88,
        "num_ids_4": 114
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\nrocesfedoc\") == \"codeforces\", \"The correct solution is not 'codeforces'.\"\nassert solution(\"16\\nplmaetwoxesisiht\") == \"thisisexampletwo\", \"The correct solution is not 'thisisexampletwo'.\"\nassert solution(\"1\\nz\") == \"z\", \"The correct solution is not 'z'.\"",
        "num_ids_2": 74,
        "num_ids_4": 96
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == \"codeforces\"\nassert solution(16) == \"thisisexampletwo\"\nassert solution(1) == \"z\"",
        "num_ids_2": 30,
        "num_ids_4": 40
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"codeforces\"\nassert solution(\"16\") == \"thisisexampletwo\"\nassert solution(\"1\") == \"z\"",
        "num_ids_2": 30,
        "num_ids_4": 40
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\n",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 14\") == \"19\", \"The output of the given code is incorrect.\"\nassert solution(\"381 492\") == \"873\", \"The output of the given code is incorrect.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 14\") == 19\nassert solution(\"381 492\") == 873",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='5 14') == 19, \"Error: Incorrect Output\"\nassert solution(stdin='381 492') == 873, \"Error: Incorrect Output\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 14\") == \"19\", \"Solution for the given input is incorrect.\"\nassert solution(\"381 492\") == \"873\", \"Solution for the given input is incorrect.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 14\") == \"19\", \"Invalid output: 5 14 should return 19\"\nassert solution(\"381 492\") == \"873\", \"Invalid output: 381 492 should return 873\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"19\"\nassert solution(input()) == \"873\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2+3\") == \"++>+++>+++>+++>++\\n\"\nassert solution(\"9-7\") == \"+++++++++++>+++++++++++>+++++++++++>+++++++>+++>+++++++++++>+++++++++++>+++++++++++>+++++++>++\\n\"\nassert solution
        "num_ids_2": 62,
        "num_ids_4": 1027
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2+3\") == \"++>+++>+++>+<+->+++<+++++++++++>++++++++++>+++<+++++>++>+++>+<<-<<-\"\nassert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\", \"Test 1 failed\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\", \"Test 2 failed\"\n\nsolution(\"123456789\") # This line of code is not needed for the test case\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2+3') == '++>+++>+++<'\nassert solution('9-7') == '++++++++++->++++++++++<-'\nassert solution('print') == ''",
        "num_ids_2": 33,
        "num_ids_4": 41
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[+>-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2+3\") == \"++\\n+++\\n<[+>-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n2\\n5\\n2\\n0\\n\\n8\\n2\\n4\\n1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\\n\"\nassert solution(\"4\\n2132\\n506\\n9999999999999999999\\n1000000000000000000\\n\") == \"8\\n2\\n4\\n1\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == solution(stdin) # since the input is the same, there is no need to test the correctness of the solution",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n9999999999999999999\") == \"8\\n2\\n4\\n1\\n\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(5)) == '1'\nassert solution(str(4)) == '8'\nassert solution(str(1)) == '1'\nassert solution(str(2)) == '2'\nassert solution(str(3)) == '5'\nassert solution(str(20)) == '5'\nassert solution(str(38)) == '2'\nassert solution(str(56)) == '0'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\"1\n2\n5\n2\n0\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\") == \"8\\n2\\n4\\n1\\n\"",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(575) == \"There are four Shichi-Go-San numbers not greater than 575: 357, 375, 537 and 573.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(575) == \"4\\n\", \"The number of Shichi-Go-San numbers is not as expected.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(575) == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"575\") == \"4\\n\"\n\nfrom typing import List",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(575) == \"4\"\n\nassert solution(678) == \"0\"\n\nassert solution(1111) == \"0\"\n\nassert solution(9999) == \"4\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(575) == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"575\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(575) == 4, \"The number of Shichi-Go-San numbers between 1 and 575 is not 4.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(575) == \"4\", \"Expected output: 4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(575) == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"000\") == \"1\", \"The condition can be satisfied by repainting the middle tile white.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"000\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"000\") == \"1\"\nassert solution(\"010\") == \"2\"\nassert solution(\"110\") == \"2\"\nassert solution(\"101\") == \"2\"\nassert solution(\"011\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"000\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"111\") == \"2\"\nassert solution(\"110\") == \"1\"\nassert solution(\"101\") == \"2\"\nassert solution(\"011\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"001\") == \"2\"\nassert solution(\"010\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"111\") == \"2\"\nassert solution(\"110\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"111\") == \"2\"\nassert solution(\"011\") == \"2\"\nassert solution(\"101\") == \"1\"\nassert solution(\"110\") == \"2\"\nassert solution(\"001\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"101\") == \"2\"\nassert solution(\"110\") == \"4\"\nassert solution(\"111\") == \"4\"\nassert solution(\"011\") == \"2\"\nassert solution(\"001\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('000') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'APPROVED', 'Incorrect output'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"APPROVED\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n6 7 9 10 31') == 'APPROVED'\nassert solution('3\\n6 7 8 9 31') == 'DENIED'\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"4\\n5 4 6 5 7\") == \"DENIED\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\", \"Test 1 failed\"\nassert solution(\"5\\n2 4 6 8 10\") == \"DENIED\", \"Test 2 failed\"\nassert solution(\"5\\n6 1 3 5 7\") == \"APPROVED\", \"Test 3 failed\"\nassert solution(\"5\\n1 2 3 4 5\") == \"DENIED\", \"Test 4 failed\"\nassert solution(\"5\\n9 11 13 15 17\") == \"DENIED\", \"Test 5 failed\"\nprint(\"All tests passed\")",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'APPROVED'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"1\\n1\") == \"DENIED\"\nassert solution(\"5\\n6 7 8 9 31\") == \"DENIED\"\nassert solution(\"5\\n6 7 8 9 30\") == \"APPROVED\"",
        "num_ids_2": 38,
        "num_ids_4": 84
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"1\\n1\") == \"DENIED\"\nassert solution(\"2\\n2 4\") == \"DENIED\"\nassert solution(\"3\\n1 2 3 4 5\") == \"APPROVED\"\nassert solution(\"4\\n1 2 3 4 5\") == \"DENIED\"\nassert solution(\"5\\n2 4 6 8 10\") == \"APPROVED\"\nassert solution(\"6\\n2 4 6 8 10\") == \"DENIED\"\nassert solution(\"7\\n1 3 5 7 9\") == \"APPROVED\"\nassert solution(\"8\\n1 3 5 7 9\") == \"DENIED\"\nassert solution(\"9\\n1 2 4 5 6 7\") == \"APPROVED\"\nassert solution(\"10\\n1 2 4 5 6 7\") == \"DENIED\"\nassert solution(\"11\\n1 2 4 5 6 7\") == \"APPROVED\"\nassert solution(\"12\\n1 2 4 5 6 7\") == \"DENIED\"\nassert solution(\"13\\n1 2 4 5 6 7\") == \"APPROVED\"\nassert solution(\"14\\n1 2 4 5 6 7\") == \"DENIED\"\nassert solution(\"15\\n1 2 4 5 6 7\") == \"APPROVED\"\nassert solution(\"16\\n1 2 4 5 6 7\") == \"DENIED\"\nassert solution(\"17\\n1 2 4 5 6 7\") == \"APPROVED\"\nassert solution(\"18\\n1 2 4 5 6 7\") == \"DENIED\"\nassert solution(\"19\\n1 2 4 5 6 7\") == \"APPROVED\"\nassert solution(\"20\\n1 2 4 5 6 7\") == \"DENIED\"\nassert solution(\"21\\n1 2 4 5 6 7\") == \"APPROVED\"\nassert solution(\"22\\n1 2 4 5 6 7\") == \"DENIED\"\nassert solution(\"23\\n1 2 4 5 6 7\") == \"APPROVED\"\nassert solution(\"24\\n1 2 4 5 6 7\") == \"DENIED\"\nassert solution(\"25\\n1 2 4 5 6 7\") == \"APPROVED\"\nassert solution(\"26\\n1 2 4 5 6 7\") == \"DENIED\"\nassert solution(\"27\\n1 2 4 5 6 7\") == \"APPROVED\"\nassert solution(\"28\\n1 2 4 5 6 7\") == \"DENIED\"\nassert solution(\"29\\n1 2 4 5 6 7\") == \"APPROVED\"\nassert solution(\"30\\n1 2 4 5 6 7\") == \"DENIED\"\nassert solution(\"31\\n1 2 4 5 6 7\") == \"APPROVED\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"10\\n11 12 13 14 15\") == \"APPROVED\"\nassert solution(\"5\\n6 7 9 10 29\") == \"DENIED\"\nassert solution(\"10\\n11 12 13 14 15\") == \"DENIED\"\nassert solution(\"1\\n2 3 4 5 6\") == \"DENIED\"\nassert solution(\"5\\n6 7 8 9 10\") == \"DENIED\"\nassert solution(\"5\\n6 7 9 10 11\") == \"APPROVED\"\nassert solution(\"5\\n6 7 8 9 10\") == \"APPROVED\"\nassert solution(\"10\\n11 12 13 14 15\") == \"DENIED\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RDLDRD\") == \"No\"\nassert solution(\"RDUDLRU\") == \"Yes\"\nassert solution(\"LURUDRL\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('RUDLUDR') == 'Yes'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\", \"The solution is not correct.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RRDLUD\") == \"No\"\nassert solution(\"UDLR\") == \"No\"\nassert solution(\"RUD\") == \"No\"\nassert solution(\"LUDRU\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('UDLRDUD') == 'No'\nassert solution('DUDUUUD') == 'No'\nassert solution('RRDUDRD') == 'No'\nassert solution('ULRDUDR') == 'Yes'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"RUDLUDR\") == \"Yes\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"TADLUD\") == \"No\"\nassert solution(\"RRUDRUR\") == \"No\"\nassert solution(\"DUDUDU\") == \"Yes\"\nassert solution(\"DRDUDR\") == \"Yes\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('RUDLUDR') == 'Yes'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RUDLUDD\") == \"No\"\nassert solution(\"RUUDLLD\") == \"No\"\nassert solution(\"RRDRULDU\") == \"Yes\"\nassert solution(\"LLDRURUD\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='5\\n3\\n2\\n4\\n3\\n5\\n') == '7\\n'\nassert solution(stdin='1\\n') == '1\\n'\nassert solution(stdin='5\\n1\\n1\\n2\\n2\\n') == '30\\n'",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=None) == \"7\\n\"  # expected output: \"7\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '7', \"The minimum time required for all of the people to reach City 6, in minutes, is incorrect.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='5\\n3\\n2\\n4\\n3\\n5\\n') == '7'\nprint('All tests passed!')",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == output_string, \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\") == \"10\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n6\\n6\\n6\\n6\") == \"60\"",
        "num_ids_2": 57,
        "num_ids_4": 95
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed. Expected output: {expected_output}, but got: {solution(input_data)}\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"7\" # expected output",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"2\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"25\"\nassert solution(\"1000\") == \"11773034689\"\nassert solution(\"10000\") == \"135586226860\"\nassert solution(\"1000000\") == \"15992319825266189\"",
        "num_ids_2": 22,
        "num_ids_4": 70
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"10\"\nassert solution(\"10\") == \"3125\"\nassert solution(\"1000000000\") == \"9316000007\"",
        "num_ids_2": 21,
        "num_ids_4": 63
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20\") == \"23\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20\") == \"23\", \"Test failed. Solution should return '23', but it returns '{}'\".format(solution(\"20\"))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"23\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20\") == \"23\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"20\") == \"23\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(20) == '23'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20\") == \"23\", \"The minimum prime number greater than or equal to 20 is 23\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"X: \")) == \"23\", \"The minimum prime number greater than or equal to {} is {}\".format(input(\"X: \"), solution(input(\"X: \")))",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter the value of X: \")) == \"23\", \"Test Failed\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"23\\n\", \"Expected Output: 23, Actual Output: \" + solution(stdin)",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"2\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"3\\n\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10\") == \"3\\n\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"4\\n\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"4\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 103
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"4\\n1 2 3 4\") == \"2\"\nassert solution(\"4\\n1 1 2 2\") == \"1\"\nassert solution(\"4\\n1 1 1 2\") == \"1\"\nassert solution(\"4\\n2 2 2 3\") == \"1\"\nassert solution(\"4\\n3 3 3 3\") == \"1\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 1 3 2\") == \"1\"\nassert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"2\\n3 1 3\\n2\") == \"2\"\nassert solution(\"2\\n3 1 3 2\\n4\") == \"2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 1 3 2\") == \"1\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 1 3 2\") == \"1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1\\n', \"Testcase 1 failed\"\n\nn = int(input())\nv = list(map(int, input().split()))",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n3 1 3 2\\n') == '1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\\n\"\nassert solution(\"3\\n2 2 1\") == \"2\\n\"\nassert solution(\"2\\n1 2\") == \"1\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 57
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 1 3 2\\n\") == \"1\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"1\\n2\") == \"0\"\nassert solution(\"2\\n2\") == \"1\"\nassert solution(\"4\\n1 2 3 4\") == \"3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n') == '23'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n100\\n90\\n80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n100\\n90\\n80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n98\\n40\\n30\\n21\\n80\\n100\\n90\\n80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 279
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\\n\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\\n\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\\n\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\\n\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\\n\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\\n\") == \"23\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 182
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nprint(\"All tests passed.\")",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"23\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"2\n    ABCXYZ\n    \"\"\"\n) == \"CDEZAB\"\n\nassert solution(\n    \"\"\"3\n    ABCABC\n    \"\"\"\n) == \"BCABCZ\"\n\nassert solution(\n    \"\"\"4\n    ABBC\n    \"\"\"\n) == \"BACB\"\n\nassert solution(\n    \"\"\"5\n    A\n    \"\"\"\n) == \"A\"\n\nassert solution(\n    \"\"\"6\n    Z\n    \"\"\"\n) == \"Z\"\n\nassert solution(\n    \"\"\"7\n    AAAABBB\n    \"\"\"\n) == \"BBZAAAB\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"3\\nABCXYZ\") == \"BEDCAF\"\nassert solution(\"4\\nABCXYZ\") == \"ABCDGH\"\nassert solution(\"5\\nABCXYZ\") == \"GHRABD\"\nassert solution(\"6\\nABCXYZ\") == \"ADGHKL\"",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"CDEZAB\", \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == \"CDEZAB\"\nprint(\"All test cases passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"CDEZAB\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\nABCXYZ') == 'CDEZAB', \"The function should return 'CDEZAB' for given input.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'CDEZAB', \"Test case failed\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"4\\n12345\") == \"45321\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\") == \"3 4 2 \"\nassert solution(\"1\\n2750131 199999\") == \"199999\"\nassert solution(\"1\\n3 6\") == \"6\"\n",
        "num_ids_2": 58,
        "num_ids_4": 73
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '3 4 2 '\nassert solution(1) == '199999'\nassert solution(1) == '199999'",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2750131 199999\\n1\\n3 6\") == \"199999 6\"\n\nassert solution(\"3\\n3 5 2 3 2 4\") == \"3 4 2\"\n\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10\\n2 3 4 5 6 7 8 9 10\") == \"1 2 3 4 5 6 7 8 9 10\"",
        "num_ids_2": 68,
        "num_ids_4": 139
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\") == \"3 4 2 \"\nassert solution(\"1\\n2750131 199999\") == \"199999 \"\nassert solution(\"1\\n3 6\") == \"6 \"\n",
        "num_ids_2": 58,
        "num_ids_4": 73
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\\n\") == \"3 4 2 \\n\"\nassert solution(\"1\\n2750131 199999\\n\") == \"199999 \\n\"\nassert solution(\"1\\n3 6\\n\") == \"6\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 85
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\") == \"3 4 2 \"\nassert solution(\"1\\n2750131 199999\") == \"199999\"\nassert solution(\"1\\n3 6\") == \"6\"",
        "num_ids_2": 58,
        "num_ids_4": 73
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3 4 2 \"\nassert solution(1) == \"199999 199999\"\nassert solution(1) == \"6\"",
        "num_ids_2": 36,
        "num_ids_4": 46
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\") == \"3 4 2 \"\nassert solution(\"1\\n2750131 199999\") == \"199999 \"\nassert solution(\"1\\n3 6\") == \"6\"",
        "num_ids_2": 58,
        "num_ids_4": 73
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\") == \"3 4 2 \"\nassert solution(\"1\\n2750131 199999\") == \"199999 \"\nassert solution(\"1\\n3 6\") == \"6\"",
        "num_ids_2": 58,
        "num_ids_4": 73
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == 1\nprint(\"All tests passed\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed: {solution(input1)}\"\nassert solution(input2) == output2, f\"Test 2 failed: {solution(input2)}\"\nassert solution(input3) == output3, f\"Test 3 failed: {solution(input3)}\"\nassert solution(input4) == output4, f\"Test 4 failed: {solution(input4)}\"\nassert solution(input5) == output5, f\"Test 5 failed: {solution(input5)}\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected_output, f\"Incorrect output: {solution(input)}, expected {expected_output}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\nassert solution('5 1\\n2 4 5 3 1') == '21112'",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\\n\") == \"11111\\n\"\nassert solution(\"5 1\\n2 1 3 5 4\\n\") == \"22111\\n\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\\n\") == \"1121122\\n\"\nassert solution(\"5 1\\n2 4 5 3 1\\n\") == \"21112\\n\"\nassert solution(\"10 2\\n1 2 3 4 5 6 7 8 9\\n\") == \"0000000100000001110011111000000011001111100000000011001111100000000000111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 62,
        "num_ids_4": 130
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\\n\") == \"11111\\n\"\nassert solution(\"5 1\\n2 1 3 5 4\\n\") == \"22111\\n\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\\n\") == \"1121122\\n\"\nassert solution(\"5 1\\n2 4 5 3 1\\n\") == \"21112\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 130
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 11111\nassert solution == 22111\nassert solution == 1121122\nassert solution == 21112",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 1 2 3\\n2\\n100 1\\n4\\n1 3 3 7\") == \"2\"\nassert solution(\"2\\n100 1\\n4\\n1 3 3 7\") == \"2\"\nassert solution(\"4\\n1 3 3 7\") == \"4\"",
        "num_ids_2": 72,
        "num_ids_4": 91
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 1 2 3\\n2\\n100 1\\n4\\n1 3 3 7\\n2') == 2\nassert solution('2\\n100 1\\n4\\n1 3 3 7\\n2') == 2\nassert solution('4\\n1 3 3 7\\n2') == 4\nassert solution('5\\n1 2 1 2 3\\n2\\n100 1\\n4\\n1 3 3 7\\n2') == 2\nassert solution('4\\n1 3 3 7\\n2') == 4\nprint(solution('1\\n1\\n1\\n1\\n1')) # 2\nprint(solution('1000000000\\n1000000000')) # 2\nprint(solution('1\\n1\\n1\\n1\\n1')) # 2",
        "num_ids_2": 76,
        "num_ids_4": 142
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 2\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(4) == 4\nassert solution(5) == 4",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 1 2 3\\n\") == 2\nassert solution(\"2\\n100 1\\n\") == 2\nassert solution(\"4\\n1 3 3 7\\n\") == 4",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 1 2 3\\n\") == \"2\"\nassert solution(\"2\\n100 1\\n\") == \"2\"\nassert solution(\"4\\n1 3 3 7\\n\") == \"4\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([1, 2, 1, 2, 3]) == 2\nassert solution([100, 1]) == 2\nassert solution([1, 3, 3, 7]) == 4\n\nfrom collections import Counter",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Got '{solution(input())}', expected '{expected_output}'\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_solution, f\"The solution is incorrect. Expected {expected_solution}, got {solution}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1, 2, 1, 2, 3]) == 2\nassert solution([100, 1]) == 2\nassert solution([1, 3, 3, 7]) == 4\n",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 2\nassert solution(4) == 4\nassert solution(5) == 2\nassert solution(7) == 4\nassert solution(10) == 2\nassert solution(100) == 2",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"1\\n16\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 88
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"1\\n16\\n\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1023\\n\") == \"0\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 96
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"1\\n16\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 88
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"1\\n16\") == \"1\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"1\\n16\\n\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1023\\n\") == \"0\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 96
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"1\\n16\") == \"1\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '2'\nassert solution('1') == '1'\nassert solution('4') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"1\"\nassert solution(5) == \"2\"\nassert solution(16) == \"1\"\nassert solution(4) == \"0\"\n\nassert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"2\"\nassert solution(4) == \"2\"\nassert solution(5) == \"2\"\nassert solution(6) == \"3\"\nassert solution(7) == \"3\"\nassert solution(8) == \"4\"\nassert solution(9) == \"4\"\nassert solution(10) == \"4\"\nassert solution(11) == \"4\"\nassert solution(12) == \"4\"\nassert solution(13) == \"4\"\nassert solution(14) == \"4\"\nassert solution(15) == \"4\"\nassert solution(16) == \"4\"\nassert solution(17) == \"4\"\nassert solution(18) == \"5\"\nassert solution(19) == \"5\"\nassert solution(20) == \"5\"\nassert solution(21) == \"5\"\nassert solution(22) == \"5\"\nassert solution(23) == \"5\"\nassert solution(24) == \"5\"\nassert solution(25) == \"5\"\nassert solution(26) == \"5\"\nassert solution(27) == \"5\"\nassert solution(28) == \"5\"\nassert solution(29) == \"5\"\nassert solution(30) == \"5\"\nassert solution(31) == \"5\"\nassert solution(32) == \"5\"\nassert solution(33) == \"5\"\nassert solution(34) == \"5\"\nassert solution(35) == \"5\"\nassert solution(36) == \"5\"\nassert solution(37) == \"5\"\nassert solution(38) == \"5\"\nassert solution(39) == \"5\"\nassert solution(40) == \"5\"\nassert solution(41) == \"5\"\nassert solution(42) == \"5\"\nassert solution(43) == \"5\"\nassert solution(44) == \"5\"\nassert solution(45) == \"5\"\nassert solution(46) == \"5\"\nassert solution(47) == \"5\"\nassert solution(48) == \"5\"\nassert solution(49) == \"5\"\nassert solution(50) == \"5\"\nassert solution(51) == \"5\"\nassert solution(52) == \"5\"\nassert solution(53) == \"5\"\nassert solution(54) == \"5\"\nassert solution(55) == \"5\"\nassert solution(56) == \"5\"\nassert solution(57) == \"5\"\nassert solution(58) == \"5\"\nassert solution(59) == \"5\"\nassert solution(60) == \"5\"\nassert solution(61) == \"5\"\nassert solution(62) == \"5\"\nassert solution(63) == \"5\"\nassert solution(64) == \"5\"\nassert solution(65) == \"5\"\nassert solution(66) == \"5\"\nassert solution(67) == \"5\"\nassert solution(68) == \"5\"\nassert solution(69) == \"5\"\nassert solution(70) == \"5\"\nassert solution(71) == \"5\"\nassert solution(72) == \"5\"\nassert solution(73) == \"5\"\nassert solution(74) == \"5\"\nassert solution(75) == \"5\"\nassert solution(76) == \"5\"\nassert solution(77) == \"5\"\nassert solution(78) == \"5\"\nassert solution(79) == \"5\"\nassert solution(80) == \"5\"\nassert solution(81) == \"5\"\nassert solution(82) == \"5\"\nassert solution(83) == \"5\"\nassert solution(84) == \"5\"\nassert solution(85) == \"5\"\nassert solution(86) == \"5\"\nassert solution(87) == \"5\"\nassert solution(88) == \"5\"\nassert solution(89) == \"5\"\nassert solution(90) == \"5\"\nassert solution(",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == 0\nassert solution(\"6\") == 0",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0011\") == \"4\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0011\") == \"4\\n\", \"Sample Input\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1111\") == \"4\"\nassert solution(\"0000\") == \"0\"\nassert solution(\"0001\") == \"0\"\nassert solution(\"0100\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0011') == '4', \"Test Failed\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0011') == '4', \"Test failed for input '0011'.\"\nprint(\"Test passed.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0011\") == \"4\", \"Incorrect output. Expected '4', got '{}'\".format(solution(\"0011\"))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0011\") == \"4\", \"Test Case 1 Failed\"\nassert solution(\"1010\") == \"3\", \"Test Case 2 Failed\"\nassert solution(\"1110\") == \"0\", \"Test Case 3 Failed\"\nassert solution(\"1001\") == \"3\", \"Test Case 4 Failed\"\nassert solution(\"0111\") == \"1\", \"Test Case 5 Failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0011\") == \"4\", \"Test failed\"\nassert solution(\"1011\") == \"4\", \"Test failed\"\nassert solution(\"1010\") == \"2\", \"Test failed\"\nassert solution(\"1101\") == \"5\", \"Test failed\"\nassert solution(\"0101\") == \"3\", \"Test failed\"\nassert solution(\"0011\") == \"4\", \"Test failed\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '4\\n', \"The solution should return the expected output.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0011\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 2\\n1 2\\n2 1\\n\") == \"1\"\nassert solution(\"4 2\\n1 1\\n1 2\\n\") == \"2\"\nassert solution(\"4 2\\n1 1\\n2 2\\n\") == \"3\"\nassert solution(\"4 2\\n1 2\\n1 3\\n\") == \"2\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\"\nprint(\"Test Passed\")\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"6 4\\n2 5\\n3 6\\n1 7\\n\") == \"2\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n\") == \"4\"\nassert solution(\"1 3\\n2 4\\n3 5\\n\") == \"1\"",
        "num_ids_2": 53,
        "num_ids_4": 106
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"2\\n\", \"Sample Output\"\n\nN, M = map(int, input().split())\ngates = list(map(int, input().split()))\n\npassable = []\nfor i in range(1, N+1):\n    for j in range(i+1, N+1):\n        for k in range(j+1, N+1):\n            for l in range(k+1, N+1):\n                if (i, j, k, l) in gates:\n                    passable.append((i, j, k, l))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"4 2\\n1 3\\n2 4\\n5 6\\n\") == \"4\\n\"\nassert solution(\"4 2\\n1 3\\n2 4\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 2\\n1 3\\n2 4\\n1 5\\n6 7\\n\") == \"0\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 124
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"3 3\\n1 2\\n2 1\\n2 1\") == \"1\"\nassert solution(\"2 3\\n1 1\\n2 2\\n3 3\") == \"0\"\nassert solution(\"2 1\\n2 1\\n2 1\\n1 1\") == \"2\"\nassert solution(\"2 2\\n2 2\\n2 2\\n2 2\") == \"1\"",
        "num_ids_2": 49,
        "num_ids_4": 103
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 3\\n2 4') == '2\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2\\n', \"Test case 1 failed\"\n\nassert solution(input()) == '1\\n', \"Test case 2 failed\"\n\nassert solution(input()) == '2\\n', \"Test case 3 failed\"\n\nassert solution(input()) == '1\\n', \"Test case 4 failed\"\n\nassert solution(input()) == '0\\n', \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 2 1') == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\"\nassert solution(\"4\\n1 2 2 1\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 54
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 2 1') == '2'\nassert solution('5\\n1 2 2 1 3') == '3'\nassert solution('5\\n1 2 2 1 3 3') == '3'\nassert solution('5\\n1 2 2 1 3 4 4') == '3'\nassert solution('5\\n1 2 2 1 3 4 5 5') == '4'",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\nassert solution(\"4\\n1 2 2 1\") == \"2\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(example_input) == example_output, f\"The solution for the given examples is not correct. Expected: {example_output}, Received: {solution(example_input)}\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n2 1 -3\\n\") == \"3\\n\"\nassert solution(\"2 4\\n-1 1\\n\") == \"4\\n\"\nassert solution(\"4 10\\n2 4 1 2\\n\") == \"2\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 71
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n2 1 -3\") == \"3\"\nassert solution(\"2 4\\n-1 1\") == \"4\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\"\nassert solution(\"2 3\\n-1 2 -1\") == \"1\"\nassert solution(\"3 2\\n2 1 2\") == \"2\"\nassert solution(\"3 2\\n2 1 2\") == \"2\"\nassert solution(\"3 1\\n2 1 2\") == \"0\"\nassert solution(\"2 1\\n2 1 2\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 1\\n1 1 1\") == \"",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 3, \"Your solution is incorrect. The correct output is 3.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Test failed for input {input}, expected output {output}, got {solution(input)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 5\n    2 1 -3\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    2 4\n    -1 1\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n    4 10\n    2 4 1 2\n    \"\"\"\n) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n2 1 -3\") == \"3\\n\"\nassert solution(\"2 4\\n-1 1\") == \"4\\n\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('test_input.txt', 'r').read()) == 3\nassert solution(open('test_input2.txt', 'r').read()) == 4\nassert solution(open('test_input3.txt', 'r').read()) == 2",
        "num_ids_2": 41,
        "num_ids_4": 62
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n\"\n\nassert solution(\"3 5\\n2 1 -3\\n\") == \"3\\n\"\n\nassert solution(\"2 4\\n-1 1\\n\") == \"4\\n\"\n\nassert solution(\"4 10\\n2 4 1 2\\n\") == \"2\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 81
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9 3 6 12 4 8\"\nassert solution(input()) == \"126 42 84 28\"\nassert solution(input()) == \"3000000000000000000 10000000000000000000\"",
        "num_ids_2": 42,
        "num_ids_4": 91
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\\n\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\\n\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\\n\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 74,
        "num_ids_4": 165
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"\n",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\\n\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\\n\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\\n\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 74,
        "num_ids_4": 165
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8 \\n\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28 \\n\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000 \\n\"\n",
        "num_ids_2": 74,
        "num_ids_4": 165
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The output is not as expected. \\nInput: {input()}\\nExpected Output: {expected_output}\\nOutput: {solution(input())}\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 8 6 3 12 9\") == \"9 3 6 12 4 8\", \"Polycarp's game not matching\"\nassert solution(\"4\") == \"4 4 4 4\", \"One element sequence not matching\"\nassert solution(\"2 1000000000000000000\") == \"1000000000000000000 2 1000000000000000000\", \"One element sequence not matching\"",
        "num_ids_2": 64,
        "num_ids_4": 141
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    6\n    3 5 4 7 10 12\n    5\n        -1 2 5 8 11''') == '''\n    1\n    8'''\n\nassert solution('''\n    5\n        -1 2 5 8 11''') == '''\n    1\n    8'''\n\nassert solution('''\n    6\n    3 5 4 7 10 12\n    5\n        -1 2 5 8 11''') == '''\n    3\n    7 3 5'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"3\"\nprint(solution(5))  # Output: 3\nprint(solution(5))  # Output: 8",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == '''\n3\n7 3 5\n'''\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\\n7 3 5\\n1\\n8\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n5 4 7 10 12\\n') == '3\\n7 3 5\\n'\nassert solution('5\\n-1 2 5 8 11\\n') == '1\\n8\\n'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n3 5 4 7 10 12\") == \"3\\n7 3 5\\n\"\nassert solution(\"5\\n-1 2 5 8 11\") == \"1\\n8\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n4\\n7\\n10\\n12\\n\") == \"3\\n7 3 5\\n\"\nassert solution(\"5\\n-1\\n2\\n5\\n8\\n11\\n\") == \"1\\n8\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output does not match the expected output. \\nInput: {input()}, \\nExpected output: {expected_output}\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter A B K: \")) == \"0 2\"\n\nimport sys\n\nA = int(input())\nB = int(input())\nK = int(input())\n\ncookies_taken = 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Output does not match the expected output.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 3\") == \"0 2\", \"The solution should return '0 2'\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '0 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"103\") == \"3\", \"Expected output: 3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"103\") == \"3\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"103\") == \"3\\n\"\nassert solution(\"50\") == \"1\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n\" # Takahashi's balance reaches 103 yen or above for the first time.\nprint(\"All tests passed!\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"103\") == \"3\", \"Test case 1 failed.\"\n\nsolution(\"103\")\nassert solution(\"104\") == \"3\", \"Test case 2 failed.\"\n\nsolution(\"104\")\nassert solution(\"105\") == \"3\", \"Test case 3 failed.\"\n\nsolution(\"105\")\nassert solution(\"106\") == \"4\", \"Test case 4 failed.\"\n\nsolution(\"106\")\nassert solution(\"107\") == \"4\", \"Test case 5 failed.\"\n\nsolution(\"107\")",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\nassert solution(3) == \"3\"\nassert solution(1000000000) == \"3\"\nassert solution(1000000001) == \"4\"\nassert solution(1000000002) == \"4\"\nassert solution(1000000003) == \"4\"\nassert solution(1000000004) == \"5\"\nassert solution(1000000005) == \"5\"\nassert solution(1000000006) == \"5\"\nassert solution(1000000007) == \"5\"\nassert solution(1000000008) == \"5\"\nassert solution(1000000009) == \"5\"\nassert solution(1000000010) == \"5\"\nassert solution(1000000011) == \"6\"\nassert solution(1000000012) == \"6\"\nassert solution(1000000013) == \"6\"\nassert solution(1000000014) == \"6\"\nassert solution(1000000015) == \"6\"\nassert solution(1000000016) == \"6\"\nassert solution(1000000017) == \"6\"\nassert solution(1000000018) == \"6\"\nassert solution(1000000019) == \"6\"\nassert solution(1000000020) == \"6\"\nassert solution(1000000021) == \"6\"\nassert solution(1000000022) == \"6\"\nassert solution(1000000023) == \"6\"\nassert solution(1000000024) == \"6\"\nassert solution(1000000025) == \"6\"\nassert solution(1000000026) == \"6\"\nassert solution(1000000027) == \"6\"\nassert solution(1000000028) == \"6\"\nassert solution(1000000029) == \"6\"\nassert solution(1000000030) == \"6\"\nassert solution(1000000031) == \"6\"\nassert solution(1000000032) == \"6\"\nassert solution(1000000033) == \"6\"\nassert solution(1000000034) == \"6\"\nassert solution(1000000035) == \"6\"\nassert solution(1000000036) == \"6\"\nassert solution(1000000037) == \"6\"\nassert solution(1000000038) == \"6\"\nassert solution(1000000039) == \"6\"\nassert solution(1000000040) == \"6\"\nassert solution(1000000041) == \"6\"\nassert solution(1000000042) == \"6\"\nassert solution(1000000043) == \"6\"\nassert solution(1000000044) == \"6\"\nassert solution(1000000045) == \"6\"\nassert solution(1000000046) == \"6\"\nassert solution(1000000047) == \"6\"\nassert solution(1000000048) == \"6\"\nassert solution(1000000049) == \"6\"\nassert solution(1000000050) == \"6\"\nassert solution(1000000051) == \"6\"\nassert solution(1000000052) == \"6\"\n",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '3\\n' # Replace this with your actual solution\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"103\") == \"3\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='103') == '3'\nprint('All test cases passed!')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"9\\n\", \"Test case 1 failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='2') == '9'\nassert solution(stdin='3') == '16'\nassert solution(stdin='10') == '216'\nassert solution(stdin='1') == '9'\nassert solution(stdin='200') == '19216'",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n\") == \"9\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"9\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"9\"\nprint(\"All tests passed.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n\") == \"9\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2\\n\") == \"9\"\nassert solution(stdin=\"3\\n\") == \"9\"\nassert solution(stdin=\"4\\n\") == \"12\"\nassert solution(stdin=\"5\\n\") == \"12\"\nassert solution(stdin=\"6\\n\") == \"24\"\nassert solution(stdin=\"7\\n\") == \"24\"\nassert solution(stdin=\"8\\n\") == \"36\"\nassert solution(stdin=\"9\\n\") == \"36\"\nassert solution(stdin=\"10\\n\") == \"48\"\nassert solution(stdin=\"11\\n\") == \"48\"\nassert solution(stdin=\"12\\n\") == \"60\"\nassert solution(stdin=\"13\\n\") == \"60\"\nassert solution(stdin=\"14\\n\") == \"72\"\nassert solution(stdin=\"15\\n\") == \"72\"\nassert solution(stdin=\"16\\n\") == \"84\"\nassert solution(stdin=\"17\\n\") == \"84\"\nassert solution(stdin=\"18\\n\") == \"96\"\nassert solution(stdin=\"19\\n\") == \"96\"\nassert solution(stdin=\"20\\n\") == \"108\"\nassert solution(stdin=\"21\\n\") == \"108\"\nassert solution(stdin=\"22\\n\") == \"120\"\nassert solution(stdin=\"23\\n\") == \"120\"\nassert solution(stdin=\"24\\n\") == \"132\"\nassert solution(stdin=\"25\\n\") == \"132\"\nassert solution(stdin=\"26\\n\") == \"144\"\nassert solution(stdin=\"27\\n\") == \"144\"\nassert solution(stdin=\"28\\n\") == \"156\"\nassert solution(stdin=\"29\\n\") == \"156\"\nassert solution(stdin=\"30\\n\") == \"168\"\nassert solution(stdin=\"31\\n\") == \"168\"\nassert solution(stdin=\"32\\n\") == \"180\"\nassert solution(stdin=\"33\\n\") == \"180\"\nassert solution(stdin=\"34\\n\") == \"192\"\nassert solution(stdin=\"35\\n\") == \"192\"\nassert solution(stdin=\"36\\n\") == \"204\"\nassert solution(stdin=\"37\\n\") == \"204\"\nassert solution(stdin=\"38\\n\") == \"216\"\nassert solution(stdin=\"39\\n\") == \"216\"\nassert solution(stdin=\"40\\n\") == \"228\"\nassert solution(stdin=\"41\\n\") == \"228\"\nassert solution(stdin=\"42\\n\") == \"240\"\nassert solution(stdin=\"43\\n\") == \"240\"\nassert solution(stdin=\"44\\n\") == \"252\"\nassert solution(stdin=\"45\\n\") == \"252\"\nassert solution(stdin=\"46\\n\") == \"264\"\nassert solution(stdin=\"47\\n\") == \"264\"\nassert solution(stdin=\"48\\n\") == \"276\"\nassert solution(stdin=\"49\\n\") == \"276\"\nassert solution(stdin=\"50\\n\") == \"288\"\nassert solution(stdin=\"51\\n\") == \"288\"\nassert solution(stdin=\"52\\n\") == \"300\"\nassert solution(stdin=\"53\\n\") == \"300\"\nassert solution(stdin=\"54\\n\") == \"312\"\nassert solution(stdin=\"55\\n\") == \"312\"\nassert solution(stdin=\"56\\n\") == \"324\"\nassert solution(stdin=\"57\\n\") == \"324\"\nassert solution(stdin=\"58\\n\") == \"336\"\nassert solution(stdin=\"59\\n\") == \"336\"\nassert solution(stdin=\"60\\n\") == \"348\"\nassert solution(stdin=\"61\\n\") == \"348\"\nassert solution(stdin=\"62\\n\") == \"360\"\nassert solution(stdin=\"63\\n\") == \"360\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2') == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2\\n\") == \"9\\n\", \"Test failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2') == '9\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\"\nprint(\"All test cases passed\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '10\\n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '10\\n'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\\n\", \"Test Failed\"\nassert solution(\"5\\na\\nb\\nc\\nd\\ne\") == \"10\\n\", \"Test Failed\"\nassert solution(\"4\\n2\\n3\\n5\") == \"5\\n\", \"Test Failed\"\nassert solution(\"1\\n2\\n3\\n4\") == \"4\\n\", \"Test Failed\"\n\nfrom typing import List",
        "num_ids_2": 51,
        "num_ids_4": 101
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\\n\", \"Incorrect output\"\nassert solution(\"10\\n\") == \"10\\n\", \"Incorrect output\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"10\\n\", \"Incorrect output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"10\", \"The maximum value of f is 10.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\", \"Test Failed\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\\n\"\nassert solution(\"3\\n1 2\\n6 6\\n4 4\\n3 3\") == \"No\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 1\") == \"No\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 1\\n3 1\") == \"No\"",
        "num_ids_2": 75,
        "num_ids_4": 120
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n') == 'Yes'\nassert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n6 6\\n') == 'Yes'\nassert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n4 4\\n') == 'No'",
        "num_ids_2": 74,
        "num_ids_4": 111
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n2 2\") == \"No\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n2 2\\n2 2\\n2 2\") == \"No\"",
        "num_ids_2": 70,
        "num_ids_4": 115
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '4\\n', 'The solution should return 4.'\nassert solution(input()) == '4\\n', 'The solution should return 4.'\nassert solution(input()) == '4\\n', 'The solution should return 4.'\nassert solution(input()) == '4\\n', 'The solution should return 4.'\nassert solution(input()) == '4\\n', 'The solution should return 4.'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n\") == \"4\\n\"  # correct solution\nassert solution(\"5\\n\") == \"4\\n\"  # incorrect solution\nassert solution(\"a\\n\") == \"4\\n\"  # incorrect solution\nassert solution(\"500\\n\") == \"4\\n\"  # incorrect solution",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2') == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '4'\nassert solution(input()) == '4.0'\nassert solution(input()) == '4.5'\nassert solution(input()) == '5'\nassert solution(input()) == '5.0'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == 4\nassert solution(\"1\") == 4\nassert solution(\"10\") == 12\nassert solution(\"-1\") == 4\nassert solution(\"0\") == 0",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 4, \"Solution should return 4\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 4\nassert solution(5) == 10\nassert solution(10) == 40\nassert solution(15) == 90\nassert solution(20) == 160\n\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\\n\"\nassert solution(\"2\\n1 2 3 4 5\") == \"No\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"No\\n\"\nassert solution(\"3\\n3 4 5 6 7\") == \"Yes\\n\"\nassert solution(\"6\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\") == \"No\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 8 5 1\\n\") == \"Yes\\n\"\nassert solution(\"5\\n1 1 1 1\\n\") == \"No\\n\"\nassert solution(\"1\\n2 4 6 8\\n\") == \"Yes\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"\nassert solution(\"5\\n3 8 5 1\") == \"Yes\"\nassert solution(\"4\\n3 1 5 1\") == \"No\"\nassert solution(\"5\\n3 1 5 1\") == \"No\"\nassert solution(\"4\\n3 8 5 8\") == \"No\"\nassert solution(\"5\\n3 8 5 8\") == \"No\"\nassert solution(\"4\\n3 1 5 1\") == \"Yes\"\nassert solution(\"5\\n3 1 5 1\") == \"Yes\"\nassert solution(\"4\\n3 8 5 1\") == \"No\"\nassert solution(\"5\\n3 8 5 1\") == \"No\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes\\n', \"Test Failed\"\nassert solution('4\\n3 8 10 1') == 'No\\n', \"Test Failed\"\nassert solution('4\\n3 10 1 10') == 'No\\n', \"Test Failed\"\nassert solution('4\\n3 5 5 1') == 'Yes\\n', \"Test Failed\"",
        "num_ids_2": 51,
        "num_ids_4": 103
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('6\\n3 5 2 9 1\\n4 5 7 8') == 'No'\nassert solution('1\\n2 3 4') == 'No'",
        "num_ids_2": 49,
        "num_ids_4": 66
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'Yes', \"Test failed\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 'Yes'\nassert solution(2) == 'Yes'\nassert solution(1) == 'Yes'\nassert solution(4) == 'No'\nassert solution(5) == 'No'\n\nassert solution(6) == 'No'\nassert solution(7) == 'No'\nassert solution(8) == 'No'\nassert solution(9) == 'No'\n\nassert solution(10) == 'No'\nassert solution(11) == 'No'\nassert solution(12) == 'No'\nassert solution(13) == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n\") == \"702\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"\n\nassert solution(\"3 4\\n1 7\\n3 2\\n1 7\") == \"702\"\n\nassert solution(\"3 4\\n1 8\\n3 2\\n1 7\") == \"702\"\n\nassert solution(\"3 4\\n1 9\\n3 2\\n1 7\") == \"702\"\n\nassert solution(\"3 4\\n1 10\\n3 2\\n1 7\") == \"702\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n\") == \"702\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n\") == \"702\"\nassert solution(\"3 5\\n1 7\\n3 2\\n1 9\\n\") == \"-1\"\nassert solution(\"5 3\\n0 7\\n0 2\\n0 7\\n\") == \"0\"\nassert solution(\"5 3\\n1 0\\n1 0\\n1 0\\n\") == \"1\"\nassert solution(\"5 3\\n9 0\\n9 0\\n9 0\\n\") == \"9\"\nassert solution(\"5 3\\n9 0\\n9 0\\n9 0\\n\") == \"10\"\nassert solution(\"5 3\\n9 0\\n9 0\\n9 0\\n\") == \"10\"\nassert solution(\"5 3\\n9 0\\n9 0\\n9 0\\n\") == \"11\"\nassert solution(\"5 3\\n9 0\\n9 0\\n9 0\\n\") == \"11\"\nassert solution(\"5 3\\n9 0\\n9 0\\n9 0\\n\") == \"12\"",
        "num_ids_2": 60,
        "num_ids_4": 118
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7\\n') == '702\\n'\nassert solution('1 100\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n2 11\\n2 12\\n2 13\\n2 14\\n2 15\\n2 16\\n2 17\\n2 18\\n2 19\\n2 20\\n2 21\\n2 22\\n2 23\\n2 24\\n2 25\\n2 26\\n2 27\\n2 28\\n2 29\\n2 30\\n2 31\\n2 32\\n2 33\\n2 34\\n2 35\\n2 36\\n2 37\\n2 38\\n2 39\\n2 40\\n2 41\\n2 42\\n2 43\\n2 44\\n2 45\\n2 46\\n2 47\\n2 48\\n2 49\\n2 50\\n2 51\\n2 52\\n2 53\\n2 54\\n2 55\\n2 56\\n2 57\\n2 58\\n2 59\\n2 60\\n2 61\\n2 62\\n2 63\\n2 64\\n2 65\\n2 66\\n2 67\\n2 68\\n2 69\\n2 70\\n2 ",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7') == '702\\n'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nassert solution(\"1 0\") == \"-1\"\nassert solution(\"10 0\") == \"-1\"\nassert solution(\"3 3\\n10 0\\n10 0\") == \"-1\"\nassert solution(\"3 3\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0",
        "num_ids_2": 41,
        "num_ids_4": 78
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"702\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"3 3\") == \"9\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1) and (3,3,3) satisfy the condition.\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == '9\\n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2) == \"9\", \"Incorrect output\"\nprint(\"Correct output\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1),(3,3,3) satisfy the condition.\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"9\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1) and (3,3,3) satisfy the condition.\"\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='3 2') == '9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1)\\n(3,3,3)'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1) and (3,3,3) satisfy the condition.\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1) and (3,3,3) satisfy the condition.\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"1011\", \"Test failed for given input.\"\nassert solution(\"0\\n1\\n\") == \"11\", \"Test failed for given input.\"\nassert solution(\"-1\\n\") == \"-1\", \"Test failed for given input.\"\nassert solution(\"1000000000\\n\") == \"1000000000\", \"Test failed for given input.\"\nprint(\"Test passed.\")",
        "num_ids_2": 57,
        "num_ids_4": 113
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1011\", \"Test case failed.\"\nprint(\"Test case passed.\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"-9\") == \"1011\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"-9\") == \"1011\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1011\", \"The solution is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(9) == \"1011\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('-9') == '1011', \"The solution for '-9' is incorrect.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('-9') == '1011'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\") == \"1011\", \"Your solution is not correct.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"-1\") == \"1111\"\nassert solution(\"1234567890\") == \"110110000010110000011100000000101011000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011010010000001110000000000010010000011",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 5\\n4 9\\n2 4') == '12'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"12\\n\", \"Test failed\" # Test failed",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"12\\n\", \"Output must be '12'\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"12\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\\n\") == \"12\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 5\\n4 9\\n2 4') == '12'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '12'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '12'\nprint(\"Test Passed\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 5\\n4 9\\n2 4') == '12'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 5\\n4 9\\n2 4') == '12'\nprint('All tests passed!')",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"\nassert solution(\"5\\n10 3 7 2 6\") == \"1\"\nassert solution(\"5\\n10 10 9 8 7\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 67
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\"\nassert solution(\"1\\n5\") == \"1\\n\"\nassert solution(\"3\\n7\") == \"1\\n\"\nassert solution(\"5\\n4 8 7 3\") == \"3\\n\"\nassert solution
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\"\nassert solution(\"10\\n3 7 8 4 5 9 1 6 2\") == \"2\\n\"\nassert solution(\"1\\n5\") == \"0\\n\"\nassert solution(\"3\\n2 1 4\") == \"0\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 90
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n10 4 8 7 3\\n\") == \"2\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\", \"Expected output: 2\\n, but got: \" + solution(\"5\\n10 4 8 7 3\")",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\", \"The output is not correct\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\", \"Solution must return 2.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"\nassert solution(\"5\\n2 6 7 8 9\") == \"1\"\nassert solution(\"5\\n5 4 3 2 1\") == \"1\"\nassert solution(\"5\\n3 7 5 4 1\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1\\n'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1\\n'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1\nassert solution(1, 2, 2, 4, 5) == 1\nassert solution(1, 2, 3, 4, 5) == 2\nassert solution(1, 2, 3, 3, 3) == 0\n",
        "num_ids_2": 30,
        "num_ids_4": 72
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1\\n'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0\\n'\n\nfrom typing import List",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=r'''\n    5 3\n    1 2 2 4 5\n    \n''') == '1'\n\nassert solution(stdin=r'''\n    5 3\n    1 2 3 4 5\n    \n''') == '2'\n\nassert solution(stdin=r'''\n    5 3\n    1 2 3 3 3\n    \n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2 4 5\\n\") == \"1\"\nassert solution(\"1 2 3 4 5\\n\") == \"2\"\nassert solution(\"1 2 3 3 3\\n\") == \"0\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n\nimport sys\nsys.setrecursionlimit(10**6)",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"output\", \"Test case 1 failed.\"\nassert solution() == \"output\", \"Test case 2 failed.\"\nassert solution() == \"output\", \"Test case 3 failed.\"\nassert solution() == \"output\", \"Test case 4 failed.\"\nassert solution() == \"output\", \"Test case 5 failed.\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2 4 2 3\\n6 5\\n7 5\\n3 3 2 1 1 1 3\\n\") == \"3\\n\"\nassert solution(\"3 3 2 1 1 1 3\\n6 5\\n1 2 2 4 2 3\\n\") == \"4\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'Output', 'Solution is not correct'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 2 4 2 3\") == \"3\"\nassert solution(\"3 3 2 1 1 1 3\") == \"4\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n1 2 2 4 2 3\\n\") == \"3\\n\"\nassert solution(\"7 5\\n3 3 2 1 1 1 3\\n\") == \"4\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 2 4 2 3\") == 3\nassert solution(\"3 3 2 1 1 1 3\") == 4",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n6 5\\n1 2 2 4 2 3\\nOutput\\n3\\n\\nInput\\n7 5\\n3 3 2 1 1 1 3\\nOutput\\n4\") == \"Output\\n3\\n\\nInput\\n7 5\\n3 3 2 1 1 1 3\\nOutput\\n4\\n\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 5\\n1 2 2 4 2 3\\n\\n7 5\\n3 3 2 1 1 1 3\\n\\n') == '3\\n'\nassert solution('5 2\\n1 2 3 4 5\\n\\n5 3\\n1 2 3 4 5\\n\\n') == '4\\n'",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '10\\n9\\n1000\\n42000000000000'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, but got: {solution(stdin)}\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"10\n9\n1000\n42000000000000\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88') == '10\\n9\\n1000\\n42000000000000'",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\\n9\\n1000\\n42000000000000\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"10\\n9\\n1000\\n42000000000000\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"\n10\n9\n1000\n42000000000000\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10\\n9\\n1000\\n42000000000000\"\nprint(\"Success\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\", \"Test case 1\"\nassert solution(\"10001 10000\") == \"1\", \"Test case 2\"\nassert solution(\"3 6\\n1 2 3 4 5\") == \"2\", \"Test case 3\"\nassert solution(\"1 1 1 1 1\") == \"1\", \"Test case 4\"\nassert solution(\"1 2 3 4 5\") == \"1\", \"Test case 5\"",
        "num_ids_2": 51,
        "num_ids_4": 104
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\\n\", \"Test failed for solution\"\nprint(\"Test passed for solution\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\\n\", \"Testcase 1 failed\"\nassert solution(\"5 10\\n3 4 5 6 7 8\") == \"1\\n\", \"Testcase 2 failed\"\nassert solution(\"3 6\\n1 2 3\") == \"0\\n\", \"Testcase 3 failed\"\nassert solution(\"1 1\") == \"0\\n\", \"Testcase 4 failed\"\nassert solution(\"10 100\") == \"0\\n\", \"Testcase 5 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 63,
        "num_ids_4": 112
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 200\") == \"0\"",
        "num_ids_2": 32,
        "num_ids_4": 56
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 6, 3, 4, 5) == \"2\", \"Your solution is incorrect\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\n3 4 5\\n\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\"\nassert solution(\"5 6\\n2 3 4 5\") == \"1\"\nassert solution(\"7 6\\n2 3 4 5\") == \"1\"\nassert solution(\"12 6\\n2 3 4 5\") == \"1\"\nassert solution(\"1 6\\n2 3 4 5\") == \"0\"\nassert solution(\"101 6\\n2 3 4 5\") == \"0\"",
        "num_ids_2": 40,
        "num_ids_4": 83
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\"\nassert solution(\"3 6\\n3 7 9\") == \"0\"\nassert solution(\"3 6\\n1 2 3\") == \"1\"\nassert solution(\"3 6\\n4 5 6\") == \"2\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\n3 4 5\\n\") == \"2\\n\"\nassert solution(\"1 5\\n2 3 4 5 6\\n\") == \"3\\n\"\nassert solution(\"10001 10000\\n\") == \"5\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 74
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\", \"Output should be 2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhge\\nenigma\\n') == 'No'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yes\", \"Your code is not correct. Please check and try again.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"No\"\nassert solution(\"3\\nhello\\nworld\\nhello\\nworld\\n\") == \"Yes\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"No\"\nassert solution(\"5\\n1234\\nqwerty\\nxyz\\nuvwxyz\\n\") == \"Yes\"\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes', 'Incorrect output'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\nhoge\\nenigma\\n') == 'Yes\\n'\nprint('All test cases passed.')",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"No\"\nassert solution(\"5\\nhello\\nworld\\nmonkey\\n\") == \"Yes\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\nhoge\\nenigma\\nhoge\\n') == 'No'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3') == '6'\n\nHere, we have a function named `solution` that takes the input from the standard input. We have used the `assert` statement to check if the output of the `solution` function matches the expected output. If the assertion passes, then the output matches the expected output.",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\\n\", \"Expected: 6\\nActual: \" + solution()",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"6\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"6\\n\"\nprint(\"All tests passed successfully!\")\n\nTaking the input from the sample input, we get the following output:\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(\"2 3\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"4 5\") == \"6\"\nassert solution(\"6 7\") == \"6\"\nassert solution(\"1 2\") == \"4\"\nassert solution(\"3 4\") == \"4\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\\n\", \"Incorrect output.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"6\\n\"\nassert solution(\"1 2\") == \"4\\n\"\nassert solution(\"4 5\") == \"8\\n\"\nassert solution(\"6 7\") == \"10\\n\"\nassert solution(\"8 9\") == \"12\\n\"\nassert solution(\"10 11\") == \"14\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\", \"Replace every character in S with x and print the result.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('sardine') == 'xxxxxxx', \"The solution is incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('sardine') == 'xxxxxxx', 'Test failed'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n\nassert solution(\"hello world\") == \"helo worl\"\n\nassert solution(\"aabbccddeeff\") == \"abababbccddeeff\"\n\nassert solution(\"1234567890\") == \"1234567890\"\n\nassert solution(\"\") == \"\"\n\nprint(\"All assertions passed.\")",
        "num_ids_2": 27,
        "num_ids_4": 72
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"1\\n1 1\\n3 4\") == \"No\"",
        "num_ids_2": 31,
        "num_ids_4": 51
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"4\\n1 2 1 1 3\") == \"No\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\"\nassert solution(\"10\\n1 1 1 1 1 1\\n\") == \"Yes\"\nassert solution(\"5\\n1 2 1 1 3\\n\") == \"No\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"No\"\nassert solution(\"10\\n1 1 1 1 1 1\\n\") == \"No\"",
        "num_ids_2": 49,
        "num_ids_4": 95
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\\n\"\nassert solution(\"6\\n1 2 1 1 3\\n\") == \"No\\n\"\nassert solution(\"1\\n1 1\\n\") == \"No\\n\"\nassert solution(\"7\\n1 2 1 1 3\\n\") == \"No\\n\"\nassert solution(\"8\\n1 2 1 1 3\\n\") == \"No\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 94
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"10\\n3 4 1 5 2\") == \"No\"\nassert solution(\"5\\n3 4 5 2 1\") == \"No\"\nassert solution(\"10\\n2 3 5 6 4\") == \"No\"\nassert solution(\"5\\n1 2 1 3 2\") == \"Yes\"",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\\n\"\nassert solution(\"5\\n1 2 3 1 1\") == \"No\\n\"\nassert solution(\"5\\n1 2 2 1 1\") == \"Yes\\n\"\nassert solution(\"5\\n1 3 1 2 1\") == \"No\\n\"\nassert solution(\"5\\n2 1 2 1 2\") == \"No\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 3 -10\n1 2 3\n3 2 1\n1 2 2\n\"\"\") == \"1\"\n\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '1\\n', \"Incorrect output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n\") == \"1\\n\"\nassert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 3\\n\") == \"1\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\", \"The given code does not solve this problem\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '100', 'Test case 1 failed'\nassert solution(input()) == '200', 'Test case 2 failed'\nassert solution(input()) == '300', 'Test case 3 failed'\nassert solution(input()) == '400', 'Test case 4 failed'\nassert solution(input()) == '500', 'Test case 5 failed'",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1900\") == \"100\", \"Test Failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '100', \"Input: 1900\\nExpected Output: 100\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1900\") == \"100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1900\") == \"100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 100, \"Incorrect output: expected 100, got {}\".format(solution(input()))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1900) == \"100\"\nassert solution(1000) == \"0\"\nassert solution(1001) == \"101\"\nassert solution(1002) == \"102\"\nassert solution(1003) == \"103\"\nassert solution(1004) == \"104\"\nassert solution(1005) == \"105\"\nassert solution(1006) == \"106\"\nassert solution(1007) == \"107\"\nassert solution(1008) == \"108\"\nassert solution(1009) == \"109\"\nassert solution(1010) == \"110\"\nassert solution(1011) == \"111\"\nassert solution(1012) == \"112\"\nassert solution(1013) == \"113\"\nassert solution(1014) == \"114\"\nassert solution(1015) == \"115\"\nassert solution(1016) == \"116\"\nassert solution(1017) == \"117\"\nassert solution(1018) == \"118\"\nassert solution(1019) == \"119\"\nassert solution(1020) == \"120\"\nassert solution(1021) == \"121\"\nassert solution(1022) == \"122\"\nassert solution(1023) == \"123\"\nassert solution(1024) == \"124\"\nassert solution(1025) == \"125\"\nassert solution(1026) == \"126\"\nassert solution(1027) == \"127\"\nassert solution(1028) == \"128\"\nassert solution(1029) == \"129\"\nassert solution(1030) == \"130\"\nassert solution(1031) == \"131\"\nassert solution(1032) == \"132\"\nassert solution(1033) == \"133\"\nassert solution(1034) == \"134\"\nassert solution(1035) == \"135\"\nassert solution(1036) == \"136\"\nassert solution(1037) == \"137\"\nassert solution(1038) == \"138\"\nassert solution(1039) == \"139\"\nassert solution(1040) == \"140\"\nassert solution(1041) == \"141\"\nassert solution(1042) == \"142\"\nassert solution(1043) == \"143\"\nassert solution(1044) == \"144\"\nassert solution(1045) == \"145\"\nassert solution(1046) == \"146\"\nassert solution(1047) == \"147\"\nassert solution(1048) == \"148\"\nassert solution(1049) == \"149\"\nassert solution(1050) == \"150\"\nassert solution(1051) == \"151\"\nassert solution(1052) == \"152\"\nassert solution(1053) == \"153\"\nassert solution(1054) == \"154\"\nassert solution(1055) == \"155\"\nassert solution(1056) == \"156\"\nassert solution(1057) == \"157\"\nassert solution(1058) == \"158\"\nassert solution(1059) == \"159\"\nassert solution(1060) == \"160\"\nassert solution(1061) == \"161\"\nassert solution(1062) == \"162\"\nassert solution(1063) == \"163\"\nassert solution(1064) == \"164\"\nassert solution(1065) == \"165\"\nassert solution(1066) == \"166\"\nassert solution(1067)",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1900\") == \"100\"\nassert solution(\"1000\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 48
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1900\") == \"100\", \"The solution is incorrect. It should return 100.\"\nassert solution(\"9000\") == \"100\", \"The solution is incorrect. It should return 100.\"\nassert solution(\"300000\") == \"0\", \"The solution is incorrect. It should return 0.\"\nassert solution(\"1000\") == \"0\", \"The solution is incorrect. It should return 0.\"",
        "num_ids_2": 58,
        "num_ids_4": 110
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1900\") == \"100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\", \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '9\\n', \"Test failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt')) == '9'\nassert solution(open('input2.txt')) == '6'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n3 5 2\\n4 5') == '9'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n2\n3 5 2\n4 5\n\"\"\"\n) == \"9\\n\"\n\nassert solution(\n\"\"\"\n3\n1 2 3\n2 3 4\n\"\"\"\n) == \"12\\n\"\n\nassert solution(\n\"\"\"\n3\n1 2 3\n2 3 4\n5 6 7\n\"\"\"\n) == \"10\\n\"\n\nassert solution(\n\"\"\"\n2\n3 5 2\n4 5\n\"\"\"\n) == \"9\\n\"\n\nassert solution(\n\"\"\"\n3\n1 2 3\n2 3 4\n\"\"\"\n) == \"12\\n\"\n\nassert solution(\n\"\"\"\n3\n1 2 3\n2 3 4\n5 6 7\n\"\"\"\n) == \"10\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"9\", \"Incorrect output\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\\n\"\nassert solution(\"3\\n1 2\\n10 20\\n5 10\") == \"17\\n\"\nassert solution(\"4\\n2 3\\n10 20\\n10 10\") == \"17\\n\"\n",
        "num_ids_2": 55,
        "num_ids_4": 87
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"9\\n\", \"Test Case 1 Failed\"\n\nassert solution(input()) == \"12\\n\", \"Test Case 2 Failed\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"\nassert solution(\"3\\n1 2 3\") == \"3\"\nassert solution(\"4\\n5 3\") == \"2\"\nassert solution(\"5\\n5 5 5 5\") == \"10\"\nassert solution(\"6\\n5 5 5 5 5\") == \"20\"\n",
        "num_ids_2": 39,
        "num_ids_4": 74
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '9'\nprint(\"All test cases passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n1 10 20\") == \"No War\"\nassert solution(\"1 10 20\") == \"War\"\n",
        "num_ids_2": 79,
        "num_ids_4": 95
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 17\") == \"War\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"No War\", \"Incorrect solution\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n9 14 11\") == \"War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n15 14 13\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n15 14 13\\n12 11 10\") == \"War\"",
        "num_ids_2": 78,
        "num_ids_4": 177
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 23\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 20\") == \"War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 19\") == \"War\"",
        "num_ids_2": 70,
        "num_ids_4": 138
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2 10 20\\n8 15 13\\n16 22') == 'No War'\n\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n1 2 3 4 5') == 'War'\n\nassert solution('1 2 3 4 5') == 'No War'\n\nassert solution('1 2 3 4 5\\n6 7 8 9 10') == 'No War'\n\nassert solution('1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15') == 'War'",
        "num_ids_2": 80,
        "num_ids_4": 130
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3 2 10 20\n8 15 13\n16 22''') == 'War\\n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"No War\\n\", \"The choice Z = 16 satisfies all of the three conditions as follows, thus they will come to an agreement. - X = 10 < 16 \\leq 20 = Y - 8, 15, 13 < 16 - 16, 22 \\geq 16\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"No War\", \"Incorrect output\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n3\") == \"6\\n\"\nassert solution(\"5\\n3\\n2\") == \"5\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\"\nassert solution(\"3\\n1\\n2\\n\") == \"3\"\nassert solution(\"3\\n1\\n2\\n5\\n\") == \"11\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n
        "num_ids_2": 36,
        "num_ids_4": 1027
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\"\nassert solution(\"4\\n1\\n1\\n\") == \"1\"\nassert solution(\"4\\n1\\n3\\n\") == \"5\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"\nassert solution(\"3\\n2\\n4\\n\") == \"13\\n\"\nassert solution(\"4\\n2\\n1\\n\") == \"18\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 62
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"\nassert solution(\"2\\n4\\n6\\n\") == \"6\\n\"\nassert solution(\"2\\n3\\n4\\n\") == \"6\\n\"\nassert solution(\"1\\n2\\n\") == \"2\\n\"\nassert solution(\"1\\n4\\n6\\n\") == \"6\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 77
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '6\\n', \"Test Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"\nassert solution(\"1\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"5\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"2\\n5\\n3\\n\") == \"3\\n\"\nassert solution(\"2\\n3\\n5\\n\") == \"6\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\n3\\n') == '6\\n'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\"\nassert solution(\"3\\n1 2 3\\n\") == \"0\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 3\\n2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n3\\n\") == \"3\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 69
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"0\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1.0\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"1.0\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"1.0\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"1.0\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n\") == \"1.0\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"1.0\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 100
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\\n\"\nassert solution(\"10\\n2 4 6 8 10\") == \"4\\n\"\nassert solution(\"1\\n5\") == \"1\\n\"\nassert solution(\"5\\n1 2 3\") == \"1\\n\"\nassert solution(\"100\\n1 1 1 1 1\") == \"0\\n\"\nassert solution(\"3\\n1 2 3\") == \"1\\n\"\nassert solution(\"10\\n2 4 6 8 10\") == \"4\\n\"\nassert solution(\"1\\n5\") == \"1\\n\"\nassert solution(\"5\\n1 2 3\") == \"1\\n\"\nassert solution(\"100\\n1 1 1 1 1\") == \"0\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 78
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\\n\"\nassert solution(\"2\\n3 1 2\") == \"0\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"3\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"3\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 88
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\\n\"\nassert solution(\"5\\n10 20 30 40 50\") == \"50\\n\"\nassert solution(\"6\\n1 2 3 4 5\") == \"6\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"2\\n2\") == \"2\\n\"\nassert solution(\"3\\n3\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 86
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\\n\"\nassert solution(\"1\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"2\\n1 2 3\") == \"0\\n\"\nassert solution(\"5\\n1 2 3 4 5 6\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"51\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 87
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n3 4 5\\n\") == \"0\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"0\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"4\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"0\\n\"\n",
        "num_ids_2": 42,
        "num_ids_4": 90
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Expected {output_data}, got {solution(input_data)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n\") == \"6\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n\") == \"0\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n\") == \"2\"",
        "num_ids_2": 80,
        "num_ids_4": 124
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Your solution is incorrect. Expected {output}, but got {solution(input)}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\") == \"6\\n\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"0\\n\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"2\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 124
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\") == \"6\\n\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"0\\n\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"2\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 124
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\") == \"6\\n\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"0\\n\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"2\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 124
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6\"\n\nassert solution() == \"0\"\n\nassert solution() == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\") == \"6\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"0\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"2\"",
        "num_ids_2": 76,
        "num_ids_4": 118
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6\\n'\n\nassert solution('''\n4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == '0\\n'\n\nassert solution('''\n3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2\\n'\n\nprint('All test cases pass')",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '2'\nassert solution(input()) == '6'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\") == \"5\\n\"\nassert solution(\"2\\n1 100\") == \"99\\n\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"99\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5\\n'\nassert solution('2\\n1 100\\n') == '99\\n'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n\\n2\\n1 100\\n\\n') == '5\\n'\n\nassert solution('2\\n1 100\\n\\n') == '99\\n'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The expected output is '{expected_output}', but got '{solution(input())}'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5\\n'\nassert solution('2\\n1 100\\n') == '99\\n'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but expected output is {expected_output}.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_num} failed: expected '{expected_output}', got '{solution(input())}'\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 0 1 0 1\\n') == '2'\nassert solution('6\\n0 1 0 1 1 0\\n') == '2'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '3'\nassert solution('3\\n0 0 0\\n') == '0'",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 0 1 0 1\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0\") == \"2\"\nassert solution(\"7\\n1 0 1 1 1 0 1\") == \"3\"\nassert solution(\"3\\n0 0 0\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0\\n\") == \"2\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"3\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == \"2\\n\"\nassert solution(\"6\\n0 1 0 1 1 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"3\\n\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 102
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 0 1 0 1\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0\") == \"2\"\nassert solution(\"7\\n1 0 1 1 1 0 1\") == \"3\"\nassert solution(\"3\\n0 0 0\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The solution is incorrect. \\nExpected output: {expected_output} \\nGot: {solution(input())}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\", \"Expected output 2, got: {}\".format(solution())",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1, \"Test case 1 failed\"\nassert solution(7) == 0, \"Test case 2 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 1, \"The function should return 1, but instead it returned {}.\".format(solution(1))\nassert solution(7) == 0, \"The function should return 0, but instead it returned {}.\".format(solution(7))",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 1, \"Your solution for the problem 1 is not correct\"\nassert solution(7) == 0, \"Your solution for the problem 7 is not correct\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == 1, \"Expected 1, but got {}\".format(solution(\"1\"))\nassert solution(\"7\") == 0, \"Expected 0, but got {}\".format(solution(\"7\"))\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"7\") == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"1\\n\", \"The solution should return 1 for input 1.\"\nassert solution(\"7\\n\") == \"0\\n\", \"The solution should return 0 for input 7.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == '3', \"The output is incorrect.\"\nassert solution('6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard') == '4', \"The output is incorrect.\"",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"brie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngruyere hard\") == 3, \"Incorrect result\"\nassert solution(\"parmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\") == 4, \"Incorrect result\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\") == \"3\\n\", \"Incorrect output. Expected: 3, Actual: \" + solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\")",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard') == 3, \"Incorrect output\"\n\nassert solution('6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard') == 4, \"Incorrect output\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(9) == 3\nassert solution(6) == 4\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(9) == 3, \"The output should be 3\"\nassert solution(6) == 4, \"The output should be 4\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\") == \"3\"\nassert solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == \"4\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    9\n     brie soft\n     camembert soft\n     feta soft\n     goat soft\n     muenster soft\n     asiago hard\n     cheddar hard\n     gouda hard\n     swiss hard\n    \"\"\"\n) == 3\n\nassert solution(\n    \"\"\"\n    6\n     parmesan hard\n     emmental hard\n     edam hard\n     colby hard\n     gruyere hard\n     asiago hard\n    \"\"\"\n) == 4",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\") == 3, \"Incorrect output for input 9\"\nassert solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == 4, \"Incorrect output for input 6\"",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: '{expected_output}', got: '{solution(stdin)}'.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 0 0 2\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1 2 1\\n3 2 1 1\") == \"1 0 0 2 \"\nassert solution(\"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\") == \"0 0 0 1 0 2 4\"\n",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n4\\n0 1 2 1\\n3 2 1 1\\n\\nOutput\\n1 0 0 2\\n\\nInput\\n7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n\\nOutput\\n0 0 0 1 0 2 4\\n\") == \"Output\\n1 0 0 2\\n0 0 0 1 0 2 4\\n\"",
        "num_ids_2": 131,
        "num_ids_4": 131
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\") == \"1 0 0 2\\n\"\nassert solution(\"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\") == \"0 0 0 1 0 2 4\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\\n\\n7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n\\n\") == \"1 0 0 2 \\n0 0 0 1 0 2 4\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0 0 0 1 0 2 4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1 0 0 2 \\n\"\nassert solution(stdin) == \"0 0 0 1 0 2 4 \\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"Output\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for input: {stdin}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"0\", \"Solution should return 0 when input is 0.\"\nassert solution(\"1\") == \"1\", \"Solution should return 1 when input is 1.\"\nassert solution(\"1\") == \"1\", \"Solution should return 1 when input is 1.\"\nassert solution(\"0\") == \"0\", \"Solution should return 0 when input is 0.\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"011\") == \"0\", \"Test 1 failed\"\nassert solution(\"110\") == \"0\", \"Test 2 failed\"\nassert solution(\"101\") == \"1\", \"Test 3 failed\"\nassert solution(\"000\") == \"1\", \"Test 4 failed\"\nassert solution(\"0101000000\") == \"0\", \"Test 5 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0\\n1\\n1\\n0') == '0', \"The output should be '0', but it is actually '{}'.\".format(solution('0\\n1\\n1\\n0'))",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 0, \"The solution should return 0\"\nprint(\"The solution should print '0'\")\n\nassert solution(\"1\") == 1, \"The solution should return 1\"\nprint(\"The solution should print '1'\")\n\nassert solution(\"1\") == 0, \"The solution should return 0\"\nprint(\"The solution should print '0'\")\n\nassert solution(\"0\") == 1, \"The solution should return 1\"\nprint(\"The solution should print '1'\")\n\nassert solution(\"0\") == 0, \"The solution should return 0\"\nprint(\"The solution should print '0'\")",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('1') == '0'\nassert solution('0') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\\n1\\n1\\n0\") == 0\nassert solution(\"1\\n0\\n1\\n0\") == 1\nassert solution(\"1\\n1\\n0\\n1\") == 0\nassert solution(\"0\\n1\\n1\\n1\") == 1\nassert solution(\"0\\n1\\n1\\n0\") == 0\n\nfrom typing import Optional",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0\") == \"0\", \"The solution should return 0.\"\nassert solution(\"1\") == \"0\", \"The solution should return 0.\"\nassert solution(\"1\") == \"0\", \"The solution should return 0.\"\nassert solution(\"0\") == \"0\", \"The solution should return 0.\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('900 20 100') == 'No'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1000 15 80') == 'Yes'\nprint(\"All tests passed.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1001 10 60\") == \"No\"\nassert solution(\"5000 10 150\") == \"Yes\"\nassert solution(\"10000 50 1000\") == \"No\"",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\", \"The solution is not correct\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"No\"",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"Yes\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input: {input_data}, output: {output_data}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"41 2\\n5 6\") == 30\nassert solution(\"41 2\\n5 6\\n\") == -1\nassert solution(\"41 2\\n5 6\\n7 8\") == 30\nassert solution(\"41 2\\n5 6\\n7 8\\n\") == -1\nassert solution(\"1 2\\n3 4\") == 2\nassert solution(\"1 2\\n3 4\\n\") == -1\nassert solution(\"1 2\\n3 4\\n5 6\") == 2\nassert solution(\"1 2\\n3 4\\n5 6\\n\") == -1\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\") == 2\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n\") == -1",
        "num_ids_2": 37,
        "num_ids_4": 84
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\"\nassert solution(\"41 2\\n1 6\\n\") == \"30\"\nassert solution(\"41 2\\n1 6\\n3 7\\n\") == \"30\"\nassert solution(\"41 2\\n1 6\\n3 7\\n3 7\\n\") == \"30\"\nassert solution(\"41 2\\n1 6\\n3 7\\n3 7\\n3 7\\n\") == \"30\"\nassert solution(\"41 2\\n1 6\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n\") == \"30\"\nassert solution(\"41 2\\n1 6\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n\") == \"30\"\nassert solution(\"41 2\\n1 6\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n\") == \"30\"\nassert solution(\"41 2\\n1 6\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n\") == \"30\"\nassert solution(\"41 2\\n1 6\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n\") == \"30\"\nassert solution(\"41 2\\n1 6\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n\") == \"30\"\nassert solution(\"41 2\\n1 6\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3 7\\n3",
        "num_ids_2": 42,
        "num_ids_4": 99
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\"\nassert solution(\"1 1\\n2 3\\n\") == \"3\"\nassert solution(\"3 2\\n2 2\\n\") == \"-1\"\nassert solution(\"4 1\\n1 1\\n\") == \"1\"\nassert solution(\"5 1\\n1 1\\n\") == \"-1\"\nassert solution(\"1 5\\n5 1\\n\") == \"-1\"\nassert solution(\"2 4\\n4 2\\n\") == \"-1\"\n",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\nassert solution(\"41 2\\n5 5\") == \"-1\"\nassert solution(\"41 2\\n5 7\") == \"-1\"\nassert solution(\"41 2\\n5 4\") == \"30\"\nassert solution(\"41 2\\n5 1\") == \"30\"\nassert solution(\"41 2\\n5 10\") == \"-1\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('41 2\\n5 6') == '30\\n'\nassert solution('1 1\\n1 1') == '-1\\n'\nassert solution('4 2\\n1 2\\n2 1\\n1 1') == '30\\n'\nassert solution('3 3\\n2 1\\n3 4\\n5 6') == '30\\n'\nassert solution('1 2\\n1 3\\n1 4\\n1 5\\n1 6') == '-1\\n'\n",
        "num_ids_2": 40,
        "num_ids_4": 100
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"41 2\\n5 6\") == 30\nassert solution(\"41 2\\n5 6\\n5 7\") == -1\nassert solution(\"41 2\\n5 6\\n5 7\\n5 8\") == 30\nassert solution(\"41 2\\n5 6\\n5 7\\n5 8\\n5 9\") == -1",
        "num_ids_2": 40,
        "num_ids_4": 100
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('41 2\\n5 6') == '30'\nassert solution('30 1\\n1 2\\n3 4\\n5 6') == '30'\nassert solution('1 1\\n1 1\\n1 1') == '30'\nassert solution('42 2\\n5 6') == '-1'\nassert solution('30 1\\n1 2\\n3 4\\n5 6') == '-1'\nassert solution('1 1\\n1 1\\n1 1') == '-1'",
        "num_ids_2": 48,
        "num_ids_4": 89
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"41 2\\n5 6\\n\") == \"30\"\nassert solution(stdin=\"21 3\\n2 5\\n10 1\\n\") == \"30\"\nassert solution(stdin=\"3 5\\n1 2\\n2 3\\n\") == \"30\"\nassert solution(stdin=\"1 1\\n1 1\\n\") == \"-1\"",
        "num_ids_2": 52,
        "num_ids_4": 100
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('41 2\\n5 6\\n') == '30\\n'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 5\\n\") == \"5\\n\"\nassert solution(\"1 2\\n\") == \"1\\n\"\nassert solution(\"1 10\\n\") == \"2\\n\"\nassert solution(\"0 1\\n\") == \"1\\n\"\nassert solution(\"1 0\\n\") == \"0\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 5\") == \"5\\n\"\nassert solution(\"1 2\") == \"2\\n\"\nassert solution(\"1 1\") == \"1\\n\"\nassert solution(\"1 0\") == \"0\\n\"\nassert solution(\"2 2\") == \"4\\n\"\nassert solution(\"2 1\") == \"2\\n\"\nassert solution(\"2 0\") == \"1\\n\"\nassert solution(\"3 3\") == \"9\\n\"\nassert solution(\"3 2\") == \"6\\n\"\nassert solution(\"3 1\") == \"3\\n\"\nassert solution(\"3 0\") == \"1\\n\"\nassert solution(\"4 4\") == \"16\\n\"\nassert solution(\"4 3\") == \"8\\n\"\nassert solution(\"4 2\") == \"4\\n\"\nassert solution(\"4 1\") == \"2\\n\"\nassert solution(\"4 0\") == \"1\\n\"\nassert solution(\"5 5\") == \"25\\n\"\nassert solution(\"5 4\") == \"12\\n\"\nassert solution(\"5 3\") == \"6\\n\"\nassert solution(\"5 2\") == \"3\\n\"\nassert solution(\"5 1\") == \"1\\n\"\nassert solution(\"5 0\") == \"0\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '5', \"Expected '5', got '{}'.\".format(solution(stdin))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 5\") == \"5\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"1 5\") == \"1\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"2 5\") == \"2\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"3 5\") == \"3\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"4 5\") == \"4\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"5 5\") == \"5\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"6 5\") == \"6\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"7 5\") == \"7\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"8 5\") == \"8\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"9 5\") == \"9\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"10 5\") == \"10\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"11 5\") == \"11\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"12 5\") == \"12\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"13 5\") == \"13\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"14 5\") == \"14\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"15 5\") == \"15\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"16 5\") == \"16\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"17 5\") == \"17\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"18 5\") == \"18\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"19 5\") == \"19\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"20 5\") == \"20\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"21 5\") == \"21\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"22 5\") == \"22\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"23 5\") == \"23\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"24 5\") == \"24\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"25 5\") == \"25\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"26 5\") == \"26\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"27 5\") == \"27\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"28 5\") == \"28\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"29 5\") == \"29\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"30 5\") == \"30\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"31 5\") == \"31\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"32 5\") == \"32\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"33 5\") == \"33\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"34 5\") == \"34\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"35 5\") == \"35\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"36 5\") == \"36\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"37 5\") == \"37\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"38 5\") == \"38\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"39 5\") == \"39\\n\", \"Sample Output does not match the expected output\"\nassert solution(\"40 ",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 5\") == \"5\\n\", \"Test case 0 failed.\"\nassert solution(\"1 2\") == \"2\\n\", \"Test case 1 failed.\"\nassert solution(\"2 2\") == \"2\\n\", \"Test case 2 failed.\"\nassert solution(\"3 2\") == \"4\\n\", \"Test case 3 failed.\"\nassert solution(\"4 2\") == \"4\\n\", \"Test case 4 failed.\"\nassert solution(\"5 2\") == \"8\\n\", \"Test case 5 failed.\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 5\\n\") == \"5\\n\"\nassert solution(\"1 5\\n\") == \"5\\n\"\nassert solution(\"2 5\\n\") == \"20\\n\"\nassert solution(\"0 100\\n\") == \"100\\n\"\nassert solution(\"2 100\\n\") == \"50\\n\"\nassert solution(\"1 100\\n\") == \"25\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 69
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 5\") == \"5\\n\"\nassert solution(\"1 2\") == \"2\\n\"\nassert solution(\"2 0\") == \"0\\n\"\nassert solution(\"2 3\") == \"3\\n\"\nassert solution(\"3 2\") == \"6\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 5\") == \"5\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 5') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 5\\n\") == \"5\\n\"\nassert solution(\"0 0\\n\") == \"1\\n\"\nassert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"2 2\\n\") == \"2\\n\"\nassert solution(\"1 100\\n\") == \"500\\n\"\nassert solution(\"0 500\\n\") == \"500\\n\"\nassert solution(\"1 1000\\n\") == \"5000\\n\"\nassert solution(\"0 5000\\n\") == \"5000\\n\"\nassert solution(\"1 10000\\n\") == \"50000\\n\"\nassert solution(\"0 50000\\n\") == \"50000\\n\"\nassert solution(\"1 100000\\n\") == \"500000\\n\"\nassert solution(\"0 500000\\n\") == \"500000\\n\"\nassert solution(\"1 1000000\\n\") == \"5000000\\n\"\nassert solution(\"0 5000000\\n\") == \"5000000\\n\"\nassert solution(\"1 10000000\\n\") == \"50000000\\n\"\nassert solution(\"0 50000000\\n\") == \"50000000\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\", \"Test failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\\n\"\nassert solution(\"3\\n1 1 1\") == \"1\\n\"\nassert solution(\"3\\n2 3 1\") == \"1\\n\"\nassert solution(\"3\\n4 5 6\") == \"2\\n\"\nassert solution(\"3\\n7 8 1\") == \"1\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\\n\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 6 8\\n\") == \"2\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test case failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n7 6 8\\n') == '2\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\\n\", \"Test case 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\\n\", \"Test case 2\"\nassert solution(\"7\\n7 6 8\") == \"2\\n\", \"Test case 3\"\nassert solution(\"4\\n4 3 2 1\") == \"1\\n\", \"Test case 4\"\nassert solution(\"1\\n1 1 1 1 1\") == \"1\\n\", \"Test case 5\"",
        "num_ids_2": 54,
        "num_ids_4": 106
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\"\nassert solution(\"4\\n8 6 7\") == \"1\"\nassert solution(\"5\\n1 2 3\") == \"3\"\nassert solution(\"6\\n4 3 2\") == \"4\"\nassert solution(\"7\\n5 4 3\") == \"5\"\nassert solution(\"8\\n6 5 4\") == \"6\"\nassert solution(\"9\\n7 6 5\") == \"7\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1 1 1 1 1\"\nassert solution(\"6\\n2 2 2 2 2\") == \"2 2 2 2 2\"\nassert solution(\"7\\n1 1 2 1 1\") == \"1 1 2 1 1\"\nassert solution(\"8\\n1 1 1 2 1\") == \"1 1 1 2 1\"\nassert solution(\"9\\n1 1 1 1 2\") == \"1 1 1 1 2\"\nassert solution(\"10\\n2 1 2 1 2\") == \"1 2 1 2 1\"",
        "num_ids_2": 50,
        "num_ids_4": 108
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 1\\n\") == \"3 1 2\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5 4 3 2 1\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nA_1 A_2 \\nA_3\") == \"3 1 2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3 1 2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n2 3 1\\n') == '3 1 2\\n'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nA_1 A_2 \\nA_3\") == \"3 1 2\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3 1 2\", \"The output should be '3 1 2', but it is '\"+str(solution(input()))+\"'.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\", \"Test case 1 failed.\"\nassert solution(\"3\\n2 3 4\") == \"3 4 2\", \"Test case 2 failed.\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5 1 2 3 4\", \"Test case 3 failed.\"",
        "num_ids_2": 56,
        "num_ids_4": 92
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\"\nassert solution(\"10 6 200\") == \"0\\n\"\nassert solution(\"11 8 500\") == \"12345\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 61
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\"\nassert solution(\"12 9 100\") == \"123485\\n\"\nassert solution(\"13 10 100\") == \"0\\n\"\nassert solution(\"12 10 100\") == \"0\\n\"\nassert solution(\"5 6 100\") == \"0\\n\"\nassert solution(\"2 4 100\") == \"0\\n\"\nassert solution(\"1 3 100\") == \"0\\n\"\nassert solution(\"1 1 100\") == \"0\\n\"\nassert solution(\"1 2 100\") == \"0\\n\"\nassert solution(\"1 2 10\") == \"0\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 83
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"10 100 1000\") == \"1000\"\nassert solution(\"10 100 1000000\") == \"123485\"\nassert solution(\"10 100 1000000000\") == \"123485000000\"\nassert solution(\"1000000 1000000 10000000\") == \"123485000000\"\nassert solution(\"1000000 1000000 1000000000\") == \"123485000000\"\nassert solution(\"1000000 1000000 10000000000000\") == \"12348500000000000000\"\nassert solution(\"1000000 1000000 100000000000000\") == \"123485000000000000000\"\nassert solution(\"1000000 1000000 1000000000000000000000\") == \"1234850000000000000000000\"\n",
        "num_ids_2": 40,
        "num_ids_4": 105
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 7 100') == '9'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\"\nassert solution(\"5 10 500\") == \"0\\n\"\nassert solution(\"1 10 100\") == \"1\\n\"\nassert solution(\"1000000000000 1000000000000 1000000000000\") == \"1000000000000\\n\"\nassert solution(\"1000000000000 1000000000000 1000000000000\") == \"1000000000000\\n\"\nassert solution(\"1000000000000 1000000000000 1000000000000\") == \"1000000000000\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 121
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('2 1 50') == '0'\nassert solution
        "num_ids_2": 32,
        "num_ids_4": 1027
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"9\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 7 100') == '9\\n'\nassert solution('5 3 10') == '0\\n'\nassert solution('1 1 10') == '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 36,
        "num_ids_4": 1027
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2\\n'\n\nN = int(stdin.strip())\nK = int(stdin.strip())\n\nfriends = []\nfor i in range(N):\n    h_i = int(stdin.strip())\n    friends.append(h_i)\n\nnum_can_ride = 0\nfor h in friends:\n    if h >= K:\n        num_can_ride += 1\n\nprint(num_can_ride)",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\\n\"\nassert solution(\"4 50\") == \"0\\n\"\nassert solution(\"3 100\") == \"2\\n\"\nassert solution(\"2 100 200\") == \"1\\n\"\nassert solution(\"10 200\") == \"0\\n\"\nassert solution(\"0 200\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 84
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\nassert solution(\"2 100\\n50 300 600 400 700\") == \"3\"\nassert solution(\"1 300\\n200 150 800\") == \"0\"\nassert solution(\"2 100\\n300 200\") == \"0\"\nassert solution(\"1 100\\n100 200 300 400\") == \"1\"",
        "num_ids_2": 65,
        "num_ids_4": 115
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == '''\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\nprint(\"All tests passed\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\nassert solution(\"5 250\\n150 120 120 200 250\") == \"0\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\nassert solution(\"5 300\\n200 150 120 180\") == \"3\"\nassert solution(\"3 100\\n200 250 300\") == \"1\"",
        "num_ids_2": 62,
        "num_ids_4": 89
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\\n\"\nassert solution(\"1 1\\n2 2 1\") == \"No\\n\"\nassert solution(\"1 1\\n1 1 1\") == \"No\\n\"\nassert solution(\"4 1\\n1 1 1\") == \"Yes\\n\"\nassert solution(\"4 2\\n2 1 1\") == \"No\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 1\\n5 4 2 1\\n') == 'Yes'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"No\\n\"  # test case 1",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n5 4 2 1\\n\") == \"Yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"\nassert solution(\"4 2\\n5 4 2 1\") == \"No\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n5 4 2 1\\n\") == \"Yes\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Yes', 'Incorrect output'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n5 4 2 1\\n\") == \"Yes\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"\nassert solution(\"2 1\\n1 1\") == \"No\"\nassert solution(\"3 1\\n5 4\") == \"No\"",
        "num_ids_2": 38,
        "num_ids_4": 55
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 2\\n..#\\n###\") == \"5\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 2\\n..#\\n###\\n\") == \"5\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 3 2\n..#\n''') == '5\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 2\\n..#\") == \"5\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 2\\n..#\\n\") == \"5\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\") == \"5\\n\"\nassert solution(\"1 1\\n..#\") == \"2\\n\"\nassert solution(\"2 1\\n..#\") == \"2\\n\"\nassert solution(\"3 1\\n..#\") == \"2\\n\"\nassert solution(\"3 1\\n..#\") == \"2\\n\"\n\nsolution(\"2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\") # Test case 1\nsolution(\"1 1\\n..#\") # Test case 2\nsolution(\"2 1\\n..#\") # Test case 3\nsolution(\"3 1\\n..#\") # Test case 4\nsolution(\"3 1\\n..#\") # Test case 5",
        "num_ids_2": 58,
        "num_ids_4": 94
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the number of rows and columns: \")) == \"5\", \"Test failed.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 2\\n..#\\n\") == \"5\"\nassert solution(\"4 5 3\\n..#.\\n#..\\n\") == \"4\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\\n\"  # This is the expected output.",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"1980 2000\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2020 2040\") == \"2\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"1000000000 1000000000\") == \"2\"\nassert solution(\"2000000000 2000000000\") == \"1\"\nassert solution(\"0 1000000000\") == \"2\"\nassert solution(\"1 1000000000\") == \"2\"",
        "num_ids_2": 48,
        "num_ids_4": 99
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"1000 2000\") == \"5\"\nassert solution(\"1 10\") == \"0\"\nassert solution(\"10 1\") == \"5\"\nassert solution(\"100 200\") == \"20\"",
        "num_ids_2": 36,
        "num_ids_4": 62
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"1000 1000\") == \"0\"\nassert solution(\"0 2000\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 51
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2020, 2021) == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"100 200\") == \"1\"\nassert solution(\"1000 2000\") == \"1\"\nassert solution(\"1000000000 1000000000\") == \"1\"\nassert solution
        "num_ids_2": 34,
        "num_ids_4": 82
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2020 2040\") == \"2\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nprint(\"All test cases pass\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"WA\"\nassert solution(\"AbCdeFghiJkLmNoPqRsTuVwXyZ1234567890\") == \"WA\"",
        "num_ids_2": 25,
        "num_ids_4": 58
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\n\nassert solution(\"ac\") == \"WA\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"abc\") == \"WA\"\nassert solution(\"aaabc\") == \"WA\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"Hello\") == \"WA\"\nassert solution(\"aBCde\") == \"WA\"\nassert solution(\"AbcDe\") == \"WA\"\nassert solution(\"aBcDe\") == \"AC\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"leetcode\") == \"WA\"\nassert solution(\"aaaa\") == \"WA\"\nassert solution(\"Abcdef\") == \"AC\"\nassert solution(\"HelloWorld\") == \"WA\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"ABC\") == \"WA\"\nassert solution(\"aaaa\") == \"WA\"\nassert solution(\"AaBc\") == \"WA\"\nassert solution(\"aaaaa\") == \"WA\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('AtCoder') == 'AC', \"Your solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1214\\n4\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1214\\n4\") == \"2\", \"Test 1\"\nassert solution(\"1214\\n5\") == \"12222\", \"Test 2\"\nassert solution(\"1214\\n6\") == \"12222222\", \"Test 3\"\nassert solution(\"1214\\n7\") == \"122222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222",
        "num_ids_2": 46,
        "num_ids_4": 1027
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1214 4\") == \"2\"\n\nfor _ in range(5):\n    S = input(\"Enter the string S: \")\n    K = int(input(\"Enter the value of K: \"))\n    assert K > 0 and K <= 10**18, \"K must be an integer between 1 and 10^18 (inclusive).\"\n    assert len(S) <= 100, \"The length of the string must be between 1 and 100 (inclusive).\"\n    \n    def replace_twice(s):\n        return s.replace(\"2\", \"22\").replace(\"3\", \"333\").replace(\"4\", \"4444\").replace(\"5\", \"55555\").replace(\"6\", \"666666\").replace(\"7\", \"7777777\").replace(\"8\", \"88888888\").replace(\"9\", \"999999999\")\n    \n    S_twice = replace_twice(S)\n    assert len(S_twice) <= 100, \"The length of the modified string must be between 1 and 100 (inclusive).\"\n    \n    S_modified = S_twice[0:K] + replace_twice(S_twice[K:])\n    \n    assert S_modified[0] == \"1\", \"The modified string must start with 1.\"\n    \n    left = S_modified[K-1]\n    right = S_modified[-1]\n    \n    if left == right:\n        left = 'a'\n    else:\n        left = chr(ord(left) + 1)\n    \n    print(left)",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1214\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1214\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1214') == '2', \"Expected '2', got: '{}'.\".format(solution('1214'))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1214') == '2', \"The first five characters in the string after 5 \\times 10^{15} days is 12222. As K=4, we should print the fourth character, 2.\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1214 4\") == \"2\", \"Test failed: Expected '2', got '{}'\".format(solution(\"1214 4\"))\n\nprint(\"All tests passed.\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"4\") == \"2\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1214', 4) == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5\") == \"NO\"\nassert solution(\"5\\n5 2 3 1 4\") == \"YES\"\nassert solution(\"5\\n5 2 3 4 5\") == \"NO\"\nassert solution(\"5\\n1 2 3 4 5\") == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'YES'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"3\\n1 2 3\") == \"NO\"\nassert solution(\"1\\n1 1\") == \"YES\"",
        "num_ids_2": 38,
        "num_ids_4": 53
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nprint(\"All tests passed\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3121\") == \"2\"\nassert solution(stdin=\"6\") == \"1\"\nassert solution(stdin=\"100000000000000000000000000000000\") == \"33\"\nassert solution(stdin=\"201920181\") == \"4\"\nassert solution(stdin=\"2\") == \"2\"\nassert solution(stdin=\"007\") == \"1\"\nassert solution(stdin=\"01\") == \"1\"\nassert solution(stdin=\"00099\") == \"2\"\nassert solution(stdin=\"90\") == \"0\"\nassert solution(stdin=\"0\") == \"0\"\nassert solution(stdin=\"10001\") == \"2\"\nassert solution(stdin=\"90001000000000000000000000000000\") == \"33\"\nassert solution(stdin=\"9\") == \"0\"\nassert solution(stdin=\"90001\") == \"1\"\nassert solution(stdin=\"20181\") == \"1\"\nassert solution(stdin=\"00090\") == \"0\"\nassert solution(stdin=\"10000000000000000000000000000000\") == \"33\"\nassert solution(stdin
        "num_ids_2": 27,
        "num_ids_4": 92
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"100000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 84
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 85
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 85
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3121) == 2\nassert solution(6) == 1\nassert solution(10000000000000000000000000000000000) == 33\nassert solution(201920181) == 4\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 82
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3121') == '2', '3121'\nassert solution('6') == '1', '6'\nassert solution('100000000000000000000000000000000') == '33', '100000000000000000000000000000000'\nassert solution('201920181') == '4', '201920181'",
        "num_ids_2": 32,
        "num_ids_4": 139
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 85
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('100000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'",
        "num_ids_2": 23,
        "num_ids_4": 84
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"10000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 86
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n3\\n13 37 39\\n1 2 3\\n4\\n0 0 0 0\\n1 2 3 4\\n3\\n1 2 -1\\n-6 -12 6\") == \"2\\n\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\") == \"2\\n\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n3\\n1 2 -1\\n-6 -12 6\") == \"0\\n\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\") == \"3\\n\"",
        "num_ids_2": 123,
        "num_ids_4": 200
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 -1\\n-6 -12 6') == '3'\nassert solution('5\\n1 2 3 4 5\\n2 4 7 11 3') == '2'\nassert solution('4\\n0 0 0 0\\n1 2 3 4') == '0'\nassert solution('3\\n13 37 39\\n1 2 3') == '2'\n",
        "num_ids_2": 59,
        "num_ids_4": 114
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6') == '2\\n'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '2\\n'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6') == '0\\n'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3\\n'",
        "num_ids_2": 131,
        "num_ids_4": 212
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\"\nassert solution(\"13 37 39\\n1 2 3\\n\") == \"2\"\nassert solution(\"0 0 0 0\\n1 2 3 4\\n\") == \"0\"\nassert solution(\"1 2 -1\\n-6 -12 6\\n\") == \"3\"",
        "num_ids_2": 58,
        "num_ids_4": 110
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\nOutput\\n2\\n\\nInput\\n3\\n13 37 39\\n1 2 3\\n\\nOutput\\n2\\n\\nInput\\n4\\n0 0 0 0\\n1 2 3 4\\n\\nOutput\\n0\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3') == 'Output\\n2\\n\\nInput\\n4\\n1 2 3 4\\n\\nOutput\\n0\\n'\nassert solution('Input\\n2\\n1 2 3\\n\\nOutput\\n0\\n') == 'Output\\n0\\n'",
        "num_ids_2": 208,
        "num_ids_4": 208
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\nOutput\\n2\\n\\nInput\\n3\\n13 37 39\\n1 2 3\\n\\nOutput\\n2\\n\\nInput\\n4\\n0 0 0 0\\n1 2 3 4\\n\\nOutput\\n0\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6\\n\\nOutput\\n3\\n') == '\\nOutput\\n2\\n\\n'",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\nprint('pass')",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Got: {solution(stdin)}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, but got {solution}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output\\n2\", \"Test 1 failed\"\n\nassert solution(input()) == \"Output\\n2\", \"Test 2 failed\"\n\nassert solution(input()) == \"Output\\n0\", \"Test 3 failed\"\n\nassert solution(input()) == \"Output\\n2\", \"Test 4 failed\"\n\nassert solution(input()) == \"Output\\n3\", \"Test 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == \"5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '''\n5\n7 8\n4 9\n2 2\n9 10\n3 1\n'''",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected '{expected}', but got '{solution(stdin)}'.\"\n\nfrom typing import List",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"codeforces\") == \"5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\"\nassert solution(\"dodivthree\") == \"5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\"\nassert solution(\"bambarbia\") == \"0\"\nassert solution(\"code??????\") == \"10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10\"",
        "num_ids_2": 77,
        "num_ids_4": 155
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('codefor?ces') == '5\\n6 2'\nassert solution('hellocode') == '0'\nassert solution('bambarbia') == '0'\nassert solution('code??????') == '10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4'",
        "num_ids_2": 30,
        "num_ids_4": 96
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"5\"\nassert solution(4) == \"7 8\"\nassert solution(5) == \"4 9\"\nassert solution(6) == \"2 2\"\nassert solution(7) == \"9 10\"\nassert solution(8) == \"3 1\"\nassert solution(9) == \"0\"\nassert solution(10) == \"10\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"TODO\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('codeforces') == '5'\nassert solution('dodivthree') == '4'\nassert solution('bambarbia') == '0'\nassert solution('code??????') == '10'\nprint(solution('abaca?b'))",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\", \"Test case 0 failed\"\nassert solution() == \"5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\", \"Test case 1 failed\"\nassert solution() == \"5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\", \"Test case 2 failed\"",
        "num_ids_2": 56,
        "num_ids_4": 96
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3\\n7 7\\n2 3\\n4 5'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Output\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''3\n7 7\n2 3\n4 5'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\") == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\\n\") == \"3\\n7 7\\n2 3\\n4 5\\n\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\") == \"2\\n3 4\\n1 1\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\\n\"\n",
        "num_ids_2": 93,
        "num_ids_4": 136
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for {input()}\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 90,
        "num_ids_4": 129
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\\n\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\\n\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 89,
        "num_ids_4": 136
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 90,
        "num_ids_4": 129
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\\n\") == \"7\\n\"\nassert solution(\"4 2\\n2 78 4 10\\n\") == \"12\\n\"\nassert solution(\"5 2\\n3 7 19 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\") == \"7\\n\"\nassert solution(\"4 2\\n2 78 4 10\") == \"12\\n\"\nassert solution(\"5 2\\n3 7 19 3 3\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '7', \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output\", f\"Expected Output, got {solution(input())}\"\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nresult = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i] + a[j] % k == 0:\n            result += 1\n\nprint(result)",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\") == \"7\"\nassert solution(\"4 2\\n2 78 4 10\") == \"12\"\nassert solution(\"5 2\\n3 7 19 3 3\") == \"0\"",
        "num_ids_2": 54,
        "num_ids_4": 78
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '7\\n'\nassert solution(open('input.txt', 'r').read()) == '12\\n'\nassert solution(open('input.txt', 'r').read()) == '0\\n'",
        "num_ids_2": 43,
        "num_ids_4": 64
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n2 78 4 10\\n5 2\\n3 7 19 3 3\\n') == '12'\nassert solution('6 11\\n45 1 10 12 11 7\\n') == '7'\nassert solution('4 2\\n2 78 4 10\\n5 2\\n3 7 19 3 3\\n') == '12'\nassert solution('5 2\\n3 7 19 3 3\\n') == '0'",
        "num_ids_2": 75,
        "num_ids_4": 144
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\") == \"7\\n\"\nassert solution(\"4 2\\n2 78 4 10\") == \"12\\n\"\nassert solution(\"5 2\\n3 7 19 3 3\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\") == \"7\"\nassert solution(\"4 2\\n2 78 4 10\") == \"12\"\nassert solution(\"5 2\\n3 7 19 3 3\") == \"0\"",
        "num_ids_2": 54,
        "num_ids_4": 78
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 5\\n\") == \"9\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9\\n\", \"Test Failed\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n2 5\n\"\"\") == \"\"\"9\n\"\"\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 5\\n\") == \"9\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 5\\n\") == \"9\\n\", \"Test case 1 failed\"\nassert solution(\"3\\n-1 0 2 3 4\\n\") == \"7\\n\", \"Test case 2 failed\"\nassert solution(\"3\\n0 1 2 3 4\\n\") == \"4\\n\", \"Test case 3 failed\"\nassert solution(\"3\\n100 200 300 400\\n\") == \"100\\n\", \"Test case 4 failed\"\nassert solution(\"3\\n-5 10 -20 30\\n\") == \"20\\n\", \"Test case 5 failed\"",
        "num_ids_2": 59,
        "num_ids_4": 131
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 5\") == \"9\\n\", \"Test Case 1\"\nassert solution(\"2\\n3 5\") == \"9\\n\", \"Test Case 2\"\nassert solution(\"3\\n-1 10 1\") == \"17\\n\", \"Test Case 3\"\nassert solution(\"3\\n1 2 3\") == \"6\\n\", \"Test Case 4\"\nassert solution(\"2\\n4 5 6\") == \"14\\n\", \"Test Case 5\"",
        "num_ids_2": 46,
        "num_ids_4": 99
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 5\") == \"9\\n\", \"There is no solution\"\nassert solution(\"1\\n1\") == \"1\\n\", \"There is no solution\"\nassert solution(\"2\\n1 2\") == \"3\\n\", \"There is no solution\"\nassert solution(\"3\\n1 2 3 4 5\") == \"15\\n\", \"There is no solution\"\nassert solution(\"3\\n3 3 3 3 3 3\") == \"9\\n\", \"There is no solution\"\nassert solution(\"3\\n2 3 4 5 6 7 8 9 10\") == \"45\\n\", \"There is no solution\"",
        "num_ids_2": 44,
        "num_ids_4": 97
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 5\\n\") == \"9\\n\"\nassert solution(\"3\\n-1 -2 -3\\n\") == \"4\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"6\\n\"\nassert solution(\"3\\n1 2\\n\") == \"6\\n\"\nassert solution(\"3\\n1\\n\") == \"1\\n\"\n",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 5\") == \"9\\n\", \"Test 1 failed\"\nassert solution(\"2\\n5 3 1 4\") == \"10\\n\", \"Test 2 failed\"\nassert solution(\"3\\n-5 -3 -1 5 2\") == \"5\\n\", \"Test 3 failed\"\nassert solution(\"5\\n10 20 30\") == \"60\\n\", \"Test 4 failed\"\nassert solution(\"4\\n1 2 3 4\") == \"10\\n\", \"Test 5 failed\"",
        "num_ids_2": 51,
        "num_ids_4": 110
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 5\") == \"9\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"5 8 1 5\\n1 1 2 1\\n2 2 3 2\\n3 4 5 4\\n5 6 7 3\") == \"100\"\nassert solution(\"2 6 1 3\\n1 2 3 4\\n4 5 6 7\") == \"0\"\nassert solution(\"1 1 1 1\") == \"0\"\nassert solution(\"5 8 1 5\\n1 1 2 1\\n2 2 3 2\\n3 4 5 4\\n5 6 7 3\") == \"100\"\nprint(\"All test cases pass\")",
        "num_ids_2": 101,
        "num_ids_4": 151
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\\n\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 4 3\n    1 3 3 100\n    1 2 2 10\n    \"\"\"\n) == \"110\"\n\nassert solution(\n    \"\"\"\n    2 5 3\n    1 4 3 50\n    1 2 10 50\n    2 3 3 100\n    1 2 100 100\n    \"\"\"\n) == \"1350\"\n\nassert solution(\n    \"\"\"\n    3 10 3\n    1 2 3 20\n    1 2 4 20\n    2 3 5 20\n    1 2 6 20\n    2 3 7 20\n    \"\"\"\n) == \"6800\"\n\nassert solution(\n    \"\"\"\n    10 10 3\n    1 2 3 20\n    1 2 4 20\n    2 3 5 20\n    1 2 6 20\n    2 3 7 20\n    2 3 8 20\n    3 4 5 20\n    4 5 6 20\n    5 6 7 20\n    6 7 8 20\n    7 8 9 20\n    8 9 10 20\n    9 10 11 20\n    10 11 12 20\n    11 12 13 20\n    12 13 14 20\n    13 14 15 20\n    14 15 16 20\n    15 16 17 20\n    16 17 18 20\n    17 18 19 20\n    18 19 20 20\n    19 20 21 20\n    20 21 22 20\n    21 22 23 20\n    22 23 24 20\n    23 24 25 20\n    24 25 26 20\n    25 26 27 20\n    26 27 28 20\n    27 28 29 20\n    28 29 30 20\n    29 30 31 20\n    30 31 32 20\n    31 32 33 20\n    32 33 34 20\n    33 34 35 20\n    34 35 36 20\n    35 36 37 20\n    36 37 38 20\n    37 38 39 20\n    38 39 40 20\n    39 40 41 20\n    40 41 42 20\n    41 42 43 20\n    42 43 44 20\n    43 44 45 20\n    44 45 46 20\n    45 46 47 20\n    46 47 48 20\n    47 48 49 20\n    48 49 50 20\n    49 50 51 20\n    50 51 52 20\n    51 52 53 20\n    52 53 54 20\n    53 54 55 20\n    54 55 56 20\n    55 56 57 20\n    56 57 58 20\n    57 58 59 20\n    58 59 60 20\n    59 60 61 20\n    60 61 62 20\n    61 62 63 20\n    62 63 64 20\n    63 64 65 20\n    64 65 66 20\n    65 66 67 20\n    66 67 68 20\n    67 68 69 20\n    68 69 70 20\n    69 70 7",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"110\", \"Incorrect answer\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"110\", \"Test case failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3 4 3\n    1 3 3 100\n    1 2 2 10\n    \"\"\"\n) == \"110\\n\"\n\nassert solution(\n    \"\"\"\n    3 4 2\n    1 3 3 100\n    1 2 2 10\n    \"\"\"\n) == \"102\\n\"\n\nassert solution(\n    \"\"\"\n    4 5 1\n    1 2 3 4\n    2 3 4 5\n    3 4 5 6\n    4 5 6 7\n    5 6 7 8\n    6 7 8 9\n    7 8 9 10\n    8 9 10 11\n    9 10 11 12\n    10 11 12 13\n    11 12 13 14\n    12 13 14 15\n    13 14 15 16\n    14 15 16 17\n    15 16 17 18\n    16 17 18 19\n    17 18 19 20\n    18 19 20 21\n    19 20 21 22\n    20 21 22 23\n    21 22 23 24\n    22 23 24 25\n    23 24 25 26\n    24 25 26 27\n    25 26 27 28\n    26 27 28 29\n    27 28 29 30\n    28 29 30 31\n    29 30 31 32\n    30 31 32 33\n    31 32 33 34\n    32 33 34 35\n    33 34 35 36\n    34 35 36 37\n    35 36 37 38\n    36 37 38 39\n    37 38 39 40\n    38 39 40 41\n    39 40 41 42\n    40 41 42 43\n    41 42 43 44\n    42 43 44 45\n    43 44 45 46\n    44 45 46 47\n    45 46 47 48\n    46 47 48 49\n    47 48 49 50\n    48 49 50 51\n    49 50 51 52\n    50 51 52 53\n    51 52 53 54\n    52 53 54 55\n    53 54 55 56\n    54 55 56 57\n    55 56 57 58\n    56 57 58 59\n    57 58 59 60\n    58 59 60 61\n    59 60 61 62\n    60 61 62 63\n    61 62 63 64\n    62 63 64 65\n    63 64 65 66\n    64 65 66 67\n    65 66 67 68\n    66 67 68 69\n    67 68 69 70\n    68 69 70 71\n    69 70 71 72\n    70 71 72 73\n    71 72 73 74\n    72 73 74 75\n    73 74 75 76\n    74 75 76 77\n    75 76 77 78\n    76 77 78 79\n    77 78 79 80\n    78 79 80 81\n    79 80 81 82\n    80 81 82",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '110'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\\n\"\nassert solution(\"1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n5 5 5 5\") == \"555\\n\"\n",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == '110'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Solution should return the correct output.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 4 6 3') == '5\\n'\nassert solution('6\\n1 2 3 4 5') == '5\\n'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '6\\n'\nassert solution('10\\n1 2 3 4 5 6 7 8 9') == '7\\n'\nassert solution('11\\n1 2 3 4 5 6 7 8 9 10') == '8\\n'\nassert solution('12\\n1 2 3 4 5 6 7 8 9 10 11') == '9\\n'\nassert solution('13\\n1 2 3 4 5 6 7 8 9 10 11 12') == '10\\n'\nassert solution('14\\n1 2 3 4 5 6 7 8 9 10 11 12 13') == '11\\n'\nassert solution('15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14') == '12\\n'\nassert solution('16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '13\\n'\nassert solution('17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16') == '14\\n'\nassert solution('18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17') == '15\\n'\nassert solution('19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18') == '16\\n'\nassert solution('20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == '17\\n'\nassert solution('21\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '18\\n'\nassert solution('22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21') == '19\\n'\nassert solution('23\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22') == '20\\n'\nassert solution('24\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23') == '21\\n'\nassert solution('25\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24') == '22\\n'\nassert solution('26\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 2",
        "num_ids_2": 44,
        "num_ids_4": 105
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Incorrect output\"\nprint(\"All tests passed\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Test case 1 failed\"\nassert solution(\"4\\n5 6 7 8\") == \"10\\n\", \"Test case 2 failed\"\nassert solution(\"4\\n-10 -9 -8 -7\") == \"-10\\n\", \"Test case 3 failed\"\nassert solution(\"4\\n1 2 3 4\") == \"0\\n\", \"Test case 4 failed\"\nassert solution(\"4\\n1 2 3 1\") == \"2\\n\", \"Test case 5 failed\"",
        "num_ids_2": 57,
        "num_ids_4": 116
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 4 6 3\\n\") == \"5\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Testcase failed\"\nprint(\"Testcase passed\")\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\"\nassert solution(\"4\\n-100 100 -100\") == \"5\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1000000000 1000000000 1000000000 1000000000\") == \"5\\n\"\nassert solution(\"4\\n-2147483648 -2147483648 -2147483648 -2147483648\") == \"5\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 4 6 3\\n\") == \"5\\n\"\nassert solution(\"5\\n1 4 6 3\\n\") == \"6\\n\"\nassert solution(\"6\\n1 4 6 3\\n\") == \"7\\n\"\nassert solution(\"7\\n1 4 6 3\\n\") == \"8\\n\"\nassert solution(\"8\\n1 4 6 3\\n\") == \"9\\n\"\nassert solution(\"9\\n1 4 6 3\\n\") == \"10\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\\n\", \"The maximum absolute difference of two elements is A_3-A_1=6-1=5.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2.2761423749\\n\", \"Your code is incorrect.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2.2761423749\\n\", \"Incorrect output.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2.2761423749'\n\nfrom collections import deque",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2.2761423749\", \"Test case failed\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\"\nassert solution(\"3\\n1000 1000\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\"\nassert solution(\"3\\n-1000 -1000\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\"\nassert solution(\"3\\n0 1000\\n-1000 -1000\\n0 0\\n1 0\") == \"2.2761423749\"\nassert solution(\"3\\n1000 0\\n0 0\\n1000 0\\n0 1\") == \"2.2761423749\"",
        "num_ids_2": 83,
        "num_ids_4": 182
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\\n\"\nassert solution(\"2\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n0 0\\n\") == \"3.3333333333\\n\"\nassert solution(\"2\\n0 0\\n1 1\\n0 0\\n\") == \"3.3333333333\\n\"\nassert solution(\"1\\n0 0\\n0 0\\n0 0\\n\") == \"0\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n0 0\\n\") == \"3.3333333333\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 160
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.2761423749\\n\", \"Test failed\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2.2761423749\\n\", \"The result is incorrect.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='12 4\\n') == '4'\nassert solution(stdin='3 4\\n') == '4'\nassert solution(stdin='5 6\\n') == '0'\nassert solution(stdin='10 4\\n') == '4'\nassert solution(stdin='100 50\\n') == '4'\nassert solution(stdin='3 4\\n') == '4'",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12 4\") == \"4\", \"The solution should return '4'.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"12 4\\n\") == \"4\"\nassert solution(stdin=\"13 4\\n\") == \"9\"\nassert solution(stdin=\"14 4\\n\") == \"12\"\nassert solution(stdin=\"15 4\\n\") == \"14\"\nassert solution(stdin=\"16 4\\n\") == \"16\"\n\nfrom typing import List\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\\n\", \"Your solution is incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test failed: solution({input()}) -> {output()}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('12 4') == '4'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12 4\") == \"4\", \"Input should be 12 4\"\nassert solution(\"12 5\") == \"5\", \"Input should be 12 5\"\nassert solution(\"13 4\") == \"4\", \"Input should be 13 4\"\nassert solution(\"13 5\") == \"5\", \"Input should be 13 5\"\nassert solution(\"14 4\") == \"4\", \"Input should be 14 4\"\nassert solution(\"14 5\") == \"5\", \"Input should be 14 5\"\nassert solution(\"15 4\") == \"4\", \"Input should be 15 4\"\nassert solution(\"15 5\") == \"5\", \"Input should be 15 5\"\nprint(\"All tests passed!\")",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12 4\") == \"4\", \"Your solution is incorrect!\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"3\"\nprint(\"F(A,B) has a minimum value of 3 at (A,B)=(100,100).\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10000\\n\") == \"3\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10000) == 3, \"The minimum value of F(A,B) has a minimum value of 3 at (A,B)=(100,100).\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10000\") == \"3\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n', 'The solution is incorrect.'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10000) == \"3\", \"The expected output is 3, but got {}\".format(solution(10000))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n\", \"Test case failed\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10000\") == \"3\"\nassert solution(\"1000\") == \"3\"\nassert solution(\"100\") == \"3\"\nassert solution(\"10\") == \"3\"\nassert solution(\"1\") == \"3\"",
        "num_ids_2": 27,
        "num_ids_4": 50
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 4\") == \"0\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\\n\"\nassert solution(\"3 4\\n1 2\\n1 3\") == \"2\\n\"\nassert solution(\"3 4\\n1 3\\n1 2\") == \"3\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 85
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\\n\"\nassert solution(\"3 5\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"0\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\\n\") == \"1\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n\", \"The number of the foods liked by all the N people should be 1.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"0.5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '0.5000000000\\n'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == '0.5000000000\\n', \"Testcase 1 failed\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"0.5000000000\\n\", \"The code seems to be correct.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0.5000000000\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == '0.5000000000'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"0.5000000000\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"0.5000000000\", \"Incorrect output\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '0.5000000000', \"The output does not match the expected output.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n\") == \"0.5000000000\\n\"\nassert solution(\"7\\n\") == \"0.2500000000\\n\"\nassert solution(\"8\\n\") == \"0.1000000000\\n\"\nassert solution(\"9\\n\") == \"0.0499999999\\n\"\nassert solution(\"10\\n\") == \"0.0249999999\\n\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"4\\n1\\n1 1\\n2 1\\n1\\n2 0\") == \"3\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"4\\n2\\n1 1\\n0\\n0\\n0\\n1\\n2\\n0\") == \"3\"\nassert solution(\"5\\n3\\n1 1\\n1\\n1\\n0\\n1\\n1\\n1\") == \"1\"\nassert solution(\"5\\n3\\n1 1\\n0\\n1\\n1\\n0\\n1\\n1\") == \"2\"\nassert solution(\"5\\n3\\n1 1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"3\"\nassert solution(\"5\\n3\\n1 1\\n1\\n1\\n1\\n1\\n1\\n0\") == \"3\"\nassert solution(\"5\\n3\\n1 1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"4\"\nassert solution(\"5\\n3\\n1 1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"4\"",
        "num_ids_2": 70,
        "num_ids_4": 142
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n",
        "num_ids_2": 1026,
        "num_ids_4": 1026
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string, \"Testcase not passing\"\nelse:\n    print(\"Testcase is passing\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\n\nprint('Test Passed')",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'nikoandsolstice has a length of 15, which exceeds K=7. We should extract the first 7 characters in this string, append... to the end of them, and print the result nikoand....'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...\"\nassert solution(\"1\\nhello\") == \"hello\"\nassert solution(\"5\\nabcdefg\") == \"abcdefg\"\nassert solution(\"5\\n\") == \"\"\nassert solution(\"5\\nabcde\") == \"abcde\"",
        "num_ids_2": 32,
        "num_ids_4": 57
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...\".format(\"nikoandsolstice\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...nike\"\nassert solution(\"8\\nnikoandsolstice\") == \"nikoand...nike\"\nassert solution(\"9\\nnikoandsolstice\") == \"nikoand...nike\"\nassert solution(\"10\\nnikoandsolstice\") == \"nikoand...nike\"\nassert solution(\"11\\nnikoandsolstice\") == \"nikoand...nike\"\nassert solution(\"12\\nnikoandsolstice\") == \"nikoand...nike\"\nassert solution(\"13\\nnikoandsolstice\") == \"nikoand...nike\"\nassert solution(\"14\\nnikoandsolstice\") == \"nikoand...nike\"\nassert solution(\"15\\nnikoandsolstice\") == \"nikoand...nike\"\nassert solution(\"16\\nnikoandsolstice\") == \"nikoand...nike\"\nassert solution(\"17\\nnikoandsolstice\") == \"nikoand...nike\"\nassert solution(\"18\\nnikoandsolstice\") == \"nikoand...nike\"\nassert solution(\"19\\nnikoandsolstice\") == \"nikoand...nike\"\nassert solution(\"20\\nnikoandsolstice\") == \"nikoand...nike\"",
        "num_ids_2": 44,
        "num_ids_4": 89
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'7\\nikoandsolstice') == b'nikoand...nikoandsolstice has a length of 15, which exceeds K=7.'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoandsolstice\"\nassert solution(\"10\\nabcd\") == \"abcd\"\nassert solution(\"5\\nhello\") == \"hello\"\nassert solution(\"3\\nnabla\") == \"nabla\"\nassert solution(\"11\\nabcde\") == \"abcde\"",
        "num_ids_2": 36,
        "num_ids_4": 64
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...nikoandsolstice\"\nassert solution(\"12\\nloremipsum\") == \"loremipsum\"\nassert solution(\"3\\n\") == \" \"\nassert solution(\"0\\n\") == \" \"\nassert solution(\"1\\n\") == \" \"\nassert solution(\"2\\n\") == \" \"",
        "num_ids_2": 46,
        "num_ids_4": 68
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\nprint(\"All tests passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...solstice\"\nassert solution(\"123\\n\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"10\\n\") == \"\"",
        "num_ids_2": 35,
        "num_ids_4": 51
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...\".",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"apple\") == \"apples\"\nprint(\"All tests pass\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"cat\") == \"cats\"\nassert solution(\"dog\") == \"dogs\"\nassert solution(\"elephant\") == \"elephants\"",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"cat\") == \"cats\"\nassert solution(\"dog\") == \"dogs\"\nassert solution(\"elephant\") == \"elephants\"\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"cat\") == \"cats\"\nassert solution(\"banana\") == \"bannans\"\nassert solution(\"fish\") == \"fishes\"\nassert solution(\"elephant\") == \"elephants\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"cherry\") == \"cherrys\"\nassert solution(\"date\") == \"dates\"\nassert solution(\"elderberry\") == \"elderberries\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"cherry\") == \"cherries\"\nassert solution(\"elderberry\") == \"elderberries\"\nassert solution(\"fig\") == \"figs\"\nassert solution(\"grape\") == \"grapes\"\nassert solution(\"kiwi\") == \"kiwis\"\nassert solution(\"lemon\") == \"lemons\"\nassert solution(\"mango\") == \"mangos\"\nassert solution(\"nectarine\") == \"nectarines\"\nassert solution(\"orange\") == \"oranges\"\nassert solution(\"peach\") == \"peaches\"\nassert solution(\"pineapple\") == \"pineapples\"\nassert solution(\"quince\") == \"quinces\"\nassert solution(\"raspberry\") == \"raspberryes\"\nassert solution(\"strawberry\") == \"strawberries\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"watermelon\") == \"watermelons",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"orange\") == \"oranges\"\nassert solution(\"peach\") == \"peaches\"\nassert solution(\"grape\") == \"grapes\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"cherry\") == \"cherrys\"\nassert solution(\"date\") == \"dates\"\nassert solution(\"elephant\") == \"elephants\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"apple\") == \"apples\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bannans\"\nassert solution(\"cat\") == \"cats\"\nassert solution(\"dog\") == \"dogs\"\nassert solution(\"elephant\") == \"elephants\"\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\", \"The output should be 1.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1\\n', 'Solution not correct'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\\n\"\nassert solution(\"3 2\\n1\\n3\") == \"3\\n\"\nassert solution(\"3 2\\n1\\n2\") == \"0\\n\"\nassert solution(\"3 2\\n1\\n4\") == \"3\\n\"\nassert solution(\"3 2\\n2\\n3\") == \"1\\n\"\nassert solution(\"3 2\\n2\\n1\") == \"0\\n\"\nassert solution(\"3 2\\n4\\n3\") == \"1\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 88
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\\n\"\n\nsolution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\\n\"\nassert solution(\"5 4\\n4\\n1 2 3 4 5\\n1\\n1\") == \"1\\n\"\nassert solution(\"3 3\\n1\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n1\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n1\\n1\\n1\\n\") == \"1\\n\"\n\nassert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\\n\"\nassert solution(\"5 4\\n4\\n1 2 3 4 5\\n1\\n1\") == \"1\\n\"\nassert solution(\"3 3\\n1\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n1\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n1\\n1\\n1\\n\") == \"1\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 114
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\", \"Incorrect output.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected output: {output}, Received: {solution(input())}\"\nfor i in range(input()):\n    N, K = map(int, input().split())\n    d_list = list(map(int, input().split()))\n    A_list = list(map(int, input().split()))\n\n    victims = set()\n    for i in range(N):\n        if A_list[i] == 0:\n            victims.add(i + 1)\n\n    for i in range(K):\n        if i not in victims:\n            break\n\n    print(i + 1)",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\"\nassert solution(\"10\\naaaabbbbcccc\") == \"10\"\nassert solution(\"10\\nabcde\") == \"0\"\nassert solution(\"10\\n\") == \"0\"",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\nabbbbaaca\") == \"5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\naabbbbaaca') == '5'\nassert solution('10\\nabcde') == '1'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\\n\"\nassert solution(\"1\\nabc\") == \"1\\n\"\nassert solution(\"2\\nab\") == \"2\\n\"\nassert solution(\"2\\nabb\") == \"2\\n\"\nassert solution(\"1\\naaa\") == \"1\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 62
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\nabbbbbaaca') == '5'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10\\naabbbbaaca') == '5', \"The output is incorrect. Please check.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\", \"The solution is incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\\n\"\nassert solution(\"100\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\\n\"\nassert solution(\"100\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"3\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 372
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\\n\"\nassert solution(\"4\\n10 5 10\") == \"3\\n\"\nassert solution(\"5\\n5 10 20 50\") == \"3\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 64
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\\n\"  # expected output: \"3\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\"\nassert solution(\"10\\n1 2 3 4 5\") == \"3\"\nassert solution(\"10\\n1 2 3 4 5 6\") == \"4\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"3\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11\") == \"4\"",
        "num_ids_2": 39,
        "num_ids_4": 96
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5 2 4\\n\") == \"3\"\nassert solution(\"10\\n3 4 5\\n\") == \"3\"\nassert solution(\"3\\n10 20 30\\n\") == \"4\"\nassert solution(\"5\\n5 5 5\\n\") == \"1\"\nassert solution(\"3\\n2 3 4\\n\") == \"1\"",
        "num_ids_2": 39,
        "num_ids_4": 80
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\\n\"\nassert solution(\"5\\n2 4 6\") == \"2\\n\"\nassert solution(\"4\\n10 7 12\") == \"2\\n\"\nassert solution(\"7\\n8 4 3\") == \"2\\n\"\nassert solution(\"9\\n1 1 1\") == \"3\\n\"\nassert solution(\"2\\n100 50 200\") == \"3\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('1 1 0 3') == '2'\nassert solution('3 1 1 2') == '2'\nassert solution('1 1 2 2') == '2'\nassert solution('0 0 0 2') == '2'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1 3\") == \"2\", \"Input does not satisfy the constraints.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1 3\") == \"2\\n\", \"Solution is incorrect\"\nassert solution(\"2 1 1 2\") == \"1\\n\", \"Solution is incorrect\"\nassert solution(\"2 1 1 0\") == \"0\\n\", \"Solution is incorrect\"\nassert solution(\"2 1 1 -1\") == \"-2\\n\", \"Solution is incorrect\"\nassert solution(\"2 1 1 -2\") == \"-1\\n\", \"Solution is incorrect\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1 1 3') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 3\") == \"2\\n\"\nassert solution(\"4 2 2 4\") == \"6\\n\"\nassert solution(\"5 5 1 5\") == \"0\\n\"\nassert solution(\"2 1 0 3\") == \"0\\n\"\nassert solution(\"2 1 -1 3\") == \"0\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 3\") == \"2\", \"The maximum possible sum of the numbers written on the cards chosen is not 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1 3\") == \"2\\n\", \"Test Case 1\"\nassert solution(\"4 1 2 -1 1\") == \"4\\n\", \"Test Case 2\"\nassert solution(\"2 1 1 4\") == \"3\\n\", \"Test Case 3\"\nassert solution(\"3 0 1 0\") == \"3\\n\", \"Test Case 4\"\nassert solution(\"2 0 0 1 0\") == \"2\\n\", \"Test Case 5\"",
        "num_ids_2": 50,
        "num_ids_4": 98
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 3\") == \"2\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3\") == \"2\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 8\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"2 10\") == \"Yes\"\nassert solution(\"5 10\") == \"Yes\"\nassert solution(\"8 10\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"2 6\") == \"No\"\nassert solution(\"10 5\") == \"No\"\nassert solution(\"2 8\") == \"Yes\"\nassert solution(\"2 10\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"4 7\") == \"No\"\nassert solution(\"5 6\") == \"No\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"30 20\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 8\") == \"Yes\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 8\") == \"Yes\\n\"\nassert solution(\"4 10\") == \"No\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 8\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 8\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"4 6\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"  # Correct solution\nassert solution(\"2 1\\n1 2\\n3 2\\n1 3\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\") == \"4\"  # Correct solution\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\") == \"1\"  # Correct solution\nassert solution(\"2 1\\n1 2\\n3 2\\n1 3\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n2 11\\n2 12\\n2 13\\n2 14\\n2 15\\n2 16\\n2 17\\n2 18\\n2 19\\n2 20\\n2 21\\n2 22\\n2 23\\n2 24\\n2 25\\n2 26\\n2 27\\n2 28\\n2 29\\n2 30\\n2 31\\n2 32\\n2 33\\n2 34\\n2 35\\n2 36\\n2 37\\n2 38\\n2 39\\n2 40\\n2 41\\n2 42\\n2 43\\n2 44\\n2 45\\n2 46\\n2 47\\n2 48\\n2 49\\n2 50\\n2 51\\n2 52\\n2 53\\n2 54\\n2 55\\n2 56\\n2 57\\n2 58\\n2 59\\n2 60\\n2 61\\n2 62\\n2 63\\n2 64\\n2 65\\n2 66\\n2 67\\n2 68\\n2 69\\n2 70\\n2 71\\n2 72\\n2 73\\n2 74\\n2 75\\n2 76\\n2 77\\n2 78\\n2 79\\n2 80\\n2 81\\n2 82\\n2 83\\n2 84\\n2 85\\n2 86\\n2 87\\n2 88\\n2 89\\n2 90\\n2 91\\n2 92\\n2 93\\n2 94\\n2 95\\n2 96\\n2 97\\n2 98\\n2 99\\n2 100\\n2 101\\n2 102\\n2 103\\n2 104\\n2 105\\n2 106\\n2 107\\n2 108\\n2 109\\n2 110\\n2 111\\n2 112\\n2 113\\n2 114\\n2 115\\n2 116\\n2 117\\n2 118\\n2 119\\n2 120\\n2 121\\n2 122\\n2 123\\n2 124\\n2 125\\n2 126\\n2 127\\n2 128\\n2 129\\n2 130\\n2 131\\n2 132\\n2 133\\n2 134\\n2 135\\n2 136\\n2 137\\n2 138\\n2 139\\n2 140\\n2 141\\n2 142\\n2 14",
        "num_ids_2": 92,
        "num_ids_4": 1027
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    3 3\n    1 2\n    1 3\n    2 3\n    ''') == '2'\n\nassert solution('''\n    4 6\n    1 2\n    2 3\n    3 4\n    4 5\n    ''') == '3'\n\nassert solution('''\n    4 5\n    1 2\n    2 3\n    3 4\n    4 5\n    ''') == '1'\n\nassert solution('''\n    4 5\n    1 2\n    2 3\n    3 4\n    4 5\n    ''') == '0'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"2 2\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"2 2\\n1 2\\n1 3\\n2 3\\n4 4\") == \"0\"\nassert solution(\"4 4\") == \"0\"",
        "num_ids_2": 54,
        "num_ids_4": 98
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2\\n', 'Please provide the correct input format.'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"1 3\\n2 1\\n3 2\") == \"2\"\nassert solution(\"3 3\\n1 3\\n2 2\") == \"0\"\nassert solution(\"1 2\\n1 3\\n2 3\\n3 4\") == \"2\"",
        "num_ids_2": 49,
        "num_ids_4": 98
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3') == '2\\n'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed. Input: {input_string}, Expected Output: {expected_output}, Received Output: {solution(input_string)}\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"4 3\\n1 2\\n1 3\\n2 3\") == \"1\"\nassert solution(\"5 4\\n1 2\\n1 3\\n2 3\\n2 4\") == \"1\"\nassert solution(\"5 4\\n1 2\\n1 3\\n2 3\\n1 2\") == \"1\"\nassert solution(\"6 5\\n1 2\\n1 3\\n2 3\\n2 4\\n1 2\\n1 3\") == \"2\"",
        "num_ids_2": 54,
        "num_ids_4": 118
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"18\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"18\", \"Your solution is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"18\"\nassert solution(\"10 3\") == \"58\"\nassert solution(\"5 1\") == \"3\"\nassert solution(\"10 -2\") == \"58\"\nassert solution(\"10 3 4 5 6\") == \"115\"\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"18\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"18\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5 2\n    \"\"\"\n) == \"18\"\n\nassert solution(\n    \"\"\"\n    6 3\n    \"\"\"\n) == \"25\"\n\nassert solution(\n    \"\"\"\n    2 1\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    5 6\n    \"\"\"\n) == \"21\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"18\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n\") == \"18\\n\", \"Test case 1 failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n\") == \"18\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '18', \"The solution should return '18'.\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"15\") == \"60\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'15') == '60'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(15) == \"60\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"15\") == \"60\", \"Your solution is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(15) == '60', \"The first 15 terms of the FizzBuzz sequence are: 1,2,Fizz,4,Buzz,Fizz,7,8,Fizz,Buzz,11,Fizz,13,14,FizzBuzz\\nAmong them, numbers are 1,2,4,7,8,11,13,14, and the sum of them is 60.\"\n\nprint(\"The first 15 terms of the FizzBuzz sequence are:\")\nfor i in range(1, 16):\n    print(f\"{i},\")\nprint(f\"\\nAmong them, numbers are {', '.join(map(str, [1, 2, 4, 7, 8, 11, 13, 14, 60]))} and the sum of them is {60}.\")",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"60\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(15) == \"60\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(15) == 60",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(15) == '60'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(15) == 60\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Testcase failed\"\n\nX = int(input())\nN = int(input())\np = list(map(int, input().split()))",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\", \"Test case 1 failed.\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\", \"Test case 2 failed.\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\", \"Test case 3 failed.\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\", \"Test case 4 failed.\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"8\", \"Test case failed.\"\nprint(\"Test case passed.\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\"\n\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\\n\") == \"8\\n\"\nassert solution(\"5 2\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"3 3\\n1 1 2 2 3\\n\") == \"1\\n\"\nassert solution(\"1 3\\n2 3 4 5 6\\n\") == \"1\\n\"\nassert solution(\"6 3\\n1 2 3 4 5\\n\") == \"5\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 109
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"\nassert solution(\"1 10\\n2 5 10 3 8\") == \"5\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\\n\"\nassert solution(\"5 10\\n5 5\") == \"15\\n\"\nassert solution(\"10 10\") == \"20\\n\"\nassert solution(\"10 0\") == \"10\\n\"\nassert solution(\"0 10\") == \"0\\n\"\nassert solution(\"1 10\") == \"1\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 73
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\\n\"\nassert solution(\"4 3\\n3 2\\n\") == \"2\\n\"\nassert solution(\"3 1\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 4\\n4 3\\n\") == \"3\\n\"\nassert solution(\"2 2\\n3 3\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1 1\\n\") == \"0\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\", \"The given input is incorrect.\"\nprint(\"The given input is correct.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n\", \"The solution is incorrect\"\nassert solution() == \"1\\n\", \"The solution is incorrect\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\"\nassert solution(\"10 5\\n10 10\") == \"0\"\nassert solution(\"10 1\\n5 5\") == \"20\"\nassert solution(\"10 10\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 70
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\\n\"\nassert solution(\"5 3\\n2 1\") == \"1\\n\"\nassert solution(\"3 3\\n1 1\") == \"1\\n\"\nassert solution(\"3 3\\n2 2\") == \"2\\n\"\nassert solution(\"3 3\\n1 2\") == \"2\\n\"\n\nprint(\"All tests passed.\")",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\\n\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\\n\") == \"-1\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\\n\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\\n\") == \"-1\\n\"\nassert solution(\"7 3\\n3 7 5 1 10 3 20\\n\") == \"-1\\n\"\nassert solution(\"7 1\\n3 7 5 1 10 3 20\\n\") == \"5\\n\"\nassert solution(\"6 4\\n3 7 5 1 10 3 20\\n\") == \"5\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\\n\"\n\nassert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n7 4\n3 7 5 1 10 3 20\n''') == '6\\n'\n\nassert solution('''\n7 2\n3 7 5 1 10 3 20\n''') == '-1\\n'\n\nprint('All test cases passed')\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '-1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\\n\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\\n\") == \"-1\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\"\"\") == \"\"\"\n3\n3 4 1\n3 5 2\n3 5 1\n\"\"\"\n\nassert solution(\"\"\"\n5 5\n.*...\n****.\n.****\n..**.\n.....\n\"\"\") == \"\"\"\n3\n2 2 1\n3 3 1\n3 4 1\n\"\"\"\n\nassert solution(\"\"\"\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\"\"\") == \"\"\"\n-1\n\"\"\"\n\nassert solution(\"\"\"\n3 3\n*.*\n.*.\n*.*\n\"\"\") == \"\"\"\n-1\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........') == '3\\n3 4 1\\n3 5 2\\n3 5 1\\n'\nassert solution(r'5 5\\n.*...\\n****. \\n.****\\n..**. \\n.....\\n') == '3\\n2 2 1\\n3 3 1\\n3 4 1\\n'\nassert solution(r'5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n') == '-1\\n'\nassert solution(r'3 3\\n*.*\\n.*.\\n*.*\\n') == '-1\\n'",
        "num_ids_2": 117,
        "num_ids_4": 182
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****.\\n.****\\n..**.\\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*.",
        "num_ids_2": 107,
        "num_ids_4": 153
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........''') == '''3\n3 4 1\n3 5 2\n3 5 1\n'''\n\nassert solution('''5 5\n.*...\n****.\n.****\n..**.\n.....''') == '''3\n2 2 1\n3 3 1\n3 4 1\n'''\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '''-1\n'''\n\nassert solution('''3 3\n*.*\n.*.\n*.*''') == '''-1\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\\n5 5\\n.*...\\n****. \\n.****\\n..**.\\n.....\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n\\n3 3\\n*.*\\n*.* \\n*.*\\n*.*\\n') == '3\\n3 4 1\\n3 5 2\\n3 5 1\\n'\nassert solution('5 5\\n.*...\\n***..\\n.*... \\n.*... \\n.....\\n\\n5 5\\n.*...\\n***..\\n.*... \\n.*... \\n.*...\\n') == '-1\\n'\nassert solution('3 3\\n*.*\\n.*. \\n*.*\\n\\n3 3\\n*.*\\n*.* \\n*.*\\n*.*\\n') == '-1\\n'\nassert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\\n5 5\\n.*...\\n****. \\n.****\\n..**.\\n.....\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n\\n3 3\\n*.*\\n*.* \\n*.*\\n*.*\\n') == '3\\n2 2 1\\n3 3 1\\n3 4 1\\n'",
        "num_ids_2": 184,
        "num_ids_4": 362
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**. \\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"-1\\n\"",
        "num_ids_2": 108,
        "num_ids_4": 169
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\"\"\") == \"\"\"3\n3 4 1\n3 5 2\"\"\"\n\nassert solution(\"\"\"\n5 5\n.*...\n****.\n.****\n..**.\n.....\n\"\"\") == \"\"\"3\n2 2 1\n3 3 1\n3 4 1\"\"\"\n\nassert solution(\"\"\"\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\"\"\") == \"\"\"-1\"\"\"\n\nassert solution(\"\"\"\n3 3\n*.*\n.*.\n*.*\n\"\"\") == \"\"\"-1\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****.\\n.****\\n..**.\\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"-1\\n\"",
        "num_ids_2": 107,
        "num_ids_4": 165
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........') == '3\\n3 4 1\\n3 5 2'\nassert solution('5 5\\n.*...\\n****. \\n.****\\n..**.\\n.....') == '3\\n2 2 1\\n3 3 1\\n3 4 1'\nassert solution('5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....') == '-1'\nassert solution('3 3\\n*.*\\n.*.\\n*.*\\n') == '-1'",
        "num_ids_2": 100,
        "num_ids_4": 155
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    6 8\n   ....*...\n   ...**...\n   ..*****.\n   ...**...\n   ....*...\n   ........\n    \"\"\"\n) == \"\"\"\n3\n3 4 1\n3 5 2\n3 5 1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    5 5\n   .*...\n    ****.\n   .****\n   ..**.\n   .....\n    \"\"\"\n) == \"\"\"\n3\n2 2 1\n3 3 1\n3 4 1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    5 5\n   .*...\n    ***..\n   .*...\n   .*...\n   .....\n    \"\"\"\n) == \"\"\"\n-1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3 3\n    *.*\n   .*.\n    *.*\n    \"\"\"\n) == \"\"\"\n-1\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 39
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\\npass\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('good') == 'good'\nassert solution('aabc') == 'ab'\nassert solution('aaa') == 'def solution(stdin: str) -> str:\n    pass'",
        "num_ids_2": 21,
        "num_ids_4": 39
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('good') == 'good'\nassert solution('aabc') == 'ab'\nassert solution('aaa') == 'def solution(stdin: str) -> str:\n    pass'",
        "num_ids_2": 21,
        "num_ids_4": 39
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str: pass\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"good\") == 0\nassert solution(\"aabc\") == 2\nassert solution(\"aaa\") == 3\n",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"good\") == 0, \"Test 1: good\"\nassert solution(\"aabc\") == 2, \"Test 2: aabc\"\nassert solution(\"aaa\") == 3, \"Test 3: aaa\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aabc\") == \"ab\", \"Output should be 'ab', not '{}'\".format(solution(\"aabc\"))\nassert solution(\"aaa\") == \"def\", \"Output should be 'def', not '{}'\".format(solution(\"aaa\"))\nassert solution(\"good\") == \"0\", \"Output should be '0', not '{}'\".format(solution(\"good\"))\nassert solution(\"def\") == \"\", \"Output should be '', not '{}'\".format(solution(\"def\"))\nassert solution(\"\") == \"\", \"Output should be '', not '{}'\".format(solution(\"\"))",
        "num_ids_2": 54,
        "num_ids_4": 102
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"YES\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n10100\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES' + '\\n' + '01010'\nassert solution(input()) == 'NO'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\\n10100\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n10100\"\nassert solution(\"6 4\\n1 5\\n2 2\\n3 1\\n4 2\") == \"NO\"\nassert solution(\"6 4\\n1 5\\n2 2\\n3 1\\n4 2\") == \"NO\"\nassert solution(\"6 3\\n1 5\\n2 2\\n3 3\") == \"YES\\n10100\"\nassert solution(\"6 3\\n1 5\\n2 2\\n3 3\") == \"YES\\n10100\"\nassert solution(\"6 3\\n1 5\\n2 2\\n3 3\") == \"YES\\n10100\"\nassert solution(\"6 3\\n1 5\\n2 2\\n3 3\") == \"YES\\n10100\"\nassert solution(\"6 3\\n1 5\\n2 2\\n3 3\") == \"YES\\n10100\"\nassert solution(\"6 3\\n1 5\\n2 2\\n3 3\") == \"YES\\n10100\"\nassert solution(\"6 3\\n1 5\\n2 2\\n3 3\") == \"YES\\n10100\"\nassert solution(\"6 3\\n1 5\\n2 2\\n3 3\") == \"YES\\n10100\"\nassert solution(\"6 3\\n1 5\\n2 2\\n3 3\") == \"YES\\n10100\"",
        "num_ids_2": 76,
        "num_ids_4": 142
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n10100\"\nassert solution(\"6 5\\n1 6\\n1 1\\n2 3\\n3 4\\n4 5\") == \"YES\\n11011\"\nassert solution(\"6 5\\n1 5\\n2 3\\n1 2\\n3 1\\n4 1\\n5 2\\n6 3\") == \"YES\\n11001\"",
        "num_ids_2": 88,
        "num_ids_4": 142
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n0100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\\n0100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n1 5\\n1 4\\n\") == \"NO\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n1 5\\n1 4\\n5 1\") == \"YES\\n10100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n1 5\\n1 4\\n5 1\\n\") == \"NO\"",
        "num_ids_2": 88,
        "num_ids_4": 196
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n10100\"\nassert solution(\"6 6\\n1 2\\n2 3\\n3 4\\n4 1\\n1 5\\n5 6\") == \"YES\\n10100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 6\\n2 6\\n6 2\\n6 4\") == \"NO\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 6\\n2 6\\n6 2\\n6 4\\n2 5\") == \"YES\\n10100\"",
        "num_ids_2": 93,
        "num_ids_4": 209
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\\n10100\" # correct output\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"NO\" # incorrect output\n\nprint(\"All tests passed!\")",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"YES\\n10100\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\"\nassert solution(\"3 5\\n2 3\\n1 1\\n5 5\\n\") == \"2\"\nassert solution(\"1 7\\n1 6\\n2 7\\n\") == \"2\"\n\nfrom typing import List\n",
        "num_ids_2": 53,
        "num_ids_4": 106
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test failed with input {stdin}, expected {expected}\"\nfor stdin, expected in [\n    (\"\"\"3 5\n2 2\n1 2\n5 5\"\"\", \"\"\"2\n3 4 \n\n\"\"\"),\n    (\"\"\"1 7\n1 7\n\"\"\", \"\"\"0\n\"\"\"),\n]:\n    solution(stdin)",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\nassert solution(\"1 5\\n2 5\\n3 5\\n\") == \"2\\n4\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 86
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\nassert solution(\"3 3\\n3 3\\n\") == \"0\\n\"\nassert solution(\"1 3\\n2 4\\n3 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 1\\n1 2\\n\") == \"0\\n1\\n\"\nassert solution(\"1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"1 1\\n1 1\\n\") == \"0\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 109
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n3 4\\n\", \"Your solution is incorrect.\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_test_case_1) == solution_test_case_1_output, \"Test case 1 failed\"\nassert solution(solution_test_case_2) == solution_test_case_2_output, \"Test case 2 failed\"\nassert solution(solution_test_case_3) == solution_test_case_3_output, \"Test case 3 failed\"\nassert solution(solution_test_case_4) == solution_test_case_4_output, \"Test case 4 failed\"\nassert solution(solution_test_case_5) == solution_test_case_5_output, \"Test case 5 failed\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Solution is incorrect. Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"2\n3 4 \n\"\"\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 9 2 3\") == \"2\", \"Test Case 1\"\nassert solution(\"4 9 4 3\") == \"5\", \"Test Case 2\"\nassert solution(\"4 9 5 3\") == \"7\", \"Test Case 3\"\nassert solution(\"1 10 10 10\") == \"10\", \"Test Case 4\"\nassert solution(\"5 15 15 15\") == \"0\", \"Test Case 5\"",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 9 2 3\") == \"2\", \"Output should be 2.\"\nassert solution(\"1 1 1 1\") == \"1\", \"Output should be 1.\"\nassert solution(\"10 10 10 10\") == \"10\", \"Output should be 10.\"\nassert solution(\"1000000 1000000 1000000 1000000\") == \"1000000\", \"Output should be 1000000.\"\nassert solution(\"1 1 5 7\") == \"2\", \"Output should be 2.\"",
        "num_ids_2": 46,
        "num_ids_4": 134
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 9 2 3\") == \"2\\n\"\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"1 4 5 6\") == \"3\"\nassert solution(\"1 5 7 8\") == \"5\"\nassert solution(\"1000000000 1000000000 1000000000 1000000000\") == \"3\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 9 2 3\") == \"2\\n5 and 7 satisfy the condition.\"\n\nsolution(stdin)",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"7 12 8 5\") == \"3\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"9 10 11 12\") == \"3\"\nassert solution(\"1 3 5 7\") == \"2\"\n",
        "num_ids_2": 33,
        "num_ids_4": 68
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n\", \"Incorrect output.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 9 2 3\") == \"2\\n\"\nassert solution(\"6 7 1 8\") == \"5\\n\"\nassert solution(\"3 6 4 1\") == \"1\\n\"\nassert solution(\"0 1 0 0\") == \"0\\n\"\nassert solution(\"5 10 15 20\") == \"3\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"123456790\") == \"No\"\nassert solution(\"12345678\") == \"No\"\nassert solution(\"1234567899\") == \"No\"\nassert solution(\"12345679\") == \"Yes\"\nassert solution(\"1234567890\") == \"Yes\"\nassert solution(\"12345678901\") == \"No\"\nassert solution(\"123456789012\") == \"Yes\"\nassert solution(\"1234567890123\") == \"No\"\nassert solution(\"12345678901234\") == \"Yes\"\nassert solution(\"123456789012345\") == \"No\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"987654321\") == \"No\"\nassert solution(\"1234567890\") == \"No\"\nassert solution(\"1234567891\") == \"No\"\nassert solution(\"1234567892\") == \"No\"\nassert solution(\"1234567893\") == \"No\"\nassert solution(\"1234567894\") == \"No\"\nassert solution(\"1234567895\") == \"No\"\nassert solution(\"1234567896\") == \"No\"\nassert solution(\"1234567897\") == \"No\"\nassert solution(\"1234567898\") == \"No\"\nassert solution(\"1234567899\") == \"No\"\nassert solution(\"1234567900\") == \"No\"\nassert solution(\"1234567901\") == \"No\"\nassert solution(\"1234567902\") == \"No\"\nassert solution(\"1234567903\") == \"No\"\nassert solution(\"1234567904\") == \"No\"\nassert solution(\"1234567905\") == \"No\"\nassert solution(\"1234567906\") == \"No\"\nassert solution(\"1234567907\") == \"No\"\nassert solution(\"1234567908\") == \"No\"\nassert solution(\"1234567909\") == \"No\"\nassert solution(\"1234567910\") == \"No\"\nassert solution(\"1234567911\") == \"No\"\nassert solution(\"1234567912\") == \"No\"\nassert solution(\"1234567913\") == \"No\"\nassert solution(\"1234567914\") == \"No\"\nassert solution(\"1234567915\") == \"No\"\nassert solution(\"1234567916\") == \"No\"\nassert solution(\"1234567917\") == \"No\"\nassert solution(\"1234567918\") == \"No\"\nassert solution(\"1234567919\") == \"No\"\nassert solution(\"1234567920\") == \"No\"\nassert solution(\"1234567921\") == \"No\"\nassert solution(\"1234567922\") == \"No\"\nassert solution(\"1234567923\") == \"No\"\nassert solution(\"1234567924\") == \"No\"\nassert solution(\"1234567925\") == \"No\"\nassert solution(\"1234567926\") == \"No\"\nassert solution(\"1234567927\") == \"No\"\nassert solution(\"1234567928\") == \"No\"\nassert solution(\"1234567929\") == \"No\"\nassert solution(\"1234567930\") == \"No\"\nassert solution(\"1234567931\") == \"No\"\nassert solution(\"1234567932\") == \"No\"\nassert solution(\"1234567933\") == \"No\"\nassert solution(\"1234567934\") == \"No\"\nassert solution(\"1234567935\") == \"No\"\nassert solution(\"1234567936\") == \"No\"\nassert solution(\"1234567937\") == \"No\"\nassert solution(\"1234567938\") == \"No\"\nassert solution(\"1234567939\") == \"No\"\nassert solution(\"1234567940\") == \"No\"\nassert solution(\"1234567941\") == \"No\"\nassert solution",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(123456789) == \"Yes\", \"Test case 1 failed\"\nassert solution(987654321) == \"No\", \"Test case 2 failed\"\nassert solution(3456789) == \"Yes\", \"Test case 3 failed\"\nassert solution(1234567890) == \"No\", \"Test case 4 failed\"\nassert solution(0) == \"No\", \"Test case 5 failed\"",
        "num_ids_2": 50,
        "num_ids_4": 99
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(123456789) == 'Yes'\nassert solution(12345678) == 'No'\nassert solution(1234567) == 'No'\nassert solution(123456) == 'No'\nassert solution(12345) == 'No'\nassert solution(1234) == 'No'\nassert solution(123) == 'No'\nassert solution(12) == 'No'\nassert solution(1) == 'No'\nassert solution(0) == 'No'\nassert solution(1234567890) == 'No'\nassert solution(1234567891) == 'Yes'\nassert solution(1234567892) == 'Yes'\nassert solution(1234567893) == 'Yes'\nassert solution(1234567894) == 'Yes'\nassert solution(1234567895) == 'Yes'\nassert solution(1234567896) == 'Yes'\nassert solution(1234567897) == 'Yes'\nassert solution(1234567898) == 'Yes'\nassert solution(1234567899) == 'Yes'",
        "num_ids_2": 35,
        "num_ids_4": 66
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"123456789\") == \"Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"12345678\") == \"No\"\nassert solution(\"1234567890\") == \"No\"\nassert solution(\"1234567891\") == \"No\"\nassert solution(\"1234567892\") == \"No\"\nassert solution(\"1234567893\") == \"Yes\"\nassert solution(\"1234567894\") == \"Yes\"\nassert solution(\"1234567895\") == \"No\"\nassert solution(\"1234567896\") == \"No\"\nassert solution(\"1234567897\") == \"No\"\nassert solution(\"1234567898\") == \"No\"\nassert solution(\"1234567899\") == \"Yes\"",
        "num_ids_2": 35,
        "num_ids_4": 73
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"12345678\") == \"No\"\nassert solution(\"1234567\") == \"Yes\"\nassert solution(\"123456\") == \"No\"\nassert solution(\"12345\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"123\") == \"No\"\nassert solution(\"12\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"",
        "num_ids_2": 35,
        "num_ids_4": 66
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\nprint(\"Test Passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"127\") == \"4\", \"Test case 1 failed\"\nassert solution(\"100\") == \"1\", \"Test case 2 failed\"\nassert solution(\"10000\") == \"0\", \"Test case 3 failed\"\nassert solution(\"100000\") == \"0\", \"Test case 4 failed\"\nassert solution
        "num_ids_2": 38,
        "num_ids_4": 81
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"127\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"127\") == \"4\"\n\nassert solution(stdin=\"500\") == \"1\"\n\nassert solution(stdin=\"100\") == \"2\"\n\nassert solution(stdin=\"1000\") == \"1\"\n\nassert solution(stdin=\"1000000\") == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"127\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"127\") == \"4\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '4\\n', \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"127\") == \"4\"\nassert solution(stdin=\"15\") == \"0\"\nassert solution(stdin=\"5\") == \"3\"\nassert solution(stdin=\"100001\") == \"0\"\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"127\\n\") == \"4\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"kyoto\\ntokyo\") == \"Yes\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"hello\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'No'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"abcabcabc\") == \"2\"\nassert solution(\"abcabcabcdef\") == \"3\"\nassert solution(\"abcdef\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"abcd\") == \"3\"\nassert solution(\"abcde\") == \"2\"\nassert solution(\"abcabc\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"cabacc\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 29
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('cabaccabc') == '1'\nassert solution('xyx') == '1'\nassert solution('abc') == '0'\nassert solution('abca') == '1'\nassert solution('abcdefg') == '2'",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('cabacc') == 1, \"Output should be 1 but got {}\".format(solution('cabacc'))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='cabacc\\nabc\\n') == '1\\n'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='8 12 2') == '2'\nprint(\"All test cases passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 12 2\") == \"2\\n\"\nassert solution(\"2 4 6\") == \"3\\n\"\nassert solution(\"3 2 6\") == \"2\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 12 2\") == \"2\", \"Test Case 1\"\nassert solution(\"1 1 1\") == \"1\", \"Test Case 2\"\nassert solution(\"1 2 3\") == \"3\", \"Test Case 3\"\nassert solution(\"10 20 30\") == \"30\", \"Test Case 4\"\nassert solution(\"5 10 25\") == \"25\", \"Test Case 5\"",
        "num_ids_2": 41,
        "num_ids_4": 85
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"The K-th largest positive integer that divides both A and B is not 2\"\nassert solution(input()) == \"3\", \"The K-th largest positive integer that divides both A and B is not 3\"\nassert solution(input()) == \"4\", \"The K-th largest positive integer that divides both A and B is not 4\"\nassert solution(input()) == \"5\", \"The K-th largest positive integer that divides both A and B is not 5\"\nassert solution(input()) == \"6\", \"The K-th largest positive integer that divides both A and B is not 6\"\nassert solution(input()) == \"7\", \"The K-th largest positive integer that divides both A and B is not 7\"\nassert solution(input()) == \"8\", \"The K-th largest positive integer that divides both A and B is not 8\"\nassert solution(input()) == \"9\", \"The K-th largest positive integer that divides both A and B is not 9\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 12 2\") == \"2\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n\", \"Output should be '2\\n', but got '{}'.\".format(solution(input()))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 12 2\") == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 12 2\") == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 12 2\") == \"2\", \"Output should be 2\"\nassert solution(\"5 10 3\") == \"5\", \"Output should be 5\"\nassert solution(\"7 10 4\") == \"4\", \"Output should be 4\"\nassert solution(\"2 3 1\") == \"1\", \"Output should be 1\"",
        "num_ids_2": 44,
        "num_ids_4": 87
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"3 5 7\") == \"4\"\nassert solution(\"0 0 0\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 2\") == \"2\"",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2020\", \"Expected output: 2020, but got: {}\".format(solution(input()))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1024\") == \"2020\\n\", \"Test Case 1 failed\"\nassert solution(\"1000000\") == \"3025\\n\", \"Test Case 2 failed\"\nassert solution(\"1000001\") == \"3026\\n\", \"Test Case 3 failed\"\nassert solution(\"1000010\") == \"3027\\n\", \"Test Case 4 failed\"\nassert solution(\"1000011\") == \"3028\\n\", \"Test Case 5 failed\"\nassert solution(\"1000100\") == \"3029\\n\", \"Test Case 6 failed\"\nassert solution(\"1000101\") == \"3030\\n\", \"Test Case 7 failed\"\nassert solution(\"1000110\") == \"3031\\n\", \"Test Case 8 failed\"\nassert solution(\"1000111\") == \"3032\\n\", \"Test Case 9 failed\"\nassert solution(\"1001000\") == \"3033\\n\", \"Test Case 10 failed\"\nassert solution(\"1001001\") == \"3034\\n\", \"Test Case 11 failed\"\nassert solution(\"1001010\") == \"3035\\n\", \"Test Case 12 failed\"\nassert solution(\"1001011\") == \"3036\\n\", \"Test Case 13 failed\"\nassert solution(\"1001100\") == \"3037\\n\", \"Test Case 14 failed\"\nassert solution(\"1001101\") == \"3038\\n\", \"Test Case 15 failed\"\nassert solution(\"1001110\") == \"3039\\n\", \"Test Case 16 failed\"\nassert solution(\"1001111\") == \"3040\\n\", \"Test Case 17 failed\"\nassert solution(\"1010000\") == \"3041\\n\", \"Test Case 18 failed\"\nassert solution(\"1010001\") == \"3042\\n\", \"Test Case 19 failed\"\nassert solution(\"1010010\") == \"3043\\n\", \"Test Case 20 failed\"\nassert solution(\"1010011\") == \"3044\\n\", \"Test Case 21 failed\"\nassert solution(\"1010100\") == \"3045\\n\", \"Test Case 22 failed\"\nassert solution(\"1010101\") == \"3046\\n\", \"Test Case 23 failed\"\nassert solution(\"1010110\") == \"3047\\n\", \"Test Case 24 failed\"\nassert solution(\"1010111\") == \"3048\\n\", \"Test Case 25 failed\"\nassert solution(\"1011000\") == \"3049\\n\", \"Test Case 26 failed\"\nassert solution(\"1011001\") == \"3050\\n\", \"Test Case 27 failed\"\nassert solution(\"1011010\") == \"3051\\n\", \"Test Case 28 failed\"\nassert solution(\"1011011\") == \"3052\\n\", \"Test Case 29 failed\"\nassert solution(\"1011100\") == \"3053\\n\", \"Test Case 30 failed\"\nassert solution(\"1011101\") == \"3054\\n\", \"Test Case 31 failed\"\nassert solution(\"1011110\") == \"3055\\n\", \"Test Case 32 failed\"\nassert solution(\"1011111\") == \"3056\\n\", \"Test Case 33 failed\"\nassert solution(\"1100000\") == \"3057\\n\", \"Test Case 34 failed\"\nassert solution(\"1100001\") == \"3058\\n\", \"Test Case 35 failed\"\nassert solution(\"1100010\") == \"3059\\n\", \"Test Case",
        "num_ids_2": 53,
        "num_ids_4": 109
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1024\") == \"2020\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1024\") == \"2020\\n\", \"Test failed\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1024\") == \"2020\", \"Your code is not correct.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2020\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1024\") == \"2020\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1024\") == \"2020\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"1024\") == \"2020\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1024\") == \"2020\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 4\") == \"5\\n\"\nassert solution(\"3\\n1 2 3\") == \"5\\n\"\nassert solution(\"4\\n1 4 3 2\") == \"7\\n\"\nassert solution(\"5\\n1 3 2 4 6\") == \"8\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"10\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\\n\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"5\\n1 1 2 3 4\") == \"10\"\nassert solution(\"2\\n3 4 5\") == \"10\"\nassert solution(\"5\\n5 6 7 8 9\") == \"10\"",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1 4') == '5'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 4\") == \"5\\n\"\nassert solution(\"1\\n2 3\") == \"0\\n\"\nassert solution(\"2\\n5 10\") == \"10\\n\"\nassert solution(\"3\\n-100 100\") == \"10\\n\"\nassert solution(\"2\\n5 10\\n-100 100\") == \"10\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '5\\n'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"Invalid input\"\nassert solution(\"N\") == \"Invalid input\"\nassert solution(\"1\") == \"Invalid input\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"3\\n2 6 7 8 9\") == \"26\"\nassert solution(\"5\\n3 6 9 12 15 18\") == \"185\"",
        "num_ids_2": 37,
        "num_ids_4": 65
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 4\\n\") == \"5\\n\"\nassert solution(\"3\\n1 4 2\\n\") == \"10\\n\"\nassert solution(\"4\\n1 2 4\\n\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5\\n\") == \"100\\n\"\nassert solution(\"1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n\") == \"2\\n\"\nassert solution(\"1\\n3\\n\") == \"3\\n\"\nassert solution(\"2\\n1 1 1 1 1 2 2 2 2\\n\") == \"50\\n\"\nassert solution(\"2\\n1 2 2 2 3 3 3 3\\n\") == \"72\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"10\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"10\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"100\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 91
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\\n\"\nassert solution(\"3 5\") == \"3 power strips, each with 3 sockets, extend the socket into 5 empty sockets.\\n\"\nassert solution(\"1 2\") == \"1 power strip, each with 1 socket, extend the socket into 2 empty sockets.\\n\"\nassert solution(\"2 3\") == \"2 power strips, each with 2 sockets, extend the socket into 3 empty sockets.\\n\"\nassert solution(\"5 20\") == \"5 power strips, each with 5 sockets, extend the socket into 20 empty sockets.\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 129
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"\nprint(\"All tests passed.\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"\nassert solution(\"6 8\") == \"4 power strips, each with 6 sockets, extend the socket into 8 empty sockets.\"\nassert solution(\"2 1\") == \"1 power strip, each with 2 sockets, extend the socket into 1 empty socket.\"\nassert solution(\"1 1\") == \"1 power strip, each with 1 socket, extend the socket into 1 empty socket.\"\nassert solution(\"3 1\") == \"1 power strip, each with 3 sockets, extend the socket into 1 empty socket.\"",
        "num_ids_2": 62,
        "num_ids_4": 120
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\\n\", \"Test case failed.\"\nprint(\"Test case passed.\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='4 10') == '3\\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.'\nassert solution(stdin='5 20') == '2\\n2 power strips, each with 5 sockets, extend the socket into 20 empty sockets.'\nassert solution(stdin='10 10') == '2\\n2 power strips, each with 10 sockets, extend the socket into 10 empty sockets.'\nassert solution(stdin='20 10') == '3\\n3 power strips, each with 20 sockets, extend the socket into 10 empty sockets.'",
        "num_ids_2": 74,
        "num_ids_4": 152
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"\nprint(solution(\"4 10\"))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"CSS\") == \"2\\n\"\nassert solution(\"CSR\") == \"2\\n\"\nassert solution(\"CSX\") == \"1\\n\"\nassert solution(\"CST\") == \"2\\n\"\nassert solution(\"CSF\") == \"1\\n\"\nassert solution(\"CST\") == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"CSS\") == \"2\", \"The output should be 2\"\nassert solution(\"CSR\") == \"2\", \"The output should be 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('CSS\\nCSR') == \"2\"\nassert solution('SSS\\nRRR') == \"0\"\nassert solution('SSS\\nRRR') == \"0\"\nassert solution('SSS\\nRRR') == \"0\"\nassert solution('SSS\\nRRR') == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('CSS') == 2, 'Test Case 1 failed'\nassert solution('CSR') == 1, 'Test Case 2 failed'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CSS\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CSS\") == 2\nassert solution(\"CSR\") == 1\nassert solution(\"RRR\") == 0\nassert solution(\"SLS\") == 0",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CSS\") == \"2\", \"The solution should be 2.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\n\nassert solution(\"RCS\") == \"0\"\nassert solution(\"SSS\") == \"1\"\nassert solution(\"RCS\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\", \"The output should be 2\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b\"5\\n1 3 5 4 2\") == \"2\\n\", \"Test Case 1 Failed\"\nassert solution(b\"5\\n2 1 3 4 5\") == \"2\\n\", \"Test Case 2 Failed\"\nassert solution(b\"5\\n2 1 3 4 6\") == \"0\\n\", \"Test Case 3 Failed\"\nassert solution(b\"5\\n1 2 3 4 5\") == \"0\\n\", \"Test Case 4 Failed\"\nassert solution(b\"5\\n1 3 4 5 6\") == \"1\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"5\\n5 4 3 2 1\") == \"2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"\nassert solution(\"5\\n2 5 4 3 1\") == \"3\\n\"\nassert solution(\"5\\n2 4 3 5 1\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 5 1\") == \"3\\n\"\nassert solution(\"5\\n2 4 5 3 1\") == \"1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 5 4 2\\n') == '2\\n'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"5\\n2 4 3 5 1\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5\\n3 4 1 5 2\") == \"1\"\nassert solution(\"5\\n4 3 5 1 2\") == \"2\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"5\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"\nassert solution(\"6\\n1 3 5 4 2 6 7 8 9\") == \"4\\n\"\nassert solution(\"8\\n1 3 5 4 2 6 7 8 9 10 11 12\") == \"6\\n\"\nassert solution(\"12\\n1 3 5 4 2 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"8\\n\"\nassert solution(\"20\\n1 3 5 4 2 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"10\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 156
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n\"\nassert solution(\"10\\n9 8 7 6 5 4 3 2 1\") == \"10\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 111
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\") == \"5.410\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == \"5.480\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n\") == \"6.040\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.040\"\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"6.720\"",
        "num_ids_2": 183,
        "num_ids_4": 351
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\\nInput\\n5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\\nInput\\n8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\\nInput\\n5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\\nInput\\n8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\\nInput\\n7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"5.410\", \"Solution 1\"\nassert solution(\"Input\\n5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\\nInput\\n8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\\nInput\\n5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\\nInput\\n8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\\nInput\\n7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"5.620\", \"Solution 2\"\nassert solution(\"Input\\n8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.",
        "num_ids_2": 982,
        "num_ids_4": 1027
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\"\"\") == \"5.410\"\n\nassert solution(\"\"\"5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\"\"\") == \"5.620\"\n\nassert solution(\"\"\"8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\"\"\") == \"5.480\"\n\nassert solution(\"\"\"5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\"\"\") == \"6.040\"\n\nassert solution(\"\"\"8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n\"\"\") == \"6.040\"\n\nassert solution(\"\"\"7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n\"\"\") == \"6.720\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}, Expected output: {output()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n') == '5.410'\nassert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n') == '5.620'\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n') == '5.480'\nassert solution('5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n') == '6.040'\nassert solution('8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n') == '6.040'\nassert solution('7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n') == '6.720'",
        "num_ids_2": 183,
        "num_ids_4": 351
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\\nInput\\n5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\\nInput\\n8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\\nInput\\n5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\\nInput\\n8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\\nInput\\n7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\\nOutput\\n5.410\") == \"5.410\", \"Solution failed\"\nassert solution(\"Input\\n5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\\nInput\\n8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\\nInput\\n5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\\nInput\\n8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\\nInput\\n7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\\nOutput\\n5.620\") == \"5.620\", \"Solution failed\"\nassert solution(\"Input\\n8\\n16.94 2.42\\n15.72",
        "num_ids_2": 1000,
        "num_ids_4": 1027
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\\nInput\\n5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\\nInput\\n8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\\nInput\\n5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\\nInput\\n8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\\nInput\\n7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"5.410\\n\", \"The solution is incorrect.\"\nassert solution(\"Input\\n5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\\n\", \"The solution is incorrect.\"\nassert solution(\"Input\\n8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\\nInput\\n5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\\nInput\\n8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\\nInput\\n7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"6.040\\n\", \"The solution is incorrect.\"\nassert solution(\"Input\\n7\\n20.62 3.00",
        "num_ids_2": 628,
        "num_ids_4": 1027
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '5.410\\n', \"The answer to the problem statement is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"-2.14 2.06\") == \"5.410\"\nassert solution(\"-1.14 2.04\") == \"5.410\"\nassert solution(\"-2.16 1.46\") == \"5.410\"\nassert solution(\"-2.14 0.70\") == \"5.410\"\nassert solution(\"-1.42 0.40\") == \"5.410\"\nassert solution(\"-0.94 -0.48\") == \"5.410\"\nassert solution(\"-1.42 -1.28\") == \"5.410\"\nassert solution(\"-2.16 -1.62\") == \"5.410\"\n\nassert solution(\"-2.14 2.06\") == \"5.620\"\nassert solution(\"-1.14 2.04\") == \"5.620\"\nassert solution(\"-2.16 1.46\") == \"5.620\"\nassert solution(\"-2.14 0.70\") == \"5.620\"\nassert solution(\"-1.42 0.40\") == \"5.620\"\nassert solution(\"-0.94 -0.48\") == \"5.620\"\nassert solution(\"-1.42 -1.28\") == \"5.620\"\nassert solution(\"-2.16 -1.62\") == \"5.620\"\n\nassert solution(\"-2.14 2.06\") == \"5.480\"\nassert solution(\"-1.14 2.04\") == \"5.480\"\nassert solution(\"-2.16 1.46\") == \"5.480\"\nassert solution(\"-2.14 0.70\") == \"5.480\"\nassert solution(\"-1.42 0.40\") == \"5.480\"\nassert solution(\"-0.94 -0.48\") == \"5.480\"\nassert solution(\"-1.42 -1.28\") == \"5.480\"\nassert solution(\"-2.16 -1.62\") == \"5.480\"\n\nassert solution(\"-2.14 2.06\") == \"6.040\"\nassert solution(\"-1.14 2.04\") == \"6.040\"\nassert solution(\"-2.16 1.46\") == \"6.040\"\nassert solution(\"-2.14 0.70\") == \"6.040\"\nassert solution(\"-1.42 0.40\") == \"6.040\"\nassert solution(\"-0.94 -0.48\") == \"6.040\"\nassert solution(\"-1.42 -1.28\") == \"6.040\"\nassert solution(\"-2.16 -1.62\") == \"6.040\"\n\nassert solution(\"-2.14 2.06\") == \"6.720\"\nassert solution(\"-1.14 2.04\") == \"6.720\"\nassert solution(\"-2.16 1.46\") == \"6.720\"\nassert solution(\"-2.14 0.70\") == \"6.720\"\nassert solution(\"-1.42 0.40\") == \"6.720\"\nassert solution(\"-0.94 -0.48\") == \"6.720\"\nassert solution(\"-1.42 -1.28\") == \"6.720\"\nassert solution(\"-2.16 -1.62\") == \"6.720\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\\n\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\\n\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\\n\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\\n\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"4\"\nassert solution(solution) == \"2\"\nassert solution(solution) == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution_input) == solution_output, f\"Test case {t+1} failed: solution(stdin) should return solution_output, but it returns {solution(stdin)}.\" for t, (solution_input, solution_output) in enumerate(tests)\n\ntests = [\n    ([5, 8], 4),\n    ([7, 10], 2),\n    ([5, 15], 1),\n    ([5, 16], 2),\n    ([5, 26], -1),\n]\n\nsolution_input = \"\"\"\n5 8\n2 3 1 1 2\n\"\"\"\n\nsolution_output = 4\n\nfor t, (solution_input, solution_output) in enumerate(tests):\n    assert solution(solution_input) == solution_output, f\"Test case {t+1} failed: solution(stdin) should return solution_output, but it returns {solution(stdin)}.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"4\\n2\\n1\\n-1\"\nassert solution(open(\"input1.txt\", \"r\").read()) == \"4\\n2\\n1\\n2\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"2\\n1\\n2\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"1\\n2\\n2\"\nassert solution(open(\"input4.txt\", \"r\").read()) == \"-1\"\n",
        "num_ids_2": 58,
        "num_ids_4": 110
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n5 8\n2 3 1 1 2\n''') == '4\\n'\n\nassert solution('''\n7 10\n1 3 4 2 1 4 2\n''') == '2\\n'\n\nassert solution('''\n5 15\n5 5 5 5 5\n''') == '1\\n'\n\nassert solution('''\n5 16\n5 5 5 5 5\n''') == '2\\n'\n\nassert solution('''\n5 26\n5 5 5 5 5\n''') == '-1\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"For input {input()}, expected output {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\\n\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\\n\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\\n\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\\n\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\n1 2 3 \n\n\"\"\"\n\nassert solution() == \"\"\"\n7 3 1 3\n\n\"\"\"\n\nassert solution() == \"\"\"\n1 1 2 1 1 1 1\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 2 3\"\nassert solution() == \"7 3 1 3\"\nassert solution() == \"1 1 1 1 1 1 2 1 2 1 2 1 1 1 1\"",
        "num_ids_2": 26,
        "num_ids_4": 62
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 2 3 \\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7, 3) == '1 2 3'\nassert solution(10, 4) == '7 3 1 3'\nassert solution(15, 2) == '1 1'",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([7, 3, 1, 3]) == '1 2 3'\nassert solution([10, 4]) == '7 3 1 3'\nassert solution([15, 2]) == '1 1 1 2 1'",
        "num_ids_2": 43,
        "num_ids_4": 65
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3\\n1 2 3 2 4 3 1\") == \"1 2 3 \"\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\") == \"7 3 1 3\"\nassert solution(\"15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\") == \"1 1\"\n",
        "num_ids_2": 73,
        "num_ids_4": 119
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '1 2'\nassert solution(3) == '1 2 3'\nassert solution(4) == '1 2 3 4'\nassert solution(5) == '1 2 3 4 5'",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input '{input()}' expected output '{expected_output}' but got '{solution(input())}'\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '''1 2 3\n7 3 1 3\n1 1 1 1 1 1 1 1'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2\\n9 9\\n10 8\\n5 3\\n4 3') == '5'\nassert solution('2 4\\n1 2 3 4\\n10 3 7 3\\n') == '0'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '3'",
        "num_ids_2": 66,
        "num_ids_4": 98
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\\n\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 104
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5\", \"The output should be 5.\"\nassert solution(stdin) == \"0\", \"The output should be 0.\"\nassert solution(stdin) == \"3\", \"The output should be 3.\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 4\\n1 2 3 4\") == \"0\"\nassert solution(\"6 1\\n3\") == \"3\"\nassert solution(\"4 2\\n1 1 2 3\") == \"5\"",
        "num_ids_2": 29,
        "num_ids_4": 65
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\"\nassert solution() == \"0\"\nassert solution() == \"3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n9 9\\n10 8\\n5 3\\n4 3') == '5\\n'\nassert solution('2 4\\n1 2 3 4\\n10 3 7 3\\n') == '0\\n'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '3\\n'",
        "num_ids_2": 70,
        "num_ids_4": 104
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 5\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"6\\nxxxiii\\n\") == \"1\\n\"\nassert solution(stdin=\"5\\nxxoxx\\n\") == \"0\\n\"\nassert solution(stdin=\"10\\nxxxxxxxxxx\\n\") == \"8\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 62
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nxiii\") == 1\nassert solution(\"5\\nxoxx\") == 0\nassert solution(\"10\\nxxxxxxxxxxx\") == 8",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"1\"\nassert solution(5) == \"0\"\nassert solution(10) == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nxxxiii\\n\") == \"1\\n\"\nassert solution(\"5\\nxxoxx\\n\") == \"0\\n\"\nassert solution(\"10\\nxxxxxxxxxx\\n\") == \"8\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 56
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"8\"\n\nimport re",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\nxiii\\n') == '1'\nassert solution('5\\nxoxx\\n') == '0'\nassert solution('10\\nxxxxxxxxxxx\\n') == '8'",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nxxxxiii\\n\") == 1\nassert solution(\"5\\nxxxoxx\\n\") == 0\nassert solution(\"10\\nxxxxxxxxxx\\n\") == 8",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6, \"xxxiii\") == \"1\"\nassert solution(5, \"xxoxx\") == \"0\"\nassert solution(10, \"xxxxxxxxxx\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6, \"xxxiii\") == 1\nassert solution(5, \"xxoxx\") == 0\nassert solution(10, \"xxxxxxxxxx\") == 8\n\nfrom typing import List",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"48\"\n\nsolution(\"4\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == 48",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '48\\n', 'Test Case 1'\n\nassert solution(input()) == '75\\n', 'Test Case 2'\n\nassert solution(input()) == '84\\n', 'Test Case 3'\n\nassert solution(input()) == '100\\n', 'Test Case 4'\n\nassert solution(input()) == '133\\n', 'Test Case 5'",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == '48'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n\") == \"48\\n\"\nassert solution(\"100\\n\") == \"1440\\n\"\nassert solution(\"-1\\n\") == \"Error: r must be an integer.\\n\"\nassert solution(\"abc\\n\") == \"Error: Invalid input format.\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == '48', \"Test failed for the given input.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"48\", \"Test failed: Area of a regular dodecagon inscribed in a circle of radius 4 is not 48.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 48, \"The area of the regular dodecagon inscribed in a circle of radius 4 is 48.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"8 5\") == \"safe\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('1 1') =='safe'\nassert solution('2 3') =='safe'\nassert solution('4 0') =='safe'\nassert solution('5 5') == 'unsafe'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"unsafe\", \"Solution should return 'unsafe'.\"\nassert solution(\"5 4\") == \"unsafe\", \"Solution should return 'unsafe'.\"\nassert solution(\"4 3\") == \"safe\", \"Solution should return'safe'.\"\nassert solution(\"1 10\") == \"safe\", \"Solution should return'safe'.\"",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"unsafe\\n\"\nassert solution(\"10 0\") == \"safe\\n\"\nassert solution(\"0 5\") == \"safe\\n\"\nassert solution(\"5 10\") == \"safe\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'unsafe'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5') == 'unsafe', \"Test case 1 failed\"\n\nS = int(input())\nW = int(input())",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"3 4 5\") == \"6\", \"The area of the triangle ABC is incorrect.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '6', 'Incorrect output'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\", \"Please provide the correct input.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"2 3 4\") == \"6\"\nassert solution(\"3 1 4\") == \"3\"\nassert solution(\"4 3 2\") == \"3\"\nassert solution(\"5 4 3\") == \"6\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('2 4 3') == '12'\nassert solution('3 4 1') == '0'\nassert solution('5 10 2') == '15'\nassert solution('10 10 5') == '40'\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"4 3 5\") == \"6\"\nassert solution(\"2 3 4\") == \"12\"\nassert solution(\"6 7 8\") == \"54\"\nassert solution(\"5 8 10\") == \"300\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\") == \"6\", \"Solution should return 6\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('2 3 4') == '10'\nassert solution('10 20 30') == '35'\nassert solution('5 5 5') == '25'\nassert solution('1 1 1') == '1'",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\") == \"6\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"0 0 0\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\\n\", \"The output is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"1 10 6\") == \"1\"\nassert solution(\"5 9 3\") == \"3\"\nassert solution(\"10 8 5\") == \"1\"\nassert solution(\"100 50 20\") == \"1\"\nassert solution(\"10 10 10\") == \"1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 11 4\") == \"4\", \"Invalid input\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 11 4\") == \"4\\n\"\nassert solution(\"5 8 2\") == \"0\\n\"\nassert solution(\"3 2 1\") == \"0\\n\"\nassert solution(\"2 0 1\") == \"0\\n\"\nassert solution(\"1 1 1\") == \"1\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 11 4\") == \"4\", \"Takahashi likes the sound when he buys a drink from a vending machine. That sound can be heard by spending A yen (the currency of Japan) each time. Takahashi has B yen. He will hear the sound as many times as he can with that money, but at most C times, as he would be satisfied at that time.\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 11 4\") == \"4\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 11 4') == '4'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 11 4') == '4\\n'\nassert solution('10 50 25') == '5\\n'\nassert solution('100 100 100') == '10\\n'\nassert solution('1 2 3') == '0\\n'\nassert solution('0 0 0') == '0\\n'",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 11 4\") == \"4\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"10\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 4\") == \"6\"\nassert solution(\"5 6\") == \"120\"\nassert solution(\"7 8\") == \"480\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"10 3\") == \"30\"\nassert solution(\"4 6\") == \"120\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"-2 -1\") == \"0\"\nassert solution(\"10 5\") == \"50\"\n\nfor input_ in [2, 5, 10, 3, 4, 6, 0, -2, -1, 10, 5]:\n    print(solution(str(input_)))",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"10\", \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\", \"Test case 1 failed\"\nassert solution(\"3 5\") == \"15\", \"Test case 2 failed\"\nassert solution(\"100 100\") == \"10000\", \"Test case 3 failed\"\nassert solution(\"100 0\") == \"0\", \"Test case 4 failed\"\nassert solution(\"0 100\") == \"0\", \"Test case 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == \"10\\n\", \"Incorrect output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"10\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"10\", \"Expected 10, got: {}\".format(solution(\"2 5\"))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"10 10\") == \"200\"\nassert solution(\"100 100\") == \"40000\"\nassert solution(\"1000000000 1000000000\") == \"999999999800000000000\"\nassert solution(\"1000000001 1000000000\") == \"999999999900000000000\"",
        "num_ids_2": 29,
        "num_ids_4": 99
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"2 4\") == \"8\"\nassert solution(\"2 10\") == \"50\"\nassert solution(\"10 2\") == \"50\"\nassert solution(\"5 10\") == \"100\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"0 0\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 7\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 7\") == \"10\\n\", \"Expected output: 10\\n, but got: {}\".format(solution(\"3 5 7\"))",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 7\") == \"10\\n\", \"Incorrect Output\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 7\") == \"10\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"5 5 7\") == \"25\"\nassert solution(\"1 1 7\") == \"0\"\nassert solution(\"2 2 7\") == \"0\"\nassert solution(\"3 3 7\") == \"0\"\nassert solution(\"4 4 7\") == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 7\") == \"10\", \"Test Case 1 Failed\"\nassert solution(\"4 6 8\") == \"15\", \"Test Case 2 Failed\"\nassert solution(\"5 7 9\") == \"20\", \"Test Case 3 Failed\"\nassert solution(\"6 8 10\") == \"25\", \"Test Case 4 Failed\"\nassert solution(\"7 9 11\") == \"30\", \"Test Case 5 Failed\"\nassert solution(\"8 10 12\") == \"35\", \"Test Case 6 Failed\"\nassert solution(\"9 11 13\") == \"40\", \"Test Case 7 Failed\"\nassert solution(\"10 12 14\") == \"45\", \"Test Case 8 Failed\"\nassert solution(\"11 13 15\") == \"50\", \"Test Case 9 Failed\"\nassert solution(\"12 14 16\") == \"55\", \"Test Case 10 Failed\"\nassert solution(\"13 15 17\") == \"60\", \"Test Case 11 Failed\"\nassert solution(\"14 16 18\") == \"65\", \"Test Case 12 Failed\"\nassert solution(\"15 17 19\") == \"70\", \"Test Case 13 Failed\"\nassert solution(\"16 18 20\") == \"75\", \"Test Case 14 Failed\"\nassert solution(\"17 19 21\") == \"80\", \"Test Case 15 Failed\"\nassert solution(\"18 20 22\") == \"85\", \"Test Case 16 Failed\"\nassert solution(\"19 21 23\") == \"90\", \"Test Case 17 Failed\"\nassert solution(\"20 22 24\") == \"95\", \"Test Case 18 Failed\"\nassert solution(\"21 23 25\") == \"100\", \"Test Case 19 Failed\"\nassert solution(\"22 24 26\") == \"105\", \"Test Case 20 Failed\"\nassert solution(\"23 25 27\") == \"110\", \"Test Case 21 Failed\"\nassert solution(\"24 26 28\") == \"115\", \"Test Case 22 Failed\"\nassert solution(\"25 27 29\") == \"120\", \"Test Case 23 Failed\"\nassert solution(\"26 28 30\") == \"125\", \"Test Case 24 Failed\"\nassert solution(\"27 29 31\") == \"130\", \"Test Case 25 Failed\"\nassert solution(\"28 30 32\") == \"135\", \"Test Case 26 Failed\"\nassert solution(\"29 31 33\") == \"140\", \"Test Case 27 Failed\"\nassert solution(\"30 32 34\") == \"145\", \"Test Case 28 Failed\"\nassert solution(\"31 33 35\") == \"150\", \"Test Case 29 Failed\"\nassert solution(\"32 34 36\") == \"155\", \"Test Case 30 Failed\"\nassert solution(\"33 35 37\") == \"160\", \"Test Case 31 Failed\"\nassert solution(\"34 36 38\") == \"165\", \"Test Case 32 Failed\"\nassert solution(\"35 37 39\") == \"170\", \"Test Case 33 Failed\"\nassert solution(\"36 38 40\") == \"175\", \"Test Case 34 Failed\"\nassert solution(\"37 39 41\") == \"180\", \"Test Case 35 Failed\"\nassert solution(\"38 40 42\") == \"185\", \"Test Case 36 Failed\"\nassert solution(\"39 41 43\") == \"190\", \"Test Case 37 Failed\"\nassert solution(\"40 42 44\") == \"195\", \"Test Case 38 Failed\"\nassert solution(\"41 43 45\") == \"200\", \"Test Case 39 Failed\"\nassert solution(\"42 44 46\") == \"2",
        "num_ids_2": 44,
        "num_ids_4": 89
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"10\\n\", \"Test Case 1 Failed\"\nassert solution(stdin) == \"10\\n\", \"Test Case 2 Failed\"\nassert solution(stdin) == \"20\\n\", \"Test Case 3 Failed\"\nassert solution(stdin) == \"20\\n\", \"Test Case 4 Failed\"\nassert solution(stdin) == \"10\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 7\") == \"10\\n\", \"Incorrect output for T = 7\"\nassert solution(\"3 4 3\") == \"10\\n\", \"Incorrect output for T = 4\"\nassert solution(\"3 4 2\") == \"10\\n\", \"Incorrect output for T = 2\"\nassert solution(\"3 4 1\") == \"10\\n\", \"Incorrect output for T = 1\"\nassert solution(\"3 4 0.5\") == \"10\\n\", \"Incorrect output for T = 0.5\"\nassert solution(\"3 4 -1\") == \"10\\n\", \"Incorrect output for T = -1\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"5 5 5\") == \"50\"\nassert solution(\"2 2 2\") == \"0\"\nassert solution(\"10 5 10\") == \"100\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'OK'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n500 600\\n\") == \"OK\\nAmong the multiples of 7, for example, 567 lies between 500 and 600.\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\\nAmong the multiples of 7, for example, 567 lies between 500 and 600.\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"5\\n500 500\") == \"NG\"\nassert solution(\"100\\n1000 1000\") == \"OK\"\nassert solution(\"2\\n100 100\") == \"NG\"\n",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'OK'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\\nAmong the multiples of 7, for example, 567 lies between 500 and 600.\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"OK\"\nassert solution(input()) == \"OK\"\nassert solution(input()) == \"OK\"\nassert solution(input()) == \"OK\"\nassert solution(input()) == \"NG\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\\nAmong the multiples of 7, for example, 567 lies between 500 and 600.\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\\n\"\nassert solution(\"2\\n500 600\") == \"NG\\n\"\nassert solution(\"10\\n500 600\") == \"NG\\n\"\nassert solution(\"1\\n500 600\") == \"OK\\n\"\nassert solution(\"1\\n500 500\") == \"OK\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n500 600\\n\") == \"OK\\nAmong the multiples of 7, for example, 567 lies between 500 and 600.\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter T and X: \")) == \"2.6666666667\\n\", \"The correct output is not found.\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nassert solution(\"5 2\") == \"1.0\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2.6666666667\\n\", \"The output is incorrect.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\\n\", \"Test case 1\"\nassert solution(\"10 5\") == \"3\\n\", \"Test case 2\"\nassert solution(\"1 2\") == \"1\\n\", \"Test case 3\"\nassert solution(\"5 10\") == \"4.6666666667\\n\", \"Test case 4\"\nassert solution(\"100 100\") == \"100\\n\", \"Test case 5\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nprint(\"All test cases pass.\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8 3') == '2.6666666667'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2.6666666667\\n\", \"Test case 1 failed.\"\n\nassert solution(input()) == \"2.6666666667\\n\", \"Test case 2 failed.\"\n\nassert solution(input()) == \"2.6666666667\\n\", \"Test case 3 failed.\"\n\nassert solution(input()) == \"2.6666666667\\n\", \"Test case 4 failed.\"\n\nassert solution(input()) == \"2.6666666667\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 3') == 2.6666666667\nassert solution('5 4') == 0.6666666667\nassert solution('3 2') == 0.5\nassert solution('6 2') == 1.3333333333\nassert solution('7 2') == 1.5\nassert solution('10 3') == 2.6666666667",
        "num_ids_2": 44,
        "num_ids_4": 79
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\", \"Input error\"\nassert abs(solution(\"8 3\") - 2.6666666667) <= 1e-3, \"Output error\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 4 3\") == \"1\\n\", \"Test case 1\"\nassert solution(\"7 3 2\") == \"0\\n\", \"Test case 2\"\nassert solution(\"8 4 2\") == \"1\\n\", \"Test case 3\"\nassert solution(\"9 5 3\") == \"2\\n\", \"Test case 4\"\nassert solution(\"10 6 3\") == \"3\\n\", \"Test case 5\"\nassert solution(\"11 7 2\") == \"0\\n\", \"Test case 6\"\nassert solution(\"12 8 3\") == \"1\\n\", \"Test case 7\"\nassert solution(\"13 9 3\") == \"2\\n\", \"Test case 8\"\nassert solution(\"14 10 3\") == \"3\\n\", \"Test case 9\"\nassert solution(\"15 11 2\") == \"0\\n\", \"Test case 10\"\nassert solution(\"16 12 3\") == \"1\\n\", \"Test case 11\"\nassert solution(\"17 13 3\") == \"2\\n\", \"Test case 12\"\nassert solution(\"18 14 3\") == \"3\\n\", \"Test case 13\"\nassert solution(\"19 15 2\") == \"0\\n\", \"Test case 14\"\nassert solution(\"20 16 3\") == \"1\\n\", \"Test case 15\"\nassert solution(\"21 17 3\") == \"2\\n\", \"Test case 16\"\nassert solution(\"22 18 3\") == \"3\\n\", \"Test case 17\"\nassert solution(\"23 19 2\") == \"0\\n\", \"Test case 18\"\nassert solution(\"24 20 3\") == \"1\\n\", \"Test case 19\"\nassert solution(\"25 21 3\") == \"2\\n\", \"Test case 20\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 4 3\") == \"1\\n\", \"Test Case 1\"\nassert solution(\"6 4 2\") == \"0\\n\", \"Test Case 2\"\nassert solution(\"6 5 3\") == \"1\\n\", \"Test Case 3\"\nassert solution(\"6 2 5\") == \"0\\n\", \"Test Case 4\"\nassert solution(\"6 3 5\") == \"2\\n\", \"Test Case 5\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 4 3\") == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nprint(\"All test cases passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 4 3\") == \"1\\n\", \"Test case 1 failed.\"\nassert solution(\"4 2 1\") == \"2\\n\", \"Test case 2 failed.\"\nassert solution(\"8 8 8\") == \"0\\n\", \"Test case 3 failed.\"\nassert solution(\"1 1 1\") == \"0\\n\", \"Test case 4 failed.\"\nassert solution(\"1 1 1\") == \"0\\n\", \"Test case 5 failed.\"\nassert solution(\"9 10 11\") == \"3\\n\", \"Test case 6 failed.\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 4 3\") == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nprint(\"All tests passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 4 3\") == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\\n2 1 4 3\") == \"6\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n2 3 4 1 5\\n3 4 1 5 2\\n4 5 2 3 1\") == \"12\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"12\\n\"\nassert solution(\"1\\n1\") == \"0\\n\"\nassert solution(\"2\\n1 2\\n2 1\\n1 2\\n2 1\\n\") == \"0\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 127
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2\\n') == '3\\n'\nassert solution('4\\n1 2 3\\n2 1 3\\n3 1 2\\n4 1 2\\n5 1 2\\n') == '6\\n'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\\n\") == \"3\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2') == '3\\n'\nassert solution('5\\n1 2 3 4 5\\n2 1 4 5 3') == '3\\n'\nassert solution('7\\n1 2 3 4 5 6 7\\n3 1 5 6 2 4 7') == '4\\n'\nassert solution('9\\n1 2 3 4 5 6 7 8 9\\n4 1 8 9 3 6 7 5 2') == '4\\n'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n6 1 10 9 5 7 8 3 2 4') == '4\\n'",
        "num_ids_2": 60,
        "num_ids_4": 152
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"2\\n4 3 2\\n3 4 2\") == \"2\\n\"\nassert solution(\"4\\n3 4 2\\n4 3 2\") == \"4\\n\"\nassert solution(\"2\\n4 1 2\\n1 4 2\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n2 1 3\") == \"3\\n\"\nassert solution(\"2\\n1 2 3\\n3 1 2\") == \"2\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2\\n') == '3\\n'\nassert solution('4\\n1 2 3\\n2 1 3\\n3 1 2\\n') == '2\\n'\nassert solution('5\\n1 2 3 4 5\\n2 1 3 4 5\\n3 1 2 4 5\\n4 1 2 3 5\\n5 1 2 3 4\\n') == '3\\n'\nassert solution('6\\n1 2 3 4 5 6\\n2 1 3 4 5 6\\n3 1 2 4 5 6\\n4 1 2 3 5 6\\n5 1 2 3 4 6\\n6 1 2 3 4 5\\n') == '2\\n'",
        "num_ids_2": 63,
        "num_ids_4": 224
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ATCODER\") == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ATCODER\") == \"3\", \"Testcase 1 failed\"\nassert solution(\"GATCAGTCA\") == \"7\", \"Testcase 2 failed\"\nassert solution(\"ABCDE\") == \"0\", \"Testcase 3 failed\"\nassert solution(\"ACGT\") == \"1\", \"Testcase 4 failed\"\nassert solution(\"ACGT123\") == \"2\", \"Testcase 5 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ATCODER\") == \"3\"\nprint(\"All test cases pass\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ATCODER\") == 3",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ATCODER\") == \"3\", \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ATCODER\") == 3",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ATCODER\") == \"3\", \"Incorrect Output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ATCODER\") == \"3\"\nassert solution(\"ABCDGHIJKLMNOPQRSTUVWXYZ\") == \"10\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ATCODER\") == 3\nassert solution(\"AGGT\") == 0\nassert solution(\"A\") == 0\nassert solution(\"ACGT\") == 0\nassert solution(\"AAA\") == 0",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ATCODER\") == \"3\"\nassert solution(\"ABC\") == \"0\"\nassert solution(\"ACGT\") == \"4\"\nassert solution(\"ACGTABCD\") == \"1\"\nassert solution(\"AGGTAB\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\\n\", \"Test case failed.\"\nassert solution(11) == \"9\\n\", \"Test case failed.\"\nassert solution(10) == \"1\\n\", \"Test case failed.\"\nassert solution(0) == \"0\\n\", \"Test case failed.\"\nassert solution(5) == \"0\\n\", \"Test case failed.\"\nassert solution(100) == \"0\\n\", \"Test case failed.\"",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(11) == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"9\", \"Error: Incorrect output.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"9\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(11) == '9', 'The solution is not correct'\nassert solution(21) == '4', 'The solution is not correct'\nassert solution(31) == '4', 'The solution is not correct'\nassert solution(41) == '4', 'The solution is not correct'\nassert solution(51) == '4', 'The solution is not correct'",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('11') == '9', \"Test case 1 failed\"\nassert solution('123') == '1', \"Test case 2 failed\"\nassert solution('0') == '0', \"Test case 3 failed\"\nassert solution('1') == '0', \"Test case 4 failed\"\nassert solution('12') == '2', \"Test case 5 failed\"\nassert solution('12345') == '10', \"Test case 6 failed\"\nassert solution('123456') == '5', \"Test case 7 failed\"\nassert solution('1234567') == '3', \"Test case 8 failed\"\nassert solution('12345678') == '2', \"Test case 9 failed\"\nassert solution('123456789') == '1', \"Test case 10 failed\"\nassert solution('1234567890') == '0', \"Test case 11 failed\"\nassert solution('12345678901') == '0', \"Test case 12 failed\"\nassert solution('123456789012') == '0', \"Test case 13 failed\"\nassert solution('1234567890123') == '0', \"Test case 14 failed\"\nassert solution('12345678901234') == '0', \"Test case 15 failed\"\nassert solution('123456789012345') == '0', \"Test case 16 failed\"\nassert solution('1234567890123456') == '0', \"Test case 17 failed\"\nassert solution('12345678901234567') == '0', \"Test case 18 failed\"\nassert solution('123456789012345678') == '0', \"Test case 19 failed\"\nassert solution('1234567890123456789') == '0', \"Test case 20 failed\"\nassert solution('12345678901234567890') == '0', \"Test case 21 failed\"\nassert solution('123456789012345678901') == '0', \"Test case 22 failed\"\nassert solution('1234567890123456789012') == '0', \"Test case 23 failed\"\nassert solution('12345678901234567890123') == '0', \"Test case 24 failed\"\nassert solution('123456789012345678901234') == '0', \"Test case 25 failed\"\nassert solution('1234567890123456789012345') == '0', \"Test case 26 failed\"\nassert solution('12345678901234567890123456') == '0', \"Test case 27 failed\"\nassert solution('123456789012345678901234567') == '0', \"Test case 28 failed\"\nassert solution('1234567890123456789012345678') == '0', \"Test case 29 failed\"\nassert solution('12345678901234567890123456789') == '0', \"Test case 30 failed\"\nassert solution('123456789012345678901234567890') == '0', \"Test case 31 failed\"\nassert solution('1234567890123456789012345678901') == '0', \"Test case ",
        "num_ids_2": 37,
        "num_ids_4": 71
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(11) == 9, \"Expected 9, but got {}\".format(solution(11))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(11) == 9, \"Test 1 failed\"\nassert solution(22) == 12, \"Test 2 failed\"\nassert solution(33) == 16, \"Test 3 failed\"\nassert solution(44) == 20, \"Test 4 failed\"\nassert solution(55) == 24, \"Test 5 failed\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(11) == 9, \"The correct output should be 9, but it is: \" + str(solution(11))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"9\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('cupofcoffee') == 'hottea', \"Expected 'hottea', but got '{}'\".format(solution('cupofcoffee'))\nassert solution('cupofhottea') == 'hottea', \"Expected 'hottea', but got '{}'\".format(solution('cupofhottea'))",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"cupofcoffee\") == \"hottea\"\nassert solution(\"cupofhottea\") == \"hottea\"\nassert solution(\"helo\") == \"hell\"\nassert solution(\"hell\") == \"hell\"\nassert solution(\"hello\") == \"hell\"",
        "num_ids_2": 27,
        "num_ids_4": 48
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('cupofcoffee') == 'hthcfotf'\nassert solution('cupofhottea') == 'httcfotf'\nprint('All tests passed')",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"cupofcoffee\") == \"hcotpf\"\nassert solution(\"cupofhottea\") == \"htaeof\"\nassert solution(\"\") == \"\"\nassert solution(\"abcde\") == \"abcde\"\nassert solution(\"abcdef\") == \"abctfc\"",
        "num_ids_2": 30,
        "num_ids_4": 48
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"cupofcoffee\") == \"hoteofhotcoffee\"\nassert solution(\"cupofhottea\") == \"hotofhottea\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"cupofcoffee\") == \"hottea\", \"Expected output: hottea, actual output: {}.\".format(solution(\"cupofcoffee\"))\nassert solution(\"cupofhottea\") == \"hotcup\", \"Expected output: hotcup, actual output: {}.\".format(solution(\"cupofhottea\"))",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"cupofcoffee\") == \"hottea\"\nassert solution(\"cupofhottea\") == \"hottee\"\nassert solution(\"lovelace\") == \"aceva\"\nassert solution(\"apple\") == \"leppa\"\nassert solution(\"banana\") == \"pana\"",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"cupofcoffee\") == \"hepofcoffee\", \"First operation failed\"\nassert solution(\"cupofhottea\") == \"hotoftea\", \"Second operation failed\"\nassert solution(\"honofofme\") == \"hohofome\", \"Third operation failed\"\nassert solution(\"honofofm\") == \"hohofofm\", \"Fourth operation failed\"\nassert solution(\"hepofcoffe\") == \"hepofcoffe\", \"Last operation failed\"",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\", \"The solution should be 'cupofhottea'.\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\", \"The solution should be 'cupofcoffee'.\"\nassert solution(\"cuptofhottea\") == \"cuptofcoffee\", \"The solution should be 'cuptofcoffee'.\"\nassert solution(\"cuptofhotteaupofcoffee\") == \"cuptofcoffeeupofcoffee\", \"The solution should be 'cuptofcoffeeupofcoffee'.\"",
        "num_ids_2": 53,
        "num_ids_4": 120
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"cupofcoffee\") == \"oifocupo\"\nassert solution(\"cupofhottea\") == \"cuitotte\"\nassert solution(\"hello\") == \"olleh\"\nassert solution(\"\") == \"\"\nassert solution(\"abcdefg\") == \"abcdefg\"",
        "num_ids_2": 32,
        "num_ids_4": 50
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 7\\n\") == \"5 6 7 8 9\"\nassert solution(\"5 7\\n\") == \"5 6 7 8 9\"\nassert solution(\"6 8\\n\") == \"5 6 7 8 9\"\nassert solution(\"7 9\\n\") == \"5 6 7 8 9\"\nassert solution(\"3 4\\n\") == \"5 6 7 8\"\nassert solution(\"4 6\\n\") == \"5 6 7 8\"\nassert solution(\"5 8\\n\") == \"5 6 7 8\"\nassert solution(\"6 9\\n\") == \"5 6 7 8\"\nassert solution(\"7 10\\n\") == \"5 6 7 8\"\nassert solution(\"8 11\\n\") == \"5 6 7 8\"\nassert solution(\"9 12\\n\") == \"5 6 7 8\"\nassert solution(\"10 13\\n\") == \"5 6 7 8\"\nassert solution(\"11 14\\n\") == \"5 6 7 8\"\nassert solution(\"12 15\\n\") == \"5 6 7 8\"\nassert solution(\"13 16\\n\") == \"5 6 7 8\"\nassert solution(\"14 17\\n\") == \"5 6 7 8\"\nassert solution(\"15 18\\n\") == \"5 6 7 8\"\nassert solution(\"16 19\\n\") == \"5 6 7 8\"\nassert solution(\"17 20\\n\") == \"5 6 7 8\"\nassert solution(\"18 21\\n\") == \"5 6 7 8\"\nassert solution(\"19 22\\n\") == \"5 6 7 8\"\nassert solution(\"20 23\\n\") == \"5 6 7 8\"\nassert solution(\"21 24\\n\") == \"5 6 7 8\"\nassert solution(\"22 25\\n\") == \"5 6 7 8\"\nassert solution(\"23 26\\n\") == \"5 6 7 8\"\nassert solution(\"24 27\\n\") == \"5 6 7 8\"\nassert solution(\"25 28\\n\") == \"5 6 7 8\"\nassert solution(\"26 29\\n\") == \"5 6 7 8\"\nassert solution(\"27 30\\n\") == \"5 6 7 8\"\nassert solution(\"28 31\\n\") == \"5 6 7 8\"\nassert solution(\"29 32\\n\") == \"5 6 7 8\"\nassert solution(\"30 33\\n\") == \"5 6 7 8\"\nassert solution(\"31 34\\n\") == \"5 6 7 8\"\nassert solution(\"32 35\\n\") == \"5 6 7 8\"\nassert solution(\"33 36\\n\") == \"5 6 7 8\"\nassert solution(\"34 37\\n\") == \"5 6 7 8\"\nassert solution(\"35 38\\n\") == \"5 6 7 8\"\nassert solution(\"36 39\\n\") == \"5 6 7 8\"\nassert solution(\"37 40\\n\") == \"5 6 7 8\"\nassert solution(\"38 41\\n\") == \"5 6 7 8\"\nassert solution(\"39 42\\n\") == \"5 6 7 8\"\nassert solution(\"40 43\\n\") == \"5 6 7 8\"\nassert solution(\"41 44\\n\") == \"5 6 7 8\"\nassert solution(\"42 45\\n\") == \"5 6 7 8\"\nassert solution(\"43 46\\n\") == \"5 6 7 8\"\nassert solution(\"44 47\\n\") == \"5 6 7 8\"\nassert solution(\"45 48\\n\") == \"5 6 7 8\"\nassert solution(\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 7\\n\") == \"5 6 7 8 9\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 7\\n\") == \"5 6 7 8 9\\n\"\nassert solution(\"4 8\\n\") == \"5 6 7 8 9\\n\"\nassert solution(\"2 9\\n\") == \"5 6 7 8 9\\n\"\nassert solution(\"1 5\\n\") == \"5 6 7 8 9\\n\"\nassert solution(\"1 1\\n\") == \"5 6 7 8 9\\n\"\nassert solution(\"0 0\\n\") == \"5 6 7 8 9\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"K X\") == \"\"\nassert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"4 7\") == \"5 6 7 8 9\"\nassert solution(\"1 2\") == \"5 6 7 8 9\"\nassert solution(\"5 2\") == \"5 6 7 8 9\"\nassert solution(\"3 4\") == \"5 6 7 8 9\"\nassert solution(\"4 5\") == \"5 6 7 8 9\"\nassert solution(\"3 5\") == \"5 6 7 8 9\"\nassert solution(\"4 6\") == \"5 6 7 8 9\"\nassert solution(\"3 6\") == \"5 6 7 8 9\"\nassert solution(\"4 7\") == \"5 6 7 8 9\"\nassert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"4 8\") == \"5 6 7 8 9\"\nassert solution(\"3 8\") == \"5 6 7 8 9\"\nassert solution(\"4 9\") == \"5 6 7 8 9\"\nassert solution(\"3 9\") == \"5 6 7 8 9\"\nassert solution(\"4 10\") == \"5 6 7 8 9\"\nassert solution(\"3 10\") == \"5 6 7 8 9\"\nassert solution(\"4 11\") == \"5 6 7 8 9\"\nassert solution(\"3 11\") == \"5 6 7 8 9\"\nassert solution(\"4 12\") == \"5 6 7 8 9\"\nassert solution(\"3 12\") == \"5 6 7 8 9\"\nassert solution(\"4 13\") == \"5 6 7 8 9\"\nassert solution(\"3 13\") == \"5 6 7 8 9\"\nassert solution(\"4 14\") == \"5 6 7 8 9\"\nassert solution(\"3 14\") == \"5 6 7 8 9\"\nassert solution(\"4 15\") == \"5 6 7 8 9\"\nassert solution(\"3 15\") == \"5 6 7 8 9\"\nassert solution(\"4 16\") == \"5 6 7 8 9\"\nassert solution(\"3 16\") == \"5 6 7 8 9\"\nassert solution(\"4 17\") == \"5 6 7 8 9\"\nassert solution(\"3 17\") == \"5 6 7 8 9\"\nassert solution(\"4 18\") == \"5 6 7 8 9\"\nassert solution(\"3 18\") == \"5 6 7 8 9\"\nassert solution(\"4 19\") == \"5 6 7 8 9\"\nassert solution(\"3 19\") == \"5 6 7 8 9\"\nassert solution(\"4 20\") == \"5 6 7 8 9\"\nassert solution(\"3 20\") == \"5 6 7 8 9\"\nassert solution(\"4 21\") == \"5 6 7 8 9\"\nassert solution(\"3 21\") == \"5 6 7 8 9\"\nassert solution(\"4 22\") == \"5 6 7 8 9\"\nassert solution(\"3 22\") == \"5 6 7 8 9\"\nassert solution(\"4 23\") == \"5 6 7 8 9\"\nassert solution(\"3 23\") == \"5 6 7 8 9\"\nassert solution(\"4 24\") == \"5 6 7 8 9\"\nassert solution(\"3 24\") == \"5 6 7 8 9\"\nassert solution(\"4 25\") == \"5 6 7 8 9\"\nassert solution(\"3 25\") == \"5 6 7 8 9\"\nassert solution(\"4 26\") == \"5 6 7 8 9\"\nassert solution(\"3 26\") == \"5 6 7 8 ",
        "num_ids_2": 15,
        "num_ids_4": 55
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5 6 7 8 9\\n\", \"Test Case 1 failed!\"\n\nassert solution(input()) == \"5 6 7 8 9\\n\", \"Test Case 2 failed!\"\n\nassert solution(input()) == \"5 6 7 8 9\\n\", \"Test Case 3 failed!\"\n\nassert solution(input()) == \"5 6 7 8 9\\n\", \"Test Case 4 failed!\"\n\nassert solution(input()) == \"5 6 7 8 9\\n\", \"Test Case 5 failed!\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5 6 7 8 9\", \"Test failed\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\nprint(\"All coordinates that potentially contain a stone painted black, in ascending order.\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('1 1') == '1 1'\nassert solution('1 1000000') == '1 1 2 3 4 5 6 7 8 9'\nassert solution('2 5') == '2 3 4 5'\nassert solution('10 3') == '10 11 12 13 14 15 16'",
        "num_ids_2": 34,
        "num_ids_4": 88
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"5 7\") == \"6 7 8 9 10\"\nassert solution(\"3 9\") == \"5 6 7 8 9\"\nassert solution(\"1 5\") == \"2 3 4 5 6\"\nassert solution(\"5 3\") == \"6 7 8 9 10\"\nassert solution(\"1000000 1000000\") == \"500000 500000\"\n",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\nassert solution(input(\"Enter the value of K: \")) == \"5 6 7 8 9\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(25) == 'No'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"35\") == \"No\"\nassert solution(\"40\") == \"Yes\"\nassert solution(\"45\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(25) == \"No\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"-25\") == \"No\"\nassert solution(\"40\") == \"Yes\"\nassert solution(\"30\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"25\") == \"No\", \"Test Failed\"\nassert solution(\"35\") == \"Yes\", \"Test Failed\"\nassert solution(\"40\") == \"Yes\", \"Test Failed\"\nassert solution(\"20\") == \"No\", \"Test Failed\"\nassert solution(\"50\") == \"Yes\", \"Test Failed\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"50\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"25\") == \"No\", \"Test Failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(25) == 'No'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"25\") == \"No\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('25') == 'No'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '1\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\"\nassert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\"\nassert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\"",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"1\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nassert solution(\"3 3\\n1 2\\n4 3\\n-1 2\") == \"0\\n\"\n\nN = int(stdin.readline().strip())\nD = int(stdin.readline().strip())\nX = list(map(int, stdin.readline().strip().split()))\n\npair_count = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        if abs(X[i] - X[j]) % 1 == 0:\n            pair_count += 1\n\nprint(pair_count)",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 2\n1 2\n5 5\n-2 8\"\"\") == \"1\\n\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"The output is not as expected. Expected: {output}, got: {solution(input)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n1 2\\n5 5\\n-2 8') == '1'\nassert solution('2 3\\n4 5\\n6 7\\n-10 0') == '2'\nassert solution('3 3\\n1 2\\n-1 3\\n7 8\\n9 10') == '0'",
        "num_ids_2": 57,
        "num_ids_4": 91
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nassert solution(\"4 3\\n1 2\\n2 3\\n3 4\") == \"2\\n\"\nassert solution(\"5 4\\n1 2\\n3 4\\n5 6\\n7 8\") == \"2\\n\"\nassert solution(\"6 5\\n1 2\\n4 3\\n5 6\\n7 8\\n9 10\") == \"1\\n\"\n",
        "num_ids_2": 59,
        "num_ids_4": 133
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3776\") == \"Bad\"\n\nassert solution(\"5432\") == \"Good\"\n\nassert solution(\"1234\") == \"Good\"\n\nassert solution(\"5555\") == \"Good\"\n\nassert solution(\"12345\") == \"Good\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3776\") == \"Good\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"3777\") == \"Bad\"\nassert solution(\"1234\") == \"Good\"\nassert solution(\"12345\") == \"Bad\"\nassert solution(\"123456\") == \"Bad\"\nassert solution(\"1234567\") == \"Bad\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3776\") == \"Good\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"789\") == \"Bad\"\nassert solution(\"1234\") == \"Bad\"\nassert solution(\"0123\") == \"Good\"\nassert solution(\"12345\") == \"Bad\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3776\") == \"Bad\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3776\") == \"Bad\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"1234\") == \"Bad\"\nassert solution(\"123\") == \"Bad\"\nassert solution(\"1111\") == \"Good\"\nassert solution(\"123456\") == \"Good\"\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3776') == 'Good', 'The output is not correct'\nassert solution('1234') == 'Good', 'The output is not correct'\nassert solution('5678') == 'Good', 'The output is not correct'\nassert solution('9101') == 'Bad', 'The output is not correct'\nassert solution('12345') == 'Bad', 'The output is not correct'\nassert solution('123456') == 'Bad', 'The output is not correct'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"3777\") == \"Good\"\nassert solution(\"3778\") == \"Good\"\nassert solution(\"3779\") == \"Good\"\nassert solution(\"3780\") == \"Good\"\nassert solution(\"3781\") == \"Good\"\nassert solution(\"3782\") == \"Good\"\nassert solution(\"3783\") == \"Good\"\nassert solution(\"3784\") == \"Good\"\nassert solution(\"3785\") == \"Good\"\nassert solution(\"3786\") == \"Good\"\nassert solution(\"3787\") == \"Good\"\nassert solution(\"3788\") == \"Good\"\nassert solution(\"3789\") == \"Good\"\nassert solution(\"3790\") == \"Good\"\nassert solution(\"3791\") == \"Good\"\nassert solution(\"3792\") == \"Good\"\nassert solution(\"3793\") == \"Good\"\nassert solution(\"3794\") == \"Good\"\nassert solution(\"3795\") == \"Good\"\nassert solution(\"3796\") == \"Good\"\nassert solution(\"3797\") == \"Good\"\nassert solution(\"3798\") == \"Good\"\nassert solution(\"3799\") == \"Good\"\nassert solution(\"3800\") == \"Good\"\nassert solution(\"3801\") == \"Good\"\nassert solution(\"3802\") == \"Good\"\nassert solution(\"3803\") == \"Good\"\nassert solution(\"3804\") == \"Good\"\nassert solution(\"3805\") == \"Good\"\nassert solution(\"3806\") == \"Good\"\nassert solution(\"3807\") == \"Good\"\nassert solution(\"3808\") == \"Good\"\nassert solution(\"3809\") == \"Good\"\nassert solution(\"3810\") == \"Good\"\nassert solution(\"3811\") == \"Good\"\nassert solution(\"3812\") == \"Good\"\nassert solution(\"3813\") == \"Good\"\nassert solution(\"3814\") == \"Good\"\nassert solution(\"3815\") == \"Good\"\nassert solution(\"3816\") == \"Good\"\nassert solution(\"3817\") == \"Good\"\nassert solution(\"3818\") == \"Good\"\nassert solution(\"3819\") == \"Good\"\nassert solution(\"3820\") == \"Good\"\nassert solution(\"3821\") == \"Good\"\nassert solution(\"3822\") == \"Good\"\nassert solution(\"3823\") == \"Good\"\nassert solution(\"3824\") == \"Good\"\nassert solution(\"3825\") == \"Good\"\nassert solution(\"3826\") == \"Good\"\nassert solution(\"3827\") == \"Good\"\nassert solution(\"3828\") == \"Good\"\nassert solution(\"3829\") == \"Good\"\nassert solution(\"3830\") == \"Good\"\nassert solution(\"3831\") == \"Good\"\nassert solution(\"3832\") == \"Good\"\nassert solution(\"3833\") == \"Good\"\nassert solution(\"3834\") == \"Good\"\nassert solution(\"3835\") == \"Good\"\nassert solution(\"3836\") == \"Good\"\nassert solution(\"3837\") == \"Good\"\nassert solution(\"3838\") == \"Good\"\nassert solution(\"3839\") == \"Good\"\nassert solution(\"3840\") == \"Good\"\nassert solution(\"3841\") == \"Good\"\nassert solution(\"3842\") == \"Good\"\nassert solution(\"3843\") == \"Good\"\nassert solution(\"3844\") == \"Good\"\nassert solution(\"3845\") == \"Good\"\nassert solution(\"3846\") == \"Good\"\nassert solution(\"3847\") == \"Good\"\nassert solution(\"3848\") == \"Good\"\nassert solution(\"3849\") == \"Good\"\nassert solution(\"3850\") == \"Good\"\nassert solution(\"3851\") == \"Good\"\nassert solution(\"3852\") == \"Good\"\nassert solution(\"3853\") == \"Good\"\nassert solution(\"3854\") == \"Good\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\"\nassert solution(\"2\\n3 4 5\") == \"3.5\"\nassert solution(\"2\\n3 5 4\") == \"3.5\"\nassert solution(\"2\\n5 4 3\") == \"3.5\"\nassert solution(\"2\\n1 2\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"3.5\"\nassert solution(4) == \"3.5\"\nassert solution(5) == \"3.5\"\nassert solution(6) == \"3.5\"\nassert solution(7) == \"3.5\"\nassert solution(8) == \"3.5\"\nassert solution(9) == \"3.5\"\nassert solution(10) == \"3.5\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 4\\n\") == \"3.50001\\n3.49999\\n\"\nassert solution(\"2\\n3 4 5\\n\") == \"3.50001\\n3.49999\\n\"\nassert solution(\"2\\n3\\n\") == \"3.50001\\n\"\nassert solution(\"2\\n4\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n5\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n6\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n7\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n8\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n9\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n10\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n11\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n12\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n13\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n14\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n15\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n16\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n17\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n18\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n19\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n20\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n21\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n22\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n23\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n24\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n25\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n26\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n27\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n28\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n29\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n30\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n31\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n32\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n33\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n34\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n35\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n36\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n37\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n38\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n39\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n40\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n41\\n\") == \"3.49999\\n\"\nassert solution(\"2\\n42\\n\") == \"3.49999\\n\"\nassert solution(\"",
        "num_ids_2": 70,
        "num_ids_4": 116
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 4\\n\") == \"3.5\\n\"\nassert solution(\"1\\n5\\n\") == \"5.0\\n\"\nassert solution(\"2\\n1 5\\n\") == \"5.0\\n\"\nassert solution(\"2\\n3 4\\n\") == \"3.5\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\"\nassert solution(\"3\\n5 6\") == \"6.0\"\nassert solution(\"3\\n5 7\") == \"8.0\"\nassert solution(\"4\\n8 9\") == \"12.0\"\nassert solution(\"5\\n10 11\") == \"16.0\"",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution incorrect. Input: {input()}, Output: {output}, Judge output: {solution(input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 4\\n\") == \"3.5\"\nassert solution(\"3\\n4 5\\n\") == \"3.5\"\nassert solution(\"1\\n2 3\\n\") == \"2.5\"\nassert solution(\"1\\n1 1\\n\") == \"1.0\"\nassert solution(\"1\\n3 4\\n\") == \"2.0\"\nassert solution(\"1\\n2 3\\n\") == \"2.0\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    2\n    3 4\n    \n''') == '''\n    3.5\n    3.49999\n    3.5\n    3.49999\n    3.5\n    3.49999\n    3.5\n    3.49999\n    3.5\n    3.49999\n'''\n\nassert solution('''\n    3\n    2 3\n    \n''') == '''\n    5.0\n    3.0\n    5.0\n    3.0\n    5.0\n    3.0\n    5.0\n    3.0\n    5.0\n    3.0\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n3 4\\n') == '3.5\\n'\nassert solution('3\\n4 5\\n') == '3.5\\n'\nassert solution('5\\n3 2\\n') == '3.5\\n'\nassert solution('1\\n1 1\\n') == '1.0\\n'\nassert solution('3\\n5 4\\n') == '3.5\\n'",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nassert solution(\"5\\n1 2\\n3\") == \"2\"\nassert solution(\"6\\n1 2\\n3\") == \"4\"",
        "num_ids_2": 48,
        "num_ids_4": 66
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == '14'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\\n\") == \"14\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"14\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nprint(\"All test cases passed\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == 14\nassert solution(\"3\\n1\\n5\\n3\") == 8\nassert solution(\"3\\n1\\n5\\n3\\n2\") == 10\n\nassert solution(\"1\\n1\\n1\") == 3\nassert solution(\"1\\n1\\n2\") == 4\nassert solution(\"1\\n1\\n3\") == 5\nassert solution(\"1\\n1\\n4\") == 6\n\nassert solution(\"2\\n1\\n1\\n1\\n1\") == 18\nassert solution(\"2\\n1\\n1\\n1\\n2\") == 19\nassert solution(\"2\\n1\\n1\\n1\\n3\") == 20\nassert solution(\"2\\n1\\n1\\n1\\n4\") == 21\n\nassert solution(\"2\\n1\\n1\\n2\\n1\") == 19\nassert solution(\"2\\n1\\n1\\n2\\n2\") == 20\nassert solution(\"2\\n1\\n1\\n2\\n3\") == 21\nassert solution(\"2\\n1\\n1\\n2\\n4\") == 22\n\nassert solution(\"3\\n1\\n5\\n3\\n2\\n1\\n1\\n1\\n1\") == 24\nassert solution(\"3\\n1\\n5\\n3\\n2\\n1\\n1\\n1\\n2\") == 25\nassert solution(\"3\\n1\\n5\\n3\\n2\\n1\\n1\\n1\\n3\") == 26\nassert solution(\"3\\n1\\n5\\n3\\n2\\n1\\n1\\n1\\n4\") == 27\n\nassert solution(\"3\\n1\\n5\\n3\\n2\\n2\\n1\\n1\\n1\") == 28\nassert solution(\"3\\n1\\n5\\n3\\n2\\n2\\n1\\n1\\n2\") == 29\nassert solution(\"3\\n1\\n5\\n3\\n2\\n2\\n1\\n1\\n3\") == 30\nassert solution(\"3\\n1\\n5\\n3\\n2\\n2\\n1\\n1\\n4\") == 31\n\nassert solution(\"3\\n1\\n5\\n3\\n2\\n3\\n1\\n1\\n1\") == 32\nassert solution(\"3\\n1\\n5\\n3\\n2\\n3\\n1\\n1\\n2\") == 33\nassert solution(\"3\\n1\\n5\\n3\\n2\\n3\\n1\\n1\\n3\") == 34\nassert solution(\"3\\n1\\n5\\n3\\n2\\n3\\n1\\n1\\n4\") == 35\n\nassert solution(\"3\\n1\\n5\\n3\\n2\\n4\\n1\\n1\\n1\") == 36\nassert solution(\"3\\n1\\n5\\n3\\n2\\n4\\n1\\n1\\n2\") == 37\nassert solution(\"3\\n1\\n5\\n3\\n2\\n4\\n1\\n1\\n3\") == 38\nassert solution(\"3\\n1\\n5\\n3\\n2\\n4\\n1\\n1\\n4\") == 39\n\nassert solution(\"3\\n1\\n5\\n3\\n2\\n5\\n1\\n1\\n1\") == 40\nassert solution(\"3\\n1\\n5\\n3\\n2\\n5\\n1\\n1\\n2\") == 41\nassert solution(\"3\\n1\\n5\\n3\\n2\\n5\\n1\\n1\\n3\") == 42\nassert solution(\"3\\n1\\n5\\n3\\n2\\n5\\n1\\n1\\n4\") == 43\n\nassert solution(\"3\\n1\\n5\\n3\\n2\\n6\\n1\\n1\\n1\") == 4",
        "num_ids_2": 47,
        "num_ids_4": 84
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"\nassert solution(\"10\\nZABCDEFGHI\") == \"0\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nZABCDBABCQ\\n\") == \"2\\n\"\nassert solution(\"1\\nABC\\n\") == \"1\\n\"\nassert solution(\"3\\nabc\\n\") == \"1\\n\"\nassert solution(\"2\\nABC\\n\") == \"2\\n\"\nassert solution(\"5\\nABC\\n\") == \"2\\n\"\nassert solution(\"1\\n\\n\") == \"1\\n\"\nassert solution(\"2\\nABC\\nDEF\\nGHI\\n\") == \"2\\n\"\nassert solution(\"3\\n123\\n456\\n789\\n\") == \"2\\n\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 39,
        "num_ids_4": 73
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\nZABCDBABCQ\\n\") == \"2\\n\", \"Your solution is not correct.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\", \"Your solution should return 2, but it returns {}\".format(solution(\"10\\nZABCDBABCQ\"))",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"\n\nassert solution(\"9\\nABCDEABC\") == \"0\"\n\nassert solution(\"10\\nXYZ\") == \"0\"\n\nassert solution(\"10\\nabcd\") == \"0\"\n\nassert solution(\"5\\n\") == \"0\"",
        "num_ids_2": 33,
        "num_ids_4": 61
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\nZABCDBABCQ\\n\") == \"2\", \"The solution should return 2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"\nassert solution(\"11\\nZABCDEFGH\") == \"1\"\nassert solution(\"12\\nABCDEFGHIJ\") == \"2\"\nassert solution(\"13\\nZABCDEFGHIJK\") == \"0\"\nassert solution(\"14\\nZABCDEFGHIJKL\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\", \"The correctness of the solution is not verified.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nprint(\"All tests passed\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '''\n2\n'''",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\\n\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2', \"Expected 2, but got '{}'.\".format(solution())\nprint(\"All tests passed.\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output. Please check your code.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"Yes\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n\") == \"Yes\\n\"\nassert solution(\"2 2\\n\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n\") == \"Yes\"\nassert solution(\"5 6\\n\") == \"Yes\"\nassert solution(\"1 1\\n\") == \"No\"\nassert solution(\"10 10\\n\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n\") == \"Yes\\n\"\nassert solution(\"4 3\\n\") == \"No\\n\"\nassert solution(\"3 2\\n\") == \"No\\n\"\nassert solution(\"2 3\\n\") == \"No\\n\"\nassert solution(\"1 2\\n\") == \"Yes\\n\"\nassert solution(\"1 1\\n\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"5 3\") == \"No\"\nassert solution(\"3 4\") == \"No\"\nassert solution(\"2 3\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n\") == \"Yes\"\nassert solution(\"5 4\\n\") == \"No\"\nassert solution(\"2 2\\n\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sippuuu\") == \"No\"\nassert solution(\"woccuuu\") == \"No\"\nassert solution(\"sicaucu\") == \"No\"\nassert solution(\"sippuuuuc\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"The solution should return Yes\"\nassert solution(\"xyz\") == \"No\", \"The solution should return No\"\nassert solution(\"cde\") == \"Yes\", \"The solution should return Yes\"\nassert solution(\"cdef\") == \"No\", \"The solution should return No\"\nassert solution(\"abcdefg\") == \"Yes\", \"The solution should return Yes\"\nassert solution(\"abcdefg\") == \"No\", \"The solution should return No\"",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"The given string is not coffee-like.\"\nassert solution(\"muchcoffee\") == \"No\", \"The given string is coffee-like.\"\nassert solution(\"coffeecup\") == \"Yes\", \"The given string is not coffee-like.\"\nassert solution(\"123\") == \"No\", \"The given string is coffee-like.\"\nassert solution(\"abc\") == \"No\", \"The given string is coffee-like.\"",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"Solution should be Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"caterpillar\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"hello\") == \"No\"\nassert solution(\"abacus\") == \"No\"\nassert solution(\"aaaaabbbccccdddd\") == \"Yes\"\nassert solution(\"applepenapple\") == \"Yes\"\nassert solution(\"abcd\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"nope\") == \"No\"\nassert solution(\"coffee\") == \"Yes\"\nassert solution(\"spoon\") == \"No\"\nassert solution(\"coffee-like\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"sippuu\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\"\nassert solution(input()) == \"4\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\nTLE\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n\", \"The output should be the minimum cost for the given constraints.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"TLE\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n\") == \"4\\n\"\nassert solution(\"2 30\\n2 50\\n\") == \"TLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n2 30\\n\") == \"4\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 99
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"2 120\\n5 70\\n3 90\\n1 70\\n4 80\") == \"TLE\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 9\") == \"8\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"5 3 5\") == \"10\"\nassert solution(\"4 5 9\") == \"22\"\nassert solution(\"6 2 7\") == \"16\"\nassert solution(\"2 5 2\") == \"3\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"8\", \"Incorrect output. Expected 8, got {}\".format(solution(input()))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2 9') == '8\\n', \"Test case 1 failed\"\nassert solution('5 3 9') == '13\\n', \"Test case 2 failed\"\nassert solution('3 4 6') == '10\\n', \"Test case 3 failed\"\nassert solution('1 1 1') == '1\\n', \"Test case 4 failed\"\nassert solution('1 1 2') == '2\\n', \"Test case 5 failed\"",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 9\") == \"8\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 9\") == \"8\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 9\") == \"8\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"5 2 10\") == \"11\"\nassert solution(\"6 3 5\") == \"12\"\nassert solution(\"7 4 10\") == \"17\"\nassert solution(\"8 5 15\") == \"22\"",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nacornistnt\\peanutbomb\\constraint\\n\") == \"1\\n\"\nassert solution(\"1\\n\\nacornistnt\\nconstraint\\n\\n\") == \"0\\n\"\nassert solution(\"4\\nhello\\nworld\\n123\\n\") == \"0\\n\"\nassert solution(\"3\\nhello\\nworld\\n123\\n\") == \"0\\n\"\nassert solution(\"4\\nhello\\nworld\\n123\\n\") == \"0\\n\"\n",
        "num_ids_2": 53,
        "num_ids_4": 103
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1', 'The output should be \"1\".'\nprint('The output should be \"1\".')",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('acornistnt\\npeanutbomb\\nconstraint') == '1'\nassert solution('abcbedcba') == '3'\nassert solution('abc') == '0'\nassert solution('abcdef') == '0'\nassert solution('a') == '0'",
        "num_ids_2": 36,
        "num_ids_4": 56
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\\n\\n\\nacornistnt is an anagram of s_3 = constraint.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nacornistnt\\peanutbomb\\constraint\\n\") == \"1\\n\\nconstraint\\npeanutbomb\\nacornistnt\\n\"\nprint(\"All test cases passed successfully\")",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"\"\"def solution(stdin: str) -> str:\n    pass\n\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"5\n    1\n    3\n    20\n    38\n    56\"\"\"\n) == \"\"\"1\n2\n5\n2\n0\n\"\"\"\n\nassert solution(\n    \"\"\"4\n    2132\n    506\n    999999999\n    1000000000\"\"\"\n) == \"\"\"8\n2\n9\n8\"\"\"\n\nassert solution(\n    \"\"\"1\n    2\n    3\n    4\"\"\"\n) == \"\"\"1\n2\n3\n4\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1\\n3\\n20\\n38\\n56\\n') == '1\\n2\\n5\\n2\\n0\\n'\nassert solution('4\\n2132\\n506\\n999999999\\n1000000000\\n') == '8\\n2\\n9\\n8\\n'",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"6\"\nassert solution(\"7\") == \"7\"\nassert solution(\"8\") == \"8\"\nassert solution(\"9\") == \"9\"\nassert solution(\"10\") == \"10\"\nassert solution(\"11\") == \"11\"\nassert solution(\"12\") == \"12\"\nassert solution(\"13\") == \"13\"\nassert solution(\"14\") == \"14\"\nassert solution(\"15\") == \"15\"\nassert solution(\"16\") == \"16\"\nassert solution(\"17\") == \"17\"\nassert solution(\"18\") == \"18\"\nassert solution(\"19\") == \"19\"\nassert solution(\"20\") == \"20\"\nassert solution(\"21\") == \"21\"\nassert solution(\"22\") == \"22\"\nassert solution(\"23\") == \"23\"\nassert solution(\"24\") == \"24\"\nassert solution(\"25\") == \"25\"\nassert solution(\"26\") == \"26\"\nassert solution(\"27\") == \"27\"\nassert solution(\"28\") == \"28\"\nassert solution(\"29\") == \"29\"\nassert solution(\"30\") == \"30\"\nassert solution(\"31\") == \"31\"\nassert solution(\"32\") == \"32\"\nassert solution(\"33\") == \"33\"\nassert solution(\"34\") == \"34\"\nassert solution(\"35\") == \"35\"\nassert solution(\"36\") == \"36\"\nassert solution(\"37\") == \"37\"\nassert solution(\"38\") == \"38\"\nassert solution(\"39\") == \"39\"\nassert solution(\"40\") == \"40\"\nassert solution(\"41\") == \"41\"\nassert solution(\"42\") == \"42\"\nassert solution(\"43\") == \"43\"\nassert solution(\"44\") == \"44\"\nassert solution(\"45\") == \"45\"\nassert solution(\"46\") == \"46\"\nassert solution(\"47\") == \"47\"\nassert solution(\"48\") == \"48\"\nassert solution(\"49\") == \"49\"\nassert solution(\"50\") == \"50\"\nassert solution(\"51\") == \"51\"\nassert solution(\"52\") == \"52\"\nassert solution(\"53\") == \"53\"\nassert solution(\"54\") == \"54\"\nassert solution(\"55\") == \"55\"\nassert solution(\"56\") == \"56\"\nassert solution(\"57\") == \"57\"\nassert solution(\"58\") == \"58\"\nassert solution(\"59\") == \"59\"\nassert solution(\"60\") == \"60\"\nassert solution(\"61\") == \"61\"\nassert solution(\"62\") == \"62\"\nassert solution(\"63\") == \"63\"\nassert solution(\"64\") == \"64\"\nassert solution(\"65\") == \"65\"\nassert solution(\"66\") == \"66\"\nassert solution(\"67\") == \"67\"\nassert solution(\"68\") == \"68\"\nassert solution(\"69\") == \"69\"\nassert solution(\"70\") == \"70\"\nassert solution(\"71\") == \"71\"\nassert solution(\"72\") == \"72\"\nassert solution(\"73\") == \"73\"\nassert solution(\"74\") == \"74\"\nassert solution(\"75\") == \"75\"\nassert solution(\"76\") == \"76\"\nassert solution(\"77\") == \"77\"\nassert solution(\"78\") == \"78\"\nassert solution(\"79\") == \"79\"\nassert solution(\"80\") == \"80\"\nassert solution(\"81\") == \"81\"\nassert solution(\"82\") == \"82\"\nassert solution(\"83\") == \"83\"\nassert solution(\"84\") == \"84\"\nassert solution(\"85\") == \"85\"\nassert solution(\"86\") == \"86\"\nassert solution(\"87\") == \"87\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == '1\\n'\nassert solution(4) == '8\\n'\nassert solution(1) == '1\\n'\nassert solution(3) == '2\\n'\nassert solution(20) == '5\\n'\nassert solution(38) == '2\\n'\nassert solution(56) == '0\\n'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Output\\n1\\n2\\n5\\n2\\n0\\n\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\\n\\n\\n\\n\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n20\\n38\\n56') == '1\\n2\\n5\\n2\\n0\\n'\nassert solution('4\\n2132\\n506\\n999999999\\n1000000000') == '8\\n2\\n9\\n8\\n'\n",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output\\n1\\n1 1 1 1 1\\n3\\n1 1 1 1 1 2 3 2 2 3 2 3 1 1 1 1 2 2 2\\n3\\n1 1 1 1 1 2 3 2 2 3 2 3 1 1 1 1 2 2 2\"",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test case {t} failed.\\nExpected: {expected}\\nGot: {solution(input())}\"\n\nt = int(input())\nfor t in range(1, t + 1):\n    n, k = map(int, input().split())\n    roads = list(map(int, input().split()))\n    \n    expected = [f\"r{i+1}:\\t{company}\" for i, company in enumerate(range(1, n), start=1)]\n    expected.append(\"r\" + str(n))\n    \n    print(\" \".join(expected))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n1 2 1 1 2\\n1 2 1 1 2\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"1\\n1 1 1 1\"\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == expected_output, f\"Expected output: {expected_output}, got: {solution()}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1 1 \"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\") == \"3\\n1 1 2 3 2 3 1 3 1\"\n",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2'\nassert solution() == '1 2 1 1 2'\nassert solution() == '1'\nassert solution() == '1 1 1 1'\nassert solution() == '3'\nassert solution() == '1 1 2 3 2 3 1 3 1'",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n1 2 1 1 2 1\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n1 1 1 1 1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2 1 1 2 3 3 3 1 1\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1 1\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\") == \"3\\n1 1 2 3 2 3 1 3 1\"\nassert solution(\"6 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1 1\"\nassert solution(\"1 4 5 3 2 1\") == \"2\\n1 2 1 1 2 1\"",
        "num_ids_2": 94,
        "num_ids_4": 208
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2') == '2\\n1 2 1 1 2 1\\nInput\\n4 2\\n3 1\\n1 4\\n1 2\\n\\nOutput\\n1\\n1 1 1 1\\nInput\\n10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\nOutput\\n3\\n1 1 2 3 2 3 1 3 1'\nassert solution('4 2\\n3 1\\n1 4\\n1 2') == '1\\n1 1 1 1\\nInput\\n10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\nOutput\\n3\\n1 1 2 3 2 3 1 3 1'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\nOutput\\n3\\n1 1 2 3 2 3 1 3 1' == '3\\n1 1 2 3 2 3 1 3 1')",
        "num_ids_2": 286,
        "num_ids_4": 389
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2 4'\nassert solution() == '3 8'\nassert solution() == '3 6'\n\nprint('All tests passed!')",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 4 4') == '2 4\\n'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8\\n'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6\\n'\n\nfor s in ['4', '9', '7']:\n    stdin = input(s)\n    assert solution(stdin) == '2 4\\n'",
        "num_ids_2": 56,
        "num_ids_4": 85
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\") == \"2 4\\n\", \"Test 1\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\\n\", \"Test 2\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\\n\", \"Test 3\"\n\nsolution",
        "num_ids_2": 70,
        "num_ids_4": 106
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'test', 'Your solution is not correct.'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(example1) == \"2 4\", \"Test failed for example1\"\nassert solution(example2) == \"3 8\", \"Test failed for example2\"\nassert solution(example3) == \"3 6\", \"Test failed for example3\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 4 4\\n') == '2 4\\n'\nassert solution('9\\n1 1 8 8 8 4 4 4 4\\n') == '3 8\\n'\nassert solution('7\\n4 3 7 1 4 3 3\\n') == '3 6\\n'",
        "num_ids_2": 60,
        "num_ids_4": 91
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n4\\n1 2 4 4\\n\") == \"Output\\n2 4\\n\", \"Expected output: 2 4\\n, but got: \" + solution(\"Input\\n4\\n1 2 4 4\\n\")\nassert solution(\"Input\\n9\\n1 1 8 8 8 4 4 4 4\\n\") == \"Output\\n3 8\\n\", \"Expected output: 3 8\\n, but got: \" + solution(\"Input\\n9\\n1 1 8 8 8 4 4 4 4\\n\")\nassert solution(\"Input\\n7\\n4 3 7 1 4 3 3\\n\") == \"Output\\n3 6\\n\", \"Expected output: 3 6\\n, but got: \" + solution(\"Input\\n7\\n4 3 7 1 4 3 3\\n\")\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 150,
        "num_ids_4": 227
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case not passed.\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2 4\\n3 8'\nassert solution() == '3 6'\nassert solution() == '3 6'",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\") == \"2 4\\n\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\\n\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 91
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == [\"3\", \"2\", \"4\", \"1\", \"5\"]",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\") == \"3 2 4 1 5\"\nassert solution(\"Input\") == \"3 1 2\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5 \\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5 \\n\"\nassert solution(\"3\\n2 3\\n3 1\\n1 2\") == \"3 1 2 \\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\\n\") == \"3 2 4 1 5 \"\nassert solution(\"3\\n2 3\\n3 1\\n1 2\\n\") == \"3 1 2\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5\n3 5\n1 4\n2 4\n1 5\n2 3\n\"\"\") == \"\"\"3 2 4 1 5 \"\"\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == ['3', '2', '4', '1', '5']\n\nfrom itertools import permutations\n\nn = int(input())\na = list(map(int, input().split()))\n\np = list(permutations(range(n+1)))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\") == \"3\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\") == \"10\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\") == \"1\"",
        "num_ids_2": 90,
        "num_ids_4": 132
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3\nassert solution(10) == 10\nassert solution(6) == 1",
        "num_ids_2": 20,
        "num_ids_4": 29
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n1 10 17 12 15 2\\n') == '3\\n'\n\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n') == '10\\n'\n\nassert solution('6\\n1 1000 10000 10 100 1000000000\\n') == '1\\n'\n\nassert solution('') == ''",
        "num_ids_2": 98,
        "num_ids_4": 150
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\\n\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"10\\n\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 144
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=None) == '3'\nassert solution(stdin='6') == '3'\nassert solution(stdin='10') == '10'\nassert solution(stdin='6\\n1 1000 10000 10 100 1000000000') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 82
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"10\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\"",
        "num_ids_2": 94,
        "num_ids_4": 138
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 3\nassert solution(4) == 4\nassert solution(6) == 3\nassert solution(10) == 10\nassert solution(1000) == 1",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 10 17 12 15 2\\n\") == \"3\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n6\\n1 1000 10000 10 100 1000000000\\n1\") == \"10\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n1\") == \"1\"\n\nfrom typing import List",
        "num_ids_2": 127,
        "num_ids_4": 172
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6) == 3\nassert solution(10) == 10\nassert solution(6) == 1",
        "num_ids_2": 20,
        "num_ids_4": 29
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: expected output {expected_output}, actual output {solution(input())}\" for i, (k, n, a, b) in enumerate(input_data) for expected_output in [(4, -1), (5, 2), (0, 1)]:\n    assert solution(input()) == expected_output, f\"Test case {i+1} failed: expected output {expected_output}, actual output {solution(input())}\"\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '4\\n-1\\n5\\n2\\n0\\n1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\") == \"4\\n-1\\n5\\n2\\n0\\n1\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"4\\n-1\\n5\\n2\\n0\\n1\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4\\n-1\\n5\\n2\\n0\\n1'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"4\\n-1\\n5\\n2\\n0\\n1\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\") == \"4\\n-1\\n5\\n2\\n0\\n1\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == 4\nassert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n15 10 3 2\\n\") == -1\nassert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n15 5 3 5\\n\") == 5\nassert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n15 5 3 2\\n15 5 4 3\\n\") == 2\nassert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n15 5 3 2\\n15 5 4 3\\n15 5 5 1\\n\") == 0",
        "num_ids_2": 147,
        "num_ids_4": 313
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '-1'\nassert solution() == '5'\nassert solution() == '2'\nassert solution() == '0'\nassert solution() == '1'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n6\nac?b?c\n\"\"\") == 24\nassert solution(\"\"\"\n7\n???????\n\"\"\") == 2835\nassert solution(\"\"\"\n9\ncccbbbaaa\n\"\"\") == 0\nassert solution(\"\"\"\n5\na???c\n\"\"\") == 46",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ac?b?c\") == 24\nassert solution(\"????\") == 2835\nassert solution(\"cccbbbaaa\") == 0\nassert solution(\"a???c\") == 46",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ac?b?c\") == 24\nassert solution(\"?????\") == 2835\nassert solution(\"cccbbbaaa\") == 0\nassert solution(\"a???c\") == 46",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"?????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"\n\nprint(sum(1 for _ in range(1000000007) if solution(input()) % 10**9 + 7 == 0)) # 10^9 + 7",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\nac?b?c') == '24', 'Incorrect answer for the first example'\nassert solution('7\\n??????') == '2835', 'Incorrect answer for the second example'\nassert solution('9\\ncccbbbaaa') == '0', 'Incorrect answer for the third example'\nassert solution('5\\na???c') == '46', 'Incorrect answer for the fourth example'",
        "num_ids_2": 50,
        "num_ids_4": 97
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ac?b?c\") == \"24\", \"The correct answer is 24. Please fix the code.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"??????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"\n\nfrom typing import List",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\nac?b?c') == '24'\nassert solution('7\\n?????') == '2835'\nassert solution('9\\ncccbbbaaa') == '0'\nassert solution('5\\na???c') == '46'\n\nfrom typing import List",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\nac?b?c') == '24', 'Incorrect solution'\nassert solution('7\\n?????') == '2835', 'Incorrect solution'\nassert solution('9\\ncccbbbaaa') == '0', 'Incorrect solution'\nassert solution('5\\na???c') == '46', 'Incorrect solution'",
        "num_ids_2": 41,
        "num_ids_4": 80
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_solution, f\"Expected solution is {expected_solution}, but got {solution}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\\n\") == \"5\\n\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\\n\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\") == \"18\\n\"",
        "num_ids_2": 63,
        "num_ids_4": 121
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 2\\n1 3 3\\n2 3 5\\n2 1 1\\n\"\n) == \"5\\n\"\n\nassert solution(\n    \"4 0\\n1 3 3 7\\n\"\n) == \"16\\n\"\n\nassert solution(\n    \"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\"\n) == \"18\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n1 3 3\\n2 3 5\\n2 1 1') == '5\\n'\nassert solution('4 0\\n1 3 3 7\\n') == '16\\n'\nassert solution('5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n') == '18\\n'\n\nfrom typing import List",
        "num_ids_2": 61,
        "num_ids_4": 119
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\") == \"18\"",
        "num_ids_2": 57,
        "num_ids_4": 111
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\") == \"18\"",
        "num_ids_2": 55,
        "num_ids_4": 109
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == \"18\"\nassert solution(str(input())) == \"16\"\nassert solution(str(input())) == \"5\"",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(3) + \" \" + str(2) + \"\\n\" + \"1 3 3\\n\" + \"2 3 5\\n\" + \"2 1 1\\n\") == \"5\\n\"\n\nassert solution(str(4) + \" \" + str(0) + \"\\n\" + \"1 3 3 7\\n\") == \"16\\n\"\n\nassert solution(str(5) + \" \" + str(4) + \"\\n\" + \"1 2 3 4 5\\n\" + \"1 2 8\\n\" + \"1 3 10\\n\" + \"1 4 7\\n\" + \"1 5 15\\n\") == \"18\\n\"",
        "num_ids_2": 95,
        "num_ids_4": 178
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\") == \"18\"\n\nfrom typing import List",
        "num_ids_2": 57,
        "num_ids_4": 111
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\"\n\nassert solution() == \"16\"\n\nassert solution() == \"18\"",
        "num_ids_2": 17,
        "num_ids_4": 26
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\") == 14\nassert solution(\"10 1 1\\n0 9\\n0 5\") == 45\nassert solution(\"10 1 1\\n0 9\\n1 5\") == -1",
        "num_ids_2": 72,
        "num_ids_4": 96
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    10 2 4\n    3 7\n    8 10\n    0 10\n    3 4\n    8 1\n    1 2\n    \"\"\"\n) == \"14\\n\"\n\nassert solution(\n    \"\"\"\n    10 1 1\n    0 9\n    0 5\n    \"\"\"\n) == \"45\\n\"\n\nassert solution(\n    \"\"\"\n    10 1 1\n    0 9\n    1 5\n    \"\"\"\n) == \"-1\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"\nassert solution(\"10 1 1\\n0 9\\n1 6\\n\") == \"42\"\nassert solution(\"10 1 1\\n0 9\\n2 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n3 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n4 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n5 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n6 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n7 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n8 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n9 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n10 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n11 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n12 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n13 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n14 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n15 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n16 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n17 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n18 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n19 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n20 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n21 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n22 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n23 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n24 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n25 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n26 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n27 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n28 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n29 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n30 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n31 5\\n\") == \"43\"\nassert solution(\"10 1 1\\n0 9\\n32 5\\n\") == \"43\"\nassert solution",
        "num_ids_2": 78,
        "num_ids_4": 133
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"14\"\nassert solution() == \"45\"\nassert solution() == \"-1\"",
        "num_ids_2": 18,
        "num_ids_4": 26
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\") == \"-1\"",
        "num_ids_2": 74,
        "num_ids_4": 99
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\"\"\") == \"14\"\n\nassert solution(\"\"\"10 1 1\n0 9\n0 5\"\"\") == \"45\"\n\nassert solution(\"\"\"10 1 1\n0 9\n1 5\"\"\") == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2') == '14'\nassert solution('10 1 1\\n0 9\\n0 5') == '45'\nassert solution('10 1 1\\n0 9\\n1 5') == '-1'\n",
        "num_ids_2": 74,
        "num_ids_4": 99
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\") == \"-1\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 74,
        "num_ids_4": 99
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 7 5') == 'Yes\\n', \"The given triple is poor. A and C are equal, but B is different from those two numbers, so this triple is poor.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\") == \"Yes\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"1 1 2\") == \"No\"\nassert solution(\"3 3 3\") == \"No\"\nassert solution(\"5 7 9\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7 5\") == \"Yes\", \"Incorrect output\"\nassert solution(\"3 5 7\") == \"Yes\", \"Incorrect output\"\nassert solution(\"1 2 3\") == \"No\", \"Incorrect output\"\nassert solution(\"5 5 5\") == \"No\", \"Incorrect output\"\nassert solution(\"1 2 1\") == \"No\", \"Incorrect output\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"Yes\\n\"\nassert solution(\"1 2 3\") == \"No\\n\"\nassert solution(\"4 4 4\") == \"No\\n\"\nassert solution(\"5 1 6\") == \"Yes\\n\"\nassert solution(\"7 8 9\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7 5\") == \"Yes\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"No\"\nassert solution(\"1 3 2\") == \"No\"\nassert solution(\"5 6 5\") == \"Yes\"\nassert solution(\"6 7 8\") == \"No\"\nassert solution(\"1 1 1\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\", \"Incorrect output for input '5 7 5'\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes', \"Incorrect output\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 7 5') == 'No\\n', \"Incorrect output\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\", \"The output is incorrect.\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, f\"Test failed: {input_str}!= {output_str}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\", \"Sample Input is incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1\\n', \"The solution is incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\\n\", \"Your solution is incorrect.\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 4\") == \"1\"\nassert solution(\"2 4\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n\") == \"1\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"1\", \"Test 1 failed.\"\nassert solution(\"3 1\") == \"1\", \"Test 2 failed.\"\nassert solution(\"4 1\") == \"2\", \"Test 3 failed.\"\nassert solution(\"5 2\") == \"1\", \"Test 4 failed.\"\nassert solution(\"6 2\") == \"2\", \"Test 5 failed.\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\"\nprint(\"All test cases passed\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected output: {expected}, but got: {solution(stdin)}\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == [\"2\", \"0\", \"3\"]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8 3\\nACACTACG\\n3 7\\n2 3\\n1 8') == '2\\n0\\n3\\n'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Output\\n2\\n0\\n3'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8 3\\nACACTACG\\n3 7\\n2 3\\n1 8') == '2\\n0\\n3\\n'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_solution",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\"\nassert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\"\nassert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\"\nassert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\"",
        "num_ids_2": 78,
        "num_ids_4": 156
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n50 100 80 120 80') == '210'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '210'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"210\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\nassert solution(\"5 5\\n20 50 60 70 80\") == \"180\"\nassert solution(\"5 6\\n15 40 50 60 70\") == \"140\"\nassert solution(\"5 10\\n30 200 300 400 500\") == \"1000\"\nassert solution(\"5 15\\n10 20 30 40 50\") == \"1000\"",
        "num_ids_2": 62,
        "num_ids_4": 128
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\nassert solution(\"5 2\\n50 100 80 120 80\") == \"160\"\nassert solution(\"5 5\\n50 100 80 120 80\") == \"210\"\nassert solution(\"5 1\\n50 100 80 120 80\") == \"100\"\nassert solution(\"5 4\\n50 100 80 120 80\") == \"200\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"210\", \"Incorrect output.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '210'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\nassert solution(\"5 4\\n50 100 80 120 80\") == \"190\"\nassert solution(\"4 3\\n50 100 80 120 80\") == \"150\"\nassert solution(\"6 4\\n50 100 80 120 80\") == \"230\"\nassert solution(\"5 4\\n50 100 80 120 80 25\") == \"280\"\nassert solution(\"3 4\\n50 100 80 120 80 25\") == \"180\"\nassert solution(\"5 2\\n50 100 80 120 80\") == \"150\"\nassert solution(\"6 3\\n50 100 80 120 80 25\") == \"250\"\nassert solution(\"3 2\\n50 100 80 120 80 25\") == \"150\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1 3 4\") == \"4\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 4\") == \"4\\n\", \"The sum of the flight times in the route A \\rightarrow B \\rightarrow C: 1 + 3 = 4 hours\\nThe sum of the flight times in the route A \\rightarrow C \\rightarrow C: 4 + 3 = 7 hours\\nThe sum of the flight times in the route B \\rightarrow A \\rightarrow C: 1 + 4 = 5 hours\\nThe sum of the flight times in the route B \\rightarrow C \\rightarrow A: 3 + 4 = 7 hours\\nThe sum of the flight times in the route C \\rightarrow A \\rightarrow B: 4 + 1 = 5 hours\\nThe sum of the flight times in the route C \\rightarrow B \\rightarrow A: 3 + 1 = 4 hours\\nThe minimum of these is 4 hours.\"\n",
        "num_ids_2": 194,
        "num_ids_4": 194
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 3 4') == '4', 'Test failed'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 3 4') == '4\\n'\nassert solution('2 1 5') == '7\\n'\nassert solution('3 3 4') == '7\\n'\nassert solution('4 4 4') == '4\\n'\nassert solution('1 1 1') == '0\\n'\nassert solution('1 2 2') == '3\\n'\nassert solution('3 4 5') == '7\\n'\nassert solution('5 6 7') == '10\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 4\") == \"4\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\") == \"4\", \"Expected output: 4\"\nassert solution(\"1 3 5\") == \"7\", \"Expected output: 7\"\nassert solution(\"1 4 3\") == \"5\", \"Expected output: 5\"\nassert solution(\"2 4 3\") == \"7\", \"Expected output: 7\"\nassert solution(\"3 4 2\") == \"5\", \"Expected output: 5\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='1 3 4') == '4'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 4\") == \"4\\n\", \"Invalid input\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='1 3 4') == '4' # Test Case 1\nassert solution(stdin='1 5 3') == '15' # Test Case 2\nassert solution(stdin='1 3 4') == '4' # Test Case 3\nassert solution(stdin='2 2 1') == '1' # Test Case 4\nassert solution(stdin='1 5 3') == '15' # Test Case 5",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 4\") == \"4\\n\", \"There is no possible solution.\"\nassert solution(\"5 4 3\") == \"10\\n\", \"There is no possible solution.\"\nassert solution(\"3 2 1\") == \"6\\n\", \"There is no possible solution.\"",
        "num_ids_2": 47,
        "num_ids_4": 70
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"1 10\") == \"10\\n\"\nassert solution(\"3 10\") == \"10\\n\"\nassert solution(\"0 1\") == \"0\\n\"\nassert solution(\"5 3\") == \"0\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"4 5\") == \"0\\n\"\nassert solution(\"1 5\") == \"10\\n\"\nassert solution(\"10 5\") == \"10\\n\"\nassert solution(\"0 5\") == \"0\\n\"\nassert solution(\"5 10\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"2 4\") == \"10\"\nassert solution(\"0 9\") == \"0\"\nassert solution(\"10 9\") == \"10\"\nassert solution(\"10 8\") == \"10\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"0 3\") == \"10\\n\"\nassert solution(\"1 5\") == \"0\\n\"\nassert solution(\"6 8\") == \"10\\n\"\nassert solution(\"9 11\") == \"10\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 5) == '0', \"Expected '0' but got '{}'\".format(solution(3, 5))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 5') == '0\\n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"10 10\") == \"10\\n\"\nassert solution(\"3 10\") == \"10\\n\"\nassert solution(\"20 10\") == \"0\\n\"\nassert solution(\"5 20\") == \"10\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"1 10\") == \"10\\n\"\nassert solution(\"0 5\") == \"0\\n\"\nassert solution(\"6 9\") == \"10\\n\"\nassert solution(\"1 10\") == \"10\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 4\") == \"1\\n\"\nassert solution(\"1000000000 1000000000\") == \"99999999999999999999\\n\"\nassert solution(\"1 2\") == \"1\\n\"\nassert solution(\"1000000000 1\") == \"1000000000\\n\"\nassert solution(\"9999999999999999999999999 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999",
        "num_ids_2": 65,
        "num_ids_4": 111
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 4\") == \"1\\n\"\nassert solution(\"1 2\") == \"1\\n\"\nassert solution(\"4 5\") == \"1\\n\"\nassert solution(\"10 6\") == \"2\\n\"\nassert solution(\"1000000000 1000000000\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 4\") == \"1\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7, 4) == 1\nassert solution(2147483647, 1) == 1\nassert solution(9007199254740991, 1) == 1\nassert solution(1, 1) == 1\nassert solution(2, 1) == 2\nassert solution(100, 1) == 1\nassert solution(1000000000, 1) == 1000000000\nassert solution(1000000000000, 1) == 1000000000000\nassert solution(10000000000000000, 1) == 10000000000000000",
        "num_ids_2": 33,
        "num_ids_4": 72
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 4\") == \"1\\n\"\nassert solution(\"7 5\") == \"2\\n\"\nassert solution(\"7 6\") == \"3\\n\"\nassert solution(\"7 7\") == \"4\\n\"\nassert solution(\"7 8\") == \"5\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4\") == \"1\\n\", \"Solution is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 4\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4\") == \"1\", \"Test failed.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 4\\n\") == \"1\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7 9\") == \"win\", \"Test case 1 failed\"\nassert solution(\"1 2 3\") == \"bust\", \"Test case 2 failed\"\nassert solution(\"4 5 6\") == \"bust\", \"Test case 3 failed\"\nassert solution(\"7 8 9\") == \"bust\", \"Test case 4 failed\"\nassert solution(\"22 21 22\") == \"win\", \"Test case 5 failed\"",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\"\nassert solution(\"2 8 10\") == \"bust\\n\"\nassert solution(\"10 5 15\") == \"bust\\n\"\nassert solution(\"9 14 25\") == \"win\\n\"\nassert solution(\"15 17 11\") == \"bust\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\", \"Your solution is incorrect\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\", \"Solution is incorrect.\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\", \"Incorrect output for given input.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"1 2 3\") == \"bust\"\nassert solution(\"5 10 9\") == \"bust\"\nassert solution(\"1 5 1\") == \"bust\"\nassert solution(\"10 10 10\") == \"win\"",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"win\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"win\"\nassert solution(input()) == \"bust\"\nassert solution(input()) == \"win\"\nassert solution(input()) == \"win\"\nassert solution(input()) == \"win\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 7 9\") == \"win\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"12\"\nassert solution(\"5\") == \"15\"\nassert solution(\"6\") == \"15\"\nassert solution(\"7\") == \"18\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '6'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '6', \"The minimum positive integer divisible by both 2 and 3 is 6\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"10\") == \"20\"\nassert solution(\"15\") == \"30\"\nassert solution(\"25\") == \"50\"\nassert solution(\"100\") == \"200\"\n\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"6\", \"Your code is not correct!\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '6'\nassert solution(4) == '8'\nassert solution(5) == '10'\nassert solution(6) == '12'\nassert solution(7) == '14'\nassert solution(8) == '16'\nassert solution(9) == '18'\nassert solution(10) == '20'\nassert solution(11) == '22'\nassert solution(12) == '24'\nassert solution(13) == '26'\nassert solution(14) == '28'\nassert solution(15) == '30'\nassert solution(16) == '32'\nassert solution(17) == '34'\nassert solution(18) == '36'\nassert solution(19) == '38'\nassert solution(20) == '40'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"7 4\") == \"4\"\nassert solution(\"8 5\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n\") == \"2\"\nassert solution(\"5 2\\n\") == \"3\"\nassert solution(\"6 3\\n\") == \"2\"\nassert solution(\"6 4\\n\") == \"3\"\nassert solution(\"6 5\\n\") == \"3\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6, 2) == \"2\", \"Incorrect output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\") == \"2\", \"The expected output is not correct.\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"7 3\") == \"3\"\nassert solution(\"8 4\") == \"4\"\nassert solution(\"9 5\") == \"5\"\nassert solution(\"10 6\") == \"6\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(6, 2) == 2\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"7 1\") == \"1\"\nassert solution(\"10 2\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"16\") == \"pon\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('16') == 'pon'\nprint('All tests passed!')",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(16) == \"pon\", \"The answer is: {}\".format(solution(16))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"16\") == \"pon\", \"The digit in the one's place of 16 is 6, so the \\\"\u672c\\\" in \\\"16 \u672c\\\" is pronounced pon.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(16) == 'pon'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'pon', \"The correct pronunciation of '\u672c' in the phrase 'N \u672c' for a positive integer N not exceeding 999 is 'pon'.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter N: \")) == \"pon\", \"The answer should be pon\"\nassert solution(input(\"Enter N: \")) == \"pon\", \"The answer should be pon\"\nassert solution(input(\"Enter N: \")) == \"pon\", \"The answer should be pon\"\nassert solution(input(\"Enter N: \")) == \"pon\", \"The answer should be pon\"\nassert solution(input(\"Enter N: \")) == \"pon\", \"The answer should be pon\"\nassert solution(input(\"Enter N: \")) == \"pon\", \"The answer should be pon\"\nassert solution(input(\"Enter N: \")) == \"pon\", \"The answer should be pon\"\nassert solution(input(\"Enter N: \")) == \"pon\", \"The answer should be pon\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter N: \")) == \"pon\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(16) == 'pon', \"The pronunciation of '\u672c' in '16 \u672c' is not 'pon'.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"16\") == \"pon\\n\", \"The answer is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"11\", \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\"\nassert solution(\"5\\n5 1 2 3 4\") == \"30\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 2\\n\") == \"11\\n\", \"Test Case 1\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"19\\n\", \"Test Case 2\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"28\\n\", \"Test Case 3\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"37\\n\", \"Test Case 4\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"46\\n\", \"Test Case 5\"",
        "num_ids_2": 58,
        "num_ids_4": 124
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"11\", \"Your solution is incorrect. Please check the input and output examples.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 3, 1, 2) == 11, \"The solution is incorrect\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 2\\n') == '11\\n'\nassert solution('5\\n5 10 10 10\\n') == '65\\n'\nassert solution('10\\n10 5 20 30 40\\n') == '950\\n'\nassert solution('1\\n100 200 300\\n') == '50\\n'\n",
        "num_ids_2": 49,
        "num_ids_4": 109
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\"\nassert solution(\"5\\n5 5 5 5 5\") == \"25\"\nassert solution(\"6\\n6 6 6 6 6 6 6\") == \"230\"",
        "num_ids_2": 40,
        "num_ids_4": 67
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\"\nassert solution(\"5\\n1 2 3 4 5\") == \"25\"\nassert solution(\"4\\n1 2 3 4\") == \"16\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"61\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"200\"",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\\n\"\nassert solution(\"3\\n2\\n3\\n4\") == \"3\\n4\\n4\\n\"\nassert solution(\"3\\n1\\n1\\n2\") == \"2\\n2\\n2\\n\"\nassert solution(\"3\\n1\\n1\\n2\\n3\") == \"3\\n2\\n3\\n4\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\\n\"\n\nassert solution(\"2\\n10\\n5\\n\") == \"10\\n5\\n\"\n\nassert solution(\"4\\n10\\n5\\n1\\n\") == \"5\\n1\\n5\\n\"\n\nassert solution(\"1\\n2\\n3\\n\") == \"1\\n2\\n3\\n\"\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"5\\n4\\n3\\n2\\n1\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n1\n4\n3\n\"\"\") == \"\"\"\n4\n3\n4\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\\n\"\nassert solution(\"3\\n1\\n2\\n3\\n\") == \"3\\n3\\n3\\n\"\nassert solution(\"2\\n3\\n4\\n5\\n\") == \"3\\n3\\n3\\n\"\nassert solution(\"2\\n1\\n2\\n3\\n\") == \"4\\n4\\n4\\n\"\nassert solution(\"2\\n1\\n4\\n3\\n\") == \"3\\n3\\n3\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == '4\\n3\\n4'\nassert solution(stdin=input()) == '4\\n4\\n3'\nassert solution(stdin=input()) == '4\\n3\\n4'\nassert solution(stdin=input()) == '4\\n4\\n3'\nassert solution(stdin=input()) == '4\\n3\\n4'\nassert solution(stdin=input()) == '4\\n4\\n3'",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='3\\n1\\n4\\n3\\n') == '4\\n3\\n4\\n'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\\n\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"9\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"9\\n\", \"Test 1\"\nassert solution(\"5 4\") == \"20\\n\", \"Test 2\"\nassert solution(\"6 3\") == \"7\\n\", \"Test 3\"\nassert solution(\"5 6\") == \"10\\n\", \"Test 4\"\nassert solution(\"10 3\") == \"30\\n\", \"Test 5\"",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"10 1\") == \"0\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"5 3\") == \"9\"\nassert solution(\"3 1\") == \"4\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"9\\n\", \"Test Case 1 failed\"\n\nassert solution(\"4 2\") == \"6\\n\", \"Test Case 2 failed\"\n\nassert solution(\"2 3\") == \"9\\n\", \"Test Case 3 failed\"\n\nassert solution(\"4 4\") == \"16\\n\", \"Test Case 4 failed\"\n\nassert solution(\"2 2\") == \"4\\n\", \"Test Case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3') == '9\\n', \"Test failed.\"\nassert solution('5 5') == '21\\n', \"Test failed.\"\nassert solution('7 7') == '35\\n', \"Test failed.\"\nassert solution('10 10') == '60\\n', \"Test failed.\"\nassert solution('20 5') == '25\\n', \"Test failed.\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"5 3\") == \"9\\n\", \"Test case 1 failed\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"9\\n\"\nassert solution(\"5 5\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"9\\n\", \"The solution is incorrect. Please check the problem statement.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"9\\n\", \"Test failed: Incorrect output.\"\nprint(\"Test passed.\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"9\", \"Sample Output not matching\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\\nHe should move and light candles as follows:\\n - Move from coordinate 0 to -10.\\n - Light the second candle from the left.\\n - Move from coordinate -10 to 10.\\n - Light the third candle from the left.\\n - Move from coordinate 10 to 20.\\n - Light the fourth candle from the left.\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"-30 -10 10 20 50\") == \"40\\nHe should move and light candles as follows:\\n - Move from coordinate 0 to -10.\\n - Light the second candle from the left.\\n - Move from coordinate -10 to 10.\\n - Light the third candle from the left.\\n - Move from coordinate 10 to 20.\\n - Light the fourth candle from the left.\"\n",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"-30 -10 10 20 50\") == \"40\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == '40\\n'\nassert solution('5 3\\n-30 -10 10 20') == '50\\n'\nassert solution('5 3\\n-30 -10 10') == '30\\n'\nassert solution('5 3\\n-30 -10') == '20\\n'\nassert solution('5 3\\n-30') == '10\\n'\nassert solution('5 3\\n-30') == '0\\n'",
        "num_ids_2": 61,
        "num_ids_4": 110
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"40\\n\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\\nHe should move and light candles as follows:\\n - Move from coordinate 0 to -10.\\n - Light the second candle from the left.\\n - Move from coordinate -10 to 10.\\n - Light the third candle from the left.\\n - Move from coordinate 10 to 20.\\n - Light the fourth candle from the left.\\n\"\nassert solution(\"\") == \"\"\nassert solution(\"5\\n3\\n-30 -10 10 20 50\") == \"Invalid input format.\"\nassert solution(\"5 3\\n-30\\n10 20 50\") == \"Invalid input format.\"\nassert solution(\"5 3\\n-30 -10 10 20 50 60\") == \"Invalid input format.\"",
        "num_ids_2": 121,
        "num_ids_4": 182
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == '40'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"40\"\nassert solution(input()) == \"40\"\nassert solution(input()) == \"40\"\nassert solution(input()) == \"40\"\nassert solution(input()) == \"40\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 13\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"1000 1000\") == \"1\"\nassert solution(\"1 500\") == \"500\"\nassert solution(\"1 500\") == \"500\"\nassert solution(\"1000 1000\") == \"1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 13\") == \"2\", \"Test failed for the given constraints\"\nassert solution(\"5 7\") == \"0\", \"Test failed for the given constraints\"\nassert solution(\"3 6\") == \"4\", \"Test failed for the given constraints\"\nassert solution(\"2 2\") == \"0\", \"Test failed for the given constraints\"\nassert solution(\"1 3\") == \"0\", \"Test failed for the given constraints\"\nassert solution(\"4 8\") == \"2\", \"Test failed for the given constraints\"\nassert solution(\"1 3\") == \"0\", \"Test failed for the given constraints\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 13\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 13\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 13\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 13\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"2\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4\\n\") == \"3\\n\"\n\nassert solution(\"10 5\\n\") == \"3\\n\"\n\nassert solution(\"10 0\\n\") == \"0\\n\"\n\nassert solution(\"10 2\\n\") == \"2\\n\"\n\nassert solution(\"5 5\\n\") == \"3\\n\"\n\nassert solution(\"0 10\\n\") == \"0\\n\"\n\nassert solution(\"1 10\\n\") == \"0\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '3', \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\") == \"3\\n\"\n\nSolution:\nServal is fighting with a monster.\nThe health of the monster is H.\nIn one attack, Serval can decrease the monster's health by A.\nThere is no other way to decrease the monster's health.\nServal wins when the monster's health becomes 0 or below.\nFind the number of attacks Serval needs to make before winning.",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4\") == \"3\", \"Test Case 1 Failed\"\nassert solution(\"5 1\") == \"1\", \"Test Case 2 Failed\"\nassert solution(\"10 6\") == \"2\", \"Test Case 3 Failed\"\nassert solution(\"1 1\") == \"1\", \"Test Case 4 Failed\"\nassert solution(\"5 0\") == \"0\", \"Test Case 5 Failed\"",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4\") == \"3\\n\", \"Please provide the input as H A.\"\n\nfrom typing import List\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4\") == \"3\", \"The solution is incorrect. The expected output is '3'.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n\", \"Test case 1 failed.\"\nassert solution() == \"5\\n\", \"Test case 2 failed.\"\nassert solution() == \"7\\n\", \"Test case 3 failed.\"\nassert solution() == \"9\\n\", \"Test case 4 failed.\"\nassert solution() == \"11\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4\") == \"3\"\nprint(\"All test cases passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4\") == \"3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4\") == \"3\\n\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 75 25 100\") == \"50\\n\", \"The output is not correct.\"\nassert solution(\"0 100 75 25\") == \"50\\n\", \"The output is not correct.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 75 25 100') == '50\\n', \"Test case 1 is incorrect\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 0 0 0\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"50\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"100 25 50 75\") == \"50\"\nassert solution(\"100 25 50 75\") == \"50\"",
        "num_ids_2": 43,
        "num_ids_4": 65
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"10 15 15 100\") == \"10\"\nassert solution(\"0 100 0 100\") == \"50\"\nassert solution(\"0 100 0 0\") == \"0\"\nassert solution(\"0 0 0 0\") == \"0\"",
        "num_ids_2": 43,
        "num_ids_4": 82
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 75 25 100\") == \"50\", \"Test failed.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"50\", \"Output does not match expected output\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 75 25 100\") == 50\nassert solution(\"0 100 100 100\") == 200\nassert solution(\"0 0 100 100\") == 50\nassert solution(\"0 100 0 100\") == 50\nassert solution(\"0 100 100 0\") == 50\n",
        "num_ids_2": 43,
        "num_ids_4": 83
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(105) == \"1\", \"Incorrect output: 105 should have only one number between 1 and 105.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n\", \"Incorrect Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"105\") == \"1\\n\", \"Test 1 failed\"\nassert solution(\"200\") == \"0\\n\", \"Test 2 failed\"\nassert solution(\"0\") == \"0\\n\", \"Test 3 failed\"\nassert solution(\"-1\") == \"0\\n\", \"Test 4 failed\"\nassert solution(\"101\") == \"0\\n\", \"Test 5 failed\"\nassert solution(\"123\") == \"0\\n\", \"Test 6 failed\"\nassert solution(\"150\") == \"1\\n\", \"Test 7 failed\"\nassert solution(\"151\") == \"2\\n\", \"Test 8 failed\"\nassert solution(\"175\") == \"1\\n\", \"Test 9 failed\"\nassert solution(\"200\") == \"0\\n\", \"Test 10 failed\"\nassert solution(\"201\") == \"1\\n\", \"Test 11 failed\"\nassert solution(\"250\") == \"0\\n\", \"Test 12 failed\"\nassert solution(\"251\") == \"2\\n\", \"Test 13 failed\"\nassert solution(\"500\") == \"0\\n\", \"Test 14 failed\"\nassert solution(\"501\") == \"1\\n\", \"Test 15 failed\"\nassert solution(\"750\") == \"0\\n\", \"Test 16 failed\"\nassert solution(\"751\") == \"2\\n\", \"Test 17 failed\"\nassert solution(\"800\") == \"0\\n\", \"Test 18 failed\"\nassert solution(\"801\") == \"1\\n\", \"Test 19 failed\"\nassert solution(\"850\") == \"0\\n\", \"Test 20 failed\"\nassert solution(\"851\") == \"2\\n\", \"Test 21 failed\"\nassert solution(\"900\") == \"0\\n\", \"Test 22 failed\"\nassert solution(\"901\") == \"1\\n\", \"Test 23 failed\"\nassert solution(\"950\") == \"0\\n\", \"Test 24 failed\"\nassert solution(\"951\") == \"2\\n\", \"Test 25 failed\"\nassert solution(\"1000\") == \"0\\n\", \"Test 26 failed\"\nassert solution(\"1001\") == \"1\\n\", \"Test 27 failed\"\nassert solution(\"1050\") == \"1\\n\", \"Test 28 failed\"\nassert solution(\"1051\") == \"2\\n\", \"Test 29 failed\"\nassert solution(\"1200\") == \"0\\n\", \"Test 30 failed\"\nassert solution(\"1201\") == \"1\\n\", \"Test 31 failed\"\nassert solution(\"1250\") == \"1\\n\", \"Test 32 failed\"\nassert solution(\"1251\") == \"2\\n\", \"Test 33 failed\"\nassert solution(\"1500\") == \"0\\n\", \"Test 34 failed\"\nassert solution(\"1501\") == \"1\\n\", \"Test 35 failed\"\nassert solution(\"1550\") == \"1\\n\", \"Test 36 failed\"\nassert solution(\"1551\") == \"2\\n\", \"Test 37 failed\"\nassert solution(\"1700\") == \"0\\n\", \"Test 38 failed\"\nassert solution(\"1701\") == \"1\\n\", \"Test 39 failed\"\nassert solution(\"1750\") == \"1\\n\", \"Test 40 failed\"\nassert solution(\"1751\") == \"2\\n\", \"Test 41 failed\"\nassert solution(\"1800\") == \"0\\n\", \"Test 42 failed\"\nassert solution(\"1801\") == \"1\\n\", \"Test 43 failed\"\nassert solution(\"1850\") == \"1\\n\", \"Test 44 failed\"\nassert solution(\"1851\") == \"2\\n\", \"Test 45 failed\"\nassert solution(\"1900\") == \"0\\n\", \"Test 46 failed\"\nassert solution(\"1901\") == \"1\\n\", \"Test 47 failed\"\nassert solution(\"1950\") == \"1\\n\", \"Test 48 failed\"\nassert solution(\"1951\")",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(105) == 1, \"The expected output is 1, but it is {}\".format(solution(105))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\", \"Incorrect output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(105) == \"1\\n\", \"The number 105 is quite special - it is odd but still it has eight divisors.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(105) == 1, \"Test case 1 failed\"\nassert solution(106) == 0, \"Test case 2 failed\"\nassert solution(107) == 1, \"Test case 3 failed\"\nassert solution(108) == 1, \"Test case 4 failed\"\nassert solution(109) == 1, \"Test case 5 failed\"\nassert solution(110) == 1, \"Test case 6 failed\"\nassert solution(111) == 1, \"Test case 7 failed\"\nassert solution(112) == 1, \"Test case 8 failed\"\nassert solution(113) == 1, \"Test case 9 failed\"\nassert solution(114) == 1, \"Test case 10 failed\"\nassert solution(115) == 1, \"Test case 11 failed\"\nassert solution(116) == 1, \"Test case 12 failed\"\nassert solution(117) == 1, \"Test case 13 failed\"\nassert solution(118) == 1, \"Test case 14 failed\"\nassert solution(119) == 1, \"Test case 15 failed\"\nassert solution(120) == 1, \"Test case 16 failed\"\nassert solution(121) == 1, \"Test case 17 failed\"\nassert solution(122) == 1, \"Test case 18 failed\"\nassert solution(123) == 1, \"Test case 19 failed\"\nassert solution(124) == 1, \"Test case 20 failed\"\nassert solution(125) == 1, \"Test case 21 failed\"\nassert solution(126) == 1, \"Test case 22 failed\"\nassert solution(127) == 1, \"Test case 23 failed\"\nassert solution(128) == 1, \"Test case 24 failed\"\nassert solution(129) == 1, \"Test case 25 failed\"\nassert solution(130) == 1, \"Test case 26 failed\"\nassert solution(131) == 1, \"Test case 27 failed\"\nassert solution(132) == 1, \"Test case 28 failed\"\nassert solution(133) == 1, \"Test case 29 failed\"\nassert solution(134) == 1, \"Test case 30 failed\"\nassert solution(135) == 1, \"Test case 31 failed\"\nassert solution(136) == 1, \"Test case 32 failed\"\nassert solution(137) == 1, \"Test case 33 failed\"\nassert solution(138) == 1, \"Test case 34 failed\"\nassert solution(139) == 1, \"Test case 35 failed\"\nassert solution(140) == 1, \"Test case 36 failed\"\nassert solution(141) == 1, \"Test case 37 failed\"\nassert solution(142) == 1, \"Test case 38 failed\"\nassert solution(143) == 1, \"Test case 39 failed\"\nassert solution(144) == 1, \"Test case 40 failed\"\nassert solution(145) == 1, \"Test case 41 failed\"\nassert solution(146) == 1, \"Test case 42 failed\"\nassert solution(147) == 1, \"Test case 43 failed\"\nassert solution(148) == 1, \"Test case 44 failed\"\nassert solution(149) == 1, \"Test case 45 failed\"\nassert solution(150) == 1, \"Test case 46 failed\"\nassert solution(151) == 1, \"Test case 47 failed\"\nassert solution(152) == 1, \"Test case 48 failed\"\nassert solution(153) == 1, \"Test case 49 failed\"\nassert solution(154) == 1, \"Test case 50 failed\"\nassert solution(155) == 1, \"Test case 51 failed\"\nassert solution(156) == 1, \"Test case ",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"105\") == \"1\", \"Expected output: 1\"\nassert solution(\"5\") == \"0\", \"Expected output: 0\"\nassert solution(\"1\") == \"0\", \"Expected output: 0\"\nassert solution(\"2\") == \"0\", \"Expected output: 0\"\nassert solution(\"6\") == \"0\", \"Expected output: 0\"\nassert solution(\"8\") == \"1\", \"Expected output: 1\"\nassert solution(\"10\") == \"1\", \"Expected output: 1\"\nassert solution(\"12\") == \"1\", \"Expected output: 1\"\nassert solution(\"15\") == \"2\", \"Expected output: 2\"\nassert solution(\"20\") == \"2\", \"Expected output: 2\"\nassert solution(\"24\") == \"2\", \"Expected output: 2\"\nassert solution(\"30\") == \"4\", \"Expected output: 4\"\nassert solution(\"40\") == \"4\", \"Expected output: 4\"\nassert solution(\"45\") == \"4\", \"Expected output: 4\"\nassert solution(\"50\") == \"8\", \"Expected output: 8\"\nassert solution(\"55\") == \"8\", \"Expected output: 8\"\nassert solution(\"60\") == \"16\", \"Expected output: 16\"\nassert solution(\"65\") == \"16\", \"Expected output: 16\"\nassert solution(\"70\") == \"32\", \"Expected output: 32\"\nassert solution(\"75\") == \"32\", \"Expected output: 32\"\nassert solution(\"80\") == \"64\", \"Expected output: 64\"\nassert solution(\"85\") == \"64\", \"Expected output: 64\"\nassert solution(\"90\") == \"128\", \"Expected output: 128\"\nassert solution(\"95\") == \"128\", \"Expected output: 128\"\nassert solution(\"100\") == \"256\", \"Expected output: 256\"\nassert solution(\"105\") == \"1\", \"Expected output: 1\"",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(105) == \"1\", \"The number 105 is not odd and has exactly eight positive divisors.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter the value of N: \")) == \"1\", \"Solution should return 1 for the given input\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n\", \"The correct output should be printed\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1\\n', 'Test case 1 failed'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\", \"Test case 1 failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 3') == '1\\n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3\") == \"1\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 3') == '1\\n', \"The given test case does not satisfy the given constraints or is incorrect.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\\n\", \"Test case failed\"\n\nN, K = map(int, input().split())",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 3\") == \"1\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"111\") == \"111\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('111') == '111'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"N: \")) == \"111\", \"Incorrect output. Please check your code.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('111') == '111'  # Correct",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"111\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"111\") == \"111\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"111\") == \"111\"  # correct output",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(111) == '111'\nassert solution(123) == '111'\nassert solution(123456) == '111'\nassert solution(1234567890) == '111'\nassert solution(123456789012) == '111'",
        "num_ids_2": 28,
        "num_ids_4": 66
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"111\") == \"111\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '111'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 6 3') == '5'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\", \"Incorrect output\"\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\"\nassert solution(\"5 3 1\") == \"5\\n\"\nassert solution(\"2 4 3\") == \"7\\n\"\nassert solution(\"1 2 3\") == \"0\\n\"\nassert solution(\"1 0 3\") == \"1\\n\"\nassert solution(\"5 1 3\") == \"1\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 6 3\") == \"5\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\", \"Your solution is incorrect!\"\nprint(\"All tests passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 6 3') == '5\\n', \"Test case failed.\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"5 3 2 1 0\") == \"14\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 6 3\") == \"5\", \"Expected 5, got: {}\".format(solution(\"1 6 3\"))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"5 3 1\") == \"5\"\nassert solution(\"3 5 1\") == \"5\"\nassert solution(\"2 4 6\") == \"12\"\nassert solution(\"7 2 6\") == \"18\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\", \"Incorrect output\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\") == \"5\\n5\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\") == \"5\", \"Invalid input\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"5\", \"Test Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\\n\", \"Output should be 5\"\nassert solution(input()) == \"5\\n\", \"Output should be 5\"\nassert solution(input()) == \"5\\n\", \"Output should be 5\"\nassert solution(input()) == \"5\\n\", \"Output should be 5\"\nassert solution(input()) == \"5\\n\", \"Output should be 5\"\nassert solution(input()) == \"5\\n\", \"Output should be 5\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n\") == \"5\\n\"\nassert solution(\"5\\n\") == \"5\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"500000\\n\") == \"500000\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 66
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"5\", \"Expected output: 5, got: \" + solution(\"8\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"5\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n\") == \"5\\n\"\nassert solution(\"20\\n\") == \"5\\n\"\nassert solution(\"1000000\\n\") == \"5\\n\"\nassert solution(\"5\\n\") == \"5\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"0\\n\") == \"0\\n\"\nassert solution(\"-1\\n\") == \"1\\n\"\nassert solution(\"1000001\\n\") == \"5\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'No', 'Solution should return \"No\"'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 9 10 10\") == \"No\\n\"  # Takahashi loses\nassert solution(\"10 10 9 10\") == \"No\\n\"  # Aoki loses\nassert solution(\"9 9 10 10\") == \"Yes\\n\"  # Takahashi wins\nassert solution(\"11 10 9 10\") == \"Yes\\n\"  # Aoki wins",
        "num_ids_2": 56,
        "num_ids_4": 109
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"3 5 6 7\") == \"Yes\"\nassert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"100 50 25 10\") == \"No\"\nassert solution(\"100 200 300 400\") == \"Yes\"",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 9 10 10') == 'No'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 9 10 10\") == \"No\", \"Takahashi will win\"\nassert solution(\"10 9 10 0\") == \"Yes\", \"Aoki will win\"\nassert solution(\"0 10 0 0\") == \"No\", \"Takahashi will lose\"\nassert solution(\"0 10 0 10\") == \"Yes\", \"Aoki will lose\"",
        "num_ids_2": 51,
        "num_ids_4": 100
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 9 10 10\") == \"No\\n\" # Takahashi will win\n\nassert solution(\"1 2 3 4\") == \"Yes\\n\" # Aoki will win\n\nassert solution(\"5 6 7 8\") == \"No\\n\" # Takahashi will win\n\nassert solution(\"100 100 100 100\") == \"No\\n\" # Aoki will win\n\nassert solution(\"10 9 5 4\") == \"Yes\\n\" # Aoki will win\n\nassert solution(\"100 100 100 100\") == \"Yes\\n\" # Takahashi will win",
        "num_ids_2": 51,
        "num_ids_4": 107
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'No'  # expected output: No",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 9 10 10') == 'No', 'Expected \"No\", got \"{0}\"'.format(solution('10 9 10 10'))",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"6\\n2 3\\n4 1 5\") == \"10\\n\"\nassert solution(\"4\\n1 5\\n2 3\") == \"15\\n\"\nassert solution(\"5\\n2 3\\n1 5\") == \"10\\n\"\nassert solution(\"6\\n1 5\\n2 3\") == \"15\\n\"\nassert solution(\"5\\n1 5\\n2 3\") == \"15\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 98
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\\n\") == \"5\\n\"\nassert solution(\"5\\n10 2 5\\n6 3 4\\n\") == \"5\\n\"\nassert solution(\"5\\n10 2 5\\n6 3 4\\n\") == \"5\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 5",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"3\\n10 2 5\\n6 3 4\\n7 8 9\") == \"7\\n\"\nassert solution(\"3\\n10 2 5\\n6 3 4\\n7 8 9\\n11 12 13\") == \"11\\n\"\nassert solution(\"3\\n10 2 5\\n6 3 4\\n7 8 9\\n11 12 13\\n14 15 16\") == \"14\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 161
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, \"Test failed\"\nprint(output_str)",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\", \"Test case 1\"\nassert solution(\"1\\n10 2 5\\n6 3 4\") == \"10\\n\", \"Test case 2\"\nassert solution(\"4\\n10 2 5\\n6 3 4\") == \"15\\n\", \"Test case 3\"\nassert solution(\"5\\n10 2 5\\n6 3 4\") == \"20\\n\", \"Test case 4\"\nassert solution(\"6\\n10 2 5\\n6 3 4\") == \"25\\n\", \"Test case 5\"\nassert solution(\"7\\n10 2 5\\n6 3 4\") == \"30\\n\", \"Test case 6\"\nassert solution(\"8\\n10 2 5\\n6 3 4\") == \"35\\n\", \"Test case 7\"\nassert solution(\"9\\n10 2 5\\n6 3 4\") == \"40\\n\", \"Test case 8\"\nassert solution(\"10\\n10 2 5\\n6 3 4\") == \"45\\n\", \"Test case 9\"\n",
        "num_ids_2": 67,
        "num_ids_4": 135
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n##.#\\n....\\n##.#\\n.#.#') == '\\n###\\n###\\n.##\\n'\nassert solution('4 4\\n###\\n###\\n###\\n###') == '\\n###\\n###\\n###\\n###\\n'\nassert solution('4 4\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n",
        "num_ids_2": 73,
        "num_ids_4": 1027
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\n\nimport itertools",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 4\n##.#\n....\n##.#\n.#.#\n\"\"\") == \"###\\n###\\n.##\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\nassert solution(\"5 5\\n.#.\\n.....\\n....\\n..#.\\n.\") == \".###\\n...##\\n.#...\\n..###\\n#.#.#\"\nassert solution(\"5 5\\n.#.\\n.....\\n....\\n..#.\\n.#.\\n\") == \".###\\n...##\\n.#...\\n..###\\n#.#.#\"\nassert solution(\"5 5\\n.#.\\n.....\\n....\\n..#.\\n....\\n\") == \".###\\n...##\\n.#...\\n..###\\n#.#.#\"\nassert solution(\"5 5\\n.#.\\n.....\\n....\\n..#.\\n.....\\n\") == \".###\\n...##\\n.#...\\n..###\\n#.#.#\"\nassert solution(\"5 5\\n.#.\\n.....\\n....\\n..#.\\n....\\n#.\\n\") == \".###\\n...##\\n.#...\\n..###\\n#.#.#\"\nassert solution(\"5 5\\n.#.\\n.....\\n....\\n..#.\\n....\\n....\\n\") == \".###\\n...##\\n.#...\\n..###\\n#.#.#\"\nassert solution(\"5 5\\n.#.\\n.....\\n....\\n..#.\\n....\\n....\\n#.\\n\") == \".###\\n...##\\n.#...\\n..###\\n#.#.#\"\nassert solution(\"5 5\\n.#.\\n.....\\n....\\n..#.\\n....\\n....\\n#.\\n#\") == \".###\\n...##\\n.#...\\n..###\\n#.#.#\"\nassert solution(\"5 5\\n.#.\\n.....\\n....\\n..#.\\n....\\n....\\n#.\\n#\") == \".###\\n...##\\n.#...\\n..###\\n#.#.#\"\nassert solution(\"5 5\\n.#.\\n.....\\n....\\n..#.\\n....\\n....\\n#.\\n#\") == \".###\\n...##\\n.#...\\n..###\\n#.#.#\"",
        "num_ids_2": 79,
        "num_ids_4": 171
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n#.\\n....\\n#.\\n#.#') == '###\\n###\\n.##\\n'\nprint('All tests pass!')",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"\\n###\\n###\\n.##\\n\"\nassert solution(\"4 5\\n##.#\\n....\\n##.#\\n.#.#\") == \"\\n###\\n###\\n.##\\n\"\nassert solution(\"5 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"\\n###\\n###\\n.##\\n\"\nassert solution(\"1 5\\n.#.\\n....\\n.#.\\n.##.\") == \"\\n###\\n###\\n.##\\n\"\nassert solution(\"5 1\\n.#.\\n....\\n.#.\\n.##.\") == \"\\n###\\n###\\n.##\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 146
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nprint(solution(\"1\"))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"6.28318530717958623200\\n\", \"Test 1\"\nassert solution(\"2\\n\") == \"6.40080698311787916000\\n\", \"Test 2\"\nassert solution(\"3\\n\") == \"6.645794291281164315000\\n\", \"Test 3\"\nassert solution(\"4\\n\") == \"6.931471805599453094172\\n\", \"Test 4\"\nassert solution(\"5\\n\") == \"7.243046135308927896257\\n\", \"Test 5\"\n\nfor R in range(1, 101):\n    assert abs(solution(str(R)) - 6.28318530717958623200) <= 10**-2, f\"Test {R}\"",
        "num_ids_2": 80,
        "num_ids_4": 162
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"1\\n\") == \"6.28318530717958623200\\n\", \"The correct output is: 6.28318530717958623200\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"6.28318530717958623200\\n\", \"Output is incorrect\"\n\nprint(\"Output is correct\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='1') == '6.28318530717958623200'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6.28318530717958623200\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\", \"Test failed for the given constraints.\"\nassert solution(\"-1\") == \"6.28318530717958623200\", \"Test failed for the given constraints.\"\nassert solution(\"100\") == \"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091455682768918461565607892524243301615338920885846822482867530623390618256858452387819415716053882644099259562574463466109450797959199470189692347002841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091455682768918461565607892524243301615338920885846822482867530623390618256858452387819415716053882644099259562574463466109450797959199470189692347002841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091455682768918461565607892524243301615338920885846822482867530623390618256858452387819415716053882644099259562574463466109450797959199470189692347002841027019385211055596446229489549303819644288109756659334461284756",
        "num_ids_2": 78,
        "num_ids_4": 1027
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6.28318530717958623200\", \"Your code is not correct!\"\nprint(\"Test Passed!\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\", \"Test case 1\"\nassert solution(\"2\") == \"6.28318530717958623200\", \"Test case 2\"\nassert solution(\"3\") == \"6.28318530717958623200\", \"Test case 3\"\nassert solution(\"4\") == \"6.28318530717958623200\", \"Test case 4\"\nassert solution(\"5\") == \"6.28318530717958623200\", \"Test case 5\"",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6.28318530717958623200\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ABCDE\") == \"No\"\nassert solution(\"GHIJKL\") == \"Yes\"\nassert solution(\"NOPQRST\") == \"No\"\nassert solution(\"UVWXYZ\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"S consists of A and S which both appear twice in S\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"abcd\") == \"No\"\nassert solution(\"abcdxyz\") == \"No\"\nassert solution(\"hello\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"Test Failed\"\nassert solution(\"AABBBCCC\") == \"No\", \"Test Failed\"\nassert solution(\"abcabcabc\") == \"Yes\", \"Test Failed\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"No\", \"Test Failed\"",
        "num_ids_2": 31,
        "num_ids_4": 65
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"Test failed for input 'ASSA'.\"\nassert solution(\"ABCD\") == \"No\", \"Test failed for input 'ABCD'.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAAA\") == \"No\"\nassert solution(\"ABBC\") == \"Yes\"\nassert solution(\"ABCA\") == \"No\"\nassert solution(\"ABCD\") == \"No\"\nassert solution(\"ABE\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ZYXW\") == \"No\"\nassert solution(\"ABC\") == \"Yes\"\nassert solution(\"AAA\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAA\") == \"No\"\nassert solution(\"AA\") == \"Yes\"\nassert solution(\"AB\") == \"No\"\nassert solution(\"CAB\") == \"Yes\"\nassert solution(\"CBA\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AGTA\") == \"No\"\nassert solution(\"ABBC\") == \"No\"\nassert solution(\"ATTT\") == \"Yes\"\nassert solution(\"AGGT\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5') == '-17'\nassert solution('2 3') == '-10'\nassert solution('5 3') == '-10'\nassert solution('1 5') == '-10'\nassert solution('5 5') == '-20'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"-5 -3\") == \"-15\"\nassert solution(\"4 8\") == \"-120\"\nassert solution(\"1 0\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"-3\"\nassert solution(\"-10 3\") == \"-10\"\nassert solution(\"-10 -3\") == \"-10\"\nassert solution(\"-13 -3\") == \"-10\"\nassert solution(\"-13 3\") == \"-10\"",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"-10\", \"Output should be -10\"\nassert solution(\"10 -5\") == \"-10\", \"Output should be -10\"\nassert solution(\"2 6\") == \"-39\", \"Output should be -39\"",
        "num_ids_2": 43,
        "num_ids_4": 64
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\" -13 3\") == \"-10\\n\", \"Testcase 1 Failed\"\nassert solution(\"-13 3\") == \"-10\\n\", \"Testcase 2 Failed\"\nassert solution(\"13 3\") == \"-10\\n\", \"Testcase 3 Failed\"\nassert solution(\"4 5\") == \"-10\\n\", \"Testcase 4 Failed\"\nassert solution(\"10 10\") == \"-10\\n\", \"Testcase 5 Failed\"",
        "num_ids_2": 47,
        "num_ids_4": 92
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"-13 3\") == \"-10\", \"Test Case 1\"\nassert solution(\"-23 -11\") == \"-16\", \"Test Case 2\"\nassert solution(\"4 6\") == \"-39\", \"Test Case 3\"\nassert solution(\"0 0\") == \"0\", \"Test Case 4\"\nassert solution(\"0 1\") == \"1\", \"Test Case 5\"",
        "num_ids_2": 41,
        "num_ids_4": 78
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"-5 7\") == \"-21\"\nassert solution(\"-10 10\") == \"-100\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"100 100\") == \"200\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('-13 3') == '-10', \"The largest number among A + B = -10, A - B = -16, and A \\times B = -39 is -10.\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"-10 6\") == \"-16\"\nassert solution(\"15 20\") == \"300\"",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\\n6 5 6 8\") == \"3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution does not match. Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nprint(\"All test cases pass.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter the number of mountains: \")) == 3\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nassert solution(\"5\\n3 2 1 3\") == \"3\"\nassert solution(\"6\\n4 4 4 4\") == \"2\"\nassert solution(\"7\\n7 6 5 5 5\") == \"1\"\nassert solution(\"8\\n8 7 6 6 6 6\") == \"0\"\nassert solution(\"9\\n9 8 8 8 8 8 8\") == \"0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n6 5 6 8') == '3\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\" # expected output: 3",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\\n\"\nprint(\"All test cases passed successfully\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '3\\n', 'Test case failed'\nassert solution(input()) == '3\\n', 'Test case failed'\nassert solution(input()) == '3\\n', 'Test case failed'\nassert solution(input()) == '3\\n', 'Test case failed'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\\n\") == \"2\\n3 4 \"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n1 1 1 1\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1\\n5 \nassert solution(\"5\\n1 2 1 2 1\\n\") == \"3\\n2 2 1\"",
        "num_ids_2": 62,
        "num_ids_4": 118
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2\\n3 4 '",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\\n\") == \"2\\n3 4 \"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n1 1 1 1 \"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1\\n5 \nassert solution(\"5\\n1 2 1 2 1\\n\") == \"3\\n2 2 1 \"",
        "num_ids_2": 62,
        "num_ids_4": 118
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\\n\") == \"2\\n3 4 \"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n1 1 1 1\"\nassert solution(\"5\\n1 2 1 2 1\\n\") == \"3\\n2 2 1\"",
        "num_ids_2": 62,
        "num_ids_4": 92
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7\\n1 2 3 1 2 3 4\\n') == '2\\n3 4 '\nassert solution('4\\n1 1 1 1\\n') == '4\\n1 1 1 1 '\nassert solution('5\\n1 2 3 4 5\\n') == '1\\n5 \nassert solution('5\\n1 2 1 2 1\\n') == '3\\n2 2 1",
        "num_ids_2": 62,
        "num_ids_4": 117
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n3 4\"\nassert solution() == \"4\\n1 1 1 1\"\nassert solution() == \"1\\n5  \"\nassert solution() == \"3\\n2 2 1\"",
        "num_ids_2": 30,
        "num_ids_4": 57
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\") == \"2\\n3 4 \"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n1 1 1 1 \"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\\n5 \nassert solution(\"5\\n1 2 1 2 1\") == \"3\\n2 2 1 \"\n",
        "num_ids_2": 58,
        "num_ids_4": 110
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution() == '2'\nassert solution() == '1'\nassert solution() == '7'\nassert solution() == '4'\nassert solution() == '333333333'\nassert solution() == '333333328'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n2",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\\n\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n\"\n\nassert solution(\"6\\n2\\n2\\n10\\n100\\n1000\\n10000\\n\") == \"1\\n7\\n4\\n333333333\\n333333328\\n\"\n\nassert solution(\"5\\n1\\n1\\n1\\n\") == \"1\\n\"\n\nassert solution(\"10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\\n\"",
        "num_ids_2": 157,
        "num_ids_4": 219
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n\", \"Expected output: 1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"2\\n1\\n4\\n6\\n555555556\\n666666667\\n\", \"Expected output: 2\\n1\\n4\\n6\\n555555556\\n666666667\\n\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n3\\n6\\n7\\n133333333\\n166666667\\n\", \"Expected output: 1\\n3\\n6\\n7\\n133333333\\n166666667\\n\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"7\\n4\\n10\\n14\\n233333333\\n266666667\\n\", \"Expected output: 7\\n4\\n10\\n14\\n233333333\\n266666667\\n\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"4\\n3\\n8\\n12\\n216666667\\n333333333\\n\", \"Expected output: 4\\n3\\n8\\n12\\n216666667\\n333333333\\n\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\",
        "num_ids_2": 250,
        "num_ids_4": 498
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n\"\nassert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n\"",
        "num_ids_2": 170,
        "num_ids_4": 340
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"512 4\") == 50\nassert solution(\"1000000000 9\") == 1",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(512, 4) == 50, \"The output of the function is not correct.\"\nassert solution(1000000000, 9) == 1, \"The output of the function is not correct.\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"512 4\") == \"50\", \"Input is incorrect.\"\nassert solution(\"1000000000 9\") == \"1\", \"Input is incorrect.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"512 4\") == \"50\", \"Expected output 50, but got: \" + solution(\"512 4\")\nassert solution(\"1000000000 9\") == \"1\", \"Expected output 1, but got: \" + solution(\"1000000000 9\")\n\nprint(solution(\"512 4\"))  # Output: 50\nprint(solution(\"1000000000 9\"))  # Output: 1",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"512 4\") == \"50\", \"Your solution is incorrect.\"\nassert solution(\"1000000000 9\") == \"1\", \"Your solution is incorrect.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    result = sum(i - 1 for i in range(n, 0, -1))\n    print(result)",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \"Test case failed\"\n\nfrom typing import List",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n2 1 1 2 3\\n5\\n2 5 5 \"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\\n\\n5\\n3 7 5 1 5\\n\\n3\\n5 1 4\\n\\n7\\n2 2 3 2 1 2 2\\n\") == \"5\\n2 1 1 2 3\\n5\\n5 5\\n2\\n4 5\\n7\\n1 2 2 2 2 3 2\\n\"\n",
        "num_ids_2": 122,
        "num_ids_4": 122
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input') == 'Output\\n5\\n2 1 1 2 3\\n2\\n5 5'\nassert solution('Input') == 'Output\\n5\\n2 1 1 2 3\\n2\\n5 5'\nassert solution('Input') == 'Output\\n5\\n2 1 1 2 3\\n2\\n5 5'\nassert solution('Input') == 'Output\\n5\\n2 1 1 2 3\\n2\\n5 5'\nassert solution('Input') == 'Output\\n5\\n2 1 1 2 3\\n2\\n5 5'\nassert solution('Input') == 'Output\\n5\\n2 1 1 2 3\\n2\\n5 5'",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 7 5 1 5\") == \"2\\n5 5 \"\nassert solution(\"3\\n5 1 4\") == \"2\\n4 5 \"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"7\\n1 2 2 2 2 3 2\"",
        "num_ids_2": 48,
        "num_ids_4": 88
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n5 5\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"7\\n1 2 2 2 2 3 2\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"2\\n4 5\"\nassert solution(open(\"input4.txt\", \"r\").read()) == \"5\\n3 7 5 1 5\"\nassert solution(open(\"input5.txt\", \"r\").read()) == \"2\\n5 5\"",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\\n5\\n3 7 5 1 5\\n3\\n5 1 4\\n7\\n2 2 3 2 1 2 2\\n\") == \"5\\n2 1 1 2 3\\n\\n2\\n5 5\\n\\n2\\n4 5\\n\\n7\\n1 2 2 2 2 3 2\\n\"",
        "num_ids_2": 122,
        "num_ids_4": 122
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Got '{solution(input())}' instead of expected output '{expected}'\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n7\\n4 3 5 1 2 2 1\\n\\nOutput\\n5\\n2 1 1 2 3\\n\\nInput\\n5\\n3 7 5 1 5\\n\\nOutput\\n2\\n5 5\\n\\nInput\\n3\\n5 1 4\\n\\nOutput\\n2\\n4 5\\n\\nInput\\n7\\n2 2 3 2 1 2 2\\n\\nOutput\\n7\\n1 2 2 2 2 3 2') == '\\n5\\n2 1 1 2 3\\n\\n5\\n3 7 5 1 5\\n\\n2\\n4 5\\n\\n7\\n1 2 2 2 2 3 2\\n'",
        "num_ids_2": 213,
        "num_ids_4": 213
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed: {expected}!= {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2\\n'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1\\n'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 6\\n') == '-1\\n'",
        "num_ids_2": 76,
        "num_ids_4": 114
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\") == \"-1\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\\n\"\nassert solution(\"Input\\n4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\") == \"-1\"\n\nfrom typing import List",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"\nassert solution(\"4 20\\n8 5\\n4 2\\n2 1\\n\") == \"1\"",
        "num_ids_2": 72,
        "num_ids_4": 102
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"TODO\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"tleelte\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"qwerty\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"vvvvvv\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"abcde\"",
        "num_ids_2": 83,
        "num_ids_4": 166
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"tleelte\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"tleelte\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 3\") == \"tleelte\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 3\") == \"tleelte\"",
        "num_ids_2": 80,
        "num_ids_4": 120
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'tleelte' and solution(input()) == 'qwerty' and solution(input()) == 'vvvvvv' and solution(input()) == 'abcde'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected {expected}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"tleelte\"\nassert solution == \"qwerty\"\nassert solution == \"vvvvvv\"\n\nt = int(input())\nfor _ in range(t):\n    n, a, b = map(int, input().split())\n    s = \"\"\n    for i in range(n):\n        sub = \"abcdefghijklmnopqrstuvwxyz\"[:a]\n        count = 0\n        for j in range(i+1, n):\n            if sub == sub[j-i:j]:\n                count += 1\n                if count == b:\n                    s += sub\n                    break\n            else:\n                count = 0\n        if i == n-1:\n            s += sub[-1]\n    print(s)",
        "num_ids_2": 17,
        "num_ids_4": 26
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"tleelte\"\nassert solution() == \"qwerty\"\nassert solution() == \"vvvvvv\"\nassert solution() == \"abcde\"\nassert solution() == \"abcdef\"\nassert solution() == \"abcefg\"\nassert solution() == \"abcdefg\"\nassert solution() == \"abcefgg\"\nassert solution() == \"abcefggg\"\nassert solution() == \"abcdefgh\"\nassert solution() == \"abcfgh\"\nassert solution() == \"abcfgh\"\nassert solution() == \"abcdee\"\nassert solution() == \"abcdefg\"\nassert solution() == \"abcdefg\"\nassert solution() == \"abcdefg\"\nassert solution() == \"abcdefgg\"\nassert solution() == \"abcdefgh\"\nassert solution() == \"abcdefgh\"\nassert solution() == \"abcdefgh\"\nassert solution() == \"abcdefggh\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"abcdefghg\"\nassert solution() == \"",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"tleelte\"\nassert solution() == \"qwerty\"\nassert solution() == \"vvvvvv\"\nassert solution() == \"abcde\"",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"tleelte\\nqwerty\\nvvvvvv\\nbcde\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'20 12 6') == '12\\n', \"Expected 12, got {}\".format(solution(b'20 12 6'))\nassert solution(b'5 5 1') == '5\\n', \"Expected 5, got {}\".format(solution(b'5 5 1'))\nassert solution(b'2 5 3') == '5\\n', \"Expected 5, got {}\".format(solution(b'2 5 3'))\nassert solution(b'10 10 5') == '5\\n', \"Expected 5, got {}\".format(solution(b'10 10 5'))\nassert solution(b'100 100 100') == '100\\n', \"Expected 100, got {}\".format(solution(b'100 100 100'))",
        "num_ids_2": 80,
        "num_ids_4": 158
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"10 15 6\") == \"15\"\nassert solution(\"20 25 5\") == \"25\"\nassert solution(\"10 10 5\") == \"10\"\nassert solution(\"1000000000 1 1\") == \"Infinity\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 12 6\") == \"12\\n\", \"Test 1\"\nassert solution(\"30 8 12\") == \"15\\n\", \"Test 2\"\nassert solution(\"10 5 15\") == \"30\\n\", \"Test 3\"\nassert solution(\"50 15 30\") == \"30\\n\", \"Test 4\"\nassert solution(\"1000 1000 1000\") == \"1000000\\n\", \"Test 5\"\n",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"12\"\nprint(\"12\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='20 12 6') == '12'\nassert solution(stdin='10 3 5') == '7'\nassert solution(stdin='10 2 5') == '5'\nassert solution(stdin='10 3 6') == '6'\nassert solution(stdin='10 4 6') == '8'\nassert solution(stdin='10 5 6') == '10'",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"12\"\nprint(\"Test Passed\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"3 12 6\") == \"12\"\nassert solution(\"1 12 6\") == \"12\"\nassert solution(\"10 12 6\") == \"12\"\nassert solution(\"100 12 6\") == \"12\"\nassert solution(\"1000 12 6\") == \"12\"",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 12 6\") == \"12\"\n\nassert solution(\"10 5 1\") == \"1\"\n\nassert solution(\"2 3 1\") == \"1\"\n\nassert solution(\"3 2 1\") == \"1\"\n\nassert solution(\"5 1 1\") == \"2\"",
        "num_ids_2": 32,
        "num_ids_4": 60
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 12 6\") == \"12\", \"Takahashi loves takoyaki - a ball-shaped snack.\"\nassert solution(\"10 5 10\") == \"20\", \"He can make 20 pieces of takoyaki in 10 minutes.\"\nassert solution(\"3 5 10\") == \"10\", \"He can make 10 pieces of takoyaki in 5 minutes.\"\nassert solution(\"10 10 10\") == \"240\", \"He can make 240 pieces of takoyaki in 10 minutes.\"\nassert solution(\"5 10 10\") == \"120\", \"He can make 120 pieces of takoyaki in 10 minutes.\"\nassert solution(\"10 10 10\") == \"240\", \"He can make 240 pieces of takoyaki in 10 minutes.\"",
        "num_ids_2": 73,
        "num_ids_4": 146
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('20 12 6') == '12'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n\") == \"2\"\nassert solution(\"5\\n\") == \"1\"\nassert solution(\"3\\n\") == \"0\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"7\\n\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"2\"\nassert solution(\"3\\n\") == \"2\"\nassert solution(\"4\\n\") == \"3\"\nassert solution(\"5\\n\") == \"3\"\nassert solution(\"6\\n\") == \"3\"\nassert solution(\"7\\n\") == \"3\"\nassert solution(\"8\\n\") == \"3\"\nassert solution(\"9\\n\") == \"4\"\nassert solution(\"10\\n\") == \"4\"\nassert solution(\"11\\n\") == \"4\"\nassert solution(\"12\\n\") == \"4\"\nassert solution(\"13\\n\") == \"4\"\nassert solution(\"14\\n\") == \"4\"\nassert solution(\"15\\n\") == \"4\"\nassert solution(\"16\\n\") == \"4\"\nassert solution(\"17\\n\") == \"4\"\nassert solution(\"18\\n\") == \"4\"\nassert solution(\"19\\n\") == \"4\"\nassert solution(\"20\\n\") == \"5\"\nassert solution(\"21\\n\") == \"5\"\nassert solution(\"22\\n\") == \"5\"\nassert solution(\"23\\n\") == \"5\"\nassert solution(\"24\\n\") == \"5\"\nassert solution(\"25\\n\") == \"5\"\nassert solution(\"26\\n\") == \"5\"\nassert solution(\"27\\n\") == \"5\"\nassert solution(\"28\\n\") == \"5\"\nassert solution(\"29\\n\") == \"5\"\nassert solution(\"30\\n\") == \"5\"\nassert solution(\"31\\n\") == \"5\"\nassert solution(\"32\\n\") == \"5\"\nassert solution(\"33\\n\") == \"5\"\nassert solution(\"34\\n\") == \"5\"\nassert solution(\"35\\n\") == \"5\"\nassert solution(\"36\\n\") == \"5\"\nassert solution(\"37\\n\") == \"5\"\nassert solution(\"38\\n\") == \"5\"\nassert solution(\"39\\n\") == \"5\"\nassert solution(\"40\\n\") == \"6\"\nassert solution(\"41\\n\") == \"6\"\nassert solution(\"42\\n\") == \"6\"\nassert solution(\"43\\n\") == \"6\"\nassert solution(\"44\\n\") == \"6\"\nassert solution(\"45\\n\") == \"6\"\nassert solution(\"46\\n\") == \"6\"\nassert solution(\"47\\n\") == \"6\"\nassert solution(\"48\\n\") == \"6\"\nassert solution(\"49\\n\") == \"6\"\nassert solution(\"50\\n\") == \"6\"\nassert solution(\"51\\n\") == \"6\"\nassert solution(\"52\\n\") == \"6\"\nassert solution(\"53\\n\") == \"6\"\nassert solution(\"54\\n\") == \"6\"\nassert solution(\"55\\n\") == \"6\"\nassert solution(\"56\\n\") == \"6\"\nassert solution(\"57\\n\") == \"6\"\nassert solution(\"58\\n\") == \"6\"\nassert solution(\"59\\n\") == \"6\"\nassert solution(\"60\\n\") == \"6\"\nassert solution(\"61\\n\") == \"6\"\nassert solution(\"62\\n\") == \"6\"\nassert solution(\"63\\n\") == \"6\"\nassert solution(\"64\\n\") == \"6\"\nassert solution(\"65\\n\") == \"6\"\nassert solution(\"66\\n\") == \"6\"\nassert solution(\"67\\n\") == \"6\"\nassert solution(\"68\\n\") == \"6\"\nassert solution(\"69\\n\") == \"6\"\nassert solution(\"70\\n\") == \"6\"\nassert solution(\"71\\n\") == \"6\"\nassert solution(\"72\\n\") == \"6\"\nassert solution(\"73\\n\") == \"6\"\nassert solution(\"74\\n\") == \"6\"\nassert solution(\"75\\n\") == \"6\"\nassert solution(\"76\\n\") == \"6\"\nassert solution(\"77\\n\") == \"6\"\nassert solution(\"78\\n\") == \"6\"\nassert solution(\"79\\n\") == \"6\"\nassert solution(\"80\\n\")",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"2\", \"Your solution is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"10\") == \"2\"\nassert solution(stdin=\"5\") == \"1\"\nassert solution(stdin=\"1\") == \"1\"\nassert solution(stdin=\"1001\") == \"1\"\nassert solution(stdin=\"1000\") == \"2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"3\\n\", \"Your solution is incorrect.\"\nassert solution(\"2 4\") == \"4\\n\", \"Your solution is incorrect.\"\nassert solution(\"3 5\") == \"5\\n\", \"Your solution is incorrect.\"\nassert solution(\"4 6\") == \"6\\n\", \"Your solution is incorrect.\"\nassert solution(\"5 7\") == \"7\\n\", \"Your solution is incorrect.\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"5 5\") == \"12\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"100 1\") == \"Infinity\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 3') == '3\\n'\nprint('All tests passed!')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"5 6\") == \"6\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"2 0\") == \"2\"\nassert solution(\"10 4\") == \"4\"\nassert solution(\"2 5\") == \"5\"\nassert solution(\"10 6\") == \"6\"\nassert solution(\"10 0\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"3\\n\", \"The correct output is not provided.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"100 0\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"3\\n\"  # test case 1\nassert solution(\"2 4\") == \"4\\n\"  # test case 2\nassert solution(\"3 2\") == \"2\\n\"  # test case 3\nassert solution(\"5 7\") == \"7\\n\"  # test case 4\nassert solution(\"6 8\") == \"8\\n\"  # test case 5\n\nprint(\"All test cases passed\")",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"6 4\") == \"7\"\nassert solution(\"1 2\") == \"2\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"16\\n\", \"Test case failed.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 12\") == \"16\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 12\") == \"16\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 12\") == \"16\", \"The output should be 16.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 12\") == \"16\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 12\") == \"16\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 12') == '16'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 12\") == \"16\\n\", \"Test case 1 failed\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"10 15\") == \"5\"\nassert solution(\"7 14\") == \"11\"\nassert solution(\"16 12\") == \"16\"\nassert solution(\"2 5\") == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 12\") == \"16\", \"Test Case 1 Failed\"\nassert solution(\"10 20\") == \"20\", \"Test Case 2 Failed\"\nassert solution(\"20 10\") == \"10\", \"Test Case 3 Failed\"\nassert solution(\"36 18\") == \"18\", \"Test Case 4 Failed\"\nassert solution(\"60 40\") == \"40\", \"Test Case 5 Failed\"",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('chokudai\\nchokudaiz') == 'Yes'\nassert solution('chokudaiz\\nchokudai') == 'No'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"chokudai\\nchokudaiz\\n\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"chokudai\\nchokudaiz\\n\") == \"Yes\\nchokudaiz can be obtained by appending z at the end of chokudai.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('chokudai') == 'Yes', 'chokudai can be obtained by appending z at the end of chokudai.'\nassert solution('chokudaiz') == 'No', 'chokudaiz can be obtained by appending z at the end of chokudai.'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"chokudaiz can be obtained by appending z at the end of chokudai.\"\nassert solution(\"chokudai123\") == \"No\"",
        "num_ids_2": 44,
        "num_ids_4": 60
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"chokudai\") == \"Yes\\nchokudaiz can be obtained by appending z at the end of chokudai.\"\nassert solution(\"chokudaiz\") == \"No\\nchokudai cannot be obtained by appending z at the end of chokudai.\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"3 17\") == \"IMPOSSIBLE\"\nassert solution(\"1 2\") == \"IMPOSSIBLE\"\nassert solution(\"4 4\") == \"IMPOSSIBLE\"\nassert solution(\"10 10\") == \"IMPOSSIBLE\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9\\n9\"  # Correct output for test cases 1, 2, 3, 4, 5\nassert solution(input()) == \"IMPOSSIBLE\\nIMPOSSIBLE\"  # Test case 6\nassert solution(input()) == \"3\\n5\"  # Test case 7\nassert solution(input()) == \"2\\n16\"  # Test case 8\nassert solution(input()) == \"1\\n7\"  # Test case 9",
        "num_ids_2": 57,
        "num_ids_4": 96
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 16\\n\") == \"9\"\nassert solution(\"5 6\\n\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\\n\") == \"IMPOSSIBLE\"",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"1 1\") == \"IMPOSSIBLE\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"1 1\") == \"IMPOSSIBLE\"\nassert solution(\"10 20\") == \"IMPOSSIBLE\"\nassert solution(\"10 0\") == \"IMPOSSIBLE\"\nassert solution(\"2 2\") == \"IMPOSSIBLE\"\nassert solution(\"10 -2\") == \"IMPOSSIBLE\"",
        "num_ids_2": 27,
        "num_ids_4": 58
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 16') == '9\\n|2 - 9| = 7 and |16 - 9| = 7, so 9 satisfies the condition.'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"A B\")) == \"9\"\nprint(\"IMPOSSIBLE\")\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 16\") == \"9\\n|2 - 9| = 7 and |16 - 9| = 7, so 9 satisfies the condition.\"\nassert solution(\"2 15\") == \"IMPOSSIBLE\"\nassert solution(\"3 12\") == \"IMPOSSIBLE\"",
        "num_ids_2": 57,
        "num_ids_4": 72
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"9\", \"Test Failed\" # Your code here",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 16\") == \"9\\n9\\nIMPOSSIBLE\\n\"\nassert solution(\"1 1\") == \"IMPOSSIBLE\\n\"\nassert solution(\"1 2\") == \"9\\n9\\nIMPOSSIBLE\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 61
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"012\") == \"Yes\"\nassert solution(\"111\") == \"No\"\nassert solution(\"1000\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(117) == 'Yes'\nassert solution(123) == 'No'\nassert solution(200) == 'Yes'\nassert solution(999) == 'No'\nassert solution(0) == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(117) == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"12345\") == \"Yes\"\nassert solution(\"123456\") == \"No\"\nassert solution(\"1234567\") == \"Yes\"\nassert solution(\"12345678\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('117') == 'Yes', \"117 should contain 7 as its last digit.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"117\") == \"Yes\\n\"\nassert solution(\"132\") == \"No\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"117\") == \"Yes\", \"Expected 'Yes' for input 117, got: '{}'.\".format(solution(\"117\"))",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(117) == 'Yes', \"Expected 'Yes', got: {}.\".format(solution(117))\nassert solution(117117) == 'Yes', \"Expected 'Yes', got: {}.\".format(solution(117117))\nassert solution(117227) == 'No', \"Expected 'No', got: {}.\".format(solution(117227))\nassert solution(117337) == 'No', \"Expected 'No', got: {}.\".format(solution(117337))\nassert solution(117447) == 'No', \"Expected 'No', got: {}.\".format(solution(117447))\nassert solution(117557) == 'No', \"Expected 'No', got: {}.\".format(solution(117557))",
        "num_ids_2": 64,
        "num_ids_4": 134
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"117\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter a three-digit integer N: \")) == \"Yes\"\nassert solution(input(\"Enter a three-digit integer N: \")) == \"No\"\nassert solution(input(\"Enter a three-digit integer N: \")) == \"Yes\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"7\") == \"No\"\nassert solution(\"1\") == \"No\"\nassert solution(\"100\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"15\") == \"No\"\nassert solution(\"10\") == \"No\"\nassert solution(\"101\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(\"12\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"0\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"Yes\", \"Output not correct\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\\n\", \"Test case failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"345\") == \"No\"\nassert solution(\"9876543210\") == \"No\"\nassert solution(\"10\") == \"Yes\"\nassert solution(\"100\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 53
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(12) == \"Yes\"\nassert solution(100) == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(12) == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes', 'Test case 1 failed'\n\nassert solution(input()) == 'No', 'Test case 2 failed'\n\nassert solution(input()) == 'No', 'Test case 3 failed'\n\nassert solution(input()) == 'Yes', 'Test case 4 failed'\n\nassert solution(input()) == 'Yes', 'Test case 5 failed'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 0') == '0 0 0 0'\nassert solution('0 0 0 1 0 0') == '1 1 0 0'\nassert solution('0 100 0 100') == '100 100 0 0'\nassert solution('0 0 0 1000') == '1000 0 0 0'\nassert solution('1 0 0 0 0 0') == '1 0 0 0'\nassert solution('0 0 1 0 0 0') == '0 0 1 0'\nassert solution('0 0 0 0 0 1') == '1 0 0 0'",
        "num_ids_2": 44,
        "num_ids_4": 100
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\", \"Test Case 1\"\n\nassert solution(\"1 1 1 1\") == \"-1 1 -1 0\", \"Test Case 2\"\n\nassert solution(\"0 -1 0 -1\") == \"1 1 -1 0\", \"Test Case 3\"\n\nassert solution(\"1 -1 0 1\") == \"-1 1 -1 0\", \"Test Case 4\"\n\nassert solution(\"0 1 0 1\") == \"-1 1 -1 0\", \"Test Case 5\"\n\nassert solution(\"0 0 0 0\") == \"0 0 0 0\", \"Test Case 6\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0 1\\n\") == \"-1 1 -1 0\"\nprint(\"All test cases pass\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0 1\\n\") == \"-1 1 -1 0\"\nassert solution(\"0 1 0 1\\n\") == \"-1 1 -1 0\"\nassert solution(\"1 0 1 0\\n\") == \"1 0 0 0\"\nassert solution(\"1 0 1 1\\n\") == \"1 1 -1 0\"\nassert solution(\"0 0 1 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 1 1\\n\") == \"1 1 -1 0\"\nassert solution(\"1 1 0 1\\n\") == \"1 1 -1 0\"\nassert solution(\"0 1 0 1\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 0 1\\n\") == \"1 1 -1 0\"\nassert solution(\"1 1 1 1\\n\") == \"1 1 -1 0\"\nassert solution(\"0 1 1 1\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 1 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 1 1 1\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 0 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 0 0\\n\") == \"1 1 -1 0\"\nassert solution(\"0 0 0 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 0 1\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 1 1\\n\") == \"1 1 -1 0\"\nassert solution(\"0 1 1 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 1 0\\n\") == \"1 1 -1 0\"\nassert solution(\"0 1 0 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 0 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 0 0\\n\") == \"1 1 -1 0\"\nassert solution(\"0 0 0 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 1 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 1 1\\n\") == \"1 1 -1 0\"\nassert solution(\"0 1 1 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 1 0\\n\") == \"1 1 -1 0\"\nassert solution(\"0 1 0 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 0 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 0 0\\n\") == \"1 1 -1 0\"\nassert solution(\"0 0 0 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 1 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 1 1\\n\") == \"1 1 -1 0\"\nassert solution(\"0 1 1 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 1 0\\n\") == \"1 1 -1 0\"\nassert solution(\"0 1 0 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 0 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 0 0\\n\") == \"1 1 -1 0\"\nassert solution(\"0 0 0 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 1 0\\n\") == \"1 1 -1 0\"\nassert solution(\"1 0 1 1\\n\") == \"1 1 -1 0\"\nassert solution(\"0 1 1 0\\n\") == \"1 1",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0 1\") == \"0 1 0 -1\"\nassert solution(\"1 1 1 1\") == \"1 1 1 1\"\nassert solution(\"-1 1 -1 0\") == \"-1 1 -1 0\"\nassert solution(\"101 101 101 101\") == \"101 101 101 101\"\nassert solution(\"0 0 0 1\") == \"0 0 0 1\"\nassert solution(\"1 1 1 1\") == \"1 1 1 1\"\nassert solution(\"-1 1 -1 0\") == \"-1 1 -1 0\"",
        "num_ids_2": 44,
        "num_ids_4": 104
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0 1\\n\") == \"-1 1 -1 0\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('red blue\\n3 4\\nred\\n') == '2 4\\nTakahashi chose a ball with red written on it and threw it away. Now we have two balls with the string S and four balls with the string T.'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('red blue\\n3 4\\nred\\n') == '2 4\\n\\nTakahashi chose a ball with red written on it and threw it away. Now we have two balls with the string S and four balls with the string T.\\n'\nassert solution('yellow green\\n2 3\\ngreen\\n') == '0 0\\n\\nThere is no pair of balls with the string YELLOW and GREEN.\\n'",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\nTakahashi chose a ball with red written on it and threw it away.Now we have two balls with the string S and four balls with the string T.\"\nassert solution(\"green yellow\\n5 7\\ngreen\\n\") == \"6 7\\nGreen went down and all the balls were green.\"\nassert solution(\"red blue\\n1 2\\nred\\n\") == \"0 0\\nThere are no balls with the string S and T.\"\nassert solution(\"blue red\\n2 3\\nblue\\n\") == \"0 0\\nThere are no balls with the string S and T.\"",
        "num_ids_2": 95,
        "num_ids_4": 168
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"green yellow\\n5 6\\ngreen\\n\") == \"4 6\\n\"\nassert solution(\"blue red\\n7 8\\nblue\\n\") == \"1 2\\n\"\nassert solution(\"purple green\\n9 10\\npurple\\n\") == \"3 4\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"green blue\\n1 2\\nred\\n\") == \"2 2\\n\"\nassert solution(\"blue red\\n3 4\\nred\\n\") == \"4 4\\n\"\nassert solution(\"yellow\\n4 2\\nred\\n\") == \"4 4\\n\"\nassert solution(\"blue blue\\n2 2\\nred\\n\") == \"4 4\\n\"\n",
        "num_ids_2": 50,
        "num_ids_4": 99
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\nTakahashi chose a ball with red written on it and threw it away.\\nNow we have two balls with the string S and four balls with the string T.\"\nassert solution(\"green brown\\n2 3\\nyellow\\n\") == \"1 3\\nTakahashi chose a ball with yellow written on it and threw it away.\\nNow we have one ball with the string S and three balls with the string T.\"\nassert solution(\"yellow green\\n3 2\\nred\\n\") == \"0 2\\nTakahashi chose a ball with red written on it and threw it away.\\nNow we have three balls with the string S and two balls with the string T.\"\nassert solution(\"green yellow\\n3 4\\ngreen\\n\") == \"1 4\\nTakahashi chose a ball with green written on it and threw it away.\\nNow we have four balls with the string S and three balls with the string T.\"\nassert solution(\"blue red\\n2 4\\nblue\\n\") == \"0 4\\nTakahashi chose a ball with blue written on it and threw it away.\\nNow we have two balls with the string S and four balls with the string T.\"",
        "num_ids_2": 121,
        "num_ids_4": 243
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\", \"Test Case 1 Failed\"\nassert solution(\"yellow yellow\\n2 3\\nyellow\\n\") == \"2 3\\n\", \"Test Case 2 Failed\"\nassert solution(\"green green\\n1 2\\ngreen\\n\") == \"1 2\\n\", \"Test Case 3 Failed\"\nassert solution(\"blue blue\\n1 1\\nblue\\n\") == \"1 1\\n\", \"Test Case 4 Failed\"\nassert solution(\"red red\\n3 3\\nred\\n\") == \"0 0\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 64,
        "num_ids_4": 129
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"red blue\") == \"2 4\", \"Test 1\"\nassert solution(\"red\") == \"2 1\", \"Test 2\"\nassert solution(\"blue\") == \"1 4\", \"Test 3\"\nassert solution(\"red blue blue red\") == \"6 6\", \"Test 4\"\nassert solution(\"blue red blue blue red blue red blue red blue red blue blue blue\") == \"18 18\", \"Test 5\"",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\", \"Output not correct\"\n\nassert solution(\"blue red\\n4 3\\nblue\\n\") == \"4 3\\n\", \"Output not correct\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"red blue\") == \"2 4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nabcabc\\n\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nabcabc\\n\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\nabcabc') == 'Yes'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"1\\nhello\") == \"No\"\nassert solution(\"1\\n\") == \"No\"\nassert solution(\"1\\nworld\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\", \"Test failed\" # Test case 1\nassert solution(\"5\\nhello\") == \"No\", \"Test failed\" # Test case 2\nassert solution(\"4\\naaab\") == \"Yes\", \"Test failed\" # Test case 3\nassert solution(\"3\\nbaa\") == \"No\", \"Test failed\" # Test case 4\nassert solution(\"2\\naaa\") == \"No\", \"Test failed\" # Test case 5",
        "num_ids_2": 45,
        "num_ids_4": 90
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\", \"The solution is incorrect.\"\nassert solution(\"4\\nabc\") == \"No\", \"The solution is incorrect.\"\nassert solution(\"3\\nabc\") == \"Yes\", \"The solution is incorrect.\"\nassert solution(\"6\\nabcd\") == \"No\", \"The solution is incorrect.\"\nassert solution(\"6\\nabcdxyz\") == \"Yes\", \"The solution is incorrect.\"",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nbcabc\") == \"Yes\"\nassert solution(\"4\\nfghijk\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nabcabc\\n\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\nabcabc\\n') == 'Yes'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\\n\", \"The line x=1 gives the optimal cut, and no other line does.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\\n\", \"Incorrect output\"\nprint(\"Correct output\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\n\nfrom typing import List",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3.000000 0\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"10 3 1 2\") == \"3.000000 1\"\nassert solution(\"2 3 10 2\") == \"3.000000 1\"\nassert solution(\"2 3 1 10\") == \"3.000000 0\"\nassert solution(\"2 3 1 100\") == \"3.000000 0\"\nassert solution(\"5 5 2 2\") == \"5.000000 0\"\nassert solution(\"3 3 1 1\") == \"3.000000 0\"\nassert solution(\"3 3 2 2\") == \"3.000000 0\"\nassert solution(\"3 3 3 3\") == \"3.000000 0\"\nassert solution(\"3 3 4 4\") == \"3.000000 0\"\nassert solution(\"1 1 1 1\") == \"3.000000 0\"\nassert solution(\"1 1 2 2\") == \"3.000000 0\"",
        "num_ids_2": 51,
        "num_ids_4": 103
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"1 1 1 1\") == \"0.000000 0\"\nassert solution(\"10 10 10 10\") == \"1000000000000000.000000 0\"\nassert solution(\"0 0 0 0\") == \"0.000000 0\"",
        "num_ids_2": 50,
        "num_ids_4": 119
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3 1 2') == '3.000000 0\\n'\nassert solution('5 6 5 3') == '10.000000 0\\n'\nassert solution('2 2 1 1') == '0.000000 0\\n'\nassert solution('100 100 50 50') == '100.000000 0\\n'\nassert solution('2 2 1 2') == '10.000000 0\\n'",
        "num_ids_2": 55,
        "num_ids_4": 117
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='2 3 1 2\\n') == '3.000000 0\\n'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3.000000 0\\n\", \"The output is incorrect.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nG W Y P Y W\\n\") == \"Four\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nG W Y P Y W\\n\") == \"Four\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"\nassert solution(\"8\\nG G W Y P P G W G\") == \"Four\"\nassert solution(\"6\\nP Y Y W\\nW P Y\\nG Y P\\nY P W\") == \"Three\"\nassert solution(\"5\\nP Y W\\nW P Y\\nG Y P\\nY P W\") == \"Three\"",
        "num_ids_2": 39,
        "num_ids_4": 98
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"Three\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"Three\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\") == \"Three\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\") == \"Three\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\") == \"Three\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\") == \"Three\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\") == \"Three\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\") == \"Three\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\") == \"Three\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\\n37 38 39\") == \"Three\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\\n37 38 39\\n40 41 42\") == \"Three\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 3",
        "num_ids_2": 36,
        "num_ids_4": 162
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Four\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Four'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\nG W Y P Y W') == 'Four'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'\nassert solution('6 3 2') == '6'\nassert solution('2 3 1 3 4 2') == '6'\nassert solution('1 2 4 2 3') == '2'\nassert solution('6 5 7') == '0'\nassert solution('1 2 3 4 5') == '0'",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 3 2\\n2 3 1 3 4 2') == 6\nassert solution('5 3 3\\n1 2 4 2 3') == 2\nassert solution('5 5 6\\n1 2 6 10 3') == 2\nassert solution('6 4 2\\n2 3 1 3 4 2') == 0",
        "num_ids_2": 50,
        "num_ids_4": 101
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 2",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == 6\nassert solution(\"5 3 3\\n1 2 4 2 3\") == 2\nassert solution(\"5 5 6\\n1 2 6 10 3\") == 2\n\nfor test in [(\"6 3 2\\n2 3 1 3 4 2\"), (\"5 3 3\\n1 2 4 2 3\"), (\"5 5 6\\n1 2 6 10 3\")]:\n    assert solution(test[0]) == int(test[1])",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == \"6\"\nassert solution(\"5 3 3\\n1 2 4 2 3\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\") == \"2\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''6 3 2\n2 3 1 3 4 2''') == '6'\nassert solution('''5 3 3\n1 2 4 2 3''') == '2'\nassert solution('''5 5 6\n1 2 6 10 3''') == '2'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == 6\nassert solution(\"5 3 3\\n1 2 4 2 3\") == 2\nassert solution(\"5 5 6\\n1 2 6 10 3\") == 2",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == 6\nassert solution(\"5 3 3\\n1 2 4 2 3\") == 2\nassert solution(\"5 5 6\\n1 2 6 10 3\") == 2",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 6\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"7\\n\"\nassert solution(input()) == \"0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"7\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected output {expected}, got {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n4 8 2 6 2\\n4 5 4 1 3\\n') == '7\\n'\nassert solution('4\\n1 3 2 4\\n1 3 2 4\\n') == '0\\n'\nassert solution('') == ''\nassert solution('1\\n') == '1\\n'\n",
        "num_ids_2": 68,
        "num_ids_4": 88
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\\n\") == \"7\\n\"\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == \"0\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\\n\") == \"7\" # sample output\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == \"0\" # sample output\n\nfrom typing import List",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\\n\") == \"7\\n\"\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == \"0\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4 8 2 6 2\\n4 5 4 1 3\\n\") == \"7\\n\"\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == \"0\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\\n\") == 7\n\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == 0",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([1, 2, 4, 5, 10]) == [1, 1, 3, 5, 9]\nassert solution([10000, 10, 50605065, 1, 5, 89, 5, 999999999, 60506056, 1000000000]) == [9999, 9, 50605065, 1, 5, 89, 5, 999999999, 60506055, 999999999]",
        "num_ids_2": 170,
        "num_ids_4": 170
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 4 5 10\") == \"1 1 3 5 9\\n\"\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n\"\n\nfor _ in range(10):\n    assert solution(str(int(input()))) == \" \".join(str(int(input())) for _ in range(int(input()))) + \"\\n\"\n",
        "num_ids_2": 155,
        "num_ids_4": 155
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 4 5 10\\n\") == \"1 1 3 5 9\"\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"",
        "num_ids_2": 155,
        "num_ids_4": 155
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1 1 3 5 9'\nassert solution(open('example1.txt', 'r').read()) == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution(open('example2.txt', 'r').read()) == '9999 1 50605065 5 89 9 50605065 60506056 999999999'",
        "num_ids_2": 99,
        "num_ids_4": 168
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 4 5 10\\n\") == \"1 1 3 5 9\\n\"\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n\"",
        "num_ids_2": 159,
        "num_ids_4": 159
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1, 2, 4, 5, 10]) == [1, 1, 3, 5, 9]\nassert solution([10000, 10, 50605065, 1, 5, 89, 5, 999999999, 60506056, 1000000000]) == [9999, 9, 50605065, 1, 5, 89, 5, 999999999, 60506055, 999999999]\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1",
        "num_ids_2": 170,
        "num_ids_4": 1027
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"Mishka's Adjacent Replacements Algorithm\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\") == \"1\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n\") == \"2\"",
        "num_ids_2": 139,
        "num_ids_4": 139
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1\nassert solution() == 2",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution, \"No solution provided\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected, f\"Your code is incorrect. Please check the example and input provided.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\") == \"1\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\") == \"2\"",
        "num_ids_2": 135,
        "num_ids_4": 135
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 3, \"The solution is incorrect. Please provide the correct solution.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n') == '1'\nassert solution('17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n') == '2'",
        "num_ids_2": 139,
        "num_ids_4": 139
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\") == \"1\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\") == \"2\"",
        "num_ids_2": 135,
        "num_ids_4": 135
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\") == \"1\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"4\\n\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\\n\") == \"0\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 121
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Output\\n1\\n\\nOutput\\n4\\n\\nOutput\\n0\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\") == \"1\\n4\\n0\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"4\\n\\n0\\n\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\\n\") == \"0\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 130
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 1, \"The solution is incorrect.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == solution_1",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\") == \"1\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"4\\n\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\\n\") == \"0\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 121
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\") == \"1\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"4\\n\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\") == \"0\\n\"\n\nfrom typing import List",
        "num_ids_2": 86,
        "num_ids_4": 115
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\") == \"1\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"4\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\") == \"0\"",
        "num_ids_2": 82,
        "num_ids_4": 109
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test failed: {solution(input)!r}!= {output!r}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\") == \"1\\n\", \"Expected 1, but got {}\".format(solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\"))",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"bc\"\nassert solution(2) == \"bc\"\nassert solution(5) == \"alvuw\"\nassert solution(6) == \"qoztvz\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"alvuw\"\n\nfrom typing import List",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"afogk\") == \"alvuw\"\nassert solution(\"asdji\") == \"qoztvz\"\nassert solution(\"nijfvj\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"bf\") == \"bc\"\nassert solution(\"afogk\") == \"alvuw\"\nassert solution(\"asdji\") == \"alvuw\"\nassert solution(\"nijfvj\") == \"qoztvz\"",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(stdin: str)) == \"qoztvz\"\nassert solution(solution(stdin: str)) == \"alvuw\"\nassert solution(solution(stdin: str)) == \"def\"",
        "num_ids_2": 33,
        "num_ids_4": 47
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"bc\"\nprint(\"ok\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"bf\") == \"bc\"\nassert solution(\"afogk\") == \"alvuw\"\nassert solution(\"asdji\") == \"alvuw\"\nassert solution(\"tvqhwp\") == \"qoztvz\"",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"bf\") == \"bc\"\nassert solution(\"afogk\") == \"alvuw\"\nassert solution(\"asdji\") == \"qoztvz\"",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('az') == 'bc'\nassert solution('bf') == 'bc'\nassert solution('afogk') == 'alvuw'\nassert solution('asdji') == 'alvuw'\nassert solution('nijfvj') == 'qoztvz'",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"az\", \"bf\") == \"bc\"\nassert solution(\"az\", \"bc\") == \"bc\"\nassert solution(\"az\", \"bd\") == \"bc\"\nassert solution(\"az\", \"be\") == \"bc\"\nassert solution(\"az\", \"bf\") == \"bc\"\nassert solution(\"az\", \"bg\") == \"bc\"\nassert solution(\"az\", \"bh\") == \"bc\"\nassert solution(\"az\", \"bi\") == \"bc\"\nassert solution(\"az\", \"bj\") == \"bc\"\nassert solution(\"az\", \"bk\") == \"bc\"\nassert solution(\"az\", \"bl\") == \"bc\"\nassert solution(\"az\", \"bm\") == \"bc\"\nassert solution(\"az\", \"bn\") == \"bc\"\nassert solution(\"az\", \"bo\") == \"bc\"\nassert solution(\"az\", \"bp\") == \"bc\"\nassert solution(\"az\", \"bq\") == \"bc\"\nassert solution(\"az\", \"br\") == \"bc\"\nassert solution(\"az\", \"bs\") == \"bc\"\nassert solution(\"az\", \"bt\") == \"bc\"\nassert solution(\"az\", \"bu\") == \"bc\"\nassert solution(\"az\", \"bv\") == \"bc\"\nassert solution(\"az\", \"bw\") == \"bc\"\nassert solution(\"az\", \"bx\") == \"bc\"\nassert solution(\"az\", \"by\") == \"bc\"\nassert solution(\"az\", \"bz\") == \"bc\"\nassert solution(\"az\", \"ca\") == \"bc\"\nassert solution(\"az\", \"cb\") == \"bc\"\nassert solution(\"az\", \"cc\") == \"bc\"\nassert solution(\"az\", \"cd\") == \"bc\"\nassert solution(\"az\", \"ce\") == \"bc\"\nassert solution(\"az\", \"cf\") == \"bc\"\nassert solution(\"az\", \"cg\") == \"bc\"\nassert solution(\"az\", \"ch\") == \"bc\"\nassert solution(\"az\", \"ci\") == \"bc\"\nassert solution(\"az\", \"cj\") == \"bc\"\nassert solution(\"az\", \"ck\") == \"bc\"\nassert solution(\"az\", \"cl\") == \"bc\"\nassert solution(\"az\", \"cm\") == \"bc\"\nassert solution(\"az\", \"cn\") == \"bc\"\nassert solution(\"az\", \"co\") == \"bc\"\nassert solution(\"az\", \"cp\") == \"bc\"\nassert solution(\"az\", \"cq\") == \"bc\"\nassert solution(\"az\", \"cr\") == \"bc\"\nassert solution(\"az\", \"cs\") == \"bc\"\nassert solution(\"az\", \"ct\") == \"bc\"\nassert solution(\"az\", \"cu\") == \"bc\"\nassert solution(\"az\", \"cv\") == \"bc\"\nassert solution(\"az\", \"cw\") == \"bc\"\nassert solution(\"az\", \"cx\") == \"bc\"\nassert solution(\"az\", \"cy\") == \"bc\"\nassert solution(\"az\", \"cz\") == \"bc\"\nassert solution(\"az\", \"da\") == \"bc\"\nassert solution(\"az\", \"db\") == \"bc\"\nassert solution(\"az\", \"dc\") == \"bc\"\nassert solution(\"az\", \"dd\") == \"bc\"\nassert solution(\"az\", \"de\") == \"bc\"\nassert solution(\"az\", \"df\") == \"bc\"\nassert solution(\"az\", \"dg\") == \"bc\"\nassert solution(\"az\", \"dh\") == \"bc\"\nassert solution(\"az\", \"di\") == \"bc\"\nassert solution(\"az\", \"dj\") == \"bc\"\nassert solution(\"az\", \"dk\") == \"bc\"\nassert solution(\"az\", \"dl\") == \"bc\"\nassert solution(\"az\", \"dm\") == \"bc\"\nassert solution(\"az\", \"dn\") == \"bc\"\nassert solution(\"az\", \"do\") == \"bc\"\nassert solution(\"az\", \"dp\") == \"bc\"\nassert solution(\"az\", \"dq\") == \"bc\"\nassert solution(\"az\", \"dr\") == \"bc\"\nassert solution(\"az\", \"ds\") == \"bc\"\nassert solution(\"az\", \"dt\") == \"bc\"\nassert solution(\"az\", \"du\") == \"bc\"\nassert solution(\"az\", \"dv\") == \"bc\"\nassert solution(\"az\", \"dw\") == \"bc\"\nassert solution(\"az\", \"dx\") == \"bc\"\nassert solution(\"az\", \"dy\") == \"bc\"\nassert solution(\"az\", \"dz\") == \"bc\"\nassert solution(\"az\", \"ea\") == \"bc\"\nassert solution",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n15 13 15 15 12\\n') == 'YES\\n1 2 5'\nassert solution('5 4\\n15 13 15 15 12\\n') == 'NO'\nassert solution('4 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4'",
        "num_ids_2": 67,
        "num_ids_4": 103
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n2 3 5\\n2 4 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\\n\"",
        "num_ids_2": 85,
        "num_ids_4": 123
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\\n\"\n\nassert solution(\"4 5\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4 5\\n\"\nassert solution(\"5 5\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4 5\\n\"\nassert solution(\"5 6\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4 5\\n\"\nassert solution(\"6 6\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4 5\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 149
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Output: {output()}, \\nInput: {input()}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case} failed. Expected output: {expected_output}, actual output: {solution(input())}\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 109
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"YES\\n1 2 5\\nYES\\n1 2 3\\nNO\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\"",
        "num_ids_2": 67,
        "num_ids_4": 103
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5 \\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4 \"\n",
        "num_ids_2": 71,
        "num_ids_4": 107
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5, 1, 3, 6, 8, 2, 9, 0, 10) == \"YES\"\nassert solution(5, 1, 2, 4, 0, 2) == \"NO\"\nassert solution(1, 2, 3) == \"NO\"\n\nfrom typing import List",
        "num_ids_2": 60,
        "num_ids_4": 76
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 4 0 2''') == '''YES\n1 0 0 0 0 1 0 1 0 '''\n\nassert solution('''9\n5 1 3 6 8 2 9 0 10''') == '''YES\n1 0 0 0 0 1 0 1 0 '''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) ==",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"YES\\n1 0 0 0 0\\n1 0 0 0 1\\n1 0 1 0 1\\n1 0 1 0 1\\n1 0 1 1 0\"\nassert solution(stdin=\"5\\n1 2 4 0 2\\n\") == \"NO\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\n1 0 0 0 0 1 0 1 0\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"The expected output is '{expected}', but got '{solution(stdin)}'.\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"5\\n1 2 4 0 2\") == \"NO\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected: {expected}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"5 1 2 4 0 2\") == \"NO\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n\") == \"3\\n0\\n1134\\n0\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 0\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"\nassert solution(\"5 10 5 15\\n10 20 30 40\\n20 30 40 50\\n30 40 50 60\\n40 50 60 70\\n50 60 70 80\\n60 70 80 90\\n70 80 90 100\\n80 90 100 110\\n90 100 110 120\\n100 110 120 130\\n110 120 130 140\\n120 130 140 150\\n130 140 150 160\\n140 150 160 170\\n150 160 170 180\\n160 170 180 190\\n170 180 190 200\\n180 190 200 210\\n190 200 210 220\\n200 210 220 230\\n210 220 230 240\\n220 230 240 250\\n230 240 250 260\\n240 250 260 270\\n250 260 270 280\\n260 270 280 290\\n270 280 290 300\\n280 290 300 310\\n290 300 310 320\\n300 310 320 330\\n310 320 330 340\\n320 330 340 350\\n330 340 350 360\\n340 350 360 370\\n350 360 370 380\\n360 370 380 390\\n370 380 390 400\\n380 390 400 410\\n390 400 410 420\\n400 410 420 430\\n410 420 430 440\\n420 430 440 450\\n430 440 450 460\\n440 450 460 470\\n450 460 470 480\\n460 470 480 490\\n470 480 490 500\\n480 490 500 510\\n490 500 510 520\\n500 510 520 530\\n510 520 530 540\\n520 530 540 550\\n530 540 550 560\\n540 550 560 570\\n550 560 570 580\\n560 570 580 590\\n570 ",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3\\n0\\n1134\\n0'",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"expected {expected_output}, got {solution(stdin)}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3\\n0\\n1134\\n0'\nassert solution() == '3\\n0\\n1134\\n0'\nassert solution() == '3\\n0\\n1134\\n0'\nassert solution() == '3\\n0\\n1134\\n0'\nassert solution() == '3\\n0\\n1134\\n0'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"1134\\n\"\nassert solution(stdin) == \"0\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n') == '3\\n0\\n1134\\n0'\nassert solution('10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n') == '3\\n0\\n1134\\n0'\nassert solution('10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n') == '3\\n0\\n1134\\n0'\nassert solution('10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n') == '3\\n0\\n1134\\n0'\nassert solution('10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n') == '3\\n0\\n1134\\n0'",
        "num_ids_2": 176,
        "num_ids_4": 352
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 1, \"Expected 1, but got {}\".format(solution(2))  # Test case 1\nassert solution(4) == 3, \"Expected 3, but got {}\".format(solution(4))  # Test case 2\nassert solution(8) == 1260, \"Expected 1260, but got {}\".format(solution(8))  # Test case 3\nassert solution(20) == 12164510040883200, \"Expected 12164510040883200, but got {}\".format(solution(20))  # Test case 4",
        "num_ids_2": 60,
        "num_ids_4": 160
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'",
        "num_ids_2": 20,
        "num_ids_4": 60
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2') == 1\nassert solution('4') == 3\nassert solution('8') == 1260\nassert solution('20') == 12164510040883200\n",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\\npass\"",
        "num_ids_2": 46,
        "num_ids_4": 71
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(15, 3) == \"cccbbabaccbc\"\nassert solution(15, 9) == \"cccccc\"\nassert solution(1, 1) == \"def\"",
        "num_ids_2": 32,
        "num_ids_4": 45
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\\n\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\\n\") == \"cccccc\"\nassert solution(\"1 1\\nu\\n\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 50,
        "num_ids_4": 78
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str: pass\"\n",
        "num_ids_2": 46,
        "num_ids_4": 70
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('15 3\\ncccaabababaccbc\\n') == 'cccbbabaccbc'\nassert solution('15 9\\ncccaabababaccbc\\n') == 'cccccc'\nassert solution('1 1\\nu\\n') == 'def solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 50,
        "num_ids_4": 78
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('15 3\\ncccaabababaccbc') == 'cccbbabaccbc'\nassert solution('15 9\\ncccaabababaccbc') == 'cccccc'\nassert solution('1 1\\nu') == 'def solution(stdin: str) -> str:'",
        "num_ids_2": 46,
        "num_ids_4": 68
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(15, 3) == 'cccbbabaccbc'\nassert solution(15, 9) == 'cccccc'\nassert solution(1, 1) == 'def'",
        "num_ids_2": 32,
        "num_ids_4": 45
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\\n\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\\n\") == \"cccccc\"\nassert solution(\"1 1\\nu\\n\") == \"def solution(stdin: str) -> str:    pass\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 79
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\\n\"\n\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"8\"\nassert solution() == \"20\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == 8\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5') == 20\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"\nassert solution(\"1 2\\n3 4\\n5 6\") == \"1\"\nassert solution(\"1 5\\n5 4\\n3 2\\n7 8\") == \"2\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"1\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"2\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"3\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"4\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"5\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"6\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"7\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"8\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"9\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"10\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"11\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"12\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"13\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"14\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"15\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"16\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"17\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"18\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\") == \"19\"\nassert solution(\"5 10\\n1 1 0 2 0\\n2 3\\n3 4\\n4 5\\n5 6\")",
        "num_ids_2": 92,
        "num_ids_4": 141
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Input: {input()}, Output: {expected}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\nprint(f\"Test Passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\n\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**.\\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\n\nassert solution(\"5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"-1\\n\"\n\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"-1\\n\"\n\nassert solution(\"5 5\\n*.*\\n*.*\\n*.*\\n*.*\\n\") == \"-1\\n\"",
        "num_ids_2": 108,
        "num_ids_4": 169
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\\n5 5\\n.*...\\n****. \\n.****\\n..**. \\n.....\\n\\n5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"3\\n3 4 1\\n3 5 2\\n3 5 1\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**. \\n.....\\n\\n5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n*.*\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*. \\n*.*\\n*.*\\n\") == \"-1\\n\"",
        "num_ids_2": 190,
        "num_ids_4": 279
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........''') == '3\\n3 4 1\\n3 5 2\\n3 5 1'\n\nassert solution('''5 5\n.*...\n****.\n.****\n..**.\n.....''') == '3\\n2 2 1\\n3 3 1\\n3 4 1\\n3 5 1\\n'\n\nassert solution('''3 3\n*.*\n.*.\n*.*''') == '-1'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test case failed: {solution(input())}!= {output()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"3\n3 4 1\n3 5 2\"\"\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) ==",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\"\"\") == \"3\\n3 4 1\\n3 5 2\"\n\nassert solution(\"\"\"5 5\n.*...\n****.\n.****\n..**.\n.....\n\"\"\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\"\n\nassert solution(\"\"\"5 5\n.*...\n***..\n.*...\n.*...\n.....\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"3 3\n*.*\n.*.\n*.*\n\"\"\") == \"-1\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**. \\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"-1\"\nassert solution(\"3 3\\n*.* \\n.*. \\n*.* \\n\") == \"-1\"",
        "num_ids_2": 108,
        "num_ids_4": 166
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\"\"\") == \"\"\"3\n3 4 1\n3 5 2\"\"\"\n\nassert solution(\"\"\"5 5\n.*...\n****.\n.****\n..**.\n.....\"\"\") == \"\"\"3\n2 2 1\n3 3 1\n3 4 1\"\"\"\n\nassert solution(\"\"\"5 5\n.*...\n***..\n.*...\n.*...\n.....\"\"\") == \"\"\"-1\"\"\"\n\nassert solution(\"\"\"3 3\n*.*\n.*.\n*.*\"\"\") == \"\"\"-1\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(575) == \"Yes\", \"N=575 is also 575 when read backward, so it is a palindromic number.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"575\") == \"Yes\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"575\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(575) == \"Yes\", \"N=575 is not a palindromic number.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(575) == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(575) == \"Yes\"\nassert solution(9012) == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(575) == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(575) == \"Yes\"\n\nprint(\"No\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(575) == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"8 10\") == \"Alice\"\nassert solution(\"4 8\") == \"Alice\"\nassert solution(\"4 10\") == \"Alice\"\nassert solution(\"10 8\") == \"Bob\"\nassert solution(\"10 10\") == \"Bob\"\nassert solution(\"1 2\") == \"Draw\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 6\") == \"Alice\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"1 4\") == \"Bob\"\nassert solution(\"3 5\") == \"Draw\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"5 4\") == \"Bob\"\nassert solution(\"3 2\") == \"Draw\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 6\") == \"Alice\"\n\n```python\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 6\") == \"Alice\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"5 10\") == \"Alice\"\nassert solution(\"4 1\") == \"Bob\"\nassert solution(\"11 5\") == \"Draw\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"11 13\") == \"Alice\"\nassert solution(\"1 6\") == \"Bob\"\nassert solution(\"11 5\") == \"Bob\"\nassert solution(\"5 1\") == \"Draw\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected {output}, got {solution(input())}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 6\") == \"Alice\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"a,b,c,d,e\") == \"a b c d e\"\nassert solution(\"1,2,3,4,5\") == \"1 2 3 4 5\"\nassert solution(\"Hello, World!\") == \"Hello World!\"",
        "num_ids_2": 41,
        "num_ids_4": 80
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nprint(\"All test cases passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nprint(\"All assertions passed!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"\") == \"\"\nassert solution(\"a,b,c\") == \"a b c\"\nassert solution(\"a,b,,c\") == \"a b c\"\nassert solution(\"a,b,,d\") == \"a b d\"\nassert solution(\",a,b\") == \"a b\"",
        "num_ids_2": 25,
        "num_ids_4": 57
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 2\\n\"\n    \"2 0\\n\"\n    \"0 0\\n\"\n    \"-1 0\\n\"\n    \"1 0\\n\"\n) == \"2\\n1\\n\"\n\nassert solution(\n    \"3 2\\n\"\n    \"2 0\\n\"\n    \"0 0\\n\"\n    \"-1 0\\n\"\n    \"1 0\\n\"\n) == \"2\\n1\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n\") == \"2\\n1\\n\"\nassert solution(b\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n\") == \"2\\n1\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"2 2\\na_1 b_1\\na_2 b_2\\nc_1 d_1\\nc_2 d_2\") == r\"2\\n1\"\nassert solution(r\"3 3\\na_1 b_1\\na_2 b_2\\na_3 b_3\\nc_1 d_1\\nc_2 d_2\\nc_3 d_3\") == r\"3\\n1\"\n",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == \"2\\n1\\n\"\nassert solution(open('sample_input.txt', 'r')) == \"2\\n1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"3 3\\n0 0\\n2 2\\n1 1\\n1 2\") == \"2\\n1\"\nassert solution(\"1 1\\n-1 0\\n-1 0\\n-1 0\\n1 0\") == \"0\\n1\\n0\\n0\"\nassert solution(\"1 2\\n1 1\\n1 0\\n0 1\\n-1 0\\n1 1\\n-1 0\\n0 1\") == \"1\\n0\\n0\\n1\\n0\\n0\\n1\"\nassert solution(\"1 2\\n1 1\\n1 0\\n0 1\\n-1 0\\n1 1\\n-1 0\\n0 1\") == \"1\\n0\\n0\\n1\\n0\\n0\\n1\"\nassert solution(\"1 2\\n1 1\\n1 0\\n0 1\\n-1 0\\n1 1\\n-1 0\\n0 1\") == \"1\\n0\\n0\\n1\\n0\\n0\\n1\"",
        "num_ids_2": 71,
        "num_ids_4": 182
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'2 2\\n2 0\\n0 0\\n-1 0\\n1 0') == '\\n2\\n1\\n'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 1\\n2 1\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 0\\n0 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 1\\n2 1\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\n",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2\\n1\\n', \"Incorrect output\"\nassert solution(input()) == '2\\n1\\n', \"Incorrect output\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 3\\n1 4\\n2 5\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10\\n8 11\\n9 12\\n10 13\\n11 14\\n12 15\\n13 16\\n14 17\\n15 18\\n16 19\\n17 20\\n18 21\\n19 22\\n20 23\\n21 24\\n22 25\\n23 26\\n24 27\\n25 28\\n26 29\\n27 30\\n28 31\\n29 32\\n30 33\\n31 34\\n32 35\\n33 36\\n34 37\\n35 38\\n36 39\\n37 40\\n38 41\\n39 42\\n40 43\\n41 44\\n42 45\\n43 46\\n44 47\\n45 48\\n46 49\\n47 50\\n48 51\\n49 52\\n50 53\\n51 54\\n52 55\\n53 56\\n54 57\\n55 58\\n56 59\\n57 60\\n58 61\\n59 62\\n60 63\\n61 64\\n62 65\\n63 66\\n64 67\\n65 68\\n66 69\\n67 70\\n68 71\\n69 72\\n70 73\\n71 74\\n72 75\\n73 76\\n74 77\\n75 78\\n76 79\\n77 80\\n78 81\\n79 82\\n80 83\\n81 84\\n82 85\\n83 86\\n84 87\\n85 88\\n86 89\\n87 90\\n88 91\\n89 92\\n90 93\\n91 94\\n92 95\\n93 96\\n94 97\\n95 98\\n96 99\\n97 100\\n98 101\\n99 102\\n100 103\\n101 104\\n102 105\\n103 106\\n104 107\\n105 108\\n106 109\\n107 110\\n108 111\\n109 112\\n110 113\\n111 114\\n112 115\\n113 116\\n114 117\\n115 118\\n116 119\\n117 120\\n118 121\\n119 122\\n120 123\\n121 124\\n122 125\\n123 126\\n124 127\\n125 128\\n126 129\\n127 130\\n128 131\\n129 132\\n130 133\\n131 134\\n132 135\\n13",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\") == \"1\\n2\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0\\n1 0\\n2 0",
        "num_ids_2": 92,
        "num_ids_4": 224
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"14\", \"Incorrect output. Please check the given code.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"14\", \"The solution should return 14\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"14\", \"Incorrect Output: The output should be 14.0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"14\", \"Test Case 1 failed\"\nassert solution(input()) == \"14.0\", \"Test Case 2 failed\"\nassert solution(input()) == \"50\", \"Test Case 3 failed\"\nassert solution(input()) == \"416.0\", \"Test Case 4 failed\"\nassert solution(input()) == \"10000000000000000000000\", \"Test Case 5 failed\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"14\", \"Test Failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '14'\nprint(14)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"14\", \"The given input is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2\") == \"14\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '14', 'Incorrect output. The correct output should be 14.'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 14, \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n#.#\\n.#. \\n#.#\\n. \\n.#\\n\") == \"Yes\"\nassert solution(\"3 2\\n#.#\\n.#. \\n#.#\\n. \\n.#\\n\") == \"Yes\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\\\n.#\") == \"Yes\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.#\\n#.#\\n#.##\\n#.#\") == \"Yes\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n#.#\\n.#.#\\n#.#\\n#.##\\n#..#\\n') == 'Yes'\nassert solution('3 2\\n#.#\\n.#.#\\n#.#\\n#.##\\n#..#\\n#') == 'Yes'\nassert solution('3 2\\n#.#\\n.#.#\\n#.#\\n#.##\\n#..#\\n#..#\\n') == 'No'\nassert solution('3 2\\n#.#\\n.#.#\\n#.#\\n#.##\\n#..#\\n') == 'No'\nassert solution('3 2\\n#.#\\n.#.#\\n#.#\\n#.##\\n#..#\\n#..#\\n#..#\\n') == 'No'",
        "num_ids_2": 69,
        "num_ids_4": 141
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n#.#\\n.#.#\\n#.#') == 'Yes'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'Yes', 'The solution is incorrect'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\", \"The solution is incorrect.\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3 2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.#\\n#.#\\n#.#\\n#.\\n\") == \"Yes\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"The output is incorrect\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '53\\n', \"The answer is incorrect.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('9 3 5') == '24'\nassert solution('5 6 8') == '19'\nassert solution('7 10 11') == '22'\nassert solution('3 2 1') == '36'",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"The solution should return 53\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 2\") == \"53\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 5 2') == '53', \"Error: The expected output is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"Test failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"Incorrect output. Expected '53', got '{}'\".format(solution(\"1 5 2\"))",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 2\") == \"53\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\\n\") == \"15950\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\", \"Test case 1 failed.\"\nassert solution(\"1\\n1\") == \"1\", \"Test case 2 failed.\"\nassert solution(\"3\\n5000\\n5000\\n5000\") == \"21000\", \"Test case 3 failed.\"\nassert solution(\"1\\n5000\") == \"5000\", \"Test case 4 failed.\"\nassert solution(\"3\\n10000\\n10000\\n10000\") == \"20000\", \"Test case 5 failed.\"\n\nfor line in input().split():\n    try:\n        N = int(line)\n    except ValueError:\n        raise ValueError(\"Invalid input.\")\n    p_i = list(map(int, input().split()))\n    if not any(1 <= p_i[i] <= 10000 for i in range(N)):\n        raise ValueError(\"Invalid input.\")\n    if not any(p_i[i] % 2 == 0 for i in range(N)):\n        raise ValueError(\"Invalid input.\")\n    if not all(p_i[i] > p_i[i - 1] for i in range(1, N)):\n        raise ValueError(\"Invalid input.\")\n    total_price = sum(p_i[:i]) * p_i[i]\n    discount_price = (total_price * 0.5) if p_i[i] > p_i[i - 1] else 0\n    total_amount = total_price + discount_price\n    print(total_amount)",
        "num_ids_2": 59,
        "num_ids_4": 124
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\\n\") == \"15950\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\\n\") == \"15950\\n\"\n\nSolution:\n\nWe can solve this problem by iterating through the list of items and calculating the discounted price for each item. Then, we need to add up all the discounted prices to get the total amount he will pay. We will start by calculating the sum of all the discounted prices. Then, we can divide the sum by 2 to get the total discounted price. We can then add the regular price of the highest item to get the total amount he will pay.\n\nLet's write the code to solve this problem.<|im_sep|>",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='3\\n4980\\n7980\\n6980\\n') == '15950'\nassert solution(stdin='4\\n1000\\n1500\\n500\\n') == '2500'\nassert solution(stdin='5\\n1000\\n1000\\n500\\n') == '10000'",
        "num_ids_2": 70,
        "num_ids_4": 105
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\\n\", \"The given test case is incorrect.\"\nassert solution(\"4\\n2980\\n6980\\n4980\\n10000\") == \"11100\\n\", \"The given test case is incorrect.\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n4980\\n7980\\n6980') == '15950'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"15950\\n\", \"Test case 1\"\n\nassert solution(input()) == \"Wrong Answer\\n\", \"Test case 2\"\n\nassert solution(input()) == \"Wrong Answer\\n\", \"Test case 3\"\n\nassert solution(input()) == \"Wrong Answer\\n\", \"Test case 4\"\n\nassert solution(input()) == \"Wrong Answer\\n\", \"Test case 5\"",
        "num_ids_2": 41,
        "num_ids_4": 79
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\"\nassert solution(\"1\\n2\\n3\") == \"Wrong Answer\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n4980\\n7980\\n6980') == '15950'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"",
        "num_ids_2": 51,
        "num_ids_4": 95
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120') == '215'\nprint(\"All test cases pass\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\\n\", \"Expected '7.5\\n', got '{}'\".format(solution(\"2\\n10 30\"))\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n10 30\\n\") == \"7.5\"\nassert solution(\"2\\n9 5 7 8 11\\n\") == \"6.25\"\nassert solution(\"2\\n1000000 0\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 71
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\\n7.49999\\n7.50001\\n\"\nassert solution(\"10\\n30\") == \"7.5\\n7.49999\\n7.50001\\n\"\nassert solution(\"100\\n100\") == \"1.0\\n0.0\\n1.0\\n\"\nassert solution(\"100\\n200\") == \"1.0\\n0.0\\n1.0\\n\"\nassert solution(\"100\\n150\") == \"1.0\\n0.0\\n1.0\\n\"\nassert solution(\"100\\n10\") == \"1.0\\n0.0\\n1.0\\n\"\nassert solution(\"100\\n\") == \"1.0\\n0.0\\n1.0\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 138
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '7.5'\nassert solution(input()) == '7.49999'\nassert solution(input()) == '7.50001'\nassert solution(input()) == '7.49999'\nassert solution(input()) == '7.50001'",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n10 30\\n\") == \"7.5\"\nassert solution(\"1\\n2\\n\") == \"0.5\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n10 30\") == \"7.50001\\n7.49999\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"7\"\nassert solution(\"4\\n10 20 30\") == \"14.00000\"\nassert solution(\"5\\n100 200 300 400\") == \"75.00000\"",
        "num_ids_2": 32,
        "num_ids_4": 76
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\\n\"\nassert solution(\"2\\n\") == \"7.5\\n\"\nassert solution(\"2\\n10 30 20 40\") == \"7.5\\n\"\nassert solution(\"2\\n10 30 20 40 200 400\") == \"7.5\\n\"\nassert solution(\"2\\n10 30 20 40 200 400 2000\") == \"7.5\\n\"\nassert solution(\"2\\n10 30 20 40 200 400 2000 10000\") == \"7.5\\n\"\nassert solution(\"2\\n10 30 20 40 200 400 2000 10000 30000\") == \"7.5\\n\"\nassert solution(\"2\\n10 30 20 40 200 400 2000 10000 30000 20000\") == \"7.5\\n\"\nassert solution(\"2\\n10 30 20 40 200 400 2000 10000 30000 20000 10000\") == \"7.5\\n\"\nassert solution(\"2\\n10 30 20 40 200 400 2000 10000 30000 20000 10000 30000\") == \"7.5\\n\"\nassert solution(\"2\\n10 30 20 40 200 400 2000 10000 30000 20000 10000 30000 20000\") == \"7.5\\n\"\nassert solution(\"2\\n10 30 20 40 200 400 2000 10000 30000 20000 10000 30000 20000 10000\") == \"7.5\\n\"\nassert solution(\"2\\n10 30 20 40 200 400 2000 10000 30000 20000 10000 30000 20000 10000 30000\") == \"7.5\\n\"\nassert solution(\"2\\n10 30 20 40 200 400 2000 10000 30000 20000 10000 30000 20000 10000 30000 20000\") == \"7.5\\n\"\nassert solution(\"2\\n10 30 20 40 200 400 2000 10000 30000 20000 10000 30000 20000 10000 30000 20000 10000\") == \"7.5\\n\"\nassert solution(\"2\\n10 30 20 40 200 400 2000 10000 30000 20000 10000 30000 20000 10000 30000 20000 10000 30000\") == \"7.5\\n\"\nassert solution(\"2\\n10 30 20 40 200 400 2000 10000 30000 20000 10",
        "num_ids_2": 37,
        "num_ids_4": 99
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10\\n30\\n\") == \"7.5\\n\"\nassert solution(\"1\\n20\\n40\\n\") == \"7.0\\n\"\nassert solution(\"1\\n100\\n1000\\n\") == \"7500000.0\\n\"\nassert solution(\"1\\n1000\\n1000000\\n\") == \"7500000000000000.0\\n\"\nassert solution(\"1\\n1000000\\n100000000000000000\\n\") == \"7500000000000000000000000000000000.0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 127
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\"",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2\\n', 'Test case 1 failed'\n\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n') == '2\\n', 'Test case 2 failed'\n\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n13') == '5\\n', 'Test case 3 failed'\n\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n13\\n') == '5\\n', 'Test case 4 failed'\n\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n13\\n14\\n') == '10\\n', 'Test case 5 failed'\n\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n13\\n14\\n15\\n') == '10\\n', 'Test case 6 failed'\n\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n13\\n14\\n15\\n16\\n') == '15\\n', 'Test case 7 failed'\n\nassert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n13\\n14\\n15\\n16\\n17\\n') == '20\\n', 'Test case 8 failed'",
        "num_ids_2": 84,
        "num_ids_4": 176
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"5 3\\n15\\n10\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"5 3\\n15\\n10\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\n",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2\\n'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\nprint('Test passed!')",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\"\n\nThis test case will pass if the function returns \"2\". The function will decorate the trees and then calculate the minimum value of h_{max} - h_{min}. The minimum possible value of h_{max} - h_{min} for the given constraints is 2.",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\u03b1\") == \"A\", \"Test case 1\"\nassert solution(\"\u03b2\") == \"a\", \"Test case 2\"\nassert solution(\"\u03b3\") == \"B\", \"Test case 3\"\nassert solution(\"\u03b4\") == \"a\", \"Test case 4\"\nassert solution(\"\u03b5\") == \"A\", \"Test case 5\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\u03b1\") == \"A\", \"Test case 1: An uppercase letter '\u03b1' should be printed as 'A'.\"\nassert solution(\"\u03b2\") == \"a\", \"Test case 2: A lowercase letter '\u03b2' should be printed as 'a'.\"\nassert solution(\"C\") == \"C\", \"Test case 3: The same letter 'C' should be printed as 'C'.\"\nassert solution(\"\u03b1bc\") == \"A\", \"Test case 4: The same letter '\u03b1bc' should be printed as 'A'.\"\nassert solution(\"xyz\") == \"x\", \"Test case 5: The same letter 'xyz' should be printed as 'x'.\"",
        "num_ids_2": 60,
        "num_ids_4": 122
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\u03b1\") == \"A\", \"Error: incorrect output\"\nassert solution(\"B\") == \"A\", \"Error: incorrect output\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\u03b1\") == \"A\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"a\"\nassert solution(\"\u03b3\") == \"A\"\nassert solution(\"\u03b4\") == \"a\"\nassert solution(\"\u03b5\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"B\") == \"A\", \"The solution should print A\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"a\"\nassert solution(\"\u03b3\") == \"a\"\nassert solution(\"\u03b4\") == \"A\"\nassert solution(\"\u03b5\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\u03b1\") == \"A\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"B\") == \"A\"\nassert solution(\"a\") == \"a\"\nassert solution(\"\u0391\") == \"A\"\nassert solution(\"b\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"a\"\nassert solution(\"\u0391\") == \"A\"\nassert solution(\"\u0391\u0392\") == \"A\"\nassert solution(\"a\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"1 1\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"6\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"6\\n\"\nassert solution(\"1 2\") == \"3\\n\"\nassert solution(\"10 5\") == \"4\\n\"\nassert solution(\"5 6\") == \"6\\n\"\nassert solution(\"1 0\") == \"0\\n\"\nassert solution(\"0 0\") == \"0\\n\"\nassert solution(\"0 1\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2') == '6'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\\n\", \"Sample Output doesn't match\"\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"6\\n\", \"The output is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"6\\n\"\nassert solution(\"5 10\") == \"4\\n\"\nassert solution(\"7 11\") == \"3\\n\"\nassert solution(\"8 12\") == \"0\\n\"\nassert solution(\"13 17\") == \"2\\n\"\nassert solution(\"14 20\") == \"1\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\"\nassert solution(\"5 3\\n\") == \"6\\n\"\nassert solution(\"4 1\\n\") == \"4\\n\"\nassert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 5\\n\") == \"12\\n\"\nassert solution(\"2 3\\n\") == \"6\\n\"\nassert solution(\"5 1\\n\") == \"0\\n\"\nassert solution(\"4 10\\n\") == \"36\\n\"\nassert solution(\"2 4\\n\") == \"2\\n\"\nassert solution(\"5 10\\n\") == \"0\\n\"\nassert solution(\"4 5\\n\") == \"0\\n\"\nassert solution(\"1 10\\n\") == \"0\\n\"\nassert solution(\"1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"3\\n\"\nassert solution(\"4 3\\n\") == \"6\\n\"\nassert solution(\"5 4\\n\") == \"12\\n\"\nassert solution(\"10 10\\n\") == \"100\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"6\\n\", \"Test case 1 failed\"\nassert solution(\"4 6\") == \"10\\n\", \"Test case 2 failed\"\nassert solution(\"3 9\") == \"14\\n\", \"Test case 3 failed\"\nassert solution(\"5 8\") == \"22\\n\", \"Test case 4 failed\"\nassert solution(\"6 7\") == \"35\\n\", \"Test case 5 failed\"",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"1904\") == \"MMYY\"\nassert solution(\"190401\") == \"AMBIGUOUS\"\nassert solution(\"19050102\") == \"NA\"\n",
        "num_ids_2": 28,
        "num_ids_4": 63
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0501') == 'MMYY'\nassert solution('0101') == 'AMBIGUOUS'\nassert solution('1234') == 'NA'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YYMM\", \"Input must be a digit sequence of length 4.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1905\") == \"YYMM\", \"Test case 1 failed\"\nassert solution(\"1101\") == \"MMYY\", \"Test case 2 failed\"\nassert solution(\"1123\") == \"AMBIGUOUS\", \"Test case 3 failed\"\nassert solution(\"1234\") == \"NA\", \"Test case 4 failed\"\nassert solution(\"0000\") == \"NA\", \"Test case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0123\") == \"MMYY\"\nassert solution(\"0101\") == \"AMBIGUOUS\"\nassert solution(\"1901\") == \"NA\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0123\") == \"MMYY\"\nassert solution(\"2201\") == \"AMBIGUOUS\"\nassert solution(\"1234\") == \"NA\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0119') == 'MMYY'\nassert solution('1101') == 'AMBIGUOUS'\nassert solution('0019') == 'NA'",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"1912\") == \"MMYY\"\nassert solution(\"1201\") == \"AMBIGUOUS\"\nassert solution(\"1200\") == \"AMBIGUOUS\"\nassert solution(\"1234\") == \"NA\"",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"1234\") == \"AMBIGUOUS\"\nassert solution(\"12345\") == \"NA\"\nassert solution(\"0101\") == \"MMYY\"\nassert solution(\"0123\") == \"AMBIGUOUS\"",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0519\") == \"MMYY\"\nassert solution(\"190519\") == \"AMBIGUOUS\"\nassert solution(\"190505\") == \"NA\"",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '2\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '2\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '2', \"The output should be 2.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3') == '2\\n' + '(2,1)\\n' + '(2,3)'\nprint('Two pairs can be chosen:')",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3') == '2\\n'\nassert solution('5') == '3\\n'\nassert solution('8') == '1\\n'\nassert solution('10') == '3\\n'\nassert solution('15') == '5\\n'",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"2\"\nassert solution(4) == \"1\"\nassert solution(5) == \"0\"\nassert solution(6) == \"1\"\nassert solution(7) == \"2\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '2\\n', 'Test case failed.'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"21\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 12\") == \"21\", \"Test 1 failed\"\nassert solution(\"12 18\") == \"14\", \"Test 2 failed\"\nassert solution(\"17 24\") == \"20\", \"Test 3 failed\"\nassert solution(\"0 0\") == \"0\", \"Test 4 failed\"\nassert solution(\"23 1\") == \"23\", \"Test 5 failed\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 41,
        "num_ids_4": 80
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"10 15\") == \"01\"\nassert solution(\"24 7\") == \"12\"\nassert solution(\"0 0\") == \"00\"\nassert solution(\"123 456\") == \"00\"",
        "num_ids_2": 29,
        "num_ids_4": 56
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 12\") == \"21\"\nprint(\"Test passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('9 12') == '21'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 12\") == \"21\"\n\nprint(\"Test passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"21\", \"The expected output is '21', but the actual output is '{}'\".format(solution(input()))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 12\") == \"21\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 12\") == \"21\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 12\") == \"21\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2919\") == \"3719\", \"The solution is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2919\\n\") == \"3719\"\nassert solution(\"1 1\\n\") == \"1\"\nassert solution(\"2 4111\\n\") == \"4111\"\nassert solution(\"10 200\\n\") == \"200\"\nassert solution(\"1 100\\n\") == \"99\"\nassert solution(\"1 2\\n\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 73
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2919\") == \"3719\\n\", \"Expected Output: 3719\\n, Actual Output: \" + solution(\"2 2919\")",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2919\") == \"3719\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2919\") == \"3719\\n\", \"The given code is incorrect.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"3 2919\") == \"3719\"\nassert solution(\"4 2919\") == \"3719\"\nassert solution(\"5 2919\") == \"3719\"\nassert solution(\"6 2919\") == \"3719\"\nassert solution(\"7 2919\") == \"3719\"\nassert solution(\"8 2919\") == \"3719\"\nassert solution(\"9 2919\") == \"3719\"\nassert solution(\"10 2919\") == \"3719\"\nassert solution(\"11 2919\") == \"3719\"\nassert solution(\"12 2919\") == \"3719\"\nassert solution(\"13 2919\") == \"3719\"\nassert solution(\"14 2919\") == \"3719\"\nassert solution(\"15 2919\") == \"3719\"\nassert solution(\"16 2919\") == \"3719\"\nassert solution(\"17 2919\") == \"3719\"\nassert solution(\"18 2919\") == \"3719\"\nassert solution(\"19 2919\") == \"3719\"\nassert solution(\"20 2919\") == \"3719\"\nassert solution(\"21 2919\") == \"3719\"\nassert solution(\"22 2919\") == \"3719\"\nassert solution(\"23 2919\") == \"3719\"\nassert solution(\"24 2919\") == \"3719\"\nassert solution(\"25 2919\") == \"3719\"\nassert solution(\"26 2919\") == \"3719\"\nassert solution(\"27 2919\") == \"3719\"\nassert solution(\"28 2919\") == \"3719\"\nassert solution(\"29 2919\") == \"3719\"\nassert solution(\"30 2919\") == \"3719\"\nassert solution(\"31 2919\") == \"3719\"\nassert solution(\"32 2919\") == \"3719\"\nassert solution(\"33 2919\") == \"3719\"\nassert solution(\"34 2919\") == \"3719\"\nassert solution(\"35 2919\") == \"3719\"\nassert solution(\"36 2919\") == \"3719\"\nassert solution(\"37 2919\") == \"3719\"\nassert solution(\"38 2919\") == \"3719\"\nassert solution(\"39 2919\") == \"3719\"\nassert solution(\"40 2919\") == \"3719\"\nassert solution(\"41 2919\") == \"3719\"\nassert solution(\"42 2919\") == \"3719\"\nassert solution(\"43 2919\") == \"3719\"\nassert solution(\"44 2919\") == \"3719\"\nassert solution(\"45 2919\") == \"3719\"\nassert solution(\"46 2919\") == \"3719\"\nassert solution(\"47 2919\") == \"3719\"\nassert solution(\"48 2919\") == \"3719\"\nassert solution(\"49 2919\") == \"3719\"\nassert solution(\"50 2919\") == \"3719\"\nassert solution(\"51 2919\") == \"3719\"\nassert solution(\"52 2919\") == \"3719\"\nassert solution(\"53 2919\") == \"3719\"\nassert solution(\"54 2919\") == \"3719\"\nassert solution(\"55 2919\") == \"3719\"\nassert solution(\"56 29",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2919') == '3719\\n', \"The correct result should be printed.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2919\") == \"3719\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('3 4000') == '4000'\nassert solution('4 4110') == '4000'\nassert solution('5 4100') == '4000'\nassert solution('6 4010') == '4000'\n\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nprint(\"All test cases passed\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '4', 'The output should be \"4\".'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\", \"Test case failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"100 3\") == \"5\"\nassert solution(\"12345 4\") == \"6\"\nassert solution(\"1234567890 5\") == \"6\"\nassert solution(\"123456789012345678901234567890 6\") == \"6\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 27,
        "num_ids_4": 64
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 2\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output\\n4\", \"Test failed\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\", \"Expected output: 4, but got: \" + solution(input())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000 1\") == \"33\"\nassert solution(\"2000 10\") == \"3\"\nassert solution(\"123 16\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 63
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '3\\n', \"The correct answer is: 3\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"3\" # Takahashi wants to print a document with N pages double-sided, where two pages of data can be printed on one sheet of paper. At least how many sheets of paper does he need?",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n\") == \"3\\n\", \"The output should be 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"3\\n\", \"Please enter an integer N greater than 0.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3\\n\"\nassert solution(\"1\") == \"1\\n\"\nassert solution(\"101\") == \"101\\n\"\nassert solution(\"0\") == \"0\\n\"\nassert solution(\"100\") == \"100\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"5\"\nassert solution(\"7\") == \"8\"\nassert solution(\"8\") == \"10\"\nassert solution(\"9\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"3\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"3\", \"The number of sheets of paper required is not 3.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter the value of N: \")) == \"3\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"1 1\") == \"Yay!\"\nassert solution(\"1 10\") == \"Yay!\"\nassert solution(\"3 2\") == \"Yay!\"\nassert solution(\"8 6\") == \"Yay!\"\nassert solution(\"10 8\") == \"Yay!\"\nassert solution(\"16 12\") == \"Yay!\"\nassert solution(\"18 14\") == \"Yay!\"\nassert solution(\"15 12\") == \"Yay!\"\nassert solution(\"13 9\") == \"Yay!\"\nassert solution(\"11 7\") == \"Yay!\"\nassert solution(\"9 6\") == \"Yay!\"\nassert solution(\"7 5\") == \"Yay!\"\nassert solution(\"6 5\") == \"Yay!\"\nassert solution(\"5 4\") == \"Yay!\"\nassert solution(\"4 3\") == \"Yay!\"\nassert solution(\"3 2\") == \"Yay!\"\nassert solution(\"2 1\") == \"Yay!\"\nassert solution(\"1 0\") == \"Yay!\"\nassert solution(\"0 1\") == \"Yay!\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"5 7\") == \"Yay!\"\nassert solution(\"5 2\") == \"Yay!\"\nassert solution(\"1 1\") == \"Yay!\"\nassert solution(\"1 3\") == \"Yay!\"\nassert solution(\"16 10\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution(\"16 1\") == \"Yay!\"\nassert solution(\"16 4\") == \"Yay!\"\nassert solution(\"16 9\") == \"Yay!\"\nassert solution(\"16 12\") == \"Yay!\"\nassert solution(\"16 11\") == \"Yay!\"\nassert solution(\"16 6\") == \"Yay!\"\nassert solution(\"16 7\") == \"Yay!\"\nassert solution(\"16 8\") == \"Yay!\"\nassert solution(\"16 2\") == \"Yay!\"\nassert solution(\"16 3\") == \"Yay!\"\nassert solution(\"16 13\") == \"Yay!\"\nassert solution(\"16 14\") == \"Yay!\"\nassert solution(\"16 5\") == \"Yay!\"\nassert solution(\"16 0\") == \"Yay!\"\nassert solution(\"16 -1\") == \"Yay!\"\n\nassert solution(\"0 1\") == \"Yay!\"\nassert solution(\"16 17\") == \"Yay!\"\nassert solution(\"16 -1\") == \"Yay!\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"1 1\") == \"Yay!\"\nassert solution(\"15 10\") == \"Yay!\"\nassert solution(\"5 10\") == \"Yay!\"\nassert solution(\"1 3\") == \"Yay!\"\nassert solution(\"10 10\") == \"Yay!\"\nassert solution(\"10 7\") == \"Yay!\"\nassert solution(\"16 10\") == \"Yay!\"\nassert solution(\"15 15\") == \"Yay!\"\nassert solution(\"14 10\") == \"Yay!\"\nassert solution(\"15 11\") == \"Yay!\"\nassert solution(\"16 2\") == \"Yay!\"\nassert solution(\"15 10\") == \"Yay!\"\nassert solution(\"16 10\") == \"Yay!\"\nassert solution(\"15 9\") == \"Yay!\"\nassert solution(\"14 10\") == \"Yay!\"\nassert solution(\"15 14\") == \"Yay!\"\nassert solution(\"16 10\") == \"Yay!\"\nassert solution(\"16 9\") == \"Yay!\"\nassert solution(\"15 12\") == \"Yay!\"\nassert solution(\"15 13\") == \"Yay!\"\nassert solution(\"15 16\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution(\"15 10\") == \"Yay!\"\nassert solution(\"14 12\") == \"Yay!\"\nassert solution(\"14 11\") == \"Yay!\"\nassert solution(\"15 14\") == \"Yay!\"\nassert solution(\"15 13\") == \"Yay!\"\nassert solution(\"16 16\") == \"Yay!\"\nassert solution(\"15 10\") == \"Yay!\"\nassert solution(\"16 14\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution(\"15 13\") == \"Yay!\"\nassert solution(\"16 13\") == \"Yay!\"\nassert solution(\"16 16\") == \"Yay!\"\nassert solution(\"14 14\") == \"Yay!\"\nassert solution(\"15 12\") == \"Yay!\"\nassert solution(\"16 12\") == \"Yay!\"\nassert solution(\"15 15\") == \"Yay!\"\nassert solution(\"15 12\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution(\"15 16\") == \"Yay!\"\nassert solution(\"14 16\") == \"Yay!\"\nassert solution(\"14 15\") == \"Yay!\"\nassert solution(\"15 16\") == \"Yay!\"\nassert solution(\"15 16\") == \"Yay!\"\nassert solution(\"16 16\") == \"Yay!\"\nassert solution(\"15 15\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution(\"15 15\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution(\"15 15\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution(\"15 15\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution(\"15 15\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution(\"15 15\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution(\"15 15\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution(\"15 15\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution(\"15 15\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution(\"15 15\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution(\"15 15\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yay!\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"5 5\") == \":(\"\nassert solution(\"1 2\") == \"Yay!\"\nassert solution(\"3 4\") == \":(\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yay!'\nassert solution(input()) == 'Yay!'\nassert solution(input()) == 'Yay!'\nassert solution(input()) == 'Yay!'\nassert solution(input()) == ':('\nassert solution(input()) == ':('",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 4') == 'Yay!\\n'\nassert solution('10 2') == ':('\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"10 11\") == \"Yay!\"\nassert solution(\"16 15\") == \"Yay!\"\nassert solution(\"1001 16\") == \"Yay!\"\nassert solution(\"5 4\") == \"Yay!\"\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"5 4\") == \"Yay!\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"3 6\") == \"Yay!\"\nassert solution(\"10 8\") == \"Yay!\"\nassert solution(\"8 4\") == \":(\"\nassert solution(\"6 5\") == \":(\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1234567876\") == \"34\", \"Test failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1234567876\") == \"34\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1234567876\") == \"34\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"9876543210\") == \"0\"\nassert solution(\"9999999999\") == \"0\"\nassert solution(\"1111111111\") == \"0\"\nassert solution(\"9999999999\") == \"0\"\n",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1234567876\") == \"34\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"1234567879\") == \"0\"\nassert solution(\"1234567880\") == \"34\"\nassert solution(\"1234567890\") == \"0\"\nassert solution(\"1234567900\") == \"34\"\nassert solution(\"1234567901\") == \"0\"\nassert solution(\"1234567902\") == \"34\"\nassert solution(\"1234567903\") == \"0\"\nassert solution(\"1234567904\") == \"34\"\nassert solution(\"1234567905\") == \"0\"\nassert solution(\"1234567906\") == \"34\"\nassert solution(\"1234567907\") == \"0\"\nassert solution(\"1234567908\") == \"34\"\nassert solution(\"1234567909\") == \"0\"\nassert solution(\"1234567910\") == \"34\"\nassert solution(\"1234567911\") == \"0\"\nassert solution(\"1234567912\") == \"34\"\nassert solution(\"1234567913\") == \"0\"\nassert solution(\"1234567914\") == \"34\"\nassert solution(\"1234567915\") == \"0\"\nassert solution(\"1234567916\") == \"34\"\nassert solution(\"1234567917\") == \"0\"\nassert solution(\"1234567918\") == \"34\"\nassert solution(\"1234567919\") == \"0\"\nassert solution(\"1234567920\") == \"34\"\nassert solution(\"1234567921\") == \"0\"\nassert solution(\"1234567922\") == \"34\"\nassert solution(\"1234567923\") == \"0\"\nassert solution(\"1234567924\") == \"34\"\nassert solution(\"1234567925\") == \"0\"\nassert solution(\"1234567926\") == \"34\"\nassert solution(\"1234567927\") == \"0\"\nassert solution(\"1234567928\") == \"34\"\nassert solution(\"1234567929\") == \"0\"\nassert solution(\"1234567930\") == \"34\"\nassert solution(\"1234567931\") == \"0\"\nassert solution(\"1234567932\") == \"34\"\nassert solution(\"1234567933\") == \"0\"\nassert solution(\"1234567934\") == \"34\"\nassert solution(\"1234567935\") == \"0\"\nassert solution(\"1234567936\") == \"34\"\nassert solution(\"1234567937\") == \"0\"\nassert solution(\"1234567938\") == \"34\"\nassert solution(\"1234567939\") == \"0\"\nassert solution(\"1234567940\") == \"34\"\nassert solution(\"1234567941\") == \"0\"\nassert solution(\"1234567942\") == \"34\"\nassert solution(\"1234567943\") == \"0\"\nassert solution(\"1234567944\") == \"34\"\nassert solution(\"1234567945\") == \"0\"\nassert solution(\"1234567946\") == \"34\"\nassert solution(\"1234567947\") == \"0\"\nassert solution(\"123456794",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1234567876\") == \"34\", \"The minimum possible difference between X and 753 is 34.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"123456787\") == \"22\"\nassert solution(\"12345678\") == \"11\"\nassert solution(\"1234567\") == \"99\"\nassert solution(\"123456\") == \"88\"\nassert solution(\"12345\") == \"77\"\nassert solution(\"1234\") == \"66\"\nassert solution(\"123\") == \"55\"\nassert solution(\"12\") == \"44\"\nassert solution(\"1\") == \"33\"\nassert solution(\"0\") == \"22\"\nassert solution(\"1234567876543210\") == \"2147483647\"\n\nThe code provided is almost correct, but there is a small mistake in the calculation of the minimum difference. The difference between X and 753 is actually 787 - 753 = 34, not 34. We need to subtract 34 from 787 to get the correct value. Here's the corrected code:\n\n```python\n",
        "num_ids_2": 39,
        "num_ids_4": 74
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1234567876\") == \"34\", \"The minimum possible difference between X and 753 is not 34.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1234567876\") == \"34\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2999999987 2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\\n\"\nassert solution(\"2\\n2 9\") == \"1 7\\n\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\\n\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 122
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 12 6') == '5 3\\n'\nassert solution('2\\n2 9') == '1 7\\n'\nassert solution('7\\n2 1000000000 4 6 8 4 2') == '2999999987 2\\n'\nassert solution('6\\n13 52 0 13 26 52') == '12 13\\n'",
        "num_ids_2": 41,
        "num_ids_4": 122
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\", \"Test 1 Failed\"\nassert solution(\"2\\n2 9\") == \"1 7\", \"Test 2 Failed\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\", \"Test 3 Failed\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\", \"Test 4 Failed\"",
        "num_ids_2": 49,
        "num_ids_4": 138
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test case failed: {stdin}\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n3 12 6\\n2\\n2 9\\n7\\n2 1000000000 4 6 8 4 2\\n6\\n13 52 0 13 26 52') == '5 3\\n1 7\\n2999999987 2'\nassert solution('2\\n2 9\\n7\\n2 1000000000 4 6 8 4 2\\n6\\n13 52 0 13 26 52') == '1 7\\n2999999987 2'\nassert solution('6\\n13 52 0 13 26 52\\n13 0\\n0 0 52 0 0\\n13 26 52\\n52 0 13 0') == '12 13\\n0 0 0 0 0'",
        "num_ids_2": 174,
        "num_ids_4": 256
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5 3\"\nassert solution() == \"1 7\"\nassert solution() == \"2999999987 2\"\nassert solution() == \"12 13\"",
        "num_ids_2": 20,
        "num_ids_4": 51
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"TODO\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2999999987 2'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 12 6\\n2\\n2 9\\n7\\n2 1000000000 4 6 8 4 2\\n6\\n13 52 0 13 26 52') == '5 3'\nassert solution('2\\n2 9\\n') == '1 7'\nassert solution('7\\n2 1000000000 4 6 8 4 2\\n6\\n13 52 0 13 26 52') == '2999999987 2'\nassert solution('6\\n13 52 0 13 26 52') == '12 13'",
        "num_ids_2": 95,
        "num_ids_4": 193
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n4\\n3 1 4 1\\n') == 'Output\\n3\\n'\nassert solution('Input\\n3\\n1 1 1\\n') == 'Output\\n1\\n'\nassert solution('Input\\n5\\n1 1 1 2 2\\n') == 'Output\\n2\\n'",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 1 4 1\\n\") == \"3\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 1 1 2 2\\n\") == \"2\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 69
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output\"\nprint(solution())",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n4\\n3 1 4 1\\n\") == \"Output\\n3\\n\"\nassert solution(\"Input\\n3\\n1 1 1\\n\") == \"Output\\n1\\n\"\nassert solution(\"Input\\n5\\n1 1 1 2 2\\n\") == \"Output\\n2\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"The solution should be {expected}, but got {solution(stdin)}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"\"\nassert solution(\"10\") == \"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(stdin)) == solution(stdin) # check if the solution is correct",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test case failed. Expected: {expected}, Actual: {solution(stdin)}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 1\nassert solution(10) == 2\nassert solution(100) == 2\nassert solution(1000) == 2\nassert solution(10000) == 3\nassert solution(100000) == 4\nassert solution(1000000) == 5",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n4\\n3 1 4 1\\n\") == \"Output\\n3\\n\"\nassert solution(\"Input\\n3\\n1 1 1\\n\") == \"Output\\n1\\n\"\nassert solution(\"Input\\n5\\n1 1 1 2 2\\n\") == \"Output\\n2\\n\"\n\nfrom typing import List",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n2 3\\n\\n0\\n0\") == \"2\\n1 2\\n2 3\\n\\n1\\n1 2\\n2 3\\n\\n2\"\nassert solution(\"3\\n1 3\\n2 3\\n\\n0\\n0\") == \"2\\n1 2\\n2 3\\n\\n1\\n1 2\\n2 3\\n\\n2\"\nassert solution(\"4\\n1 4\\n2 4\\n\\n1 3\\n2 3\\n3 4\\n4 1\\n\") == \"2\\n1 2\\n2 3\\n\\n1\\n1 2\\n2 3\\n\\n2\"\nassert solution(\"2\\n0\\n0\") == \"1\\n1 2\\n2 3\\n\\n1\\n1 2\\n2 3\\n\\n2\"\n",
        "num_ids_2": 116,
        "num_ids_4": 236
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n4 2\\n1 2\\n2 3\\n\\nOutput\\n2\\n4 2\\n\\nInput\\n2 0\\n\\nOutput\\n1\\n1 2\\n\\nInput\\n3 2\\n1 3\\n2 3\\n\\nOutput\\n2') == '2\\n4 2\\n\\nInput\\n2 0\\n\\nOutput\\n1\\n1 2\\n\\nInput\\n3 2\\n1 3\\n2 3\\n\\nOutput\\n2'",
        "num_ids_2": 145,
        "num_ids_4": 145
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\\n2\\n1 2\\n1 3\\n\\n0\") == \"2\\n4 2\\n\"\nassert solution(\"2 0\\n\\n2\\n1 2\\n1 3\\n\\n0\") == \"1\\n1 2\\n\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\\n1\\n2 4\\n\") == \"2\\n1 3\\n2 3\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 134
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\\n2 0\\n\\n3 2\\n1 3\\n2 3\\n\\n\") == \"2\\n4 2\\n\\n1\\n1 2\\n\\n\"\nassert solution(\"2 0\\n\\n3 2\\n1 3\\n2 3\\n\") == \"1\\n1 2\\n\\n\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\\n\") == \"2\\n2 3\\n\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 144
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n4 2\\n1 2\\n2 3\\n\") == \"Output\\n2\\n4 2\\n\"\n\nassert solution(\"Input\\n2 0\\n\") == \"Output\\n1\\n1 2\\n\"\n\nassert solution(\"Input\\n3 2\\n1 3\\n2 3\\n\") == \"Output\\n2\\n2\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 99
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\") == \"2\\n4 2\\n2\"\nassert solution(\"2 0\\n\") == \"1\\n1 2\\n\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"2\"",
        "num_ids_2": 53,
        "num_ids_4": 77
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\") == \"2\\n4 2\\n\"\nassert solution(\"2 0\\n\") == \"1\\n1 2\\n\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"2\\n\"\n\nsolution(\"4 2\\n1 2\\n2 3\\n\") == \"2\\n4 2\\n\"\nsolution(\"2 0\\n\") == \"1\\n1 2\\n\"\nsolution(\"3 2\\n1 3\\n2 3\\n\") == \"2\\n\"\n\nassert solution(\"4 2\\n1 2\\n2 3\\n\") == \"2\\n4 2\\n\"\nassert solution(\"2 0\\n\") == \"1\\n1 2\\n\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"2\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 109
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\") == \"2\\n4 2\\n\"\nassert solution(\"2 0\\n\") == \"1\\n1 2\\n\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"2\\n2 3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 83
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\") == \"2\"\nassert solution(\"2 0\\n\") == \"1\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"2\"",
        "num_ids_2": 38,
        "num_ids_4": 62
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 11, \"Expected 11, got: {}\".format(solution())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == \"11\\n\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == \"4\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\\n7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == 11\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == 4",
        "num_ids_2": 155,
        "num_ids_4": 155
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n') == '11'\nassert solution('7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n') == '4'\n\nfrom typing import List",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == 0, \"Invalid input\"\nassert solution(\"1 2 3 4 5\") == 11, \"Invalid input\"\nassert solution(\"1 2\") == 11, \"Invalid input\"\nassert solution(\"2 3\") == 4, \"Invalid input\"\nassert solution(\"3 4\") == 4, \"Invalid input\"\nassert solution(\"3 5\") == 0, \"Invalid input\"\n",
        "num_ids_2": 37,
        "num_ids_4": 70
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The output {solution(input())} is different from the expected output {expected_output}.\"\n\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'your_answer_here'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == 11\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == 4",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == \"11\\n\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == \"4\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == # Solution",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution {solution(input())} not as expected. Expected output: {expected_output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\\n\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\"",
        "num_ids_2": 134,
        "num_ids_4": 134
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\"",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\"\nassert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\"",
        "num_ids_2": 132,
        "num_ids_4": 264
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case_num} failed\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''\n1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == [\"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n\"]\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == [\"1 5\\n2 1\\n2 9999999994\\n\"]",
        "num_ids_2": 136,
        "num_ids_4": 136
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6 5 4\\n40 40 40 60\\n201 101 101 200\") == \"2 1 3\\n20 20 20\"\nassert solution(\"3 6 5 4\\n40 40 40 60\\n201 101 101 200\") == \"1 100 100\"\nassert solution(\"3 6 5 4\\n40 40 40 60\\n201 101 101 200\") == \"2 1 3\"\nassert solution(\"3 6 5 4\\n40 40 40 60\\n201 101 101 200\") == \"20 20 20\"\nassert solution(\"3 6 5 4\\n40 40 40 60\\n201 101 101 200\") == \"201 101 101\"\n",
        "num_ids_2": 114,
        "num_ids_4": 217
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\\n\"\nassert solution(\"40 40 40 60\") == \"20 20 20\\n\"\nassert solution(\"201 101 101 200\") == \"1 100 100\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 85
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6 5 4\\n\") == \"2 1 3\\n\"\nassert solution(\"40 40 40 60\\n\") == \"20 20 20\\n\"\nassert solution(\"201 101 101 200\\n\") == \"1 100 100\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 91
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\", \"Polycarp has guessed 3 positive integers a=3, b=6, c=5, but he keeps these numbers in secret, so he writes down four numbers on a board in arbitrary order: (a+b), (a+c), (b+c), (a+b+c).\"\nassert solution(\"40 40 40 60\") == \"20 20 20\", \"Polycarp has guessed 4 positive integers a=40, b=40, c=60, but he keeps these numbers in secret, so he writes down four numbers on a board in arbitrary order: (a+b), (a+c), (b+c), (a+b+c).\"\nassert solution(\"201 101 101 200\") == \"1 100 100\", \"Polycarp has guessed 3 positive integers a=201, b=101, c=101, but he keeps these numbers in secret, so he writes down four numbers on a board in arbitrary order: (a+b), (a+c), (b+c), (a+b+c).\"",
        "num_ids_2": 182,
        "num_ids_4": 286
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\", \"Test 1\"\nassert solution(\"40 40 40 60\") == \"20 20 20\", \"Test 2\"\nassert solution(\"201 101 101 200\") == \"1 100 100\", \"Test 3\"",
        "num_ids_2": 57,
        "num_ids_4": 94
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3 6 5 4) == \"2 1 3\"\nassert solution(40 40 40 60) == \"20 20 20\"\nassert solution(201 101 101 200) == \"1 100 100\"",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\nRBGRRBRGG\\n\") == \"2\\nRBGRGBRGR\\n\"\nassert solution(\"8\\nBBBGBRRR\\n\") == \"2\\nBRBGBRGR\\n\"\nassert solution(\"13\\nBBRRRRGGGGGRR\\n\") == \"6\\nBGRBRBGBGBGRG\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 88
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"9\nRBGRRBRGG\"\"\") == \"2\\nRBGRGBRGR\"\nassert solution(\"\"\"8\nBBBGBRRR\"\"\") == \"2\\nBRBGBRGR\"\nassert solution(\"\"\"13\nBBRRRRGGGGGRR\"\"\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 10,
        "num_ids_4": 16
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == 2\nassert solution(\"8\\nBBBGBRRR\") == 2\nassert solution(\"13\\nBBRRRRGGGGGRR\") == 6",
        "num_ids_2": 31,
        "num_ids_4": 50
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('9\\nRBGRRBRGG') == '2\\nRBGRGBRGR'\nassert solution('8\\nBBBGBRRR') == '2\\nBRBGBRGR'\nassert solution('13\\nBBRRRRGGGGGRR') == '6\\nBGRBRBGBGBGRG'",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == 2\nassert solution(\"8\\nBBBGBRRR\") == 2\nassert solution(\"13\\nBBRRRRGGGGGRR\") == 6",
        "num_ids_2": 31,
        "num_ids_4": 50
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Got '{solution(input())}', expected '{expected}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"Error: Please provide valid input\"\nassert solution(\"\") == \"Error: Please provide valid input\"\nassert solution(\"a\") == \"Error: Please provide valid input\"\nassert solution(\"1\") == \"Error: Please provide valid input\"\nassert solution(\"100\") == \"Error: Please provide valid input\"\nassert solution(\"R\") == \"Error: Invalid input\"\nassert solution(\"RR\") == \"Error: Invalid input\"\nassert solution(\"RBGRRBRGG\") == \"Error: Invalid input\"\nassert solution(\"BBRRRRGGGGGRR\") == \"Error: Invalid input\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6\"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4\"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9\"\nassert solution(\"7\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6\"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4\"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9\"",
        "num_ids_2": 62,
        "num_ids_4": 129
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"The given solution does not match the expected output.\\nInput: {stdin}\\nOutput: {output}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\nfor i, (in_line, out_line) in enumerate(zip(stdin.split('\\n'), output.split('\\n'))):\n    assert in_line == out_line, f'Example {i+1} has an error:\\n{in_line}\\n!=\\n{out_line}'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6 \"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4 \"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1 \"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9 \"",
        "num_ids_2": 62,
        "num_ids_4": 129
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input().strip())) == str(input().strip())\nassert solution(str(input().strip())) == str(input().strip())\nassert solution(str(input().strip())) == str(input().strip())\nassert solution(str(input().strip())) == str(input().strip())\nassert solution(str(input().strip())) == str(input().strip())",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7\\n3 3 4 7 5 6 8') == '4\\n2 3 5 6 '\nassert solution('6\\n1 3 5 2 4 6') == '2\\n1 4 '\nassert solution('4\\n10 9 8 7') == '1\\n1 '\nassert solution('9\\n6 7 8 3 4 5 9 10 11') == '6\\n1 2 3 7 8 9 '",
        "num_ids_2": 62,
        "num_ids_4": 129
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(7) == \"4\\n2 3 5 6\"\nassert solution(6) == \"2\\n1 4\"\nassert solution(4) == \"1\\n1\"\nassert solution(9) == \"6\\n1 2 3 7 8 9\"",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n7\\n3 3 4 7 5 6 8\\n\\nOutput\\n4\\n2 3 5 6\\n\\nInput\\n6\\n1 3 5 2 4 6\\n\\nOutput\\n2\\n1 4\\n\\nInput\\n4\\n10 9 8 7\\n\\nOutput\\n1\\n1\\n\\nInput\\n9\\n6 7 8 3 4 5 9 10 11\\n\\nOutput\\n6\\n1 2 3 7 8 9\\n\") == \"Output\\n4\\n2 3 5 6\\n\\nInput\\n6\\n1 3 5 2 4 6\\n\\nOutput\\n2\\n1 4\\n\\nInput\\n4\\n10 9 8 7\\n\\nOutput\\n1\\n1\\n\\nInput\\n9\\n6 7 8 3 4 5 9 10 11\\n\\nOutput\\n6\\n1 2 3 7 8 9\\n\"",
        "num_ids_2": 287,
        "num_ids_4": 287
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output of the code does not match the expected output.\\nInput: {stdin}\\nOutput: {solution(stdin)}\\nExpected Output: {expected_output}\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\", \"Test Failed\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"Yes\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Yes\", \"Expected Yes, got {}\".format(solution(stdin))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"5 2\") == \"No\"\nassert solution(\"4 2\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n\") == \"Yes\\n\"\nassert solution(\"4 2\\n\") == \"No\\n\"\nassert solution(\"1 3\\n\") == \"Yes\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1') == 'Yes\\n', \"The output is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"81 58\\n\") == \"110\\n\", \"Test 1 failed.\"\nprint(\"Test 1 Passed.\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"81 58\") == \"110\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"81 58\") == \"110\", \"The train fare is 81 yen. The train fare is 58 \u2044 2=29 yen with the 50% discount. Thus, it costs 110 yen to travel from Station A to Station C.\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"81 58\") == \"110\\n\", \"Sample Input Error\"\nprint(solution(\"170 50\"))",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"81 58\") == \"110\\n\", \"The train fare is 81 yen. The train fare is 58 \u2044 2=29 yen with the 50% discount. Thus, it costs 110 yen to travel from Station A to Station C.\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"81 58\") == \"110\", \"Test Failed\"\nassert solution(\"45 75\") == \"135\", \"Test Failed\"\nassert solution(\"60 85\") == \"125\", \"Test Failed\"\nassert solution(\"70 95\") == \"135\", \"Test Failed\"\nassert solution(\"80 105\") == \"145\", \"Test Failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"81 58\") == \"110\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"81 58\") == \"110\", \"Sample output not correct\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '110'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"10 5\") == \"10\"\nassert solution(\"50 0\") == \"0\"\nassert solution(\"10 10\") == \"50\"\nassert solution(\"15 10\") == \"20\"\nassert solution(\"50 10\") == \"0\"",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"8\", \"There are eight possible passwords: 111, 112, 121, 122, 211, 212, 221, and 222.\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"8\\n\", \"The output is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"8\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '8'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"8\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"8\"\nassert solution(\"3\\n\") == \"16\"\nassert solution(\"4\\n\") == \"36\"\nassert solution(\"5\\n\") == \"72\"\nassert solution(\"6\\n\") == \"156\"\nassert solution(\"7\\n\") == \"312\"\nassert solution(\"8\\n\") == \"624\"\nassert solution(\"9\\n\") == \"1232\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '8\\n', \"Expected output not found\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"8\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"8\" # Input \"2\" and Output \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"YES\\n\", \"Function should return 'YES'\\n\"\nassert solution(\"9\") == \"YES\\n\", \"Function should return 'YES'\\n\"\nassert solution(\"10\") == \"NO\\n\", \"Function should return 'NO'\\n\"\nassert solution(\"55\") == \"YES\\n\", \"Function should return 'YES'\\n\"\n",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"10\") == \"NO\"\nassert solution(\"9\") == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\\n\"\nassert solution(\"10\") == \"NO\\n\"\nassert solution(\"9\") == \"YES\\n\"\nassert solution(\"11\") == \"NO\\n\"\nassert solution(\"0\") == \"NO\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\", \"Input: 5\\nOutput: NO\"\nassert solution(\"10\") == \"YES\", \"Input: 10\\nOutput: NO\"\nassert solution(\"9\") == \"YES\", \"Input: 9\\nOutput: NO\"\nassert solution(\"8\") == \"YES\", \"Input: 8\\nOutput: YES\"\nassert solution(\"7\") == \"NO\", \"Input: 7\\nOutput: NO\"",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"10\") == \"NO\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"YES\\n\", \"Test 1\"\nassert solution(\"10\") == \"YES\\n\", \"Test 2\"\nassert solution(\"15\") == \"YES\\n\", \"Test 3\"\nassert solution(\"12\") == \"NO\\n\", \"Test 4\"\nassert solution(\"20\") == \"NO\\n\", \"Test 5\"\nassert solution(\"9\") == \"NO\\n\", \"Test 6\"",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n\") == \"YES\", \"Incorrect output\"\nassert solution(\"10\\n\") == \"NO\", \"Incorrect output\"\nassert solution(\"11\\n\") == \"YES\", \"Incorrect output\"\nassert solution(\"12\\n\") == \"NO\", \"Incorrect output\"\nassert solution(\"13\\n\") == \"NO\", \"Incorrect output\"\nassert solution(\"14\\n\") == \"NO\", \"Incorrect output\"\nassert solution(\"15\\n\") == \"NO\", \"Incorrect output\"\nassert solution(\"16\\n\") == \"NO\", \"Incorrect output\"\nassert solution(\"17\\n\") == \"NO\", \"Incorrect output\"\nassert solution(\"18\\n\") == \"YES\", \"Incorrect output\"\nassert solution(\"19\\n\") == \"NO\", \"Incorrect output\"\nassert solution(\"20\\n\") == \"YES\", \"Incorrect output\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\", \"Shichi-Go-San (literally \\\"Seven-Five-Three\\\") is a traditional event in a certain country to celebrate the growth of seven-, five- and three-year-old children. Takahashi is now X years old. Will his growth be celebrated in Shichi-Go-San this time?\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'ABC'\nprint('All tests passed!')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"999\") == \"ABC\", \"The 999-th round of AtCoder Beginner Contest is labeled as ABC999.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(999) == 'ABC'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(999) == \"ABC\", \"Test 1 failed.\"\n\nassert solution(1000) == \"ABD\", \"Test 2 failed.\"\n\nassert solution(1001) == \"ACD\", \"Test 3 failed.\"\n\nassert solution(1002) == \"BDC\", \"Test 4 failed.\"\n\nassert solution(1003) == \"CDE\", \"Test 5 failed.\"\n\nassert solution(1004) == \"DEF\", \"Test 6 failed.\"\n\nassert solution(1005) == \"EFG\", \"Test 7 failed.\"\n\nassert solution(1006) == \"FGH\", \"Test 8 failed.\"\n\nassert solution(1007) == \"IGH\", \"Test 9 failed.\"\n\nassert solution(1008) == \"JH\", \"Test 10 failed.\"\n\nassert solution(1009) == \"KLM\", \"Test 11 failed.\"\n\nassert solution(1010) == \"NOP\", \"Test 12 failed.\"\n\nassert solution(1011) == \"QRST\", \"Test 13 failed.\"\n\nassert solution(1012) == \"UW\", \"Test 14 failed.\"\n\nassert solution(1013) == \"VWX\", \"Test 15 failed.\"\n\nassert solution(1014) == \"YZ\", \"Test 16 failed.\"\n\nassert solution(1015) == \"BA\", \"Test 17 failed.\"\n\nassert solution(1016) == \"CA\", \"Test 18 failed.\"\n\nassert solution(1017) == \"DA\", \"Test 19 failed.\"\n\nassert solution(1018) == \"EA\", \"Test 20 failed.\"\n\nassert solution(1019) == \"FA\", \"Test 21 failed.\"\n\nassert solution(1020) == \"GA\", \"Test 22 failed.\"\n\nassert solution(1021) == \"HA\", \"Test 23 failed.\"\n\nassert solution(1022) == \"IA\", \"Test 24 failed.\"\n\nassert solution(1023) == \"JA\", \"Test 25 failed.\"\n\nassert solution(1024) == \"KA\", \"Test 26 failed.\"\n\nassert solution(1025) == \"LA\", \"Test 27 failed.\"\n\nassert solution(1026) == \"MA\", \"Test 28 failed.\"\n\nassert solution(1027) == \"NA\", \"Test 29 failed.\"\n\nassert solution(1028) == \"OA\", \"Test 30 failed.\"\n\nassert solution(1029) == \"PA\", \"Test 31 failed.\"\n\nassert solution(1030) == \"QA\", \"Test 32 failed.\"\n\nassert solution(1031) == \"RA\", \"Test 33 failed.\"\n\nassert solution(1032) == \"SA\", \"Test 34 failed.\"\n\nassert solution(1033) == \"TA\", \"Test 35 failed.\"\n\nassert solution(1034) == \"UA\", \"Test 36 failed.\"\n\nassert solution(1035) == \"VA\", \"Test 37 failed.\"\n\nassert solution(1036) == \"WA\", \"Test 38 failed.\"\n\nassert solution(1037) == \"YA\", \"Test 39 failed.\"\n\nassert solution(1038) == \"ZA\", \"Test 40 failed.\"\n\nassert solution(1039) == \"BA\", \"Test 41 failed.\"\n\nassert solution(1040) == \"CA\", \"Test 42 failed.\"\n\nassert solution(1041) == \"DA\", \"Test 43 failed.\"\n\nassert solution(1042) == \"EA\", \"Test 44 failed.\"\n\nassert solution(1043) == \"FA\", \"Test 45 failed.\"\n\nassert solution(1044) == \"GA\", \"Test 46 failed.\"\n\nassert solution(1045) == \"HA\", \"Test 47 failed.\"\n\nassert solution(1046) == \"IA\", \"Test 48 failed.\"\n\nassert solution(1047) == \"JA\", \"Test 49 failed",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"999\") == \"ABC\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"999\") == \"ABC\", \"Test Case 1\"\nassert solution(\"1000\") == \"ABD\", \"Test Case 2\"\nassert solution(\"1998\") == \"ABD\", \"Test Case 3\"\nassert solution(\"2000\") == \"ABC\", \"Test Case 4\"\nassert solution(\"1999\") == \"ABC\", \"Test Case 5\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"999\") == \"ABC\", \"Incorrect output.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"999\") == \"ABC\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"999\") == \"ABC\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(999) == 'ABC', \"The 999-th round of AtCoder Beginner Contest is labeled as ABC999.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yay!\\n\", \"Test case 1 failed.\"\n\nassert solution(input()) == \"Yay!\\n\", \"Test case 2 failed.\"\n\nassert solution(input()) == \"Yay!\\n\", \"Test case 3 failed.\"\n\nassert solution(input()) == \"Yay!\\n\", \"Test case 4 failed.\"\n\nassert solution(input()) == \"Yay!\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\\n\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n16\\n\") == \"Yay!\\n\"\nassert solution(\"2\\n3\\n4\\n8\\n9\\n10\\n\") == \"Yay!\\n\"\nassert solution(\"2\\n3\\n5\\n8\\n9\\n10\\n\") == \"No pair of antennas that cannot communicate directly.\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n123\\n\") == \"No pair of antennas that cannot communicate directly.\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 132
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n16\") == \"Yay!\"\nassert solution(\"1\\n1\\n2\\n2\\n2\\n2\") == \"No pair of antennas cannot communicate directly.\"\nassert solution(\"1\\n1\\n2\\n2\\n2\\n1\") == \"No pair of antennas cannot communicate directly.\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"No pair of antennas cannot communicate directly.\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n2\") == \"No pair of antennas cannot communicate directly.\"",
        "num_ids_2": 53,
        "num_ids_4": 113
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\\n\"\nassert solution(\"0\\n1\\n2\\n3\\n4\\n5\") == \"No solution.\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\") == \"No solution.\\n\"\n",
        "num_ids_2": 57,
        "num_ids_4": 118
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution(stdin='1\\n2\\n4\\n8\\n9\\n10') == 'No pair of antennas cannot communicate directly.'",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!\\n'\nassert solution('2\\n5\\n3\\n6\\n7\\n10') == 'No Pair of Antennas Cannot Communicate Directly\\n'\nassert solution('1\\n1\\n1\\n1\\n1') == 'No Pair of Antennas Cannot Communicate Directly\\n'\nassert solution('0\\n0\\n0\\n0\\n0') == 'No Pair of Antennas Cannot Communicate Directly\\n'\nassert solution('1\\n1\\n0\\n0\\n0') == 'No Pair of Antennas Cannot Communicate Directly\\n'",
        "num_ids_2": 67,
        "num_ids_4": 135
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yay!'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3200\\npink\\n\") == \"pink\"\nassert solution(\"2800\\napple\\n\") == \"red\"\nassert solution(\"10\\nabcd\\n\") == \"red\"\nassert solution(\"2800\\nred\\n\") == \"red\"\nassert solution(\"3200\\ngreen\\n\") == \"green\"",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3200\\npink\\n\") == \"pink\"\nassert solution(\"2800\\npink\\n\") == \"red\"\nassert solution(\"a\\npink\\n\") == \"a is not less than 3200, so we print s = pink.\"\nassert solution(\"3000\\npink\\n\") == \"a is not less than 3200, so we print s = pink.\"\nassert solution(\"2500\\npink\\n\") == \"a is not less than 3200, so we print s = pink.\"",
        "num_ids_2": 36,
        "num_ids_4": 103
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"2000\\npink\") == \"red\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"12345\") == \"red\"\nassert solution(\"500\") == \"red\"\nassert solution(\"2800\") == \"red\"\nassert solution(\"3100\") == \"pink\"",
        "num_ids_2": 30,
        "num_ids_4": 55
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3200') == 'pink'\nassert solution('2800') =='red'\nassert solution('3000') =='red'\nassert solution('1000') =='red'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3200\\npink\\n\") == \"pink\"\nassert solution(stdin=\"2800\\npink\\n\") == \"red\"\nassert solution(stdin=\"3000\\npink\\n\") == \"red\"\nassert solution(stdin=\"1000\\npink\\n\") == \"red\"\nassert solution(stdin=\"300\\npink\\n\") == \"red\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nprint(\"a = 3200 is not less than 3200, so we print s = pink.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3200\\npink\\n\") == \"pink\"\nassert solution(\"2800\\napple\\n\") == \"apple\"\nassert solution(\"5000\\ncat\\n\") == \"red\"\nassert solution(\"3199\\ncat\\n\") == \"red\"\nassert solution(\"1\\nhello\\n\") == \"red\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3200\\npink') == 'pink\\na = 3200 is not less than 3200, so we print s = pink.'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3200\\npink\") == \"pink\", \"Expected output: pink, Actual output: None\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"ABC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1199\") == \"ABC\", \"Expected 'ABC' but got '{}'.\".format(solution(\"1199\"))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1199\\n\") == \"ABC\", \"Solution does not work\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1199\") == \"ABC\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1199\\n\") == \"ABC\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"9001\") == \"ABC\"\nassert solution(\"1200\") == \"ABC\"\nassert solution(\"1300\") == \"ABC\"\nassert solution(\"2800\") == \"ABC\"\nassert solution(\"4208\") == \"ABC\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1199\") == \"ABC\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1199\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1199\") == \"ABC\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1199\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"119\") == \"991\"\nassert solution(\"123\") == \"123\"\nassert solution(\"456\") == \"456\"\nassert solution(\"789\") == \"789\"\nassert solution(\"1011\") == \"1011\"\nassert solution(\"1234\") == \"1234\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"119\") == \"991\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"119\") == \"991\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"991\", \"Incorrect output\"\nprint(\"All tests passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '991', 'Testcase 1'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abbaac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"abac\\nac\\bcdaf\\nzzzzzzz\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"abac\"\nassert solution(input()) == \"ac\"\nassert solution(input()) == \"bcdaf\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == output_string, f\"Test case failed for input: {input_string}\" for input_string, output_string in [(\"abbaac\", \"abac\"), (\"ac\", \"ac\"), (\"bcdaf\", \"bccddaaf\")]",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'abac'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bccddaaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n\") == \"2\\n5\\n4\\n333\\n0\"\nassert solution(\"5\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"2\\n1\\n0\\n0\"\nassert solution(\"10 2\\n10 1\\n10 10\\n20 20\\n30 30\\n\") == \"0\\n0\\n1\\n1\"\nassert solution(\"5 2\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"0\\n0\\n0\\n0\"",
        "num_ids_2": 100,
        "num_ids_4": 194
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2', \"Test case 1 failed.\"\n\nassert solution() == '5', \"Test case 2 failed.\"\n\nassert solution() == '4', \"Test case 3 failed.\"\n\nassert solution() == '333', \"Test case 4 failed.\"\n\nassert solution() == '0', \"Test case 5 failed.\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2\\n5\\n4\\n333\\n0'\nassert solution(stdin) == '2\\n5\\n4\\n333\\n0'\nassert solution(stdin) == '2\\n5\\n4\\n333\\n0'\nassert solution(stdin) == '2\\n5\\n4\\n333\\n0'\nassert solution(stdin) == '2\\n5\\n4\\n333\\n0'",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: expected {expected_output}, got {solution(input())}\"\nfor i in range(int(stdin)):\n    a, b = map(int, input().split())\n    result = solution(input())\n    assert result == expected_output, f\"Test case {i+1} failed: expected {expected_output}, got {result}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n\") == \"2\\n5\\n4\\n333\\n0\\n\"\nassert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n1 4\\n\") == \"3\\n5\\n1\\n333\\n3\\n\"\nassert solution(\"1 4\\n\") == \"3\\n0\\n\"\nassert solution(\"1 4\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n\") == \"2\\n5\\n4\\n333\\n0\\n\"",
        "num_ids_2": 127,
        "num_ids_4": 212
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n\") == \"2\\n5\\n4\\n333\\n0\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n') == '2\\n5\\n4\\n333\\n0'\nassert solution('10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n') == '2\\n5\\n4\\n333\\n0'\nassert solution('10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n') == '2\\n5\\n4\\n333\\n0'\nassert solution('10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n') == '2\\n5\\n4\\n333\\n0'\nassert solution('10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n') == '2\\n5\\n4\\n333\\n0'",
        "num_ids_2": 118,
        "num_ids_4": 236
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n13\\n100\\n123\\n92\\n46\\n\") == \"2\\n5\\n4\\n333\\n0\\n\"\nassert solution(\"5\\n10\\n15\\n20\\n25\\n\") == \"0\\n\"\nassert solution(\"5\\n10\\n15\\n20\\n25\\n1000\\n\") == \"2\\n10\\n10\\n10\\n10\\n\"\nassert solution(\"5\\n10\\n15\\n20\\n25\\n1000000\\n\") == \"2\\n10\\n10\\n10\\n10\\n\"\nassert solution(\"2\\n10\\n15\\n20\\n25\\n\") == \"1\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 188
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect: {solution(input())}!= {output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2.666666666666667, \"Test case not correct\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 1 2\") == 2.666666666666667, \"The solution is incorrect.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 3) == 2.666666666666667\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n3 4 1 2') == '2.666666666666667'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n3 4 1 2\") == 2.666666666666667, \"The correct answer is 2.666666666666667, but it is incorrect. Please check the solution.\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 2.666666666666667\nassert solution(10) == 3.419311681662337\nassert solution(20) == 4.050839652328984\nassert solution(30) == 4.672367623004627\nassert solution(40) == 5.29389559367117\n\nfrom typing import List",
        "num_ids_2": 51,
        "num_ids_4": 103
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2.666666666666667, \"The solution is incorrect.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2.666666666666667, \"The solution should be 2.666666666666667\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n3 4 1 2') == '2.666666666666667', 'Test case 1 failed'\n\nsolution = '''\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2.666666666666667\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\", \"Test case 1 failed.\"\n\nassert solution() == \"NO\", \"Test case 2 failed.\"\n\nassert solution() == \"YES\", \"Test case 3 failed.\"\n\nassert solution() == \"NO\", \"Test case 4 failed.\"\n\nassert solution() == \"YES\", \"Test case 5 failed.\"\n\nassert solution() == \"NO\", \"Test case 6 failed.\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"YES\"\nassert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"NO\"\nassert solution(\"1 2 3 4 5\") == \"YES\"\nassert solution(\"1\") == \"NO\"",
        "num_ids_2": 242,
        "num_ids_4": 270
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"YES\"\nassert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"NO\"",
        "num_ids_2": 242,
        "num_ids_4": 242
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == expected, f\"Test Case {i+1} Failed: {solution(stdin=input())}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4') == 'YES'\nassert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4') == 'NO'",
        "num_ids_2": 242,
        "num_ids_4": 242
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\" or solution() == \"NO\", \"Incorrect answer\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4') == 'YES\\nNO\\nYES\\nYES\\nNO'",
        "num_ids_2": 136,
        "num_ids_4": 136
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"YES\\nNO\\nYES\\nYES\\nNO\\nYES\"",
        "num_ids_2": 139,
        "num_ids_4": 139
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4') == 'YES\\nNO\\nYES\\nYES\\nNO'\nassert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\\n3 2\\n2 1 3\\n2 1\\n3 2\\n1 2\\n') == 'NO'\nassert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\\n3 2\\n2 1 3\\n2 1\\n3 2\\n1 2\\n2 1 4\\n2 1\\n4 2\\n4 3\\n2\\n1\\n3\\n') == 'NO'\nassert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\\n3 2\\n2 1 3\\n2 1\\n3 2\\n1 2\\n2 1 4\\n2 1\\n4 2\\n4 3\\n2\\n1\\n3\\n2\\n1 4\\n') == 'YES'",
        "num_ids_2": 283,
        "num_ids_4": 653
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"YES\"\nassert solution(6) == \"YES\"\nassert solution(10) == \"YES\"\nassert solution(5) == \"NO\"\nassert solution(3) == \"YES\"\nassert solution(5) == \"NO\"\nassert solution(3) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(4)",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(input().strip())) == input().strip()\nprint(solution(input().strip()))",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"The solution for the given input should be 'bab'.\"\nassert solution(\"ooopppssss\") == \"oops\", \"The solution for the given input should be 'oops'.\"\nassert solution(\"z\") == \"z\", \"The solution for the given input should be 'z'.\"",
        "num_ids_2": 53,
        "num_ids_4": 76
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Got: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('baabbb') == 'bab', \"Incorrect answer: expected bab, got: \" + solution('baabbb')\nassert solution('ooopppssss') == 'oops', \"Incorrect answer: expected oops, got: \" + solution('ooopppssss')\nassert solution('z') == 'z', \"Incorrect answer: expected z, got: \" + solution('z')\n\nsolution = None",
        "num_ids_2": 63,
        "num_ids_4": 88
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"Incorrect result\"\nassert solution(\"ooopppssss\") == \"oops\", \"Incorrect result\"\nassert solution(\"z\") == \"z\", \"Incorrect result\"",
        "num_ids_2": 34,
        "num_ids_4": 48
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"Expected output: 'bab', got: '{}'\".format(solution(\"baabbb\"))\nassert solution(\"ooopppssss\") == \"oops\", \"Expected output: 'oops', got: '{}'\".format(solution(\"ooopppssss\"))\nassert solution(\"z\") == \"z\", \"Expected output: 'z', got: '{}'\".format(solution(\"z\"))",
        "num_ids_2": 66,
        "num_ids_4": 93
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6') == 'bab'\nassert solution('10') == 'oops'\nassert solution('1') == 'z'",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"Polycarp loves ciphers.\"\nassert solution(\"ooopppssss\") == \"oops\", \"The repeating cipher is used for strings.\"\nassert solution(\"z\") == \"z\", \"The key is the same as the string.\"\n\nfrom typing import List",
        "num_ids_2": 45,
        "num_ids_4": 65
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n') == '1\\n'\nassert solution('4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n') == '0\\n'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n') == '0\\n'\nassert solution('3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n') == '1\\n'\nassert solution('1 0\\n') == '0\\n'\nassert solution('5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n') == '2\\n'",
        "num_ids_2": 124,
        "num_ids_4": 198
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\\n\\n\\n\") == \"1\"\nassert solution(\"4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\\n\\n\\n\") == \"0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\\n\\n\\n\") == \"0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\n\\n\\n\") == \"1\"\nassert solution(\"1 0\\n\\n\\n\\n\") == \"0\"\nassert solution(\"5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\\n\\n\\n\") == \"2\"",
        "num_ids_2": 132,
        "num_ids_4": 214
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\") == \"1\\n\"\nassert solution(\"4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\") == \"1\\n\"\nassert solution(\"1 0\\n\") == \"0\\n\"\nassert solution(\"5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\") == \"2\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 198
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '1'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\") == \"1\\n\"\nassert solution(\"4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\") == \"1\\n\"\nassert solution(\"1 0\\n\") == \"0\\n\"\nassert solution(\"5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\") == \"2\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 198
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\") == \"1\\n\"\nassert solution(\"4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\") == \"1\\n\"\nassert solution(\"1 0\\n\") == \"0\\n\"\nassert solution(\"5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\") == \"2\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 198
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\", \"The solution is incorrect\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BRB\") == \"GRB\"\nassert solution(\"RGBGRBB\") == \"RGBRGBR\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1\\nGRB'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"1\"\nassert solution(7) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"1\\nGRB\"\nassert solution(7) == \"3\\nRGBRGBR\"\nassert solution(1) == \"1\\nGRB\"\nassert solution(4) == \"0\\n\"\nassert solution(5) == \"0\\n\"\nassert solution(6) == \"0\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1', 'Expected output \"1\", but got \"{}\"'.format(solution())  # expected output: \"1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BRB\") == 1\nassert solution(\"RGBGRBB\") == 3",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"52000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"56000.0\"\n",
        "num_ids_2": 98,
        "num_ids_4": 180
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"3\\n50000 JPY\\n0.50000000 BTC\") == \"160000.0\"\nassert solution(\"4\\n10000 JPY\\n0.50000000 BTC\") == \"320000.0\"\nassert solution(\"5\\n50000 JPY\\n0.10000000 BTC\") == \"500000.0\"\n\nprint(solution(input()))",
        "num_ids_2": 77,
        "num_ids_4": 155
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nprint(\"All tests passed\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.1000000",
        "num_ids_2": 94,
        "num_ids_4": 276
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2\n10000 JPY\n0.10000000 BTC\n''') == '48000.0'\nassert solution('''\n3\n5000 JPY\n0.25000000 BTC\n0.10000000 BTC\n''') == '45500.0'\nassert solution('''\n1\n10000 JPY\n0.10000000 BTC\n''') == '10000.0'\nassert solution('''\n2\n10000 JPY\n0.00000000 BTC\n''') == '0.0'\nassert solution('''\n2\n10000 JPY\n0.00000000 BTC\n''') == '0.0'\nassert solution('''\n2\n10000 JPY\n0.00000000 BTC\n''') == '0.0'\nassert solution('''\n2\n10000 JPY\n0.00000000 BTC\n''') == '0.0'\nassert solution('''\n2\n10000 JPY\n0.00000000 BTC\n''') == '0.0'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nprint(\"All tests passed!\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n",
        "num_ids_2": 98,
        "num_ids_4": 284
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000.1\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48001.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n1000",
        "num_ids_2": 98,
        "num_ids_4": 1027
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2') == '3'\nassert solution('1 1') == '1'\nassert solution('10 3') == '5'\nassert solution('3 2') == '1'\nassert solution('1 3') == '2'\n\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3\\n'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2') == '3\\n'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"3\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 ip cc') == 'icpc'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2ip cc\") == \"icpc\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2ip cc\") == \"icpc\", \"The output is not as expected.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ip cc\") == \"icpc\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ip cc\") == \"icpc\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'icpc', 'Test Failed'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nip cc\") == \"icpc\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nip cc\") == \"icpc\"\nassert solution(\"1\\nhello world\") == \"olleh\"\nassert solution(\"2\\na b c\") == \"cba\"\nassert solution(\"3\\nabc def\") == \"abcd\"\nassert solution(\"4\\nabcd\") == \"abcd\"",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ip cc\") == \"icpc\", \"Test failed.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"icpc\", \"Solution is not correct.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"\nassert solution(\"ABCD\") == \"No\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABA\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"\nassert solution(\"ABBC\") == \"No\\n\"\nassert solution(\"A\") == \"No\\n\"\nassert solution(\"ABBBB\") == \"No\\n\"\nassert solution(\"B\") == \"No\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"S\\n\")) == \"Yes\"\nprint(\"No\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('ABA') == 'Yes\\nCompany A operates Station 1 and 3, while Company B operates Station 2. There will be a bus service between Station 1 and 2, and between Station 2 and 3, so print Yes.'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"\nassert solution(\"ACB\") == \"No\\n\"\nassert solution(\"BAD\") == \"No\\n\"\nassert solution(\"ABCB\") == \"Yes\\n\"\nassert solution(\"BABA\") == \"Yes\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABA\") == \"Yes\\nCompany A operates Station 1 and 3, while Company B operates Station 2. There will be a bus service between Station 1 and 2, and between Station 2 and 3, so print Yes.\"\nassert solution(\"ABAB\") == \"No\\nThere is no pair of stations that will be connected by a bus service.\"\nassert solution(\"ABB\") == \"No\\nThere is no pair of stations that will be connected by a bus service.\"\nassert solution(\"BA\") == \"No\\nThere is no pair of stations that will be connected by a bus service.\"\nassert solution(\"ABBCA\") == \"Yes\\nCompany A operates Station 1 and 3, while Company B operates Station 2. There will be a bus service between Station 1 and 2, and between Station 2 and 3, so print Yes.\"",
        "num_ids_2": 86,
        "num_ids_4": 138
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABA\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('ABA') == 'Yes\\n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RRS\") == \"2\", \"The given solution is not correct.\"\nassert solution(\"RRR\") == \"1\", \"The given solution is not correct.\"\nassert solution(\"RRRR\") == \"1\", \"The given solution is not correct.\"\nassert solution(\"RAR\") == \"1\", \"The given solution is not correct.\"\nassert solution(\"RRAR\") == \"2\", \"The given solution is not correct.\"\nassert solution(\"RRRRR\") == \"2\", \"The given solution is not correct.\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRRR\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RRS\") == \"2\", \"The correct output should be '2'.\"\nprint(\"All test cases pass.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRRR\") == \"3\"\nassert solution(\"SRR\") == \"2\"\nassert solution(\"RRSS\") == \"3\"\nassert solution(\"RRRRRRRRRR\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RRS\") == \"2\", \"Expected output 2, got: \" + solution(\"RRS\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RRS\") == \"2\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RRS\") == \"2\", \"The output should be 2, but it is: \" + solution(\"RRS\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RRS\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRRRRRR\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RRS\") == \"2\", \"The output should be 2\"\nassert solution(\"RRRR\") == \"3\", \"The output should be 3\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '3 1 2', \"The correct output should be 3 1 2.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 6\") == \"6 4 5\"\nassert solution(\"7 8 9\") == \"9 7 8\"\nassert solution(\"10 11 12\") == \"12 10 11\"\nassert solution(\"13 14 15\") == \"15 13 14\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('4 5 6') == '6 4 5'\nassert solution('7 8 9') == '9 7 8'\nassert solution('10 11 12') == '12 10 11'\nassert solution('13 14 15') == '15 13 14'",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\", \"Incorrect output\"\nassert solution(\"4 5 6\") == \"6 4 5\", \"Incorrect output\"\nassert solution(\"7 8 9\") == \"9 7 8\", \"Incorrect output\"\nassert solution(\"10 11 12\") == \"12 10 11\", \"Incorrect output\"\nassert solution(\"13 14 15\") == \"15 13 14\", \"Incorrect output\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\", \"Expected output: 3 1 2, but got: \" + solution(\"1 2 3\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\\n\"\nassert solution(\"5 6 7\") == \"7 5 6\\n\"\nassert solution(\"8 9 10\") == \"10 8 9\\n\"\nassert solution(\"11 12 13\") == \"13 11 12\\n\"\nassert solution(\"14 15 16\") == \"16 14 15\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '3 1 2', \"Test 1 failed\"\nassert solution('4 5 6') == '6 5 4', \"Test 2 failed\"\nassert solution('7 8 9') == '9 8 7', \"Test 3 failed\"\nassert solution('10 11 12') == '12 11 10', \"Test 4 failed\"\nassert solution('13 14 15') == '15 14 13', \"Test 5 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '3 1 2\\n'\nassert solution('4 5 6') == '6 4 5\\n'\nassert solution('7 8 9') == '9 7 8\\n'\nassert solution('10 11 12') == '12 10 11\\n'\nassert solution('13 14 15') == '15 13 14\\n'",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"30 100\") == \"100\", \"Testcase 1 failed.\"\nassert solution(\"40 100\") == \"200\", \"Testcase 2 failed.\"\nassert solution(\"15 100\") == \"200\", \"Testcase 3 failed.\"\nassert solution(\"25 100\") == \"200\", \"Testcase 4 failed.\"\nassert solution(\"30 150\") == \"250\", \"Testcase 5 failed.\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('30 100') == '100'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('30 100') == '100'\nassert solution('5 20') == '125'\nassert solution('1 2') == '0'\nassert solution('50 500') == '2500'\nassert solution('1 2') == '0'\nassert solution('10 5') == '0'\nassert solution('1 2') == '0'\nassert solution('500 500') == '10000'\nassert solution('1 2') == '0'\nassert solution('10 5') == '0'\nassert solution('1 2') == '0'\nassert solution('500 500') == '10000'",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"30 100\") == \"100\", \"Output is incorrect.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"100\" # Takahashi is 30 years old now, and the cost of the Ferris wheel is 100 yen.",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"30 100\") == \"100\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"30 100\") == \"100\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"30 100\") == \"100\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"30 100\") == \"100\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"30 100\") == \"100\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+-+--\") == \"2\"\nassert solution(\"++++-\") == \"3\"\nassert solution(\"---+-\") == \"1\"\nassert solution(\"+++\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('+-++') == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('+') == '1'\nassert solution('-') == '0'\nassert solution('+-+-') == '2'\nassert solution('++') == '2'\nassert solution('+++') == '3'",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+-+-\") == \"1\"\nassert solution(\"+--\") == \"1\"\nassert solution(\"+++\") == \"2\"\nassert solution(\"----\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('+-++') == '2'\nprint('All tests passed!')",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"+-++\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-+-') == '2'\nassert solution('+-+++') == '2'\nassert solution('+-++++') == '2'\nassert solution('+-+++++') == '2'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('+++') == '2', \"The solution should be '2'.\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+-++\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/05/01\") == \"TBD\"\nassert solution(\"2020/01/01\") == \"TBD\"\nassert solution(\"2020/02/01\") == \"TBD\"\nassert solution(\"2019/05/30\") == \"TBD\"\nassert solution(\"2019/04/31\") == \"TBD\"\nassert solution(\"2018/01/01\") == \"TBD\"\nassert solution(\"2019/01/01\") == \"TBD\"\nassert solution(\"2019/13/31\") == \"TBD\"\nassert solution(\"2019/04/30 00:00:00\") == \"TBD\"\nassert solution(\"2019/04/30 00:00:01\") == \"Heisei\"\nassert solution(\"2019/04/30 23:59:59\") == \"Heisei\"\nassert solution(\"2019/05/01 00:00:00\") == \"TBD\"\nassert solution(\"2019/04/30 23:59:59.999\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:00\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:00.1\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:00.9\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:00.999\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.000\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.001\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.002\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.003\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.004\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.005\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.006\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.007\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.008\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.009\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.010\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.011\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.012\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.013\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.014\") == \"TBD\"\nassert solution(\"2019/04/30 24:00:01.015\") == \"TBD\"\nassert solution(\"2019/04/30",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Heisei\", \"Test case 1 failed\"\n\nprint(\"Test case 1 passed\")\n\nassert solution(input()) == \"TBD\", \"Test case 2 failed\"\n\nprint(\"Test case 2 passed\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2020/04/30\") == \"TBD\"\nassert solution(\"2019/04/31\") == \"TBD\"\nassert solution(\"2019/03/31\") == \"TBD\"\nassert solution(\"2019/01/31\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2018/12/31\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2018/12/31\") == \"TBD\"\nassert solution(\"2020/01/01\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 61
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2018/04/30') == 'TBD'\nassert solution('2019/03/30') == 'TBD'\nassert solution('2019/04/31') == 'TBD'\nassert solution('2018/04/31') == 'TBD'",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2018/12/31\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2019/04/30') == 'Heisei'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"1\", \"Test failed: solution 1\"\nassert solution(solution) == \"1\", \"Test failed: solution 2\"\nassert solution(solution) == \"1\", \"Test failed: solution 3\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output\nfor i in range(input.split('\\n')[-1].split()) - 1:\n    input = input.replace(f'a_{i}', f'a_{i+1}')\nprint(solution(input))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '3'\nassert solution(10) == '9'\nassert solution(18) == '14'",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(18) == 14, \"Test 1 failed\"\nassert solution(10) == 9, \"Test 2 failed\"\nassert solution(3) == 3, \"Test 3 failed\"",
        "num_ids_2": 35,
        "num_ids_4": 51
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\\n\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\\n\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\\n\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 103,
        "num_ids_4": 131
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"Input\\n18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\\n\") == \"14\"\nassert solution(r\"Input\\n10\\n6 6 6 3 6 1000000000 3 3 6 6\\n\") == \"9\"\nassert solution(r\"Input\\n3\\n1337 1337 1337\\n\") == \"3\"",
        "num_ids_2": 113,
        "num_ids_4": 146
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"14\"\n\nassert solution() == \"9\"\n\nassert solution() == \"3\"",
        "num_ids_2": 17,
        "num_ids_4": 25
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"",
        "num_ids_2": 99,
        "num_ids_4": 125
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\\n') == '14\\n'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6\\n') == '9\\n'\nassert solution('3\\n1337 1337 1337\\n') == '3\\n'",
        "num_ids_2": 107,
        "num_ids_4": 137
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"\n",
        "num_ids_2": 99,
        "num_ids_4": 125
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"3 4\\n1 2 3 4\\n\") == \"4\\n1 2 3 4\\n\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\\n\") == \"1\\n2 3 4 5 6 7 8 9 10\\n\"\nassert solution
        "num_ids_2": 81,
        "num_ids_4": 168
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\nassert solution('10 3\\n1 2 3\\n4 5 6\\n') == '3\\n2 1 4\\n'",
        "num_ids_2": 81,
        "num_ids_4": 119
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\"\nassert solution(\"10 2\\n1 2 2 1 1 1 1 1 1 1\\n\") == \"2\\n1\"",
        "num_ids_2": 77,
        "num_ids_4": 116
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2\\n2 1\\n'\n\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3\\n1 3 2\\n'\n\nassert solution('''\n1 2\n3 2 2 1\n''') == '2\\n1\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Solution failed. Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\n\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\n\nassert solution(\"3 3 2 2 1 1 1\\n1 2 3 3 2 1 3 3\\n\") == \"3\\n1 3 2\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 131
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\") == \"2\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\") == \"3\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1 \\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2 \\n\"\nassert solution(\"10 5\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2 \\n\"\nassert solution(\"5 10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"2\\n3 4 \\n1 2 5 6 3 4 10 9 \\n\"",
        "num_ids_2": 81,
        "num_ids_4": 188
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output is '{solution(input())}' but should be '{expected_output}'.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n-1\\n3\\n2\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"\nassert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10') == '1\\n-1\\n3\\n2'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"\nassert solution(\"1 2 3\\n4 5 6\\n7\") == \"-1\"\nassert solution(\"5 3\\n4 6 5\") == \"2\"",
        "num_ids_2": 71,
        "num_ids_4": 90
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"The output is incorrect. Expected: {expected_output}, but got: {solution(stdin)}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10') == '1\\n-1\\n3\\n2'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\").read()) == \"21\"\nassert solution(open(\"input2.txt\").read()) == \"0\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\") == 21\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\") == 0",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"21\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\") == \"21\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\") == \"0\"\n",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 3) == 0\nassert solution(4, 3) == 21\nassert solution(4, 5) == 10\nassert solution(3, 4) == 16",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\nfor i in range(len(input())):\n    assert input()[i] == output()[i]\nprint(\"All test cases passed\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\nOutput\\n21\\nInput\\n3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\nOutput\\n0\") == \"21\"\nassert solution(\"Input\\n3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\nOutput\\n0\") == \"0\"",
        "num_ids_2": 165,
        "num_ids_4": 165
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n\") == \"21\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n\") == \"0\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 21, \"Expected 21, got {}\".format(solution)\nassert solution == 0, \"Expected 0, got {}\".format(solution)",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'3\\n2 8 10') == b'2\\n2 2 1\\n2 3 2\\n0\\n'\nassert solution(b'4\\n1 1 1 1') == b'0\\n'\nassert solution(b'5\\n2 4 6 6 6') == b'2\\n1 2 3\\n1 1 2\\n'",
        "num_ids_2": 64,
        "num_ids_4": 104
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n5\\n2 4 6 6 6\\n\\nOutput\\n2\\n1 2 3\\n1 1 2\\n\\nInput\\n3\\n2 8 10\\n\\nOutput\\n2\\n2 2 1\\n2 3 2\\n\\nInput\\n4\\n1 1 1 1\\n\\nOutput\\n0\\ndef solution(stdin: str) -> str:\\n    pass') == 'Output\\n2\\n2 2 1\\n2 3 2\\n\\n'",
        "num_ids_2": 144,
        "num_ids_4": 144
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    5\n    2 4 6 6 6\n    '''\n) == '''\n2\n1 2 3 \n1 1 2 \n'''\n\nassert solution(\n    '''\n    3\n    2 8 10\n    '''\n) == '''\n2\n2 2 1 \n2 3 2 \n'''\n\nassert solution(\n    '''\n    4\n    1 1 1 1\n    '''\n) == '''\n0\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 4 6 6 6\") == \"2\\n1 2 3 \\n1 1 2 \\n\"\nassert solution(\"3\\n2 8 10\") == \"2\\n2 2 1 \\n2 3 2 \\n\"\nassert solution(\"4\\n1 1 1 1\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 71,
        "num_ids_4": 104
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 6 6 6\") == \"2\"\nassert solution(\"3 8 10\") == \"2\"\nassert solution(\"4 1 1 1\") == \"0\"",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 4 6 6 6\") == \"2\\n1 2 3 \\n1 1 2 \\n\"\nassert solution(\"3\\n2 8 10\") == \"2\\n2 2 1 \\n2 3 2 \\n\"\nassert solution(\"4\\n1 1 1 1\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 106
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 4 6 6 6') == '2\\n1 2 3\\n1 1 2\\n'\nassert solution('3\\n2 8 10') == '2\\n2 2 1\\n2 3 2\\n'\nassert solution('4\\n1 1 1 1') == '0\\n'",
        "num_ids_2": 71,
        "num_ids_4": 92
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 4 6 6 6\\n\") == \"2\\n1 2 3\\n1 1 2\\n\"\nassert solution(\"3\\n2 8 10\\n\") == \"2\\n2 2 1\\n2 3 2\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\\n\"\n",
        "num_ids_2": 75,
        "num_ids_4": 98
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"2\"\nassert solution(4) == \"2\"\nassert solution(5) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100010\") == \"1\"\nassert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"0\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10101\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"001\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"\") == \"0\"\nassert solution(\"10010001\") == \"0\"\nassert solution(\"10000010\") == \"0\"\nassert solution(\"00000000\") == \"0\"\nassert solution(\"00100000\") == \"0\"\nassert solution(\"10100100\") == \"0\"\nassert solution(\"10011001\") == \"0\"\nassert solution(\"11111111\") == \"0\"",
        "num_ids_2": 27,
        "num_ids_4": 51
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100010\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == 1\nassert solution(\"10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n10011001\\n11111111\\n10100100\\n1001",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100010\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\\n\") == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\n\nassert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 180,
        "num_ids_4": 180
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 1",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n2\\n1\\n1\\n1\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100010\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"100010\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"100010\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"100010\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 190,
        "num_ids_4": 380
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 1') == '3\\n1 4 5 '\nassert solution('6 1') == '4\\n1 3 5 6 '\nassert solution('7 2') == '3\\n4 6 7 '\nassert solution('9 11') == '3\\n1 4 5 '\nassert solution('8 9') == '3\\n1 4 5 '\nassert solution('7 8') == '3\\n1 4 5 '\nassert solution('9 11') == '3\\n1 4 5 '\nassert solution('7 9') == '4\\n1 3 5 6 '",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 1') == '3\\n1 4 5\\n'\nassert solution('6 1') == '4\\n1 3 5 6\\n'\nassert solution('7 2') == '3\\n4 5 6\\n'\nassert solution('9 11') == '3\\n4 5 6\\n'\nassert solution('8 9') == '3\\n4 5 6\\n'\nassert solution('7 8') == '4\\n5 6 7\\n'\nassert solution('9 11') == '3\\n4 5 6\\n'\nassert solution('7 9') == '4\\n5 6 7\\n'",
        "num_ids_2": 44,
        "num_ids_4": 87
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Output\\n3\\n4 6 7 \\n3\\n1 4 5 \\n4\\n1 3 5 6\\n\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\"",
        "num_ids_2": 97,
        "num_ids_4": 141
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3\\n4 6 7\\n1\\n2\\n'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6) == '''4\n1 3 5 6'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n4 6 7\"\nassert solution() == \"3\\n1 4 5\"\nassert solution() == \"4\\n1 3 5 6\"",
        "num_ids_2": 30,
        "num_ids_4": 47
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'Output'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"30\n31\n10\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6\") == \"30\\n31\\n10\"\nassert solution(\"3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6\") == \"30\\n31\\n10\"\nassert solution(\"3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6\") == \"30\\n31\\n10\"",
        "num_ids_2": 116,
        "num_ids_4": 174
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"output\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"30\n31\n10\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Incorrect output.\\nExpected: {expected_output}\\nReceived: {solution(stdin)}\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"30\\n31\\n10\"\nassert solution(\"3\") == \"30\\n31\"\nassert solution(\"1\") == \"10\"",
        "num_ids_2": 34,
        "num_ids_4": 45
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '30\\n31\\n10'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == '''30\n31\n10\n'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n2\\n1\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. Output: {output}, Expected: {input()}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2\\n1\\n2\\n1\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nprint(\"OK\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"1\\n1\\n\"\nassert solution(\"20\") == \"1\\n2\\n\"\nassert solution(\"30\") == \"1\\n1\\n1\\n1\\n\"\nassert solution(\"40\") == \"2\\n2\\n2\\n2\\n\"\nassert solution(\"50\") == \"2\\n2\\n2\\n1\\n\"\nassert solution(\"60\") == \"2\\n2\\n1\\n1\\n2\\n\"\nassert solution(\"70\") == \"1\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"80\") == \"2\\n1\\n2\\n2\\n2\\n1\\n\"\nassert solution(\"90\") == \"2\\n1\\n1\\n1\\n2\\n2\\n\"\nassert solution(\"100\") == \"2\\n1\\n1\\n2\\n1\\n2\\n\"\nassert solution(\"110\") == \"2\\n1\\n2\\n1\\n2\\n1\\n2\\n\"\nassert solution(\"120\") == \"2\\n1\\n1\\n2\\n1\\n1\\n2\\n\"\nassert solution(\"130\") == \"2\\n1\\n2\\n1\\n1\\n2\\n2\\n\"\nassert solution(\"140\") == \"2\\n2\\n2\\n1\\n1\\n2\\n1\\n\"\nassert solution(\"150\") == \"2\\n2\\n2\\n1\\n2\\n1\\n1\\n\"\nassert solution(\"160\") == \"2\\n2\\n1\\n1\\n2\\n2\\n2\\n\"\nassert solution(\"170\") == \"2\\n1\\n1\\n2\\n2\\n2\\n1\\n\"\nassert solution(\"180\") == \"2\\n1\\n1\\n1\\n1\\n1\\n2\\n\"\nassert solution(\"190\") == \"2\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n\"\nassert solution(\"200\") == \"1\\n1\\n1\\n2\\n2\\n2\\n2\\n\"\nassert solution(\"210\") == \"2\\n2\\n1\\n2\\n1\\n1\\n1\\n2\\n\"\nassert solution(\"220\") == \"2\\n1\\n1\\n1\\n1\\n2\\n1\\n2\\n\"\nassert solution(\"230\") == \"2\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n\"\nassert solution(\"240\") == \"2\\n2\\n2\\n2\\n1\\n1\\n1\\n2\\n\"\nassert solution(\"250\") == \"2\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n\"\nassert solution(\"260\") == \"2\\n1\\n2\\n2\\n2\\n1\\n1\\n2\\n\"\nassert solution(\"270\") == \"2\\n1\\n2\\n1\\n2\\n2\\n2\\n1\\n\"\nassert solution(\"280\") == \"2\\n1\\n1\\n2\\n2\\n1\\n2\\n2\\n\"\nassert solution(\"290\") == \"2\\n1\\n2\\n1\\n1\\n2\\n1\\n2\\n\"\nassert solution(\"300\") == \"1\\n1\\n1\\n1\\n1\\n2\\n2\\n\"\nassert solution(\"310\") == \"2\\n1\\n1\\n2\\n2\\n1\\n1\\n1\\n2\\n\"\nassert solution(\"320\") == \"2\\n1\\n1\\n1\\n2\\n1\\n2\\n1\\n\"\nassert solution(\"330\") == \"2\\n2\\n1\\n1\\n1\\n1\\n2\\n1\\n\"\nassert solution(\"340\") == \"2\\n",
        "num_ids_2": 32,
        "num_ids_4": 76
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"2\n1\n2\n1\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n2\\n1\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"\n2\n1\n2\n1\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n2\\n1\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n1\\n2\\n1\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, \"Your code is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case} failed with output {solution(input())} and expected output {expected_output}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1, 2, 3, 4) == 'YES'\nassert solution(1, 2, 3, 6) == 'NO'\nassert solution(5, 2, 6, 27) == 'NO'\nassert solution(3, 3, 5, 18) == 'YES'",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\\n\") == \"YES\\nNO\\nNO\\nYES\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\nr'''\n4\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES'\n\nassert solution(\nr'''\n4\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'NO'\n\nassert solution(\nr'''\n4\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'NO'\n\nassert solution(\nr'''\n4\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == expected_output, f\"Test {test_case_id + 1} failed. Expected output: {expected_output}, got: {solution(stdin: str)}\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\") == \"YES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES' or solution(stdin) == 'NO', \"Please provide the correct input for test case #1.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1, 2, 3, 4) == 'YES'\nassert solution(1, 2, 3, 6) == 'NO'\nassert solution(5, 2, 6, 27) == 'NO'\nassert solution(3, 3, 5, 18) == 'YES'",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \\n\"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\"\n",
        "num_ids_2": 88,
        "num_ids_4": 133
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \\n\"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \\n\"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\\n\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 139
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('YES\\n2\\n3 7\\n5\\n7 4 3 2 1\\nYES\\n0\\n1\\n3\\n4\\n5 4 3 1\\nNO\\n') == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1\\nYES\\n0\\n1\\n3\\n4\\n5 4 3 1\\nNO\\n\"\nassert solution('YES\\n1\\n3\\n4\\n5 4 3 1\\nNO\\n') == \"YES\\n1\\n3\\n4\\n5 4 3 1\\nNO\\n\"\nassert solution('YES\\n0\\n1\\n3\\n4\\n5 4 3 1\\nNO\\n') == \"YES\\n0\\n1\\n3\\n4\\n5 4 3 1\\nNO\\n\"\nassert solution('NO\\n') == \"NO\\n\"",
        "num_ids_2": 168,
        "num_ids_4": 244
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\\n3\\n4\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\"",
        "num_ids_2": 86,
        "num_ids_4": 131
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"\n5\n4 3 2 1 0\n\"\"\") == \"YES\\n3\\n3 2\\n2 1\\n1 0\\n\"\n\nassert solution(r\"\"\"\n5\n1 1 2 1 2\n\"\"\") == \"NO\\n\"\n\nassert solution(r\"\"\"\n7\n7 2 7 3 3 1 4\n\"\"\") == \"YES\\n3\\n3 2\\n2 1\\n1 0\\n\"\n\nassert solution(r\"\"\"\n5\n4 3 1 5 3\n\"\"\") == \"YES\\n1\\n3\\n\"\n\nassert solution(r\"\"\"\n5\n1 1 2 1 2\n\"\"\") == \"NO\\n\"\n\nassert solution(r\"\"\"\n5\n0 1 2 3 4\n\"\"\") == \"YES\\n0\\n\"\n\nassert solution(r\"\"\"\n5\n4 3 2 1 0\n\"\"\") == \"YES\\n3\\n3 2\\n2 1\\n1 0\\n\"\n\nassert solution(r\"\"\"\n5\n1 1 2 1 2\n\"\"\") == \"NO\\n\"\n\nassert solution(r\"\"\"\n5\n0 1 2 3 4\n\"\"\") == \"YES\\n0\\n\"\n\nassert solution(r\"\"\"\n5\n4 3 2 1 0\n\"\"\") == \"YES\\n3\\n3 2\\n2 1\\n1 0\\n\"\n\nassert solution(r\"\"\"\n5\n1 1 2 1 2\n\"\"\") == \"NO\\n\"\n\nassert solution(r\"\"\"\n5\n0 1 2 3 4\n\"\"\") == \"YES\\n0\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, Actual: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"7\n7 2 7 3 3 1 4\"\"\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1\"\n\nassert solution(\"\"\"5\n4 3 1 5 3\"\"\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\n\nassert solution(\"\"\"5\n1 1 2 1 2\"\"\") == \"NO\"\n\nassert solution(\"\"\"5\n0 1 2 3 4\"\"\") == \"YES\\n0\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output\\nExpected: {expected_output}\\nGot: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\") == \"18\"\nassert solution(\"Input\\n5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == \"8\"\nassert solution(\"Input\\n5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"-1\"",
        "num_ids_2": 126,
        "num_ids_4": 178
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 18\nassert solution == -1\nassert solution == 8",
        "num_ids_2": 13,
        "num_ids_4": 19
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '18', 'Expected output: \"18\", but got: \"{}\"'.format(solution())",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == \"8\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"-1\"",
        "num_ids_2": 120,
        "num_ids_4": 169
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == '18'\n\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == '8'\n\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '-1'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == 18\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\") == 8\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\") == -1",
        "num_ids_2": 114,
        "num_ids_4": 160
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\") == \"8\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\") == \"-1\"",
        "num_ids_2": 116,
        "num_ids_4": 163
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == 18\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\") == 8\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\") == -1",
        "num_ids_2": 114,
        "num_ids_4": 160
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == 18\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\") == 8\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\") == -1\n",
        "num_ids_2": 114,
        "num_ids_4": 160
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n6\\n-1\\n7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n6\\n-1\\n7\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == expected",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"2\\n6\\n-1\\n7\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"2\\n6\\n-1\\n7\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\" # test case 1\nassert solution() == \"6\" # test case 2\nassert solution() == \"-1\" # test case 3\nassert solution() == \"7\" # test case 4\nassert solution() == \"6\" # test case 5\nassert solution() == \"6\" # test case 6",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"2\\n6\\n-1\\n7\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n\") == \"2\\n6\\n-1\\n7\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Incorrect solution\"\nassert solution() == 6, \"Incorrect solution\"\nassert solution() == -1, \"Incorrect solution\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n6\\n-1\\n7\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('12') == '0'\nassert solution('15') == '3'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 8 15 16 23\") == \"5\\n\"\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\") == \"0\\n\"\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\") == \"3\\n\"\n\nfrom typing import List",
        "num_ids_2": 72,
        "num_ids_4": 125
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 8 15 16 23\\n\") == \"5\\n\"\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\\n\") == \"0\\n\"\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n\") == \"3\\n\"\n",
        "num_ids_2": 76,
        "num_ids_4": 131
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 8 15 16 23\") == \"5\\n\"\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\") == \"0\\n\"\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\") == \"3\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 125
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 8 15 16 23\") == \"5\"\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\") == \"0\"\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\") == \"3\"",
        "num_ids_2": 68,
        "num_ids_4": 119
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"5\\n4 8 15 16 23\\n\") == \"5\\n\"\nassert solution(stdin=\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\\n\") == \"0\\n\"\nassert solution(stdin=\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n\") == \"3\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 137
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == 5, \"The expected output is not correct. Please provide the correct solution\"\nassert solution(12) == 0, \"The expected output is not correct. Please provide the correct solution\"\nassert solution(15) == 3, \"The expected output is not correct. Please provide the correct solution\"",
        "num_ids_2": 49,
        "num_ids_4": 74
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == 5\nassert solution(12) == 0\nassert solution(15) == 3",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n4 8 15 16 23\\n') == 5\nassert solution('12\\n4 8 4 15 16 8 23 15 16 42 23 42\\n') == 0\nassert solution('15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n') == 3",
        "num_ids_2": 70,
        "num_ids_4": 122
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 8 15 16 23\") == \"5\\n\"\nassert solution(\"12\") == \"0\\n\"\nassert solution(\"15\") == \"3\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 49
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '0'\n\nt = int(stdin.readline().strip())\nfor _ in range(t):\n    a, b = map(int, stdin.readline().strip().split())\n    k = int(input())\n    moves = 0\n    if a >= b:\n        moves += 1\n        a += k\n    else:\n        moves += 1\n        a -= k\n    print(moves)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '0\\n'\n\nassert solution() == '3\\n'\n\nassert solution() == '2\\n'\n\nassert solution() == '92\\n'\n\nassert solution() == '87654322\\n'\n\nassert solution() == '9150\\n'\n\nassert solution() == '0\\n'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"92\"\nassert solution(stdin) == \"87654322\"\nassert solution(stdin) == \"9150\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0\"\nassert solution() == \"3\"\nassert solution() == \"2\"\nassert solution() == \"92\"\nassert solution() == \"87654322\"\nassert solution() == \"9150\"",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '0\\n3\\n2\\n92\\n87654322\\n9150'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0\\n3\\n2\\n92\\n87654322\\n9150'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"0\"\nassert solution(1) == \"0\"\nassert solution(2) == \"0\"\nassert solution(3) == \"0\"\nassert solution(4) == \"0\"\nassert solution(5) == \"0\"\n\nfor i in range(6):\n    assert solution(i+1) == str(i+1)\n\nassert solution(5) == \"0\"\nassert solution(6) == \"1\"\nassert solution(7) == \"2\"\nassert solution(8) == \"2\"\nassert solution(9) == \"2\"\nassert solution(10) == \"2\"\n\nassert solution(11) == \"2\"\nassert solution(12) == \"3\"\nassert solution(13) == \"4\"\nassert solution(14) == \"4\"\nassert solution(15) == \"4\"\nassert solution(16) == \"4\"\n\nassert solution(17) == \"4\"\nassert solution(18) == \"4\"\nassert solution(19) == \"4\"\nassert solution(20) == \"4\"\nassert solution(21) == \"4\"\nassert solution(22) == \"4\"\n\nassert solution(23) == \"5\"\nassert solution(24) == \"6\"\nassert solution(25) == \"6\"\nassert solution(26) == \"6\"\nassert solution(27) == \"6\"\nassert solution(28) == \"6\"\n\nassert solution(29) == \"6\"\nassert solution(30) == \"7\"\nassert solution(31) == \"7\"\nassert solution(32) == \"7\"\nassert solution(33) == \"7\"\nassert solution(34) == \"7\"\n\nassert solution(35) == \"7\"\nassert solution(36) == \"8\"\nassert solution(37) == \"8\"\nassert solution(38) == \"8\"\nassert solution(39) == \"8\"\nassert solution(40) == \"8\"\n\nassert solution(41) == \"8\"\nassert solution(42) == \"9\"\nassert solution(43) == \"9\"\nassert solution(44) == \"9\"\nassert solution(45) == \"9\"\nassert solution(46) == \"9\"\n\nassert solution(47) == \"9\"\nassert solution(48) == \"10\"\nassert solution(49) == \"10\"\nassert solution(50) == \"10\"\nassert solution(51) == \"10\"\nassert solution(52) == \"10\"\n\nassert solution(53) == \"10\"\nassert solution(54) == \"11\"\nassert solution(55) == \"11\"\nassert solution(56) == \"11\"\nassert solution(57) == \"11\"\nassert solution(58) == \"11\"\n\nassert solution(59) == \"11\"\nassert solution(60) == \"12\"\nassert solution(61) == \"12\"\nassert solution(62) == \"12\"\nassert solution(63) == \"12\"\nassert solution(64) == \"12\"\n\nassert solution(65) == \"12\"\nassert solution(66) == \"13\"\nassert solution(67) == \"13\"\nassert solution(68) == \"13\"\nassert solution(69) == \"13\"\nassert solution(70) == \"13\"\n\nassert solution(71) == \"13\"\nassert solution(72) == \"14\"\nassert solution(73) == \"14\"\nassert solution(74) == \"14\"\nassert solution(75) == \"14\"\nassert solution(76) == \"14\"\n\nassert solution(77) == \"14\"\nassert solution(78) == \"15\"\nassert solution(79) == \"15\"\nassert solution(80) == \"15\"\nassert solution(81) == \"15\"\nassert solution(82) == \"15\"\n\nassert solution(83) == \"15\"\nassert solution(84) == \"16\"\nassert solution(85) == \"16\"\nassert solution(8",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"\n\nassert solution(\"1\") == \"0\\n1\\n0\"\n\nassert solution(\"3\\n5\\n7\\n9\\n11\") == \"0\\n3\\n2\\n6\\n5\\n4\"",
        "num_ids_2": 112,
        "num_ids_4": 150
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n5\\n12345\\n5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n\") == \"12339\\n\"\nassert solution(\"5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n\") == \"0\\n\"\nassert solution(\"1762\\n5\\n12345\\n5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n\") == \"15\\n\"\nassert solution(\"54306\\n999999995\\n185\\n999999998\\n\") == \"54306\\n\"",
        "num_ids_2": 187,
        "num_ids_4": 338
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '12339', 'Your solution is not correct. It should return 12339'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected_output, f\"Test case {test_case_number}: Output does not match the expected output.\" for test_case_number, (input, expected_output) in enumerate(test_cases)",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998'",
        "num_ids_2": 140,
        "num_ids_4": 140
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n5\\n12345\\n5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n\"\n",
        "num_ids_2": 143,
        "num_ids_4": 143
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n5\\n12345\\n5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n\") == \"12339\\n\"\nassert solution(\"5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n\") == \"0\\n\"\nassert solution(\"1762\\n15\\n187\\n12345\\n54321\\n999999998\\n1000000000\\n10\\n5\\n0\\n4\\n\") == \"15\\n\"\nassert solution(\"2\\n0\\n999999999\\n\") == \"999999995\\n\"",
        "num_ids_2": 187,
        "num_ids_4": 300
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '12339'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7\\n5\\n12345\\n5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n'",
        "num_ids_2": 141,
        "num_ids_4": 141
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Testcase failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\"",
        "num_ids_2": 58,
        "num_ids_4": 85
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == '6\\n'\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8\\n'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4\\n'",
        "num_ids_2": 62,
        "num_ids_4": 91
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''7 2\n1 2 2 3 2 4 10''') == '6'\nassert solution('''8 2\n1 2 2 3 2 4 6 10''') == '8'\nassert solution('''7 3\n1 2 2 3 2 4 5''') == '4'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\"",
        "num_ids_2": 58,
        "num_ids_4": 85
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"TODO\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"The solution is incorrect. Expected: {expected}, but got: {solution(input())}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"Output\\n4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\"\n\nsolution(\"7 2\\n1 2 2 3 2 4 10\") # Output: 6\nsolution(\"8 2\\n1 2 2 3 2 4 6 10\") # Output: 8\nsolution(\"7 3\\n1 2 2 3 2 4 5\") # Output: 4",
        "num_ids_2": 58,
        "num_ids_4": 85
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()}, output {output()}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\"",
        "num_ids_2": 58,
        "num_ids_4": 85
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"\nassert solution(\"4 2\\nABCD\") == \"abCd\"\nassert solution(\"5 3\\nABCD\") == \"abCd\"\nassert solution(\"6 4\\nABCD\") == \"abCd\"\nassert solution(\"7 5\\nABCD\") == \"abCd\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1\\nABC\\n') == 'aBC\\n'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\nABC\\n\") == \"aBC\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"aBC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"\nassert solution(\"4 3\\n\") == \"\"\"\nassert solution(\"5 2\\nA\") == \"Aa\"\nassert solution(\"5 4\\nA\") == \"Aa\"\nassert solution(\"5 5\\nA\") == \"Aa\"\nassert solution(\"5 6\\nA\") == \"Aa\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"\nassert solution(\"4 1\\nABC\") == \"aBC\"\nassert solution(\"5 1\\nABC\") == \"aBC\"\nassert solution(\"6 1\\nABC\") == \"aBC\"\nassert solution(\"7 1\\nABC\") == \"aBC\"\n\nfrom typing import IO\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n4\\n6\\n1\\n5\\n2\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"\nassert solution(\"python 100\\njava 90\\njavascript 80\\nsql 70\\npython 60\\njava 50\\njavascript 40\\nsql 30\\npython 20\\njava 10\\njavascript 5\\nsql 5\\n\") == \"3\\n6\\n1\\n5\\n2\\n\"",
        "num_ids_2": 168,
        "num_ids_4": 168
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\"\nassert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'6\\nhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution(r'6\\nhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'\nassert solution(r'6\\nhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'",
        "num_ids_2": 146,
        "num_ids_4": 219
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"\nassert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 900\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"3 900\") == \"Yes\"\nassert solution(\"5 900\") == \"No\"\nassert solution(\"7 900\") == \"Yes\"\nassert solution(\"8 900\") == \"No\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"3 1000\") == \"No\"\nassert solution(\"4 5000\") == \"Yes\"\nassert solution(\"1 1000\") == \"No\"\nassert solution(\"1 100\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nprint(\"All tests passed\")",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"3 500\") == \"No\"\nassert solution(\"4 500\") == \"No\"\nassert solution(\"5 900\") == \"Yes\"\nassert solution(\"6 900\") == \"Yes\"\nassert solution(\"7 500\") == \"No\"\nassert solution(\"8 500\") == \"No\"\nassert solution(\"9 900\") == \"Yes\"\nassert solution(\"10 900\") == \"Yes\"\nassert solution(\"11 500\") == \"No\"\nassert solution(\"12 500\") == \"No\"\nassert solution(\"13 900\") == \"Yes\"\nassert solution(\"14 900\") == \"Yes\"\nassert solution(\"15 500\") == \"No\"\nassert solution(\"16 500\") == \"No\"\nassert solution(\"17 900\") == \"Yes\"\nassert solution(\"18 900\") == \"Yes\"\nassert solution(\"19 500\") == \"No\"\nassert solution(\"20 500\") == \"No\"\nassert solution(\"21 900\") == \"Yes\"\nassert solution(\"22 900\") == \"Yes\"\nassert solution(\"23 500\") == \"No\"\nassert solution(\"24 500\") == \"No\"\nassert solution(\"25 900\") == \"Yes\"\nassert solution(\"26 900\") == \"Yes\"\nassert solution(\"27 500\") == \"No\"\nassert solution(\"28 500\") == \"No\"\nassert solution(\"29 900\") == \"Yes\"\nassert solution(\"30 900\") == \"Yes\"\nassert solution(\"31 500\") == \"No\"\nassert solution(\"32 500\") == \"No\"\nassert solution(\"33 900\") == \"Yes\"\nassert solution(\"34 900\") == \"Yes\"\nassert solution(\"35 500\") == \"No\"\nassert solution(\"36 500\") == \"No\"\nassert solution(\"37 900\") == \"Yes\"\nassert solution(\"38 900\") == \"Yes\"\nassert solution(\"39 500\") == \"No\"\nassert solution(\"40 500\") == \"No\"\nassert solution(\"41 900\") == \"Yes\"\nassert solution(\"42 900\") == \"Yes\"\nassert solution(\"43 500\") == \"No\"\nassert solution(\"44 500\") == \"No\"\nassert solution(\"45 900\") == \"Yes\"\nassert solution(\"46 900\") == \"Yes\"\nassert solution(\"47 500\") == \"No\"\nassert solution(\"48 500\") == \"No\"\nassert solution(\"49 900\") == \"Yes\"\nassert solution(\"50 900\") == \"Yes\"\nassert solution(\"51 500\") == \"No\"\nassert solution(\"52 500\") == \"No\"\nassert solution(\"53 900\") == \"Yes\"\nassert solution(\"54 900\") == \"Yes\"\nassert solution(\"55 500\") == \"No\"\nassert solution(\"56 500\") == \"No\"\nassert solution(\"57 900\") == \"Yes\"\nassert solution(\"58 900\") == \"Yes\"\nassert solution(\"59 500\") == \"No\"\nassert solution(\"60 500\") == \"No\"\nassert solution(\"61 900\") == \"Yes\"\nassert solution(\"62 900\") == \"Yes\"\nassert solution(\"63 500\") == \"No\"\nassert solution(\"64 500\") == \"No\"\nassert solution(\"65 900\") == \"Yes\"\nassert solution(\"66 900\") == \"Yes\"\nassert solution(\"67 500\") == \"No\"\nassert solution(\"68 500\") == \"No\"\nassert solution(\"69 900\") == \"Yes\"\nassert solution(\"70 900\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 900\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"4 500\") == \"No\"\nassert solution(\"5 1000\") == \"No\"\nassert solution(\"10 1000\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 900\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\"\nassert solution(\"2 500\") == \"No\\n\"\nassert solution(\"1 100\") == \"Yes\\n\"\nassert solution(\"3 100\") == \"No\\n\"\nassert solution(\"5 100\") == \"No\\n\"\nassert solution(\"7 100\") == \"No\\n\"\nassert solution(\"100 100\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\"\nassert solution(\"2 800\") == \"No\\n\"\nassert solution(\"3 1000\") == \"Yes\\n\"\nassert solution(\"5 1000\") == \"Yes\\n\"\nassert solution(\"1 1000\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.145833333333\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 10') == '0.1458333333'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='3 10\\n') == '0.145833333333'\nassert solution(stdin='5 5\\n') == '0.0'\nassert solution(stdin='1 1\\n') == '1.0'",
        "num_ids_2": 48,
        "num_ids_4": 66
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\\n\", \"Incorrect output for sample input.\"\nassert solution(\"4 10\") == \"0.145833333333\\n\", \"Incorrect output for sample input.\"\nassert solution(\"5 10\") == \"0.145833333333\\n\", \"Incorrect output for sample input.\"\nassert solution(\"6 10\") == \"0.145833333333\\n\", \"Incorrect output for sample input.\"\nassert solution(\"7 10\") == \"0.145833333333\\n\", \"Incorrect output for sample input.\"\nassert solution(\"8 10\") == \"0.145833333333\\n\", \"Incorrect output for sample input.\"\nassert solution(\"9 10\") == \"0.145833333333\\n\", \"Incorrect output for sample input.\"\nassert solution(\"10 10\") == \"0.145833333333\\n\", \"Incorrect output for sample input.\"\nassert solution(\"1 10\") == \"0.145833333333\\n\", \"Incorrect output for sample input.\"\nassert solution(\"1 5\") == \"0.291666666667\\n\", \"Incorrect output for sample input.\"\nassert solution(\"10 5\") == \"0.145833333333\\n\", \"Incorrect output for sample input.\"\nassert solution(\"5 5\") == \"0.583333333333\\n\", \"Incorrect output for sample input.\"\nassert solution(\"10 100\") == \"0.145833333333\\n\", \"Incorrect output for sample input.\"\nassert solution(\"100 100\") == \"0.145833333333\\n\", \"Incorrect output for sample input.\"\nassert solution(\"10000 10000\") == \"0.145833333333\\n\", \"Incorrect output for sample input.\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\\n\"\nassert solution(\"2 10\") == \"0.145833333333\\n\"\nassert solution(\"3 8\") == \"0.145833333333\\n\"\nassert solution(\"4 10\") == \"0.145833333333\\n\"\nassert solution(\"10 20\") == \"0.145833333333\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 111
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"10 3\") == \"0.145833333333\"\nassert solution(\"1 2\") == \"0.145833333333\"\nassert solution(\"10 30\") == \"0.145833333333\"\nassert solution(\"100 100\") == \"0.145833333333\"\nprint(\"All tests passed!\")",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 10') == '0.1458333333'\nassert solution('5 7') == '0.0000000000'\nassert solution('6 10') == '0.0000000000'\nassert solution('2 10') == '0.1458333333'\nassert solution('1 10') == '0.0000000000'",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"SAT\") == \"1\\n\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"SAT\") == \"1\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"SAT\") == \"1\\n\", \"Solution should return 1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\nassert solution(\"FRI\") == \"6\"\nassert solution(\"SAT\") == \"0\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"SAT\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"SAT\") == \"1\", \"Test case 1 failed\"\nassert solution(\"MON\") == \"2\", \"Test case 2 failed\"\nassert solution(\"TUE\") == \"2\", \"Test case 3 failed\"\nassert solution(\"WED\") == \"3\", \"Test case 4 failed\"\nassert solution(\"THU\") == \"3\", \"Test case 5 failed\"\nassert solution(\"FRI\") == \"4\", \"Test case 6 failed\"\nassert solution(\"SAT\") == \"1\", \"Test case 7 failed\"\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('SAT') == '1', \"Test case 1: Saturday\"\nassert solution('SUN') == '0', \"Test case 2: Sunday\"\nassert solution('FRI') == '0', \"Test case 3: Friday\"\nassert solution('SAT') == '1', \"Test case 4: Saturday\"\nassert solution('MON') == '1', \"Test case 5: Monday\"\nassert solution('THU') == '1', \"Test case 6: Thursday\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"SAT\") == \"1\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"SAT\") == \"1\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"SAT\") == \"1\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\nprint(f\"{solution(input())}\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"5 100 10\") == \"100\\n150\\n200\\n300\\n500\"\nassert solution(\"5 100 500\") == \"500\\n1000\\n1500\\n2000\\n3000\"\nassert solution(\"5 100 1000\") == \"1000\\n1500\\n2000\\n3000\\n5000\"\nassert solution(\"5 100 10000\") == \"10000\\n15000\\n20000\\n30000\\n50000\"",
        "num_ids_2": 104,
        "num_ids_4": 194
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"\nassert solution(\"1000 200 1\") == \"1000\\n2000\\n1\\n200\\n10\\n5\\n3\\n2\\n1\\n\"\nassert solution(\"4 100 200\") == \"100\\n200\\n400\\n800\\n1600\\n3200\\n6400\\n12800\\n25600\\n51200\\n102400\\n\"",
        "num_ids_2": 121,
        "num_ids_4": 205
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"\n\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: '{expected}', Received: '{solution(input())}'\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input\\n5\\n1 3 1 1 4\\n') == '5\\n'\nassert solution('Input\\n5\\n1 3 2 1 4\\n') == '4\\n'\nassert solution('Input\\n3\\n4 1 2\\n') == '0\\n'",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 3 1 1 4\") == \"5\"\nassert solution(\"5\\n1 3 2 1 4\") == \"4\"\nassert solution(\"3\\n4 1 2\") == \"0\"",
        "num_ids_2": 42,
        "num_ids_4": 59
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5, \"The solution should be 5\"\nassert solution() == 4, \"The solution should be 4\"\nassert solution() == 0, \"The solution should be 0\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == 5\nassert solution(5) == 5\nassert solution(3) == 0",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"4\"\nassert solution(4) == \"5\"\nassert solution(5) == \"0\"\nassert solution(6) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n5\\n1 3 2 1 4\\n3\\n4 1 2\\n0\") == \"5\\n4\\n0\"\nassert solution(\"5\\n1 3 2 1 4\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\") == \"5\\n4\\n3\\n4\"\nassert solution(\"3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\") == \"0\"\nassert solution(\"3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\n4 1 2\\n3\\",
        "num_ids_2": 114,
        "num_ids_4": 1027
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n\nt = int(input())\nfor _ in range(t):\n    x, y, z = map(int, input().split())\n    a, b, c = min(x, y, z), max(x, y, z), max(x, z, y)\n    print(\"YES\" if a <= b and b <= c and c <= a or a <= c and c <= b and b <= a else \"NO\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"YES\\n3 2 1\"\nassert solution(7) == \"YES\\n100 100 100\"\nassert solution(8) == \"YES\\n30 20 10\"\nassert solution(9) == \"YES\\n1000000000 1000000000 1000000000\"\nassert solution(10) == \"NO\\nNO\"\nassert solution(11) == \"YES\\n1 1 1000000000\"",
        "num_ids_2": 40,
        "num_ids_4": 104
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"",
        "num_ids_2": 125,
        "num_ids_4": 125
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2, 3) == 'YES\\n3 2 1'\nassert solution(100, 100, 100) == 'YES\\n100 100 100'\nassert solution(50, 49, 49) == 'YES\\n50 49 49'\nassert solution(10, 30, 20) == 'YES\\n10 30 20'\nassert solution(1, 1000000000, 1000000000) == 'YES\\n1 1000000000 1000000000'\n",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test {test_case} failed. Output: {output}, Expected: {output}\"\nprint(\"YES\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\\n3 2 1\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n\"\nassert solution(\"10\\n1000000000 1000000000\\n\") == \"NO\\nNO\\nYES\\n1 1 1000000000\\n\"\nassert solution(\"10\\n1000000000 1000000000\\n\") == \"NO\\nNO\\nYES\\n1 1 1000000000\\n\"\nassert solution(\"10\\n1000000000 1000000000\\n\") == \"NO\\nNO\\nYES\\n1 1 1000000000\\n\"\nassert solution(\"10\\n1000000000 1000000000\\n\") == \"NO\\nNO\\nYES\\n1 1 1000000000\\n\"",
        "num_ids_2": 187,
        "num_ids_4": 307
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"YES\"\nassert solution(\"4 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n\") == \"NO\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"YES\"\nassert solution(\"2 2 2\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\"\nassert solution(\"100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"\nassert solution(\"3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"\nassert solution(\"100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"",
        "num_ids_2": 143,
        "num_ids_4": 238
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"\nassert solution(\"5 2 5\\n3 2 4 1 2\") == \"3\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\\n\") == \"4\\n\"\nassert solution(\"5 1 4\\n4 2 3 4 1\\n\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 3 1 1\\n\") == \"5\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\\n\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2\\n') == '4'\nassert solution('5 1 4\\n4 2 3 4 1\\n') == '1'\nassert solution('5 3 3\\n1 2 3 1 1\\n') == '5'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case_id} failed. Expected Output: {expected_output}, Received Output: {solution(input())}\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4', 'Solution is incorrect'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2\\n') == '4'\nassert solution('5 1 4\\n4 2 3 4 1\\n') == '1'\nassert solution('5 3 3\\n1 2 3 1 1\\n') == '5'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 5\nassert solution == 1\nassert solution == 5\nassert solution == 4\nassert solution == 1",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output\\n4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\\n\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\"\nassert solution(\"7 1\\nbbbbbbb\\nc\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\nbaaaaaa\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 60
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\"\nassert solution(\"7 1\\na aaaa\\nb\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"\n12\n\"\"\"\n\nassert solution == \"\"\"\n21\n\"\"\"\n\nassert solution == \"\"\"\n0\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\nprint(\"Test case passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 -1 -2\") == \"2\"\nassert solution(\"4 5 -1 -2\") == \"2\"\nassert solution(\"4 -1 -3\") == \"-1\"\nassert solution(\"10 -2 8 3 8 -4 -15 5 -2 -3 1\") == \"-2999999997\"",
        "num_ids_2": 34,
        "num_ids_4": 89
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"6\"\nassert solution(\"6\") == \"-2999999997\"",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n-1\\n6\\n-2999999997\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n'''\n) == '''\n2\n-1\n6\n-2999999997\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Solution does not match the expected output. Expected: {expected_output}, Received: {solution(stdin=input())}\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"-2999999997\"\n",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=stdin) == expected, f\"Test case {t} failed: expected {expected}, got {solution(stdin=stdin)}\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\") == \"2\\n-1\\n6\\n-2999999997\" # This is the correct answer\nassert solution(\"1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\") == \"1\\n-1\" # This is the correct answer",
        "num_ids_2": 238,
        "num_ids_4": 238
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4\\n5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\\n\\nOutput\\n2\\n-1\\n6\\n-2999999997\") == \"2\\n-1\\n6\\n-2999999997\"",
        "num_ids_2": 158,
        "num_ids_4": 158
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5') == '2\\n-1\\n6\\n-2999999997'\n\nassert solution('1 2 3 -1 -2') == '2\\n-1\\n6\\n-2999999997'\n\nassert solution('4 -1 -2') == '2\\n-1\\n6\\n-2999999997'\n\nassert solution('10 -2 8 3 8 -4 -15 5 -2 -3 1') == '2\\n-1\\n6\\n-2999999997'",
        "num_ids_2": 68,
        "num_ids_4": 154
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 209
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"3 5\n2 1\n3 2\n3 4\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"\n",
        "num_ids_2": 114,
        "num_ids_4": 207
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"",
        "num_ids_2": 114,
        "num_ids_4": 207
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(example_input) == solution(example_input2) == solution(example_input3) == solution(example_input4) == solution(example_input5) == solution(example_input6) == solution(example_input7) == solution(example_input8) == solution(example_input9), \"Invalid input\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 209
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"output\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 209
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"\n\nfrom typing import List",
        "num_ids_2": 116,
        "num_ids_4": 209
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 209
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test {test_case_num} failed.\"\nprint(f\"Test {test_case_num} passed.\")\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"\nassert solution(\"2\\n10\\n9876543210\") == \"40\\n41664916690999888\"\nassert solution(\"3\\n20\\n1234567890123456789012345678901234567890\") == \"80\\n41664916690999888\"",
        "num_ids_2": 90,
        "num_ids_4": 166
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: solution({input()})!= expected\" for i, (input_, expected) in enumerate([(\"1\", \"0\"), (\"5\", \"40\"), (\"499993\", \"41664916690999888\")]):\n    print(solution(input_))",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=None) == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n5\\n499993\\n') == '0\\n40\\n41664916690999888'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0\\n40\\n41664916690999888'\nprint(solution(stdin))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\\n40\\n41664916690999888\"\n\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    assert n % 2 == 1\n    assert n <= 5 * 10**5\n    n = n - 1\n    ans = 0\n    for i in range(n):\n        for j in range(i, n+1):\n            if j >= i:\n                if all(0 <= board[i][j] <= 1 for board in [board for i in range(n) for board in [board for j in range(n) if i!= j]]):\n                    ans = min(ans, i + 1)\n                    break\n    print(ans)",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"\nassert solution(\"2\\n3\\n499993\") == \"0\\n40\\n41664916690999888\"\nassert solution(\"3\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"\nassert solution(\"4\\n7\\n499993\") == \"0\\n40\\n41664916690999888\"\nassert solution(\"5\\n10\\n499993\") == \"0\\n40\\n41664916690999888\"\nassert solution(\"6\\n13\\n499993\") == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 88,
        "num_ids_4": 176
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"1 1 1 2 -1 1 1 3 1 1\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == [\"1\", \"1\", \"1\", \"2\", \"-1\", \"1\", \"1\", \"3\", \"1\", \"1\"]\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case not passed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == [1, 1, 1, 2, -1, 1, 1, 3, 1, 1]",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 1 1 2 -1 1 1 3 1 1\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\\n\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n64\\n32\\n97\\n2\\n12345\") == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Test case {test_case_num + 1} failed: {solution(stdin)}!= {output}\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Output does not match.\\nExpected: {output}\\nGot: {solution(stdin)}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"64\\n32\\n97\\n2\\n12345\") == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'YES\\n2 4 8'\nassert solution() == 'NO\\nNO\\nNO'\nassert solution() == 'YES\\n3 5 823'",
        "num_ids_2": 29,
        "num_ids_4": 46
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5\n    64\n    32\n    97\n    2\n    12345\n    \"\"\"\n) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    64\n    32\n    97\n    2\n    12345\n    3\n    7\n    \"\"\"\n) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\\nNO\\nNO\\nNO\\nYES\\n7\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    64\n    32\n    97\n    2\n    12345\n    3\n    7\n    11\n    \"\"\"\n) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\\nNO\\nNO\\nNO\\nYES\\n7\\nNO\\nNO\\nYES\\n11\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    64\n    32\n    97\n    2\n    12345\n    3\n    7\n    11\n    13\n    \"\"\"\n) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\\nNO\\nNO\\nNO\\nYES\\n7\\nNO\\nNO\\nYES\\n11\\nNO\\nNO\\nYES\\n13\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    64\n    32\n    97\n    2\n    12345\n    3\n    7\n    11\n    13\n    17\n    \"\"\"\n) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\\nNO\\nNO\\nNO\\nYES\\n7\\nNO\\nNO\\nYES\\n11\\nNO\\nNO\\nYES\\n13\\nNO\\nNO\\nYES\\n17\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    64\n    32\n    97\n    2\n    12345\n    3\n    7\n    11\n    13\n    17\n    19\n    \"\"\"\n) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\\nNO\\nNO\\nNO\\nYES\\n7\\nNO\\nNO\\nYES\\n11\\nNO\\nNO\\nYES\\n13\\nNO\\nNO\\nYES\\n17\\nNO\\nNO\\nYES\\n19\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    64\n    32\n    97\n    2\n    12345\n    3\n    7\n    11\n    13\n    17\n    19\n    23\n    \"\"\"\n) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\\nNO\\nNO\\nNO\\nYES\\n7\\nNO\\nNO\\nYES\\n11\\nNO\\nNO\\nYES\\n13\\nNO\\nNO\\nYES\\n17\\nNO\\nNO\\nYES\\n19\\nNO\\nNO\\nYES\\n23\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    64\n    32\n    97\n    2\n    12345\n    3\n    7\n    11\n    13\n    17\n    19\n    23\n    25\n    \"\"\"\n) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\\nNO\\nNO\\nNO\\nYES\\n7\\nNO\\nNO\\nYES\\n11\\nNO\\nNO\\nYES\\n13\\nNO\\nNO\\nYES\\n17\\nNO\\nNO\\nYES\\n19\\nNO\\nNO\\nYES\\n23\\nNO\\nNO\\nYES\\n25\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n\") == \"YES\\n2 4\\nYES\\n3 5\\nNO\\nNO\\nYES\\n3 5 823\\n\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n\") == \"YES\\n2 4\\nYES\\n3 5\\nNO\\nNO\\nYES\\n3 5 823\\n\"",
        "num_ids_2": 150,
        "num_ids_4": 150
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\\n\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Test failed: {solution(stdin)}\\nExpected output: {output}\\nReceived output: {solution(stdin)}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aaaa') == 'aab'\nassert solution('abab') == 'baba'\nassert solution('ababab') == 'ababa'\nassert solution('aa') == 'ba'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ababab\") == \"abba\"\nassert solution(\"aa\") == \"ba\"\nassert solution(\"aaaaa\") == \"aaaaa\"\nassert solution(\"abba\") == \"abba\"\nassert solution(\"bbbb\") == \"abba\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nbbbb\\n\") == \"2\\nabba\"\nassert solution(\"6\\nababab\\n\") == \"0\\nababab\"\nassert solution(\"2\\naa\\n\") == \"1\\nba\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bbbb\") == \"abba\"\nassert solution(\"ababab\") == \"ababab\"\nassert solution(\"aa\") == \"ba\"",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ababab\") == \"abba\"\nassert solution(\"aa\") == \"ba\"\nassert solution(\"bbbb\") == \"abba\"\nassert solution(\"ababab\") == \"abba\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nbbbb\") == \"2\\nabba\"\nassert solution(\"6\\nabbab\") == \"0\\nabbab\"\nassert solution(\"2\\naa\") == \"1\\nba\"\n",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abba') == 'abba'\nassert solution('ababab') == 'ababab'\nassert solution('aa') == 'ba'\nassert solution('bbbb') == 'abbba'\nassert solution('abbaab') == 'abbaab'",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\nbbbb\") == \"2\\nabba\"\nassert solution(\"6\\nabbab\") == \"0\\nabbab\"\nassert solution(\"2\\naa\") == \"1\\nba\"",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bbbb\") == \"abba\"\nassert solution(\"ababab\") == \"ababab\"\nassert solution(\"aa\") == \"ba\"",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"15\\n\"\nassert solution() == \"9\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n') == '15'\nassert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n') == '9'\n\nSolution:\n\nThe problem requires us to find the minimum possible total distance Maksim has to travel if he needs to visit all the key points in a way described above. \n\nWe will solve this problem using the depth-first search (DFS) approach. We will start from the point $(0, 0)$ and perform a DFS traversal. If we find a key point, then we will move to the adjacent key points and continue the DFS traversal. If we reach the last key point, then the total distance will be the distance between the initial point and the last key point. \n\nIf we find a point of level $i$, then we will visit all the key points of level $i + 1$ if we have not visited all the points of level $i$ yet. If we find a point of level $i$, then we will continue the DFS traversal to the adjacent key points of level $i + 1$. \n\nFinally, we will calculate the minimum total distance by taking the minimum value of the distances obtained by visiting all the key points.\n\nHere's the Python code that implements the above approach:",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n\") == \"15\\n\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n\") == \"9\\n\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '15'\n\nprint(\"All tests passed!\")\n\nfrom typing import List",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([2,2,1,4,2,3,3,4,1,1,4,3,1,2]) == 15\nassert solution([2,1,1,0,2,0,3,2,0,3]) == 9",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\") == \"15\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\") == \"9\"\n",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, \"Testcase failed: Your code is not correct.\"\nfor testcase in test_cases:\n    assert solution(testcase) == testcase_output, f\"Testcase {testcase} failed.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n\") == \"15\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n\") == \"9\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"Test failed: expected '{output_str}', got '{solution(input_str)}'.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Expected {output}, but got {solution(input)}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1\\n') == '2', \"The correct choice is 2.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3\\n1\\n\") == \"2\"\nassert solution(stdin=\"4\\n2\\n\") == \"2\"\nassert solution(stdin=\"5\\n3\\n\") == \"3\"\nassert solution(stdin=\"1\\n2\\n\") == \"1\"\nassert solution(stdin=\"2\\n1\\n\") == \"1\"\nassert solution(stdin=\"3\\n2\\n\") == \"3\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2', \"The correct choice is 2.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1') == '2'\nassert solution('3 2') == '2'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('4 4') == '4'\n\nprint('All test cases passed')",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\", \"Your code is not correct!\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\") == \"2\", \"Solution should return 2 when input is 3 and 1 are both wrong.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\"\nprint(\"All assertions passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\") == \"2\", \"Test case 1 should print 2 as the correct choice.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\") == \"2\", \"Test Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n\") == \"1.000000000000\\n\"\nassert solution(\"4\\n\") == \"1.000000000000\\n\"\nassert solution(\"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 54,
        "num_ids_4": 1027
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '1.000000000000'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"1.000000000000\\n\"\nassert solution(1) == \"1.000000000000\\n\"\nassert solution(10) == \"1.000000000000\\n\"\nassert solution(999) == \"1.000000000000\\n\"\nassert solution(1000) == \"1.000000000000\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '1.000000000000\\n'\nassert solution(10) == '1.000000000000\\n'\nassert solution(4) == '1.000000000000\\n'\nassert solution(100) == '1.000000000000\\n'\nassert solution(1000) == '1.000000000000\\n'",
        "num_ids_2": 51,
        "num_ids_4": 103
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"1.000000000000\\n\", \"The output is incorrect.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '1.000000000000'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"1.000000000000\\n\"\nassert solution(10) == \"1.000000000000\\n\"\nassert solution(11) == \"1.000000000000\\n\"\nassert solution(10000) == \"1.000000000000\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 106
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '1.000000000000'\nprint(\"Test Passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"1.000000000000\\n\", \"Your solution is incorrect.\"\nprint(\"Test passed.\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '1.000000000000', \"Expected output: 1.000000000000\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"Hello World\"\nassert solution(2) == \"1+2\"\nassert solution(1) == \"Hello World\"\nassert solution(2) == \"1+2\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\") == \"A+B\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"Hello World\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"\nassert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"\nassert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Hello World'\nassert solution(input()) == 'A+B'\nassert solution(input()) == 'Hello World'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Hello World\\n\"\nassert solution(\"1\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\") == \"2\\n10\\n\"\nassert solution(\"3\\n10\\n5\") == \"15\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 66
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"Hello World\"\nassert solution(\"1\\n\") == \"Hello World\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\"\nassert solution(\"3\\n\") == \"Hello World\"\nassert solution(\"4\\nA\\nB\\n\") == \"A+B\"\nassert solution(\"5\\n\") == \"Hello World\"\nassert solution(\"6\\nA\\nB\\n\") == \"A+B\"",
        "num_ids_2": 22,
        "num_ids_4": 53
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\") == \"A+B\\n\"\nassert solution(\"3\") == \"Invalid input\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 44
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"3333\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"3333\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"5 6\") == \"6666\"\nassert solution(\"2 7\") == \"7777\"\nassert solution(\"8 1\") == \"1111\"\nassert solution(\"1 0\") == \"0001\"\nassert solution(\"9 2\") == \"2222\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3') == '3333'\nassert solution('1 5') == '51'\nassert solution('2 1') == '11'\nassert solution('5 6') == '566'\nassert solution('3 2') == '232'",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"1 3\") == \"3333\"\nassert solution(\"2 3\") == \"2333\"\nassert solution(\"3 3\") == \"3333\"\nassert solution(\"4 4\") == \"4444\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"2 3\") == \"23\"\nassert solution(\"1 1\") == \"11\"\nassert solution(\"0 0\") == \"0000\"\nassert solution(\"7 7\") == \"7777\"\n\nHere are the 5 lines of code to test the correctness of the solution:\n\n```python\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"5 3\") == \"3333\"\nassert solution(\"1 1\") == \"11\"\nassert solution(\"1 2\") == \"22\"\nassert solution(\"4 9\") == \"3333\"\nassert solution(\"5 9\") == \"3333\"",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"5 5\") == \"5555\"\nassert solution(\"1 2\") == \"111\"\nassert solution(\"10 1\") == \"1101\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '3333', \"The solution is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"3333\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('a') == 'b'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"c\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('c') == 'b'\nprint('a is followed by b.')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"b\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('c') == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('a') == 'b'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"b\", \"Test failed: output should be 'b', but it is actually '{}'\".format(solution(\"a\"))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Test Failed\"\n\nassert solution(\"\") == \"\", \"Test Failed\"\n\nassert solution(\"a\") == \"\", \"Test Failed\"\n\nassert solution(\"oder atc\") == \"atcoder\", \"Test Failed\"\n\nassert solution(\"oder atc\") == \"atcoder\", \"Test Failed\"\n\nassert solution(\"oder atc\") == \"atcoder\", \"Test Failed\"",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"atcoder\", \"The solution is incorrect\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Test Failed\"\nassert solution(\"apple\") == \"apple\", \"Test Failed\"\nassert solution(\"banana\") == \"ananab\", \"Test Failed\"\nassert solution(\"orange\") == \"orange\", \"Test Failed\"\nassert solution(\"test\") == \"test\", \"Test Failed\"",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"atcoder\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Output should be atcoder.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Test case not passing\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n5 1 2 4 6 3\") == \"0\\n\"\nassert solution(\"2\\n1000000 1000000\") == \"1000000\\n\"\nassert solution(\"5\\n1 5 7 8 2\") == \"0\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 83
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 5 7 8 2\") == \"0\"\nassert solution(\"6\\n5 1 2 4 6 3\") == \"0\"\nassert solution(\"2\\n1000000 1000000\") == \"1000000\"\n",
        "num_ids_2": 44,
        "num_ids_4": 77
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 5 7 8 2\\n\") == \"0\\n\"\nassert solution(\"6\\n5 1 2 4 6 3\\n\") == \"0\\n\"\nassert solution(\"2\\n1000000 1000000\\n\") == \"1000000\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 89
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 0 # correct\nassert solution(4) == 0 # correct\nassert solution(5) == 0 # correct\nassert solution(6) == 0 # correct\nassert solution(7) == 0 # correct\nassert solution(8) == 0 # correct\nassert solution(9) == 0 # correct\nassert solution(10) == 0 # correct\nassert solution(11) == 0 # correct\nassert solution(12) == 0 # correct\nassert solution(13) == 0 # correct\nassert solution(14) == 0 # correct\nassert solution(15) == 0 # correct\nassert solution(16) == 0 # correct\nassert solution(17) == 0 # correct\nassert solution(18) == 0 # correct\nassert solution(19) == 0 # correct\nassert solution(20) == 0 # correct\nassert solution(21) == 0 # correct\nassert solution(22) == 0 # correct\nassert solution(23) == 0 # correct\nassert solution(24) == 0 # correct\nassert solution(25) == 0 # correct\nassert solution(26) == 0 # correct\nassert solution(27) == 0 # correct\nassert solution(28) == 0 # correct\nassert solution(29) == 0 # correct\nassert solution(30) == 0 # correct\nassert solution(31) == 0 # correct\nassert solution(32) == 0 # correct\nassert solution(33) == 0 # correct\nassert solution(34) == 0 # correct\nassert solution(35) == 0 # correct\nassert solution(36) == 0 # correct\nassert solution(37) == 0 # correct\nassert solution(38) == 0 # correct\nassert solution(39) == 0 # correct\nassert solution(40) == 0 # correct\nassert solution(41) == 0 # correct\nassert solution(42) == 0 # correct\nassert solution(43) == 0 # correct\nassert solution(44) == 0 # correct\nassert solution(45) == 0 # correct\nassert solution(46) == 0 # correct\nassert solution(47) == 0 # correct\nassert solution(48) == 0 # correct\nassert solution(49) == 0 # correct\nassert solution(50) == 0 # correct\nassert solution(51) == 0 # correct\nassert solution(52) == 0 # correct\nassert solution(53) == 0 # correct\nassert solution(54) == 0 # correct\nassert solution(55) == 0 # correct\nassert solution(56) == 0 # correct\nassert solution(57) == 0 # correct\nassert solution(58) == 0 # correct\nassert solution(59) == 0 # correct\nassert solution(60) == 0 # correct\nassert solution(61) == 0 # correct\nassert solution(62) == 0 # correct\nassert solution(63) == 0 # correct\nassert solution(64) == 0 # correct\nassert solution(65) == 0 # correct\nassert solution(66) == 0 # correct\nassert solution(67) == 0 # correct\nassert solution(68) == 0 # correct\nassert solution(69) == 0 # correct\nassert solution(70) == 0 # correct\nassert solution(71) == 0 # correct\nassert solution(72) == 0 # correct\nassert solution(73) == 0 # correct\nassert solution(74) == 0 # correct\nassert solution(75) == 0 # correct\nassert solution(76) == 0 # correct\nassert solution(77) == 0 # correct\nassert solution(78) == 0 # correct\nassert solution(79) == 0 # correct\nassert solution(80) == 0 # correct\nassert solution(81) == 0 # correct\nassert solution(82) == 0 # correct\nassert solution(83) == 0 # correct\nassert solution(84) == 0 # correct\nassert solution(85) == 0 # correct\nassert solution(86) == 0 # correct\nassert solution(87) == 0 # correct\nassert solution(88) == 0 # correct\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\", \"Your solution is incorrect. Please see the example output and the input/output constraints for the solution.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0, \"Expected 0, but got {}\".format(solution()) # 0",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 5 7 8 2') == '0\\n'\nassert solution('6\\n5 1 2 4 6 3') == '0\\n'\nassert solution('2\\n1000000 1000000') == '1000000\\n'",
        "num_ids_2": 48,
        "num_ids_4": 83
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\\n\", solution(stdin)",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0, \"Test failed\"\n\nassert solution() == 0, \"Test failed\"\n\nassert solution() == 0, \"Test failed\"\n\nassert solution() == 0, \"Test failed\"\n\nassert solution() == 0, \"Test failed\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 7 8 2\") == \"0\" # Test case 1\nassert solution(\"6 5 1 2 4 6 3\") == \"0\" # Test case 2\nassert solution(\"2 1000000 1000000\") == \"1000000\" # Test case 3",
        "num_ids_2": 50,
        "num_ids_4": 87
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\\n100\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == \"6\"",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"1\"\nassert solution(10, 100, 99) == \"1\"\nassert solution(10, 100, 9) == \"5\"\nassert solution(100, 100, 99) == \"1\"\nassert solution(7, 4, 2, 1) == \"6\"",
        "num_ids_2": 30,
        "num_ids_4": 70
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == 5\nassert solution(\"1 1 100 99\\n100\") == 1\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == 6\n",
        "num_ids_2": 54,
        "num_ids_4": 84
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '5\\n'\nassert solution('6 2 3 3\\n7 10 50 12 1 8\\n') == '5\\n'\nassert solution('1 1 100 99\\n100\\n') == '1\\n'\nassert solution('7 4 2 1\\n1 3 5 4 2 7 6\\n') == '6\\n'",
        "num_ids_2": 46,
        "num_ids_4": 109
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 2 3 3\\n7 10 50 12 1 8') == 5\nassert solution('1 1 100 99') == 1\nassert solution('7 4 2 1\\n1 3 5 4 2 7 6') == 6\n",
        "num_ids_2": 49,
        "num_ids_4": 79
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\\n100\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == \"6\"",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Error: Expected output '{expected_output}', but got '{solution(input_str)}'.\"\nfor i, input_str in enumerate(test_cases):\n    expected_output = outputs[i]\n    assert solution(input_str) == expected_output, f\"Test case {i + 1} failed.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == 5\nassert solution(\"1 1 100 99\\n100\") == 1\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == 6\nassert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == 5\nassert solution(\"1 1 100 99\\n100\") == 1\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == 6",
        "num_ids_2": 54,
        "num_ids_4": 115
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\" # should return \"5\"\nassert solution() == \"1\" # should return \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\\n\") == 3\nassert solution(\"4 2\\n0 1 2 3\\n\") == 0\nassert solution(\"6 6\\n5 5 5 5 5 5\\n\") == 0\nassert solution(\"4 4\\n1 1 1 1 1\\n\") == 1\nassert solution(\"3 2\\n5 5 5 5 5\\n\") == 1\nassert solution(\"6 8\\n2 4 6 8 10 12 14\\n\") == 4\nassert solution(\"10 3\\n5 10 15 20\\n\") == 2",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nprint(\"3\")\n\n```python\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"3\n3 2 0 7 10 14\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Output\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\") == \"3\\n3 2 0 7 10 14\"\nassert solution(\"4 2\\n0 1 2 3\") == \"0\\n0 1 2 3\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\") == 3\nassert solution(\"4 2\\n0 1 2 3\") == 0",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3\nassert solution() == 3\nassert solution() == 0\nassert solution() == 0\nassert solution() == 0",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\\n\\n4 2\\n0 1 2 3\\n\\n\") == \"3\\n3 2 0 7 10 14\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output, f\"Your solution {solution} does not match the expected output {expected_output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Solution failed. Output: {output}, Expected: {output}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\\n\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\\n\"\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '8', 'The given code does not work correctly.'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}, expected {output}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Your solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8\\n'\n\nassert solution('''\n5 3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\\nYES\\nNO\\nYES\\nYES\"\nassert solution(stdin) == \"YES\\nYES\\nNO\\nYES\\nYES\"\nassert solution(stdin) == \"NO\\nYES\\nNO\\nYES\\nYES\"\nassert solution(stdin) == \"NO\\nYES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\"\nassert solution(\"2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\"\nassert solution(\"2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"NO\"\n",
        "num_ids_2": 212,
        "num_ids_4": 311
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\\nYES\\nNO\\nYES\\nYES\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Test failed: got '{solution(stdin)}', expected '{expected}'\"\nprint(\"PASSED\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'YES'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\"\nassert solution(\"1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\"\nassert solution(\"1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"NO\"\nassert solution(\"1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\"",
        "num_ids_2": 220,
        "num_ids_4": 440
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, but got {solution(stdin)}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\\n') == 'YES\\nYES\\nNO\\nYES\\nYES'",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected output: {output}, got: {solution(input())}\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1') == '9'",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == \"3\\n\", \"Test case 1 failed\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\\n\", \"Test case 2 failed\"",
        "num_ids_2": 225,
        "num_ids_4": 225
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n\") == \"9\"\nassert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n\") == \"9\"",
        "num_ids_2": 211,
        "num_ids_4": 422
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\"\n",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == 3\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == 9",
        "num_ids_2": 205,
        "num_ids_4": 205
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n\") == \"9\"",
        "num_ids_2": 211,
        "num_ids_4": 211
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == 3, \"Incorrect output\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == 9, \"Incorrect output\"",
        "num_ids_2": 215,
        "num_ids_4": 215
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed. Input: {input()}, Output: {output}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for solution({stdin})\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n\") == \"3 1\\n1 1 1 1 1\\n\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\\n2 2 1 1 2 1\\n\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 163
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1 1 3 4 2\\n') == '3 1\\n1 1 1 1 1 '\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2\\n2 2 1 1 2 1 '\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1 1 '\n\nimport sys\n",
        "num_ids_2": 79,
        "num_ids_4": 159
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n5\n1 1 3 4 2\n\"\"\") == \"\"\"\n3 1\n1 1 1 1 1 \n\"\"\"\n\nassert solution(r\"\"\"\n6\n1 5 12 13 2 15\n\"\"\") == \"\"\"\n7 2\n2 2 1 1 2 1 \n\"\"\"\n\nassert solution(r\"\"\"\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n\"\"\") == \"\"\"\n7486 3\n3 3 3 2 2 2 2 1 1 1\n\"\"\"\n\nfrom collections import Counter\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n\") == \"3 1\\n1 1 1 1 1\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\\n2 2 1 1 2 1\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1\"",
        "num_ids_2": 79,
        "num_ids_4": 157
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input') == 'Output'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n\") == \"3 1\\n1 1 1 1 1\\n\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\\n2 2 1 1 2 1\\n\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 163
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n\") == \"3 1\\n1 1 1 1 1 \\n\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\\n2 2 1 1 2 1 \\n\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1 \\n\"",
        "num_ids_2": 83,
        "num_ids_4": 163
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5009) == '5000 9'\nassert solution(7) == '4'\nassert solution(10000) == '10000'\nassert solution(10) == '10000'",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5009\") == \"2\\n5000 9\\n1\\n7\"\nassert solution(\"7\") == \"1\\n7\\n1\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\"\nassert solution(\"10000\") == \"1\\n10000\\n1\"",
        "num_ids_2": 78,
        "num_ids_4": 102
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5009\") == \"2\\n5000 9\\n1\\n7\"\nassert solution(\"7\") == \"1\\n7\"\nassert solution(\"10000\") == \"1\\n10000\"\nassert solution(\"10\") == \"1\\n10\"\nassert solution(\"4000\") == \"1\\n4000\"\nassert solution(\"1\") == \"1\\n1\"\nassert solution(\"9\") == \"1\\n9\"",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''\n1\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Your solution does not match the expected output.\\nExpected: {expected_output}\\nGot: {solution(input())}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5009\\n7\\n9876\\n10000\\n10\") == \"2\\n5000 9\\n1\\n7 \\n4\\n800 70 6 9000 \\n1\\n10000 \\n1\\n10\"\nassert solution(\"5\\n5009\\n7\\n9876\\n10000\\n10\") == \"2\\n5000 9\\n1\\n7 \\n4\\n800 70 6 9000 \\n1\\n10000 \\n1\\n10\"\nassert solution(\"5\\n5009\\n7\\n9876\\n10000\\n10\") == \"2\\n5000 9\\n1\\n7 \\n4\\n800 70 6 9000 \\n1\\n10000 \\n1\\n10\"\nassert solution(\"5\\n5009\\n7\\n9876\\n10000\\n10\") == \"2\\n5000 9\\n1\\n7 \\n4\\n800 70 6 9000 \\n1\\n10000 \\n1\\n10\"\nassert solution(\"5\\n5009\\n7\\n9876\\n10000\\n10\") == \"2\\n5000 9\\n1\\n7 \\n4\\n800 70 6 9000 \\n1\\n10000 \\n1\\n10\"",
        "num_ids_2": 170,
        "num_ids_4": 340
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5009\") == \"2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\"\nassert solution(\"7\") == \"1\\n1\\n7\"\nassert solution(\"10000\") == \"1\\n1\\n10\"\nassert solution(\"10\") == \"1\\n1\\n10\"\nassert solution(\"5\") == \"1\\n1\\n5\"\nassert solution(\"1000000000000\") == \"1\\n1\\n1000000000000\"\nassert solution(\"1000000000001\") == \"1\\n1\\n1000000000001\"\nassert solution(\"1000000000002\") == \"1\\n1\\n1000000000002\"\nassert solution(\"1000000000003\") == \"1\\n1\\n1000000000003\"\nassert solution(\"1000000000004\") == \"1\\n1\\n1000000000004\"\nassert solution(\"1000000000005\") == \"1\\n1\\n1000000000005\"\nassert solution(\"1000000000006\") == \"1\\n1\\n1000000000006\"\nassert solution(\"1000000000007\") == \"1\\n1\\n1000000000007\"\nassert solution(\"1000000000008\") == \"1\\n1\\n1000000000008\"\nassert solution(\"1000000000009\") == \"1\\n1\\n1000000000009\"",
        "num_ids_2": 78,
        "num_ids_4": 117
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5009\") == \"2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\"\nassert solution(\"7\") == \"1\\n7\"\nassert solution(\"10\") == \"1\\n10\"",
        "num_ids_2": 75,
        "num_ids_4": 90
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n\"\n\nimport random",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([6, 5, 1, 3, 5, 2]) == \"1 1 1 1 1\\n3 3 3 \\n2 3 3 2 1 3 \\n1 \\n2 2 2 2 \\n4 4 4 1 4\"\n\nassert solution([6, 4, 6, 2, 1, 5]) == \"1 1 1 1 1\\n3 3 3 \\n2 3 3 2 1 3 \\n1 \\n2 2 2 2 \\n4 4 4 1 4\"\n\nassert solution([5, 1, 2, 4, 3]) == \"1 1 1 1 1\\n3 3 3 \\n2 3 3 2 1 3 \\n1 \\n2 2 2 2 \\n4 4 4 1 4\"",
        "num_ids_2": 152,
        "num_ids_4": 225
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"The solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([5, 1, 2, 4, 3]) == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n3\\n2\\n1\\n3\\n2\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 1 1 1 1\", \"The solution is incorrect.\"\n\nfrom collections import defaultdict",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n2\\n1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Answer Here\", \"Your solution is not correct!\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\"\nassert solution(\"3\\n5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Output\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Testcase {test_case_number} failed: {output}!= {result}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '3\\n2\\n1'\nprint('All test cases passed.')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\") == \"5 4 0 5 3 3 9 0 2 5\\n\"",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\\n\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0 0 1 2\"\n\nassert solution(stdin) == \"5 4 0 5 3 3 9 0 2 5\"\n\nassert solution(stdin) == \"0 0 0 0 0 0 0 0 0 0\"\n\nassert solution(stdin) == \"0 0 0 0 0 0 0 0 0 0\"",
        "num_ids_2": 44,
        "num_ids_4": 100
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\") == \"5 4 0 5 3 3 9 0 2 5\\n\"",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\\n\"\nassert solution(\"10 1\\n5 3 1 2 4 5 6 7 8 9\\n2 1\\n10 8\\n1 2 4 6\\n\") == \"0 2\\n\"",
        "num_ids_2": 121,
        "num_ids_4": 181
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 2\n10 4 10 15\n1 2\n4 3\n''') == '''\n0 0 1 2\n'''\n\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '''\n5 4 0 5 3 3 9 0 2 5\n'''\n\nassert solution('''\n4 1\n1 2\n2 3\n3 4\n4 5\n''') == '''\n0 0 0 0 1\n'''\n\nassert solution('''\n5 1\n3 4\n1 2\n4 5\n2 3\n''') == '''\n0 0 0 0 0 1\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"0 0 1 2\"\nassert solution(\"10 4\") == \"5 4 0 5 3 3 9 0 2 5\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\") == \"5 4 0 5 3 3 9 0 2 5\"",
        "num_ids_2": 49,
        "num_ids_4": 122
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2 \\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5 \\n\"\nassert solution(\"1 2\\n3 1\\n4 5\\n5 6\\n\") == \"1 1 0 1 1 1 4 1 1 1 1 \\n\"",
        "num_ids_2": 121,
        "num_ids_4": 172
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nabbd\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(stdin) == 'YES\\nabb",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\\n1 3 2\") == \"YES\\nabbd\"\nassert solution(\"1 2 3\\n1 3 4\") == \"NO\"\nassert solution(\"1 1 1\\n2 2 2\") == \"YES\\n\"\nassert solution(\"1 2 1\\n3 1 1\") == \"YES\\n\"\nassert solution(\"1 2 1\\n3 1 2\") == \"NO\"",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nab\"\nassert solution(\"4 2\\n1 2 3\\n2 3 1\") == \"YES\\ncd\"\nassert solution(\"1 2 3\\n1 3 2\\n1 2 3\") == \"NO\"",
        "num_ids_2": 57,
        "num_ids_4": 85
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage:\\nprint(solution(\"3 2\\n1 2 3\\n1 3 2\"))'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\\nabb\\ndef\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n1 2 3\\n1 3 2') == 'YES\\nab'\nassert solution('3 2\\n1 2 3\\n1 3 4') == 'NO'\nassert solution('3 3\\n1 1 1\\n1 1 2\\n1 2 2') == 'YES\\nacc'",
        "num_ids_2": 54,
        "num_ids_4": 90
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nab\"\nprint(\"YES\\nab\")\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"43\"\nassert solution() == \"1 3 2\"\nassert solution() == \"64\"\nassert solution() == \"2 1 4 3\"\nassert solution() == \"69\"\nassert solution() == \"6 1 3 5 2 4\"\nassert solution() == \"3\"\nassert solution() == \"2 1\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\"\nassert solution(\"4\\n10 10 10 10\") == \"64\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\"\nassert solution(\"2\\n1 4\") == \"3\"",
        "num_ids_2": 45,
        "num_ids_4": 84
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"43\"\nassert solution(4) == \"64\"\nassert solution(6) == \"69\"\nassert solution(2) == \"3\"\nassert solution(1) == \"1\"\nassert solution(4, 20, 10, 20) == \"43\"\nassert solution(4, 10, 10, 10) == \"64\"\nassert solution(6, 5, 4, 5, 4, 5) == \"69\"\nassert solution(2, 1, 4) == \"3\"\nassert solution(1, 4) == \"2 1\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1\"",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n20 10 20\\n\") == \"43\\n1 3 2\\n\"\nassert solution(\"4\\n10 10 10 10\\n\") == \"64\\n2 1 4 3\\n\"\nassert solution(\"6\\n5 4 5 4 4 5\\n\") == \"69\\n6 1 3 5 2 4\\n\"\nassert solution(\"2\\n1 4\\n\") == \"3\\n2 1\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 134
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2\\n\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3\\n\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4\\n\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1\\n\"\n\nfrom typing import List",
        "num_ids_2": 65,
        "num_ids_4": 126
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n20 10 20\\n\") == \"43\\n1 3 2\\n\"\nassert solution(\"4\\n10 10 10 10\\n\") == \"64\\n2 1 4 3\\n\"\nassert solution(\"6\\n5 4 5 4 4 5\\n\") == \"69\\n6 1 3 5 2 4\\n\"\nassert solution(\"2\\n1 4\\n\") == \"3\\n2 1\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 134
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2 \\n\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3 \\n\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4 \\n\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1 \"",
        "num_ids_2": 65,
        "num_ids_4": 124
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n20 10 20') == '43'\nassert solution('4\\n10 10 10 10') == '64'\nassert solution('6\\n5 4 5 4 4 5') == '69'\nassert solution('2\\n1 4') == '3'",
        "num_ids_2": 45,
        "num_ids_4": 84
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1\"",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\", \"Expected output:\\n3\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\\n\", \"Test case failed.\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 2 5 1 3\\n\") == \"3\\n\"\nassert solution(\"5\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"5\\n3 2 1\\n\") == \"2\\n\"\nassert solution(\"5\\n5 4 3 2 1\\n\") == \"4\\n\"\nassert solution(\"5\\n2 3 1\\n\") == \"1\\n\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\", \"Test 1\"\nassert solution(\"5\\n4 1 5 3 2\") == \"3\\n\", \"Test 2\"\nassert solution(\"5\\n3 5 1 4 2\") == \"3\\n\", \"Test 3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n\", \"Test 4\"\nassert solution(\"5\\n4 4 4 4 4\") == \"5\\n\", \"Test 5\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n\"\nassert solution(\"3\\n1 2 3\") == \"3\\n\"\nassert solution(\"2\\n1 2\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 92
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 2 5 1 3\\n\") == \"3\\n\"\nassert solution(\"1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n5\\n\") == \"1\\n\"\nassert solution(\"5\\n3\\n\") == \"3\\n\"\nassert solution(\"1\\n5\\n\") == \"1\\n\"\n\nassert solution(\"5\\n3\\n\") == \"3\\n\"\nassert solution(\"3\\n4\\n\") == \"1\\n\"\nassert solution(\"3\\n2\\n\") == \"1\\n\"\nassert solution(\"2\\n3\\n\") == \"1\\n\"\nassert solution(\"4\\n2\\n\") == \"1\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 76
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"3\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"4\\n3 3 3 3\") == \"1\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3 3 3 3\n''') == '1\\n'\nassert solution('''\n5\n1 2 3 4 5\n''') == '0\\n'\nassert solution('''\n5\n1 2 3 4 5\n''') == '2\\n'\nassert solution('''\n3\n1 1 1\n''') == '0\\n'\nassert solution('''\n3\n1 1 1\n''') == '1\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\\n\", \"Test failed for solution 1.\"\nassert solution(input()) == \"2\\n\", \"Test failed for solution 2.\"\nassert solution(input()) == \"3\\n\", \"Test failed for solution 3.\"\nassert solution(input()) == \"4\\n\", \"Test failed for solution 4.\"\nassert solution(input()) == \"5\\n\", \"Test failed for solution 5.\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\", \"Your solution should return 1.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n3 3 3 3') == '1'\nassert solution('4\\n2 4 1 4 2') == '2'\nassert solution('4\\n1 1 1 1 1') == '0'",
        "num_ids_2": 40,
        "num_ids_4": 61
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\", \"The solution does not work as expected\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1\\n'\nassert solution() == '2\\n'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\", \"Test case 1 failed\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\", \"The output is not correct.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\", \"Test case 1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\", \"Test case failed.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\", \"The correct output should be: 1\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\", \"Test failed\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 2 3 4 5') == '1'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 6\") == \"Invalid input\"\nassert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 1 2 3 4\") == \"Invalid input\"",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 5') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 0, \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 5') == '0\\n'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"0\\n\"  # solution should return 0\nassert solution(\"4 5\") == \"0\\n\"  # solution should return 0\nassert solution(\"3 2\") == \"4\\n\"  # solution should return 4\nassert solution(\"4 3\") == \"1\\n\"  # solution should return 1\nassert solution(\"1 1\") == \"1\\n\"  # solution should return 1\nassert solution(\"4 2\") == \"0\\n\"  # solution should return 0\nassert solution(\"1 2\") == \"0\\n\"  # solution should return 0",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n\") == \"0\\n\"\nassert solution(\"2 6\\n\") == \"0\\n\"\nassert solution(\"1 8\\n\") == \"0\\n\"\nassert solution(\"3 3\\n\") == \"0\\n\"\nassert solution(\"4 1\\n\") == \"2\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0', \"Incorrect output\"\nassert solution(stdin) == '0', \"Incorrect output\"\nassert solution(stdin) == '0', \"Incorrect output\"\nassert solution(stdin) == '0', \"Incorrect output\"\nassert solution(stdin) == '0', \"Incorrect output\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"\nassert solution(\"4\\n10 100 1 10\") == \"No\"\nassert solution(\"5\\n1 10 100 1 10\") == \"No\"",
        "num_ids_2": 43,
        "num_ids_4": 68
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 10 100\\n\") == \"Yes\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\", \"Solution is incorrect\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"\nassert solution(\"3\\n2 20 200\") == \"Yes\"\nassert solution(\"3\\n3 30 300\") == \"No\"\nassert solution(\"4\\n1 1 1\") == \"Yes\"\nassert solution(\"4\\n2 2 2\") == \"No\"",
        "num_ids_2": 40,
        "num_ids_4": 77
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 10 100\\n') == 'Yes\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"\nassert solution(\"2\\n1 2 3 4\") == \"No\"\nassert solution(\"5\\na 10 20 30 40\") == \"No\"\nassert solution(\"6\\na 1 2 3 4 5\") == \"No\"",
        "num_ids_2": 39,
        "num_ids_4": 85
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 10 100\\n\") == \"Yes\"\nassert solution(\"4\\n1 10 100\\n\") == \"Yes\"\nassert solution(\"5\\n1 10 100\\n\") == \"Yes\"\nassert solution(\"6\\n1 10 100\\n\") == \"No\"\nassert solution(\"7\\n1 10 100\\n\") == \"No\"\nassert solution(\"8\\n1 10 100\\n\") == \"No\"\nassert solution(\"9\\n1 10 100\\n\") == \"No\"\nassert solution(\"10\\n1 10 100\\n\") == \"No\"\nassert solution(\"11\\n1 10 100\\n\") == \"No\"\nassert solution(\"12\\n1 10 100\\n\") == \"No\"\nassert solution(\"13\\n1 10 100\\n\") == \"No\"\nassert solution(\"14\\n1 10 100\\n\") == \"No\"\nassert solution(\"15\\n1 10 100\\n\") == \"No\"\nassert solution(\"16\\n1 10 100\\n\") == \"No\"\nassert solution(\"17\\n1 10 100\\n\") == \"No\"\nassert solution(\"18\\n1 10 100\\n\") == \"No\"\nassert solution(\"19\\n1 10 100\\n\") == \"No\"\nassert solution(\"20\\n1 10 100\\n\") == \"No\"\nassert solution(\"21\\n1 10 100\\n\") == \"No\"\nassert solution(\"22\\n1 10 100\\n\") == \"No\"\nassert solution(\"23\\n1 10 100\\n\") == \"No\"\nassert solution(\"24\\n1 10 100\\n\") == \"No\"\nassert solution(\"25\\n1 10 100\\n\") == \"No\"\nassert solution(\"26\\n1 10 100\\n\") == \"No\"\nassert solution(\"27\\n1 10 100\\n\") == \"No\"\nassert solution(\"28\\n1 10 100\\n\") == \"No\"\nassert solution(\"29\\n1 10 100\\n\") == \"No\"\nassert solution(\"30\\n1 10 100\\n\") == \"No\"\nassert solution(\"31\\n1 10 100\\n\") == \"No\"\nassert solution(\"32\\n1 10 100\\n\") == \"No\"\nassert solution(\"33\\n1 10 100\\n\") == \"No\"\nassert solution(\"34\\n1 10 100\\n\") == \"No\"\nassert solution(\"35\\n1 10 100\\n\") == \"No\"\nassert solution(\"36\\n1 10 100\\n\") == \"No\"\nassert solution(\"37\\n1 10 100\\n\") == \"No\"\nassert solution(\"38\\n1 10 100\\n\") == \"No\"\nassert solution(\"39\\n1 10 100\\n\") == \"No\"\nassert solution(\"40\\n1 10 100\\n\") == \"No\"\nassert solution(\"41\\n1 10 100\\n\") == \"No\"\nassert solution(\"42\\n1 10 100\\n\") == \"No\"\nassert solution(\"43\\n1 10 100\\n\") == \"No\"\nassert solution(\"44\\n1 10 100\\n\") == \"No\"\nassert solution(\"45\\n1 10 100\\n\") == \"No\"\nassert solution(\"46\\n1 10 100\\n\") == \"No\"\nassert solution(\"47\\n1 10 100\\n\") == \"No",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('yx') == 'Yes', \"Expected 'Yes' but got '{}' instead.\".format(solution('yx'))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\nassert solution(\"xya\") == \"No\"\nassert solution(\"a\") == \"No\"\nassert solution(\"b\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\nassert solution(\"xyz\") == \"No\"\nassert solution(\"abac\") == \"No\"\nassert solution(\"abcdefg\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"yx\") == \"Yes\", \"Expected Yes, got: \" + solution(\"yx\")\nassert solution(\"axy\") == \"No\", \"Expected No, got: \" + solution(\"axy\")",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('yx') == 'Yes', 'Expected Yes, but got {}'.format(solution('yx'))  # Test 1\nassert solution('axy') == 'No', 'Expected No, but got {}'.format(solution('axy'))  # Test 2\nassert solution('xyz') == 'Yes', 'Expected Yes, but got {}'.format(solution('xyz'))  # Test 3\nassert solution('abc') == 'No', 'Expected No, but got {}'.format(solution('abc'))  # Test 4\nassert solution('hello') == 'No', 'Expected No, but got {}'.format(solution('hello'))  # Test 5",
        "num_ids_2": 58,
        "num_ids_4": 114
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\nassert solution(\"xyz\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 5 1\") == \"YES\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 5 1\\n\") == \"YES\"\nassert solution(\"9 7 3\\n\") == \"NO\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 5 1\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"3 6 1\") == \"NO\"\nassert solution(\"7 100 1\") == \"YES\"\nassert solution(\"1 100 5\") == \"NO\"\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"2 3 5\") == \"NO\"\nassert solution(\"3 1 2\") == \"YES\"\nassert solution(\"4 5 7\") == \"NO\"\nassert solution(\"8 12 24\") == \"YES\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 5 1\") == \"YES\\n\", \"Test case failed.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"8 20 15\") == \"NO\"\nassert solution(\"7 14 1\") == \"YES\"\nassert solution(\"4 21 100\") == \"YES\"\nassert solution(\"10 5 1\") == \"NO\"\nassert solution(\"6 12 36\") == \"NO\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 5 1\") == \"YES\\n\"\nassert solution(\"2 5 3\") == \"YES\\n\"\nassert solution(\"7 10 1\") == \"YES\\n\"\nassert solution(\"1 10 1\") == \"YES\\n\"\nassert solution(\"1 10 5\") == \"YES\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\", \"Test case 1 failed\"\nassert solution(input()) == \"YES\", \"Test case 2 failed\"\nassert solution(input()) == \"NO\", \"Test case 3 failed\"\nassert solution(input()) == \"NO\", \"Test case 4 failed\"\nassert solution(input()) == \"NO\", \"Test case 5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the length and width of the farm in yards: \")) == \"1\", \"The area of this yard excluding the roads is not equal to 1 square yard.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1', \"The area of this yard excluding the roads should be 1 square yard.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2') == '1', \"Invalid input\"\nassert solution('1 2') == '1', \"Invalid input\"\nassert solution('3 2') == '4', \"Invalid input\"\nassert solution('2 3') == '4', \"Invalid input\"\nassert solution('2 1') == '1', \"Invalid input\"\nassert solution('1 1') == '1', \"Invalid input\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\", \"The area of this yard excluding the roads is not 1.\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1', \"The correct area should be printed as 1 square yard.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1\\n', 'Incorrect output'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"3 4\") == \"20\\n\", \"Test case 2 failed\"\nassert solution(\"10 10\") == \"240\\n\", \"Test case 3 failed\"\nassert solution(\"1 1\") == \"1\\n\", \"Test case 4 failed\"\nassert solution(\"100 100\") == \"1000\\n\", \"Test case 5 failed\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 43,
        "num_ids_4": 89
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\", \"The solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13 3 1\") == \"3\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('13 3 1') == '3\\n', \"The expected output is not correct.\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13 3 1\") == \"3\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13 3 1\") == \"3\"\n\nSolution:\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13 3 1\") == \"3\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13 3 1\") == \"3\\n\"\nassert solution(\"15 3 2\") == \"4\\n\"\nassert solution(\"13 5 1\") == \"4\\n\"\nassert solution(\"10 5 2\") == \"5\\n\"\nassert solution(\"15 4 2\") == \"5\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"14 2 2\") == \"4\"\nassert solution(\"12 4 3\") == \"5\"\nassert solution(\"13 3 4\") == \"6\"\nassert solution(\"11 3 1\") == \"4\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n\", \"Test case not passed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\"\"\") == \"2\"\nassert solution(\"\"\"6\n-10 5\n2 8\n-4 6\n5 2\n1 3\n6 9\n\"\"\") == \"2\"\nassert solution(\"\"\"7\n4 7\n-5 -10\n-2 1\n-5 3\n-4 9\n-9 5\n-6 -9\n\"\"\") == \"2\"\nassert solution(\"\"\"3\n1 2\n3 4\n5 6\n7 8\n9 10\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n\") == \"2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n\") == \"2\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\na_1 b_1\\na_2 b_2\\nc_1 d_1\\nc_2 d_2\") == \"2\"\nassert solution(\"2\\na_1 b_1\\na_2 b_2\\nc_1 d_1\\nc_2 d_2\") == \"1\"\nassert solution(\"1\\na_1 b_1\\na_2 b_2\\nc_1 d_1\\nc_2 d_2\") == \"0\"",
        "num_ids_2": 76,
        "num_ids_4": 114
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n\"\"\") == \"2\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '2'\nassert solution('') == '0'\nassert solution('6\\na b\\nc d\\nd e\\ne f\\nf g\\ng h\\nh i\\ni j\\nj k\\nk l\\nl m\\nm n\\nn o\\no p\\np q\\nr s\\ns t\\nt u\\nu v\\nv w\\nw x\\nx y\\ny z\\nz a\\na b\\nb c\\nc d\\nd e\\ne f\\nf g\\ng h\\nh i\\ni j\\nj k\\nk l\\nl m\\nm n\\nn o\\no p\\np q\\nr s\\ns t\\nt u\\nu v\\nv w\\nw x\\nx y\\ny z\\nz a\\na b\\nb c\\nc d\\nd e\\ne f\\nf g\\ng h\\nh i\\ni j\\nj k\\nk l\\nl m\\nm n\\nn o\\no p\\np q\\nr s\\ns t\\nt u\\nu v\\nv w\\nw x\\nx y\\ny z\\nz a\\na b\\nb c\\nc d\\nd e\\ne f\\nf g\\ng h\\nh i\\ni j\\nj k\\nk l\\nl m\\nm n\\nn o\\no p\\np q\\nr s\\ns t\\nt u\\nu v\\nv w\\nw x\\nx y\\ny z\\nz a\\na b\\nb c\\nc d\\nd e\\ne f\\nf g\\ng h\\nh i\\ni j\\nj k\\nk l\\nl m\\nm n\\nn o\\no p\\np q\\nr s\\ns t\\nt u\\nu v\\nv w\\nw x\\nx y\\ny z\\nz a\\na b\\nb c\\nc d\\nd e\\ne f\\nf g\\ng h\\nh i\\ni j\\nj k\\nk l\\nl m\\nm n\\nn o\\no p\\np q\\nr s\\ns t\\nt u\\nu v\\nv w\\nw x\\nx y\\ny z\\nz a\\na b\\nb c\\nc d\\nd e\\ne f\\nf g\\ng h\\nh i\\ni j\\nj k\\nk l\\nl m\\nm n\\nn o\\no p\\np q\\nr s\\ns t\\nt u\\nu v\\nv w\\nw x\\nx y\\ny z\\nz a\\na b\\nb c\\nc d\\nd e\\ne f\\nf g\\ng h\\nh i\\ni j\\nj k\\nk l\\nl m\\nm n\\nn o\\no p\\np q\\nr s\\ns t\\nt u\\nu v\\nv w\\nw x\\nx y\\ny z\\nz a\\na b\\nb c\\nc d\\nd e\\ne f\\nf g\\ng h\\nh i\\ni j\\nj k\\nk l\\nl m\\nm n\\nn o\\no p\\np q\\nr s\\ns t\\nt u\\nu v\\nv w\\nw x\\nx y\\ny z\\nz a\\na b\\nb c\\nc d\\nd e\\ne f\\nf g\\ng h\\nh i\\ni j\\nj k\\nk l\\nl m\\nm n\\nn o\\no p\\np q\\nr s\\ns t\\nt u\\nu v\\nv w\\nw x\\nx y\\ny z\\nz a\\na b\\nb c\\nc d\\nd e\\ne f\\nf g\\ng h\\nh i\\ni j\\nj k\\nk l\\nl m\\nm n\\nn o\\no p\\np q\\nr s\\ns t\\nt u\\nu v\\nv w\\nw x\\nx y\\ny z\\nz a\\na b\\nb c\\nc d\\nd e\\ne f\\nf g\\ng h\\nh i\\ni j\\nj k\\nk l\\nl m\\nm n\\nn o\\no p\\np q\\nr s\\ns t\\nt u\\nu v\\nv w\\nw x\\nx y\\ny z\\nz a\\na b\\nb c\\nc d\\nd e\\ne f\\nf g\\ng h\\nh i\\ni j\\nj k\\nk l\\nl m\\nm n\\nn o\\no p\\np q\\nr s\\ns t\\nt u\\nu v\\nv w\\nw x\\nx y\\ny z\\nz a",
        "num_ids_2": 50,
        "num_ids_4": 1027
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 4\\n0 3') == '7'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"7\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 4\\n0 3') == '7\\n'\nassert solution('3 2\\n3 4') == '6\\n'\nassert solution('2 4\\n0 1') == '7\\n'\nassert solution('2 4\\n0 2') == '7\\n'\nassert solution('3 2\\n3 4\\n0 1\\n1 2\\n2 3') == '10\\n'",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nassert solution(\"2 7\\n0 3\") == \"13\"\nassert solution(\"1000 100\\n0 1\\n0 2\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\") == \"500\"\nassert solution(\"1000 100\\n0 1\\n0 2\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\") == \"1000\"",
        "num_ids_2": 35,
        "num_ids_4": 144
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"7\", \"Output should be 7, but it is \" + solution()\nprint(\"All tests passed\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"7\\n\", \"The output is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nassert solution(\"3 4\\n2 3\") == \"7\"\nassert solution(\"2 4\\n3 2\") == \"7\"\nassert solution(\"4 3\\n2 1\") == \"6\"\nassert solution(\"2 3\\n1 2\") == \"6\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\n\nThis solution has a time complexity of O(N) as it iterates through the list of times T and calculates the difference between each consecutive push time. The space complexity is also O(N) as it creates a list of N times T to store the push times.",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\\n2\\n1\\n\"",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n\nassert solution == \"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\\n2\\n1\\n\"\n",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1\\n1\\n2\\n'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0\\n2\\n1\\n'\nassert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1\\n1\\n2\\n'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0\\n2\\n1\\n'\nassert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1\\n1\\n2\\n'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0\\n2\\n1\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"2\"\n\nassert solution() == \"0\"\nassert solution() == \"2\"\nassert solution() == \"1\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    8\n    1\n    1\n    1\n    2\n    1\n    1\n    2\n''') == '1\\n1\\n2\\n'\nassert solution('''\n    10\n    100\n    100000\n    100000\n    101\n    100\n    100000\n    100000\n    123\n    115\n    110\n''') == '0\\n2\\n1\\n'\n\nprint('All test cases passed.')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1\\n1\\n2\\n'\nassert solution() == '0\\n2\\n1\\n'\nassert solution() == '2\\n1\\n1\\n'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n1\\n2\\n'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"0\"\nassert solution() == \"2\"\nassert solution() == \"1\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"1\"\nassert solution(\"\") == \"1\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output\\n0\\n4\\n6\\n6\\n-1\\n6\\n72\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 0\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 3\nassert solution(5) == 4\nassert solution(6) == 5\nassert solution(7) == 6\nassert solution(8) == 6\nassert solution(9) == 7\nassert solution(10) == 7\nassert solution(11) == 8\nassert solution(12) == 8\nassert solution(13) == 9\nassert solution(14) == 9\nassert solution(15) == 10\nassert solution(16) == 10\nassert solution(17) == 10\nassert solution(18) == 11\nassert solution(19) == 11\nassert solution(20) == 11\nassert solution(21) == 12\nassert solution(22) == 12\nassert solution(23) == 13\nassert solution(24) == 13\nassert solution(25) == 14\nassert solution(26) == 14\nassert solution(27) == 15\nassert solution(28) == 15\nassert solution(29) == 16\nassert solution(30) == 16\nassert solution(31) == 17\nassert solution(32) == 17\nassert solution(33) == 18\nassert solution(34) == 18\nassert solution(35) == 19\nassert solution(36) == 19\nassert solution(37) == 20\nassert solution(38) == 20\nassert solution(39) == 21\nassert solution(40) == 21\nassert solution(41) == 22\nassert solution(42) == 22\nassert solution(43) == 23\nassert solution(44) == 23\nassert solution(45) == 24\nassert solution(46) == 24\nassert solution(47) == 25\nassert solution(48) == 25\nassert solution(49) == 26\nassert solution(50) == 26\nassert solution(51) == 27\nassert solution(52) == 27\nassert solution(53) == 28\nassert solution(54) == 28\nassert solution(55) == 29\nassert solution(56) == 29\nassert solution(57) == 30\nassert solution(58) == 30\nassert solution(59) == 31\nassert solution(60) == 31\nassert solution(61) == 32\nassert solution(62) == 32\nassert solution(63) == 33\nassert solution(64) == 33\nassert solution(65) == 34\nassert solution(66) == 34\nassert solution(67) == 35\nassert solution(68) == 35\nassert solution(69) == 36\nassert solution(70) == 36\nassert solution(71) == 37\nassert solution(72) == 37\nassert solution(73) == 38\nassert solution(74) == 38\nassert solution(75) == 39\nassert solution(76) == 39\nassert solution(77) == 40\nassert solution(78) == 40\nassert solution(79) == 41\nassert solution(80) == 41\nassert solution(81) == 42\nassert solution(82) == 42\nassert solution(83) == 43\nassert solution(84) == 43\nassert solution(85) == 44\nassert solution(86) == 44\nassert solution(87) == 45\nassert solution(88) == 45\nassert solution(89) == 46\nassert solution(90) == 46\nassert solution(91) == 47\nassert solution(92) == 47\nassert solution(93) == 48\nassert solution(94) == 48\nassert solution(95) == 49\nassert solution(9",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0, \"Test Failed\" # correct\nassert solution() == 4, \"Test Failed\" # correct\nassert solution() == 6, \"Test Failed\" # correct\nassert solution() == 6, \"Test Failed\" # correct\nassert solution() == -1, \"Test Failed\" # incorrect\nassert solution() == 6, \"Test Failed\" # incorrect\nassert solution() == 72, \"Test Failed\" # incorrect\nassert solution() == 0, \"Test Failed\" # incorrect\nassert solution() == 6, \"Test Failed\" # incorrect\nassert solution() == 6, \"Test Failed\" # incorrect",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"\n0\n4\n6\n6\n-1\n6\n72\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test case {t+1} failed: Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"Test failed for {n}\\nExpected output: {expected_output}\\nActual output: {solution}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(30) == 6\nassert solution(20) == 4\nassert solution(24) == 6\nassert solution(1000000000000000000) == -1\nassert solution(1) == 0\nassert solution(10) == 0\nassert solution(2) == 0\nassert solution(0) == 0\nassert solution(5) == 1\nassert solution(7) == 3\nassert solution(15) == 3\nassert solution(25) == 6\nassert solution(30) == 6\nassert solution(14) == 4\nassert solution(27) == 6\n",
        "num_ids_2": 20,
        "num_ids_4": 57
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\", \"Please provide the solution code.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'YES\\nNO\\nYES\\nYES'\nassert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'YES\\nNO\\nYES\\nYES'",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\\nNO\\nYES\\nYES\"\nprint(\"All test cases passed\")",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()}!= {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n3\") == \"YES\"\nassert solution(\"4\\n1\\n2\\n11\\n11\\n1\") == \"YES\"\nassert solution(\"1\\n1\\n100\") == \"NO\"",
        "num_ids_2": 43,
        "num_ids_4": 61
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case {test_case_num} failed: {output} vs. {expected}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Output: {solution(input())}, Expected output: {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7abacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"5zcabd\\ndbacz\\n\") == \"0\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == \"0\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"4\"\nassert solution(\"zcabd\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == 4\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == 0",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\\n\"\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == \"0\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\").read()) == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"\n8\n198\n-17\n2999999997\n0\n1\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n\"\"\") == \"\"\"\n8\n198\n-17\n2999999997\n0\n1\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    6\n    5 2 3\n    100 1 4\n    1 10 5\n    1000000000 1 6\n    1 1 1000000000\n    1 1 999999999\n    '''\n) == '''\n    8\n    198\n    -17\n    2999999997\n    0\n    1\n'''\n\nassert solution(\n    '''\n    4\n    5 2 3\n    100 1 4\n    1 10 5\n    1000000000 1 6\n    1 1 1000000000\n    1 1 999999999\n    '''\n) == '''\n    2\n    2\n    5\n    1000000000\n    0\n    1\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution('2\\n10 1 1\\n100 1 2\\n100 1 3\\n1000000000 1 4\\n1000000000 1 5\\n1000000000 1 6\\n') == '198\\n-17\\n2999999997\\n0\\n1'\nassert solution('3\\n10 2 1\\n100 1 2\\n100 1 3\\n1000000000 1 4\\n1000000000 1 5\\n1000000000 1 6\\n') == '198\\n-17\\n2999999997\\n0\\n1'\nassert solution('4\\n100 1 1\\n100 1 2\\n100 1 3\\n1000000000 1 4\\n1000000000 1 5\\n1000000000 1 6\\n') == '2999999997\\n0\\n1'\nassert solution('5\\n1000000000 1 1\\n1000000000 1 2\\n1000000000 1 3\\n1000000000 1 4\\n1000000000 1 5\\n1000000000 1 6\\n') == '0\\n1'\n",
        "num_ids_2": 222,
        "num_ids_4": 435
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"\nassert solution(\"6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"\nassert solution(\"10\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"\nassert solution(\"10\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 215,
        "num_ids_4": 435
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Your code is incorrect. Expected {expected}, but got {solution(stdin)}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=__stdin__) == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\\n', 'Test case 1 failed'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\", \"Your solution is incorrect.\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=None) == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed: Expected output: {expected_output}, but got: {solution(stdin)}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected, f\"The output does not match the expected output. Output: {output}, Expected output: {expected}\"\nfor i in range(q):\n    n = int(stdin.readline().strip())\n    output = solution(str(n))\n    expected = \" \".join(map(str, [min(m, 10**18) for m in range(1, n + 1)]))\n    assert output == expected, f\"Test case {i + 1} failed. Output: {output}, Expected output: {expected}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: got '{solution(input())}', expected '{expected_output}'\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == expected_output\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n10\\n8\\n5\\n3\\n12\\n8\\n8\\n7\\n2\\n12343\\n43\\n4543\\n39\\n123212\\n1000000000\\n1000000000\\n1\\n1\\n1000000000\\n1000000000\\n10\\n11\\n2\\n1\\n5\\n10\\n11\\n9\\n1\\n10\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 209,
        "num_ids_4": 209
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10') == '70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10'",
        "num_ids_2": 203,
        "num_ids_4": 203
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"70\\n77\\n177177\\n999999999000000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 175,
        "num_ids_4": 175
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000') == '70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10'",
        "num_ids_2": 179,
        "num_ids_4": 179
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 178,
        "num_ids_4": 178
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\", \"Testcase 1 failed\"\n\nassert solution(stdin) == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\", \"Testcase 2 failed\"\n\nassert solution(stdin) == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\", \"Testcase 3 failed\"\n\nassert solution(stdin) == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\", \"Testcase 4 failed\"\n\nassert solution(stdin) == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\", \"Testcase 5 failed\"\n\nassert solution(stdin) == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\", \"Testcase 6 failed\"\n\nassert solution(stdin) == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\", \"Testcase 7 failed\"\n\nassert solution(stdin) == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\", \"Testcase 8 failed\"",
        "num_ids_2": 136,
        "num_ids_4": 272
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 202,
        "num_ids_4": 202
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Test case {i+1} is incorrect. Expected: {output}, Received: {solution(stdin)}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='2\\n3\\n10\\n2\\n4\\n7\\n4\\n9\\n3\\n') == '1\\n0\\n2\\n2\\n1'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\", \"1\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n10 10\\n2 4\\n7 4\\n9 3\") == \"1\\n0\\n2\\n2\\n1\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test Case {i+1}:\\nInput: {stdin}\\nOutput: {output}\\nExpected Output: {expected}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '1\\n'\nassert solution(5) == '2\\n'\nassert solution(6) == '0\\n'\nassert solution(7) == '2\\n'\nassert solution(9) == '2\\n'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n10 10\\n2 4\\n7 4\\n9 3') == '1\\n0\\n2\\n2\\n1'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == '1\\n0\\n0\\n0\\n0'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n7 7\\n8 8\\n9 9\\n10 10\\n8 8\\n9 9\\n10 10\\n9 9\\n10 10\\n10 10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n7 7\\n8 8\\n9 9\\n10 10\\n8 8\\n9 9\\n10 10\\n9 9\\n10 10\\n10 10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n7 7\\n8 8\\n9 9\\n10 10\\n8 8\\n",
        "num_ids_2": 117,
        "num_ids_4": 1027
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed\"\nfor t in range(int(stdin), int(stdin)+int(stdin)):\n    a, b = map(int, input().split())\n    solution = solution(input())\n    if solution == \"1\":\n        print(0)\n    else:\n        print(solution)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n0\\n2\\n2\\n1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"13\\n90\"\n\nfrom typing import List",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '13'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n22\\n9999\\n1\\n777\") == \"13\\n90\\n1\\n66\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4, 22, 9999, 1, 777) == 13\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n22\\n9999\\n1\\n777') == '13\\n90\\n1\\n66'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n22\\n9999\\n1\\n777\") == \"13\\n90\\n1\\n66\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n22\\n9999\\n1\\n777\") == \"13\\n90\\n1\\n66\"\nassert solution(\"1\\n\") == \"0\\n0\"\nassert solution(\"1\\n22\\n33\\n44\\n55\\n66\\n77\\n88\\n99\\n100\") == \"13\\n90\\n1\\n66\"",
        "num_ids_2": 55,
        "num_ids_4": 114
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n22\\n9999\\n1\\n777\\n') == '13\\n90\\n1\\n66'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == '13'\nassert solution(2) == '90'\nassert solution(3) == '16'\nassert solution(4) == '98'\nassert solution(5) == '1000'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n22\\n9999\\n1\\n777\") == \"13\\n90\\n1\\n66\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n\") == \"YES\\n2 6\\n1 2\\nNO\\nNO\\nYES\\n2 2\\n4 1\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\\n2 6\\n1 2\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\\n2 2\\n4 1\"",
        "num_ids_2": 30,
        "num_ids_4": 50
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\\n2 6\\n1 2\"\n\nassert solution() == \"NO\"\n\nassert solution() == \"YES\\n2 2\\n4 1\"\n\nassert solution() == \"YES\\n2 2\\n4 1\"\n\nassert solution() == \"YES\\n2 2\\n4 1\"",
        "num_ids_2": 26,
        "num_ids_4": 62
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == '''YES\n2 6\n1 2\n\nNO\n\nYES\n2 2\n4 1'''",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'YES\\n2 6\\n1 2\\nNO\\nYES\\n2 2\\n4 1\\n'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES\\n2 6\\n1 2'\n\nassert solution('''\n3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\n\nassert solution('''\n4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES\\n2 2\\n4 1'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n\") == \"YES\\n2 6\\n1 2\\n\\nNO\\n\\nYES\\n2 2\\n4 1\\n\"\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\\n2 6\\n1 2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\n2 6\\n1 2\\nNO\\nYES\\n2 2\\n4 1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"YES\\n2 6\\n1 2\") == \"YES\\n2 6\"\nassert solution(\"NO\\n2 6\\n1 2\") == \"NO\"\nassert solution(\"YES\\n2 2\\n4 1\") == \"YES\\n2 2\"\n\nfrom typing import List",
        "num_ids_2": 45,
        "num_ids_4": 70
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13\nassert solution([1,-2,-1,3,-2], 4) == 5",
        "num_ids_2": 34,
        "num_ids_4": 75
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 5\nassert solution(2) == 6\nassert solution(3) == 6\nassert solution(2) == 13\n",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4,2,3,1\") == \"5\"\nassert solution(\"3,-1,0,2,1\") == \"6\"\nassert solution(\"2,-3,-1,5,-4\") == \"13\"",
        "num_ids_2": 34,
        "num_ids_4": 53
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4,2,3) == 5, \"Test 1 failed\"\nassert solution(3,2,3) == 6, \"Test 2 failed\"\nassert solution(2,2,3) == 13, \"Test 3 failed\"\nassert solution(3,1,0,2) == 6, \"Test 4 failed\"\nassert solution(2,-3,-1,5,-4) == 13, \"Test 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 83
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([4,2,3], 1) == \"Choose indices (1,) and A becomes [4,-2,3]\"\nassert solution([3,-1,0,2], 3) == \"Choose indices (1, 2, 2) and A becomes [3,1,0,2]\"\nassert solution([2,-3,-1,5,-4], 2) == \"Choose indices (1, 4) and A becomes [2,3,-1,5,4]\"",
        "num_ids_2": 70,
        "num_ids_4": 111
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == \"true\"\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == \"false\"\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == \"true\"",
        "num_ids_2": 60,
        "num_ids_4": 88
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == \"true\"\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == \"false\"\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == \"true\"",
        "num_ids_2": 80,
        "num_ids_4": 117
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == \"true\"\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == \"false\"\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == \"true\"",
        "num_ids_2": 60,
        "num_ids_4": 88
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\n",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\nassert solution([0,1,1,2,2,3,3,4,4,5,5]) == True",
        "num_ids_2": 56,
        "num_ids_4": 110
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n\") == \"beet\\nvet\"\nassert solution(\"7\\nbeat\\nvet\\nbet\\nbet\\nbet\\n\") == \"beet\\nvet\"\nassert solution(\"10\\naaaaaaaaaa\\nccccccccc\\ndddddddddd\\neeeeeeeeeee\\nfghijklmno\\nhijklmnopqrst\\nnnnnnnnnn\\noopqrstuvw\\n\") == \"aaaaaa\\nbbbbbbb\\ncccccc\\nddddddd\\neeeeeee\\nfghijkl\\nhijklmn\\nooooop\\npqrstuv\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 162
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbet\\nbet\\nbet\\nbet\") == \"beet\\nvet\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet\\nvet\\nbet\\nbeet\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbet\\nbed\\nbet\\nbeet\") == \"beet\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet\\nvet\\n\"\nassert solution(\"7\\nbeat\\nbeet\\nbed\\nbet\\nvet\\nbeet\") == \"beet\\n\"\nassert solution(\"7\\nbeat\\nbet\\nvet\\nbed\\nbet\\nbeet\\nbeet\") == \"beet\\n\"\nassert solution(\"7\\nbeat\\nbet\\nvet\\nbed\\nbet\\nbet\\nbeet\") == \"beet\\n\"\nassert solution(\"7\\nbeat\\nbet\\nvet\\nbed\\nbet\\nbet\\nbet\\nbeet\\nbeet\\n\") == \"beet\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 143
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'beet\\nvet\\n'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbet\\nbeat\\nbed\\nvet\\nbet\\nbeat\\n\") == \"beet\\nvet\\nbet\\nbeat\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet') == 'beet\\nvet'\nassert solution('1\\napple\\norange\\nbanana\\ngrape') == 'apple\\norange\\nbanana\\ngrape'\nassert solution('1\\ncat\\ndog\\ncats\\ndogs\\ncats\\n') == 'cat\\ndog\\ncats\\n'\nassert solution('1\\nhello\\nworld\\nhello\\nworld\\nhello\\n') == 'hello\\nworld\\nhello\\n'\nassert solution('2\\napple\\nbanana\\norange\\ngrape') == 'orange\\nbanana\\napple\\ngrape'",
        "num_ids_2": 71,
        "num_ids_4": 142
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbete\") == \"beet\\nvet\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbete\\n\") == \"beet\\nvet\\n\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n\") == \"beet\\nvet\\n\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\\n\") == \"beet\\nvet\\n\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\beet\\n\") == \"beet\\nvet\\n\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\beet\\neet\\n\") == \"beet\\nvet\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 161
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\n\"\nassert solution(\"1\\n5 7\") == \"7\\n\"\nassert solution(\"3\\n1 1 1 1\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"8\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 8\\n\") == \"8\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"8\", \"Expected output: 8\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\n\"\nassert solution(\"3\\n1 2 3\") == \"1\\n\"\nassert solution(\"4\\n2 4 6\") == \"1\\n\"\nassert solution(\"5\\n4 3 5 6\") == \"2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\n\", \"Test failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\n\", \"The minimum total cost to achieve Evi's objective is incorrect.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 8\") == \"8\"\nassert solution(\"3\\n1 2 3\") == \"6\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"12\"\nassert solution(\"10\\n1 1 2 2 3 3 4 4 5 5\") == \"10\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 2 1\") == \"4\"",
        "num_ids_2": 32,
        "num_ids_4": 96
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 8\\n\") == \"8\\n\", \"Sample Output\"\nassert solution(\"3\\n2 6 9\\n\") == \"18\\n\", \"Sample Output\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"14\\n\", \"Sample Output\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"20\\n\", \"Sample Output\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"26\\n\", \"Sample Output\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"32\\n\", \"Sample Output\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"38\\n\", \"Sample Output\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n\") == \"44\\n\", \"Sample Output\"",
        "num_ids_2": 49,
        "num_ids_4": 107
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 8\") == \"8\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1234 150 100\") == \"84\"\nprint(\"All tests passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1234\\n150\\n100\\n\") == \"84\\n\"\nassert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"84\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1234\\n150\\n100') == '84'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1234\") == \"84\\n\"\nassert solution(\"150\") == \"1084\\n\"\nassert solution(\"100\") == \"0\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 47
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '8\\n', \"Incorrect output. The function should return the number of possible arrangements.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"1 1\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"8\", \"Your solution is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=None) == '8\\n', \"The solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"8\\n\", \"Output does not match\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n\") == \"8\\n\"\nassert solution(\"1 2\\n\") == \"2\\n\"\nassert solution(\"3 3\\n\") == \"0\\n\"\nassert solution(\"10 10\\n\") == \"12\\n\"\nassert solution(\"20 20\\n\") == \"20\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"8\\n\", \"Solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2') == '8\\n', 'Snuke has N dogs and M monkeys. He wants them to line up in a row. As a Japanese saying goes, these dogs and monkeys are on bad terms. (\"ken'en no naka\", literally \"the relationship of dogs and monkeys\", means a relationship of mutual hatred.) Snuke is trying to reconsile them, by arranging the animals so that there are neither two adjacent dogs nor two adjacent monkeys. How many such arrangements there are? Find the count modulo 10^9+7 (since animals cannot understand numbers larger than that). Here, dogs and monkeys are both distinguishable. Also, two arrangements that result from reversing each other are distinguished.'",
        "num_ids_2": 173,
        "num_ids_4": 173
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n\") == \"8\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"8\\n\", \"The output is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"POSSIBLE\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"POSSIBLE\"\nprint(\"All test cases passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\\n\"\nassert solution(\"4 2\\n1 2\\n2 3\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"5 2\\n1 2\\n2 3\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"1 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\\n\"\nassert solution(\"1 2\\n1 2\\n2 3\\n4 2\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"1 2\\n1 2\\n2 3\\n1 2\\n\") == \"POSSIBLE\\n\"\nassert solution(\"1 2\\n1 2\\n2 3\\n1 2\\n\") == \"POSSIBLE\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 3\\n2 4\\n\") == \"IMPOSSIBLE\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"POSSIBLE\"\nassert solution(\"2 2\\n1 3\\n2 4\\n\") == \"IMPOSSIBLE\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n1 2\\n2 3') == 'POSSIBLE'\nassert solution('3 2\\n1 3\\n2 3') == 'IMPOSSIBLE'\nassert solution('3 2\\n1 1\\n2 2') == 'IMPOSSIBLE'\nassert solution('3 2\\n1 2\\n3 3') == 'IMPOSSIBLE'\nassert solution('3 2\\n2 1\\n3 2') == 'IMPOSSIBLE'\nassert solution('3 2\\n2 2\\n3 1') == 'IMPOSSIBLE'\nassert solution('3 2\\n2 3\\n3 2') == 'IMPOSSIBLE'\nassert solution('3 2\\n3 1\\n2 2') == 'IMPOSSIBLE'\nassert solution('3 2\\n3 2\\n2 1') == 'IMPOSSIBLE'\nassert solution('3 2\\n3 3\\n2 1') == 'IMPOSSIBLE'\nassert solution('3 2\\n3 2\\n3 3') == 'IMPOSSIBLE'",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\na_1 b_1\\na_2 b_2\") == \"POSSIBLE\"\nassert solution(\"2 3\\na_1 b_1\\na_2 b_2\") == \"POSSIBLE\"\nassert solution(\"4 3\\na_1 b_1\\na_2 b_2\") == \"IMPOSSIBLE\"\nassert solution(\"3 3\\na_1 b_1\\na_2 b_2\") == \"IMPOSSIBLE\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"4 3\\n1 2\\n2 3\\n\") == \"IMPOSSIBLE\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"atcoder\") == \"acdr\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"atcoder\") == \"acdr\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('atcoder') == 'acdr', \"Test case 1 failed\"\nassert solution('abracadabra') == 'abracadabra', \"Test case 2 failed\"\nassert solution('hello world') == 'dlrow', \"Test case 3 failed\"\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'cdehijk', \"Test case 4 failed\"\nassert solution('1234567890') == '34567890', \"Test case 5 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('atcoder') == 'acdr'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"The correct output should be acdr.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('atcoder') == 'acdr', \"Expected 'acdr' but got '{}'\".format(solution('atcoder'))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"hello\") == \"heo\"\nassert solution(\"world\") == \"dlwr\"\nassert solution(\"leetcode\") == \"etol\"\nassert solution(\"codingleet\") == \"cdglt\"",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"atcoder\") == \"acdr\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"atcoder\") == \"acdr\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('atcoder') == 'acdr'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"apple goat\") == \"NO\"\nassert solution(\"banana\") == \"NO\"\nassert solution(\"abc\") == \"NO\"",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"cat bear\") == \"NO\"\nassert solution(\"Hello World\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"Solution not passing\"\nassert solution(\"apple banana\") == \"NO\", \"Solution not passing\"\nassert solution(\"hello world\") == \"YES\", \"Solution not passing\"\nassert solution(\"racecar\") == \"NO\", \"Solution not passing\"\nassert solution(\"gazelle\") == \"NO\", \"Solution not passing\"",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"Solution does not work\"\nassert solution(\"eggs banana chips\") == \"NO\", \"Solution does not work\"\nassert solution(\"hello world\") == \"NO\", \"Solution does not work\"",
        "num_ids_2": 40,
        "num_ids_4": 57
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"racecar\") == \"NO\"\nassert solution(\"hello world\") == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"You are given a wrong input\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"hello world\") == \"NO\"\nassert solution(\"hello\") == \"YES\"\nassert solution(\"abcde\") == \"YES\"\nassert solution(\"abcdeabcde\") == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"Solution is incorrect.\"\nassert solution(\"apple american\") == \"YES\", \"Solution is incorrect.\"\nassert solution(\"apple banana orange\") == \"NO\", \"Solution is incorrect.\"\nassert solution(\"apple banana\") == \"NO\", \"Solution is incorrect.\"\nassert solution(\"apple\") == \"NO\", \"Solution is incorrect.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"Test failed: %s\" % solution(\"rng gorilla apple\")\nprint(\"Test passed.\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('36\\n24') == 'GREATER', \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\"\nassert solution(\"1\\n2\") == \"LESS\"\nassert solution(\"1\\n2\") == \"EQUAL\"\n",
        "num_ids_2": 29,
        "num_ids_4": 42
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"36\\n24\\n\") == \"GREATER\\n\", \"The function should return GREATER if A>B, LESS if A<B and EQUAL if A=B.\"\n\nassert solution(\"12\\n12\\n\") == \"EQUAL\\n\", \"The function should return EQUAL if A=B.\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"36\\n24\\n\") == \"GREATER\\n\", \"Input not correct.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"36\\n24\\n\") == \"GREATER\\n\", \"Solution does not work as expected.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\", \"Test failed for the given constraints.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\\n\", \"The solution is incorrect\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2\\n'\nassert solution('4\\napple\\nbanana\\nwheat\\n3\\nbananas\\nbanana\\nbanana\\n') == '4\\n'\nassert solution('1\\napple\\n') == '1\\n'\nassert solution('1\\napple\\n1\\nbanana\\n') == '2\\n'\nassert solution('1\\nbanana\\n2\\napple\\n') == '2\\n'\nassert solution('1\\napple\\n2\\nbanana\\n3\\norange\\n') == '3\\n'\nassert solution('1\\napple\\n2\\nbanana\\n3\\norange\\n4\\nbanana\\n') == '4\\n'",
        "num_ids_2": 69,
        "num_ids_4": 110
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n\nN = int(stdin.readline().strip())\ns = list(stdin.readline().strip())\nt = list(stdin.readline().strip())",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\norange\\n1\\ngrape\\n\") == \"2\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\napple\\nother\\napple\\n1\\ngrape\\n\") == \"2\\n\"\nassert solution(\"5\\ncat\\nbig\\nbird\\n\") == \"1\\n\"\nassert solution(\"1\\nbird\\n\") == \"0\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 70
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\napple\\no\\napple\\n1\\ngrape\\n\") == \"2\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\\n\"\nassert solution(\"1\\napple\\norange\\n2\\nbanana\\n3\\ncherry\\n\") == \"2\\n\"\nassert solution(\"1\\napple\\nbanana\\n2\\nbanana\\n3\\ncherry\\n\") == \"1\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 99
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3\napple\norange\napple\n1\ngrape\n''') == '2\\n'",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\napple\\nother\\nbig_apple\\n\") == \"2\\n\"\nassert solution(\"5\\na\\nb\\nc\\nd\\n\") == \"2\\n\"\nassert solution(\"1\\napple\\norange\\nbig_apple\\n\") == \"2\\n\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"1\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 118
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\napple\\noorange\\napple\\n1\\ngrape\\n') == '2\\n'\n\nsolution('3\\napple\\noorange\\napple\\n1\\ngrape\\n')",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"T\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A\") == \"T\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"T\", \"Incorrect Output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"T\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"T\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"\nassert solution(\"D\") == \"N\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"T\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"T\", \"Expected T, got: {}\".format(solution(\"A\"))  # correct\nassert solution(\"C\") == \"C\", \"Expected C, got: {}\".format(solution(\"C\"))  # correct\nassert solution(\"G\") == \"C\", \"Expected C, got: {}\".format(solution(\"G\"))  # correct\nassert solution(\"T\") == \"A\", \"Expected A, got: {}\".format(solution(\"T\"))  # correct",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A\") == \"T\"\n\nprint(\"Test Passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nA1 2 2 4 1\\nA2 1 2 2 1\\nA1 2 2 2 1\\nA2 1 2 2 1\\nA1 2 2 2 1\\n\") == \"14\"\nassert solution(\"5\\nA1 3 2 4 1\\nA2 1 2 2 1\\nA1 2 2 2 1\\nA2 1 2 2 1\\nA1 2 2 2 1\\nA1 2 2 2 1\\n\") == \"14\"",
        "num_ids_2": 147,
        "num_ids_4": 147
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n3 2 2 4 1\\n1 2 2 2 1') == '14\\n'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1 2 2 4 1\") == \"14\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\\n\"\nassert solution(\"10\\n4 3 2 1\\n2 2 2 1\") == \"17\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '14\\n', 'Test failed'\nprint('Test passed')",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\\n\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\\n1 2 2 2 1\\n1 2 2 2 1\\n1 2 2 2 1\") == \"14\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"14\", \"Incorrect output.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\\n\") == \"14\\n\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\\n\") == \"14\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n3 2 2 4 1\\n1 2 2 2 1\\n') == '14'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\\n\"\nassert solution(\"4 3\\n2 2 3 3\") == \"2\\n\"\nassert solution(\"5 4\\n1 2 3 3 4\") == \"4\\n\"\nassert solution(\"6 5\\n1 2 3 3 4 5\") == \"6\\n\"\nassert solution(\"7 6\\n1 2 3 3 4 5 6\") == \"8\\n\"\nassert solution(\"8 7\\n1 2 3 3 4 5 6 7\") == \"10\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 96
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\\n\"\nassert solution(\"5 10\\n5 20\\n20 10\") == \"2\\n\"\nassert solution(\"7 5\\n10 20\\n30 10\\n15 25\") == \"2\\n\"\nassert solution(\"10 100\\n50 200\\n300 200\\n200 500\\n100 400\") == \"3\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 136
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\"\nassert solution(\"4 4\\n2 2 2\") == \"2\"\nassert solution(\"3 4\\n1 2 3\") == \"3\"\nassert solution(\"3 2\\n1 2 3\") == \"1\"\nassert solution(\"2 2\\n1 2 3\") == \"3\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\\n\"\nassert solution(\"5 4\\n2 3 4 5\") == \"3\\n\"\nassert solution(\"6 5\\n1 2 3 4 5\") == \"4\\n\"\nassert solution(\"7 6\\n1 2 3 4 5 6\") == \"7\\n\"\nassert solution(\"8 7\\n1 2 3 4 5 6 7\") == \"9\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 96
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 2 2\") == \"0\"\nassert solution(\"3 10\\n1 2 3\") == \"3\"\nassert solution(\"1000000000\") == \"Infinity\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nprint(\"No\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == 'Yes\\n'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n3 0 3\\n') == 'No\\n'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n4 0 4\\n') == 'No\\n'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n5 0 5\\n') == 'No\\n'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n0 0 0\\n') == 'No\\n'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n1 1 1\\n') == 'No\\n'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n1 1 2\\n') == 'No\\n'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n1 1 3\\n') == 'No\\n'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n1 1 4\\n') == 'No\\n'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n1 1 5\\n') == 'No\\n'",
        "num_ids_2": 71,
        "num_ids_4": 149
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 0\\n2 1 2\\n1 0 1\") == \"No\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\") == \"No\"",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\\n\"\nassert solution(\"2 1 2\\n1 0 1\\n2 1 2\") == \"No\\n\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 90
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('0 1 0\\n0 0 0\\n0 1 0') == 'No'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('ABC') == 'ARC', \"There is no ARC contest held this week.\"\nassert solution('ARC') == 'ABC', \"There is no ABC contest held this week.\"\nassert solution('AB') == 'AB', \"There is no contest held this week.\"",
        "num_ids_2": 40,
        "num_ids_4": 59
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == \"ARC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == \"ARC\", \"Test failed\"\nassert solution(\"ARC\") == \"ABC\", \"Test failed\"\nassert solution(\"ABC\") == \"ARC\", \"Test failed\"\nassert solution(\"ABC\") == \"ARC\", \"Test failed\"\nassert solution(\"ABC\") == \"ARC\", \"Test failed\"\nassert solution(\"ABC\") == \"ARC\", \"Test failed\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == \"ARC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('ABC') == 'ARC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('ABC') == 'ARC', \"The function should return 'ARC' for the given input\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == \"ARC\"\n\nThis test case is expected to pass. The code is correct.",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == \"ARC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABC\") == \"ARC\", \"Error: The solution is incorrect.\"\nassert solution(\"ARC\") == \"ABC\", \"Error: The solution is incorrect.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 8 2\") == \"3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b\"4 8 2\") == \"3\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"1 10 3\") == \"4\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"1\"",
        "num_ids_2": 29,
        "num_ids_4": 70
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 8 2\") == \"3\", \"Test 1\"\nassert solution(\"2 7 3\") == \"2\", \"Test 2\"\nassert solution(\"100 100 100\") == \"0\", \"Test 3\"\nassert solution(\"1 20 4\") == \"2\", \"Test 4\"\nassert solution(\"99 100 100\") == \"1\", \"Test 5\"\nassert solution(\"1000 1000 1000\") == \"0\", \"Test 6\"",
        "num_ids_2": 38,
        "num_ids_4": 83
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('5 10 3') == '2'\nassert solution('6 10 6') == '0'\nassert solution('7 10 9') == '2'\nassert solution('8 10 10') == '0'",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 8 2\") == \"3\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 8 2') == '3'\nprint('All tests passed!')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"2 3 5\") == \"2\"\nassert solution(\"0 5 2\") == \"0\"\nassert solution(\"1 10 2\") == \"2\"\nassert solution(\"1 20 2\") == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 8 2\") == \"3\"\n\nassert solution(\"1 20 3\") == \"2\"\n\nassert solution(\"5 10 5\") == \"2\"\n\nassert solution(\"1 10 3\") == \"1\"\n\nassert solution(\"2 2 2\") == \"0\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 8 2\") == \"3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\nassert solution(\"21\") == \"Christmas\"\nassert solution(\"10\") == \"New Year's Day\"",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Christmas\\n', \"Test Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Christmas\", \"Incorrect solution\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Christmas\"\nprint(\"Hello World!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Christmas\", \"Test case failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"25\") == \"Christmas\", \"Test Case 1\"\nassert solution(\"24\") == \"Christmas Eve\", \"Test Case 2\"\nassert solution(\"23\") == \"Christmas Eve Eve\", \"Test Case 3\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\", \"Test Case 4\"\nassert solution(\"21\") == \"Christmas\", \"Test Case 5\"",
        "num_ids_2": 38,
        "num_ids_4": 84
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Christmas\\n\", \"Test failed for solution 1.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"25\") == \"Christmas\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"25\") == \"Christmas\\n\"\nassert solution(\"24\") == \"Christmas Eve\\n\"\nassert solution(\"23\") == \"Christmas Eve Eve\\n\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\\n\"\nassert solution(\"21\") == \"Christmas Eve Eve Eve Eve\\n\"\nassert solution(\"20\") == \"Christmas Eve Eve Eve Eve Eve\\n\"\nassert solution(\"19\") == \"Christmas Eve Eve Eve Eve Eve Eve\\n\"\nassert solution(\"18\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve\\n\"\nassert solution(\"17\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve\\n\"\nassert solution(\"16\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 68
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"25\") == \"Christmas\\n\", \"The function should return 'Christmas'\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"4\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n4 can be divided by 2 twice, which is the most number of times among 1, 2,..., 7.\", \"Test case 1 failed.\"\n\nassert solution(input()) == \"7\\n4 can be divided by 2 twice, which is the most number of times among 1, 2,..., 7.\", \"Test case 2 failed.\"\n\nassert solution(input()) == \"8\\n4 can be divided by 2 three times, which is the most number of times among 1, 2,..., 7.\", \"Test case 3 failed.\"\n\nassert solution(input()) == \"3\\n4 can be divided by 2 zero times.\", \"Test case 4 failed.\"\n\nassert solution(input()) == \"5\\nNo integers can be divisible by 2 in the range 1 to 5.\", \"Test case 5 failed.\"",
        "num_ids_2": 90,
        "num_ids_4": 164
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7) == \"4\", \"The correct answer is: 4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == 'Answer:', 'Your code is not working as expected.'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '4', \"The given test case does not satisfy the problem statement\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(7) == \"4\\n\", \"Test case not passing.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(7) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\") == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes\\n', \"Test Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 7 9 3') == 'Yes'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"1 10 1 1\") == \"No\"\nassert solution(\"4 12 16 3\") == \"Yes\"\nassert solution(\"5 15 10 2\") == \"No\"",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\", \"Incorrect output\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 7 9 3') == 'Yes\\n', \"The output is incorrect\"\nprint(\"Test Passed\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 7 9 3') == 'Yes\\n'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"5 8 10 15\") == \"No\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\\n\"\nassert solution(\"1 2 3 4\") == \"No\\n\"\nassert solution(\"1 1 1 1\") == \"No\\n\"\nassert solution(\"2 2 2 2\") == \"Yes\\n\"\nassert solution(\"3 3 3 3\") == \"No\\n\"\nassert solution(\"4 4 4 4\") == \"Yes\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"5 8 11 1\") == \"No\"\nassert solution(\"100 100 100 1\") == \"No\"\nassert solution(\"2 2 2 2\") == \"No\"\nassert solution(\"3 3 3 3\") == \"No\"\nassert solution(\"100 100 100 1\") == \"No\"",
        "num_ids_2": 33,
        "num_ids_4": 71
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('abc def ghi') == 'ABC'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nprint(\"Test Passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\", \"Your solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nassert solution(\"hello world\") == \"HLD\"\nassert solution(\"123456789\") == \"123456789\"\nassert solution(\"\") == \"\"\nassert solution(\"hello\") == \"HLO\"",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"50 10 120\") == \"No\"\nassert solution
        "num_ids_2": 37,
        "num_ids_4": 1027
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\n\"\nassert solution(\"250 100 120\") == \"No\\n\"\nassert solution(\"500 100 120\") == \"No\\n\"\nassert solution(\"500 100 100\") == \"No\\n\"\nassert solution(\"500 100 1000\") == \"Yes\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"\nassert solution(\"200 300 400\") == \"No\\nTakahashi can not buy the toy.\"\nassert solution(\"50 50 100\") == \"No\\nTakahashi can not buy the toy.\"\nassert solution(\"50 100 50\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"\nassert solution(\"100 200 1000\") == \"Yes\\nHe has 100 + 200 = 300 yen, so he can buy the 1000-yen toy.\"",
        "num_ids_2": 84,
        "num_ids_4": 165
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nprint(\"No\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\n\"\nassert solution(\"50 1000 120\") == \"No\\n\"\nassert solution(\"100 50 120\") == \"Yes\\n\"\nassert solution(\"50 100 1000\") == \"No\\n\"\nassert solution(\"50 50 50\") == \"Yes\\n\"\nassert solution(\"100 100 100\") == \"Yes\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 8\\n7 9 8 9') == '5'\nprint('All tests passed successfully!')",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b\"\"\"\n5\n8\n7 9 8 9\n\"\"\") == \"5\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\\n\", \"Your solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\\n\"\nassert solution(\"2 3\\n2 3\") == \"1\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n1 2\") == \"3\\n\"\nassert solution(\"1 1\\n1 1\") == \"1\\n\"\nassert solution(\"1 1\\n1 1\") == \"1\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 90
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 8\\n7 9 8 9') == '5\\n'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\\n\", \"Output should be 5.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 8\\n7 9 8 9\\n\") == \"5\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '5'\nprint('All test cases passed.')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 3 4\\n\") == \"4 2 1 3\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"4 2 1 3 5\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"4 2 1 3 5 6\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"4 2 1 3 5 6 7\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"4 2 1 3 5 6 7 8\"",
        "num_ids_2": 58,
        "num_ids_4": 132
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4 2 1 3\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4 2 1 3\\n5 3 2 1 4\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"4 2 1 3\\n5 3 2 1 4\\n6 2 4 1 3, 5 3, 1, 4, 2\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"4 2 1 3\\n5 3 2 1 4\\n6 2 4 1 3, 5 3, 1, 4, 2\\n7 1, 5, 2, 4, 3, 6\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"4 2 1 3\\n5 3 2 1 4\\n6 2 4 1 3, 5 3, 1, 4, 2\\n7 1, 5, 2, 4, 3, 6\\n8, 5, 3, 2, 1, 4, 6, 7\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"4 2 1 3\\n5 3 2 1 4\\n6 2 4 1 3, 5 3, 1, 4, 2\\n7 1, 5, 2, 4, 3, 6\\n8, 5, 3, 2, 1, 4, 6, 7\\n9, 2, 1, 4, 3, 5, 6, 7, 8\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"4 2 1 3\\n5 3 2 1 4\\n6 2 4 1 3, 5 3, 1, 4, 2\\n7 1, 5, 2, 4, 3, 6\\n8, 5, 3, 2, 1, 4, 6, 7\\n9, 2, 1, 4, 3, 5, 6, 7, 8\\n10, 1, 3, 5, 4, 2, 6, 7, 9, 8\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 223
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"1 2 3 4 5 6\") == \"1 2 3 4 5 6\"\nassert solution(\"1 2 3 4 5 6 7\") == \"1 2 3 4 5 6 7\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"1 2 3 4 5 6 7 8\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"1 2 3 4 5 6 7 8 9\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1 2 3 4 5 6 7 8 9 10\"",
        "num_ids_2": 16,
        "num_ids_4": 48
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n2\\n\") == \"\"\nassert solution(\"1\\n2\\n3\\n\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"4 2 1 3\\n\"\n\nfrom typing import List",
        "num_ids_2": 16,
        "num_ids_4": 45
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4 2 1 3 5\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"4 2 1 3 5 6\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"4 2 1 3 5 6 7\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"4 2 1 3 5 6 7 8\"",
        "num_ids_2": 54,
        "num_ids_4": 124
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\nprint(\"All test cases passed\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == '4 2 1 3'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"4 2 1 3\"\nassert solution(9) == \"4 2 1 3 9 5 1 8 3\"\nassert solution(1000) == \"4 2 1 3 9 5 1 8 3 10 6 10 5 5 3 9 3 5 2 4 9 3 4 2 4\"",
        "num_ids_2": 42,
        "num_ids_4": 105
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\\n\"\nassert solution(\"10 3\\n4 5 6\\n4 5 6\") == \"No\\n\"\nassert solution(\"10 3\\n4 5 6\\n4 5 6\\n4 5 6\") == \"No\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 87
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\\n\"\nassert solution(\"10 3\\n4 5 5\") == \"No\\n\"\nassert solution(\"10 3\\n4 6\") == \"Yes\\n\"\nassert solution(\"10 3\\n10\") == \"No\\n\"\nassert solution(\"10 3\\n0\") == \"Yes\\n\"\n\nfrom typing import List\n",
        "num_ids_2": 44,
        "num_ids_4": 83
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abaababaab\") == \"6\", \"Expected: 6, Actual: \" + str(solution(\"abaababaab\"))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abaababaab\") == \"6\", \"Testcase 1 failed.\"\nassert solution(\"abaaaaaab\") == \"6\", \"Testcase 2 failed.\"\nassert solution(\"abaaaaaaa\") == \"6\", \"Testcase 3 failed.\"\nassert solution(\"ababaaaaa\") == \"6\", \"Testcase 4 failed.\"\nassert solution(\"abaaaabab\") == \"6\", \"Testcase 5 failed.\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abaababaab\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abaababaab\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('ababababa') == '2'\nassert solution('abcd') == '1'\nassert solution('') == '0'\nassert solution('abcabcabc') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 42
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abaababaab\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abaababaab\") == \"6\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abaababaab\") == \"6\\n\", \"Test 1\"\nassert solution(\"abaababaa\") == \"6\\n\", \"Test 2\"\nassert solution(\"abaababa\") == \"6\\n\", \"Test 3\"\nassert solution(\"abaabab\") == \"6\\n\", \"Test 4\"\nassert solution(\"abaaba\") == \"6\\n\", \"Test 5\"\nprint(\"All tests passed\")",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abababab\") == \"5\"\nassert solution(\"abbababab\") == \"4\"\nassert solution(\"abbaababa\") == \"5\"\nassert solution(\"abbaabab\") == \"6\"",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abbaaaaaa\") == \"4\"\nassert solution(\"abaaaaaa\") == \"2\"\nassert solution(\"aaaaaaa\") == \"1\"\nassert solution(\"abbaaaaa\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bac\") == \"Yes\", \"Test failed. Expected output: Yes, Actual output: {}\".format(solution(\"bac\"))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"cba\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bac\") == \"Yes\"\nprint(\"Yes\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bac\") == \"Yes\\nabc\"\nassert solution(\"abc\") == \"No\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bac\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"abc\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bac\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bac\") == \"Yes\"\nprint(\"No\")\n\nExplanation:\nThe given string S is \"bac\". We can try different permutations of abc to see if S can be obtained. \n\nThe first thing we need to do is check if the string S is of length 3. If it is, then we can proceed to the next step.\n\nThe second thing we need to do is check if the string S is a palindrome. A palindrome is a word or phrase that reads the same forward and backward. We can check if the string S is a palindrome by comparing the string S with its reverse. If the two strings are equal, then the string is a palindrome.\n\nTo check if the string S can be obtained by permuting abc, we need to swap the first and second characters in S. This can be done by concatenating the original string S with a character (in this case, a) at a random position and compare the resulting string to the original string S. If the two strings are equal, then S can be obtained by permuting abc.\n\nTo swap the first and second characters in a string, we can use the following steps:\n\n- Concatenate the original string S with a character (in this case, a) at a random position.\n- Swap the characters at the two randomly selected positions.\n\nNow, we can try different permutations of abc to see if S can be obtained. We can try swapping each character with a different character and then comparing the two permutations to see if they are equal. If they are equal, then S can be obtained by permuting abc.\n\nOnce we have tried all possible permutations of abc, we can check if the resulting string S is a palindrome. If it is, then the string can be obtained by permuting abc. If it is not a palindrome, then the string cannot be obtained by permuting abc. Therefore, we can print Yes or No based on whether the resulting string S is a palindrome.",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bac\") == \"Yes\", \"Solution is not correct.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"abcd\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"646\"\nassert solution() == \"757402647\"\nassert solution() == \"20\"",
        "num_ids_2": 26,
        "num_ids_4": 35
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 8 7 2 4\\n9 7 2 9 3\\n') == 646\nassert solution('1\\n1000000\\n1000000\\n') == 757402647\nassert solution('2\\n1 3\\n4 2\\n') == 20",
        "num_ids_2": 69,
        "num_ids_4": 91
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n5\\n1 8 7 2 4\\n9 7 2 9 3\\n\\nOutput\\n646\\n\\nInput\\n1\\n1000000\\n1000000\\n\\nOutput\\n757402647\\n\\nInput\\n2\\n1 3\\n4 2\\n\\nOutput\\n20\") == \"Output\\n646\\n\\nOutput\\n757402647\\n\"",
        "num_ids_2": 137,
        "num_ids_4": 137
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1 8 7 2 4\\n9 7 2 9 3\\n') == '646\\n'\nassert solution('1\\n1000000\\n1000000\\n') == '757402647\\n'\nassert solution('2\\n1 3\\n4 2\\n') == '20\\n'",
        "num_ids_2": 78,
        "num_ids_4": 103
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 8 7 2 4\\n9 7 2 9 3\") == \"646\"\nassert solution(\"1\\n1000000\\n1000000\") == \"757402647\"\nassert solution(\"2\\n1 3\\n4 2\") == \"20\"",
        "num_ids_2": 67,
        "num_ids_4": 88
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n1000000\\n1000000\\n\") == \"646\"\nassert solution(\"1\\n1000000\\n1000000\\n\") == \"757402647\"\nassert solution(\"2\\n1 3\\n4 2\\n\") == \"20\"",
        "num_ids_2": 92,
        "num_ids_4": 115
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"646\"\nassert solution() == \"757402647\"\nassert solution() == \"20\"",
        "num_ids_2": 26,
        "num_ids_4": 35
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n\") == \"646\\n\"\nassert solution(\"1\\n1000000\\n1000000\\n\") == \"757402647\\n\"\nassert solution(\"2\\n1 3\\n4 2\\n\") == \"20\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 103
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 7 # expected output: 7\nassert solution == 17 # expected output: 17",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 7, \"Incorrect Solution\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(7, 4, 5) == 7\nassert solution(9, 4, 8) == 17\nassert solution(5, 1, 4) == 17",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\\n\"\n\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n\") == \"17\\n\"\n\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\") == \"17\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 142
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n\") == \"7\\n\"\n\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n\") == \"17\\n\"\n\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n\") == \"17\\n\"",
        "num_ids_2": 111,
        "num_ids_4": 146
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\") == \"17\"\nassert solution(\"5 1 4\\n2 5 7 4 6\") == \"17\"",
        "num_ids_2": 103,
        "num_ids_4": 129
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\\n\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\") == \"17\\n\"\nassert solution(\"5 1 4\\n2 5 7 4 6\") == \"17\\n\"\nassert solution(\"2 3\") == \"3\\n\"\n",
        "num_ids_2": 107,
        "num_ids_4": 149
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"1\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"[Input]\") == \"[Output]\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\\n\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\\n\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"1\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 132
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"The output '{solution(input())}' is incorrect.\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"1\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\", \"Test 1 failed\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\", \"Test 2 failed\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"1\", \"Test 3 failed\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 96,
        "num_ids_4": 144
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"1\"\n",
        "num_ids_2": 39,
        "num_ids_4": 59
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"1\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\"\nassert solution(open(\"input2.txt\").read()) == \"0\"\nassert solution(open(\"input3.txt\").read()) == \"1\"",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == expected_output, f\"Your solution is {solution(input_str)}, but it should be {expected_output}.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1\\n'\nassert solution('6\\n3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1\\n'",
        "num_ids_2": 213,
        "num_ids_4": 213
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test case failed: {input()} -> {output()}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test {t} failed: {output}\\nExpected {output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3,7) == 10\nassert solution(4,12) == 15\nassert solution(2,1000000000) == 1999999999\nassert solution(7,97) == 113\nassert solution(1000000000,1000000000) == 1000000001",
        "num_ids_2": 25,
        "num_ids_4": 68
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test case not passed.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 7) == \"10\"\nassert solution(4, 12) == \"15\"\nassert solution(2, 1000000000) == \"1999999999\"\nassert solution(7, 97) == \"113\"\nassert solution(1000000000, 1000000000) == \"1000000001\"\nassert solution(2, 1) == \"1\"",
        "num_ids_2": 29,
        "num_ids_4": 76
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution is not correct. Expected output: {expected_output}, Received output: {solution(input())}\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1 \"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2 \"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n2 1\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2\\n1 3 2\\n'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"2\n2 1\"\"\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1 \\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2 \\n\"\nassert solution(\"5 2\\n1 2 3 2 1\\n\") == \"1\\n1 1 \\n\"",
        "num_ids_2": 81,
        "num_ids_4": 113
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\\n10 4\\n2 3 3 1 1 2 1 2 3 3\\n\\n\") == \"2\\n1 3 2 \\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2 \\n\"\nassert solution(\"7 3\\n1 2 3 2 1 3 2\\n\") == \"2\\n1 2 3 2 1 3 2 \\n\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"3\\n1 2 3 4 5 6 7 8 9 10 \\n\"\nassert solution(\"10 2\\n1 2 3 4 5 6 7 8 9\\n\") == \"3\\n1 2 3 4 5 6 7 8 9 \\n\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"3\\n1 2 3 4 5 6 7 8 9 10 \\n\"\nassert solution(\"5 2\\n1 2 3 4 5 6\\n\") == \"2\\n1 2 3 4 5 6 \\n\"",
        "num_ids_2": 114,
        "num_ids_4": 221
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1 \\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2 \\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"1\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 102
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n7 2\n1 2 3 2 1 3 2\n\n10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\") == \"2\\n2 1\\n\"\n\nassert solution(r\"\"\"\n10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\") == \"3\\n1 3 2\\n\"\n\nassert solution(r\"\"\"\n7 2\n1 2 3 2 1 3 2\n\n10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\") == \"2\\n2 1\\n\"\n\nassert solution(r\"\"\"\n10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\") == \"3\\n1 3 2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(stdin)) == solution(stdin)",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\") == \"263\\n\"\n",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"263\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\") == \"263\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n10\\n5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n10\\n5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n10\\n5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n10\\n5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n10\\n5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n10\\n5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n10\\n5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n10\\n5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n10\\n5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n10\\n5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 263\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\") == \"263\\n\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\") == \"263\\n\", \"Your solution is incorrect.\"\n",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"263\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''5\n    3\n    1 6\n    1 7\n    1 5\n    2\n    1 4\n    1 3\n    3\n    1 10\n    3 5\n    2 3\n    3\n    1 15\n    2 4\n    1 10\n    1\n    1 100'''\n) == '263\\n'\n\nassert solution(\n    '''5\n    1\n    1 1\n    1 2\n    1 3\n    2\n    1 4\n    1 5\n    3\n    1 6\n    2 7\n    1 8\n    2\n    1 9\n    3\n    2 10\n    1 11\n    1 12\n    1\n    1 13\n    2 14\n    1 15\n    2 16\n    1 17\n    2 18\n    1 19\n    2 20\n    1 21\n    2 22\n    1 23\n    2 24\n    1 25\n    2 26\n    1 27\n    2 28\n    1 29\n    2 30\n    1 31\n    2 32\n    1 33\n    2 34\n    1 35\n    2 36\n    1 37\n    2 38\n    1 39\n    2 40\n    1 41\n    2 42\n    1 43\n    2 44\n    1 45\n    2 46\n    1 47\n    2 48\n    1 49\n    2 50\n    1 51\n    2 52\n    1 53\n    2 54\n    1 55\n    2 56\n    1 57\n    2 58\n    1 59\n    2 60\n    1 61\n    2 62\n    1 63\n    2 64\n    1 65\n    2 66\n    1 67\n    2 68\n    1 69\n    2 70\n    1 71\n    2 72\n    1 73\n    2 74\n    1 75\n    2 76\n    1 77\n    2 78\n    1 79\n    2 80\n    1 81\n    2 82\n    1 83\n    2 84\n    1 85\n    2 86\n    1 87\n    2 88\n    1 89\n    2 90\n    1 91\n    2 92\n    1 93\n    2 94\n    1 95\n    2 96\n    1 97\n    2 98\n    1 99\n    2 100\n    2\n    1 101\n    3 102\n    2 103\n    1 104\n    2 105\n    3 106\n    1 107\n    2 108\n    1 109\n    2 110\n    1 111\n    2 112\n    1 113\n    2 114\n    1 115\n    2 116\n    1 117\n    2 118\n    1 119\n    2 120\n    1 121\n    2 122\n    1 123\n    2 124\n    1 125\n    2 126\n    1 127\n    2 128\n    1 129\n    2 130\n    1 131\n    2 132\n    1 133\n    2 134\n    1 135\n    2 136\n    1 137\n    2 138\n    1 139\n    2 140\n    1 141\n    2 142\n    1 143\n    2 144\n    1 145\n    2 146\n    1 147\n    2 148\n    1 149\n    2 150\n    1 151\n    2 152\n    1 153\n    2 154\n    1 155\n    2 156\n    1 157\n    2 158\n    1 159\n    2 160\n    1 161\n    2 162\n    1 163\n    2 164\n    1 165\n    2 166\n    1 167\n    2 168\n    1 169\n    2 170\n    1 171\n    2 172",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\\n\"\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n\nprint(\"All tests passed.\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == 3\nassert solution(\"dfcbbcfeeedbaea\") == 5\nassert solution(\"hello world\") == 3\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == 10\nassert solution(\"test\") == 0",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abacaba\") == \"3\", \"Test 1 failed.\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\", \"Test 2 failed.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output\nfor i, query in enumerate(queries):\n    assert solution(query) == f\"Case #{i+1}: {expected_output[i]}\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"2345678910\\n1234567891\\n9876543210\\n8765432101\\n7654321012\\n6543210123\\n5432101234\\n4321012345\\n3210123456\\n2101234567\") == \"2345678910\\n1234567891\\n9876543210\\n8765432101\\n7654321012\\n6543210123\\n5432101234\\n4321012345\\n3210123456\\n2101234567\"\nassert solution(\"1234567890\\n9876543210\\n8765432101\\n7654321012\\n6543210123\\n5432101234\\n4321012345\\n3210123456\\n2101234567\\n1234567891\\n9876543210\\n8765432101\\n7654321012\\n6543210123\\n5432101234\\n4321012345\\n3210123456\\n2101234567\") == \"1234567890\\n9876543210\\n8765432101\\n7654321012\\n6543210123\\n5432101234\\n4321012345\\n3210123456\\n2101234567\\n1234567891\\n9876543210\\n8765432101\\n7654321012\\n6543210123\\n5432101234\\n4321012345\\n3210123456\\n2101234567\\n1234567891\\n9876543210\\n8765432101\\n7654321012\\n6543210123\\n5432101234\\n4321012345\\n3210123456\\n2101234567\\n1234567891\\n9876543210\\n8765432101",
        "num_ids_2": 448,
        "num_ids_4": 1027
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"111111111\\n222222222\\n333333333\\n444444444\\n555555555\\n666666666\\n777777777\\n888888888\") == \"111111111\\n222222222\\n333333333\\n444444444\\n555555555\\n666666666\\n777777777\\n888888888\"\nassert solution(\"111111111\\n222222222\\n333333333\\n444444444\\n555555555\\n666666666\\n777777777\\n888888888\") == \"111111111\\n222222222\\n333333333\\n444444444\\n555555555\\n666666666\\n777777777\\n888888888\"\nassert solution(\"111111111\\n222222222\\n333333333\\n444444444\\n555555555\\n666666666\\n777777777\\n888888888\") == \"111111111\\n222222222\\n333333333\\n444444444\\n555555555\\n666666666\\n777777777\\n888888888\"\nassert solution(\"111111111\\n222222222\\n333333333\\n444444444\\n555555555\\n666666666\\n777777777\\n888888888\") == \"111111111\\n222222222\\n333333333\\n444444444\\n555555555\\n666666666\\n777777777\\n888888888\"\nassert solution(\"111111111\\n222222222\\n333333333\\n444444444\\n555555555\\n666666666\\n777777777\\n888888888\") == \"111111111\\n2",
        "num_ids_2": 382,
        "num_ids_4": 742
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\nassert solution('189145729\\n567899432\\n398642751\\n762891543\\n987145365\\n239678453\\n671234895\\n853962173\\n126597345') == '189145729\\n567899432\\n398642751\\n762891543\\n987145365\\n239678453\\n671234895\\n853962173\\n126597345'\nassert solution('123456789\\n367891234\\n543219876\\n987653210\\n784592342\\n651398765\\n432187654\\n219653210\\n108765432') == '123456789\\n367891234\\n543219876\\n987653210\\n784592342\\n651398765\\n432187654\\n219653210\\n108765432'",
        "num_ids_2": 404,
        "num_ids_4": 606
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"2\\n569873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"569873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"3\\n154873296\\n738659271\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n738659271\\n863725149\\n975314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"4\\n154873296\\n386592714\\n978637251\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n386592714\\n978637251\\n863725149\\n975314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"5\\n154873296\\n386592714\\n729641835\\n978637251\\n863725149\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n386592714\\n729645835\\n978637251\\n863725149\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"6\\n1548732",
        "num_ids_2": 414,
        "num_ids_4": 806
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '154873296\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"2\\n578946211\\n671925432\\n123456789\\n234578961\\n345678910\\n456789123\\n567891234\\n678912345\") == \"578946311\\n671925432\\n123456789\\n234578961\\n345678910\\n456789123\\n567891234\\n678912345\"\nassert solution(\"3\\n987654321\\n234567890\\n345678912\\n456789123\\n567891234\\n678912345\\n789123456\\n891234567\") == \"987654321\\n234567890\\n345678912\\n456789123\\n567891234\\n678912345\\n789123456\\n891234567\"\nassert solution(\"4\\n789654321\\n234567890\\n345678912\\n456789123\\n567891234\\n678912345\\n789123456\\n891234567\") == \"789654321\\n234567890\\n345678912\\n456789123\\n567891234\\n678912345\\n789123456\\n891234567\"\nassert solution(\"5\\n678943211\\n234567890\\n345678912\\n456789123\\n567891234\\n678912345\\n789123456\\n891234567\") == \"678943311\\n234567890\\n345678912\\n456789123\\n567891234\\n678912345\\n789123456\\n891234567\"\nassert solution(\"6\\n578943211\\n234567890\\n345678912\\n456789123\\n567891234\\n678912345\\n789123456\\n891234",
        "num_ids_2": 388,
        "num_ids_4": 754
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"181234567\\n263145789\\n345678910\\n427589123\\n509412346\\n601345678\\n702156789\\n803067890\\n904078912\") == \"181234567\\n263145789\\n345678910\\n427589123\\n509412346\\n601345678\\n702156789\\n803067890\\n904078912\"\nassert solution(\"199999999\\n199999999\\n199999999\\n199999999\\n199999999\\n199999999\\n199999999\\n199999999\\n199999999\") == \"199999999\\n199999999\\n199999999\\n199999999\\n199999999\\n199999999\\n199999999\\n199999999\\n199999999\"\nassert solution(\"111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\") == \"111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\"\nassert solution(\"123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\") == \"123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\\n123456789\"\nassert solution(\"143214567\\n25",
        "num_ids_2": 404,
        "num_ids_4": 808
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: expected output '{expected_output}', got '{solution(input())}'\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\n\nfor _ in range(t):\n    s = input().strip()\n    row = []\n    for c in s:\n        row.append(int(c))\n    print(solution(s))",
        "num_ids_2": 202,
        "num_ids_4": 202
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n\") == \"3\\n6\\n8\\n-1\\n9\\n4\" # expected output\nassert solution(\"9 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n\") == \"3\\n6\\n8\\n-1\\n9\\n4\" # expected output\nassert solution(\"9 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\\n\") == \"3\\n6\\n8\\n-1\\n9\\n4\" # expected output",
        "num_ids_2": 160,
        "num_ids_4": 240
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3\\n6\\n8\\n-1\\n9\\n4'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '''\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3\\n6\\n8\\n-1\\n9\\n4\\n'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n6\\n8\\n-1\\n9\\n4\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}, Output: {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([1, 1, 1, 3, 5, 3, 5, 7, 3, 1, 8, 1, 9]) == 3\nassert solution([3, 1, 1, 5, 3, 4, 7, 3, 1, 8, 1, 9]) == 6\nassert solution([1, 5, 3, 4, 7, 3, 1, 8, 1, 9]) == -1\nassert solution([1, 1, 1, 3, 5, 3, 5, 7, 3, 1, 8, 1, 9, 3, 5, 3, 5, 7, 3, 1, 8, 1, 9]) == 3",
        "num_ids_2": 87,
        "num_ids_4": 198
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 3",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == \"3\\n6\\n8\\n-1\\n9\\n4\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Solution returned unexpected output: {solution(stdin)}\"\n\nfrom typing import List",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\nYES\\nNO\\nNO\\nYES\"\n\nfrom typing import List",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Expected: '{output}', got: '{solution(stdin)}'\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case_number} failed. Expected Output: {expected_output}, Received Output: {solution(input())}\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2 3 4''') == '3 4 6 5 '\n\nassert solution('''5 5\n2 1 5 3 5''') == '9 8 12 6 8 '\n\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2''') == '3 3 '",
        "num_ids_2": 14,
        "num_ids_4": 22
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 3 4\n\"\"\") == \"3 4 6 5\\n\"\n\nassert solution(\"\"\"\n5 5\n2 1 5 3 5\n\"\"\") == \"9 8 12 6 8\\n\"\n\nassert solution(\"\"\"\n2 10\n1 2 1 1 2 2 2 2 2 2\n\"\"\") == \"3 3\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 3 4\n\"\"\") == '3 4 6 5\\n'\n\nassert solution(\"\"\"\n5 5\n2 1 5 3 5\n\"\"\") == '9 8 12 6 8\\n'\n\nassert solution(\"\"\"\n2 10\n1 2 1 1 2 2 2 2 2 2\n\"\"\") == '3 3\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4, 4) == 3\nassert solution(5, 5) == 9\nassert solution(2, 10) == 3",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5\\n'\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8\\n'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3\\n'",
        "num_ids_2": 67,
        "num_ids_4": 107
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, \"Test failed for input: {}, output: {}\".format(input, output)",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5\\n'\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8\\n'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3\\n'",
        "num_ids_2": 67,
        "num_ids_4": 107
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '3 4 6 5 \\n'\nassert solution(input()) == '9 8 12 6 8 \\n'\nassert solution(input()) == '3 3 \\n'",
        "num_ids_2": 39,
        "num_ids_4": 53
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\\n\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\\n\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\\n\"\n",
        "num_ids_2": 67,
        "num_ids_4": 107
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\"\nprint(\"All tests passed\")",
        "num_ids_2": 63,
        "num_ids_4": 101
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'TODO'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    10 6\n    1 2\n    1 3\n    1 4\n    2 5\n    2 6\n    3 7\n    7 8\n    7 9\n    9 10\n    4 3 8 9 10\n    3 2 4 6\n    3 2 1 5\n    3 4 8 2\n    2 6 10\n    3 5 4 7\n    \"\"\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(example_input) == example_output, f\"Test case {i+1} failed.\" for i, example_input, example_output in enumerate(test_cases)",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\"\"\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n\", \"The solution is not correct.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected, f\"Expected {expected}, got {solution(input)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Input: {stdin}\\nExpected: {expected}\\nOutput: {solution(stdin)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\\n\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\n\"\nassert solution(\"1 2 2 1 3\\n2\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\\n\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\n\"",
        "num_ids_2": 210,
        "num_ids_4": 210
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"YES\n1 3\n3 5\n5 4\n1 2\nNO\nYES\n1 2\n1 3\n1 4\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\\n\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\n\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4'\nassert solution() == 'YES\\n1 2\\n1 3\\n1 4'\nassert solution() == 'NO'",
        "num_ids_2": 72,
        "num_ids_4": 80
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n\") == \"01011110\\n0101111\\n0011111\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\underline{10}11010') == '01111010'\nassert solution('1111100') == '1111100'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n\") == \"01011110\"\nprint(\"All test cases passed successfully\")",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\") == \"01011110\\n0101111\\n0011111\"\n\nassert solution(\"1\\n1\") == \"01\"\n\nassert solution(\"1\\n5\") == \"01\"\n\nassert solution(\"2\\n3\") == \"01\"\n\nassert solution(\"10\\n10\") == \"11111111\"\n\nassert solution(\"100\\n50\") == \"11111111\"\n\nassert solution(\"100\\n0\") == \"11111111\"\n\nassert solution(\"100\\n10\") == \"11111111\"\n\nassert solution(\"1000\\n100\") == \"11111111\"\n\nassert solution(\"1000\\n0\") == \"11111111\"\n\nassert solution(\"1000\\n100\") == \"11111111\"\n\nassert solution(\"10000000\\n0\") == \"11111111\"\n\nassert solution(\"10000000\\n100\") == \"11111111\"",
        "num_ids_2": 93,
        "num_ids_4": 121
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\underline{10}11010 \\rightarrow \\underline{10}111010 \\rightarrow 0111\\underline{10}10 \\rightarrow 011\\underline{10}110 \\rightarrow 01\\underline{10}1110 \\rightarrow 01011110\") == \"01011110\"\nassert solution(\"1111100\") == \"1111100\"\nassert solution(\"7 9\") == \"0011111\"",
        "num_ids_2": 120,
        "num_ids_4": 138
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"01011110\") == \"0101111\"\nassert solution(\"0101111\") == \"0101111\"\nassert solution(\"0011111\") == \"0011111\"\n\nfrom typing import List",
        "num_ids_2": 45,
        "num_ids_4": 67
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11011010\") == \"01111010\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"1111100\") ==",
        "num_ids_2": 46,
        "num_ids_4": 90
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '01011110'\nassert solution(input()) == '0101111'\nassert solution(input()) == '0011111'",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\underline{10}11010 \\rightarrow \\underline{10}111010 \\rightarrow 0111\\underline{10}10 \\rightarrow 011\\underline{10}110 \\rightarrow 01\\underline{10}1110 \\rightarrow 01011110\") == \"01111110\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Output\\n3\\n1 4 7 \\n3\\n1 2 4 \\n3\\n1 3 5 6\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\") == \"3\\n1 2 4\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"4\\n1 3 5 6\"\nassert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n1 4 7\"",
        "num_ids_2": 105,
        "num_ids_4": 163
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n1 4 7\\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\") == \"3\\n1 2 4\\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 169
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"\"\"3\n1 4 7\n\"\"\"\n\nassert solution() == \"\"\"3\n1 4 7\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n1 4 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\") == \"3\\n1 2 4 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"4\\n1 3 5 6\\n\"\n",
        "num_ids_2": 116,
        "num_ids_4": 169
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n1 4 7\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\") == \"3\\n1 2 4\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"4\\n1 3 5 6\"",
        "num_ids_2": 112,
        "num_ids_4": 163
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"\n3\n1 4 7\n\"\"\"\n\nassert solution() == \"\"\"\n3\n1 4 7\n\"\"\"\n\nassert solution() == \"\"\"\n3\n1 4 7\n\"\"\"\n\nassert solution() == \"\"\"\n4\n1 3 5 6\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n1 4 7\\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\") == \"3\\n1 2 4\\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 169
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"\"\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3\nassert solution(5) == 19\nassert solution(2) == 0",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output\\n3\\n\"\nassert solution(input()) == \"Output\\n19\\n\"\nassert solution(input()) == \"Output\\n0\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 3, \"Your solution is incorrect.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 3 2\\n-100 2 3\") == \"3\"\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\") == \"19\"\nassert solution(\"2\\n2 1\\n-3 0\") == \"0\"",
        "num_ids_2": 60,
        "num_ids_4": 81
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 0\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 2\\n-100 2 3\\n\") == \"3\\n\"\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\\n\") == \"19\\n\"\nassert solution(\"2\\n2 1\\n-3 0\\n\") == \"0\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 90
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}\\nActual output: {solution(stdin)}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n\"\nassert solution() == \"19\\n\"\nassert solution() == \"0\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n\") == \"21 7 15 21 3 \\n\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n\") == \"21 7 15 21 3\"\nassert solution(\"1 2\\n1 2\\n\") == \"0 0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n\") == \"1 3 3\"",
        "num_ids_2": 99,
        "num_ids_4": 138
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n\") == \"21 7 15 21 3\\n\"\nassert solution(\"1 2\\n1 2\\n\") == \"0 0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n\") == \"1 3 3\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 137
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"[Input]\") == \"[Output]\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, got {solution}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"21 7 15 21 3\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect. Please check the provided examples and the problem statement.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1') == '21 7 15 21 3'\nassert solution('1 2\\n1 2\\n') == '0 0'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n') == '1 3 3'\nprint(\"All tests passed!\")",
        "num_ids_2": 97,
        "num_ids_4": 136
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == expected\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"YES\") == \"YES\"\nassert solution(\"YES\") == \"YES\"\nassert solution(\"NO\") == \"NO\"\nassert solution(\"NO\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"YES\"\nassert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\\n1\\n2 3 4\") == \"YES\"\nassert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\\n1\\n2 3 4\\n2\\n1 3 5\") == \"NO\"\nassert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\\n1\\n2 3 4\\n1\\n2 3 4 4\\n1\\n100\\n1\\n2 3 4\\n1\\n1 3 4 4\\n1\\n1 3 4\") == \"NO\"\nassert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\\n1\\n2 3 4\\n1\\n2 3 4 4\\n1\\n100\\n1\\n2 3 4\\n1\\n1 3 4 4\\n1\\n1 3 4\") == \"YES\"\n",
        "num_ids_2": 134,
        "num_ids_4": 340
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3, 1, 2, 2]) == \"YES\"\nassert solution([5, 5, 5, 5]) == \"YES\"\nassert solution([3, 1, 2, 4]) == \"NO\"\nassert solution([1, 2, 4]) == \"YES\"\nassert solution([100]) == \"YES\"",
        "num_ids_2": 38,
        "num_ids_4": 73
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"YES\") == \"YES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed: {solution(stdin)}!= {expected_output}\" for i, (stdin, expected_output) in enumerate(tests)",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(2) == \"NO\"\nassert solution(4) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n\ninput_data = [int(x) for x in input().split()]\noutput_data = [solution(str(x)) for x in input_data]\n\nfor i, data in enumerate(output_data):\n    print(data, end=' ')",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 4) == \"12\"\nassert solution(4, 5) == \"11\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12\\n'\nassert solution('4 5\\n1001\\n10101\\n') == '11\\n'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed with input: {input()}, expected output: {output}, got: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\"\n\nfor i in range(2, int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        a = [2 * i - 1] + [2 * i for i in range(n // 2)] + [2 * i + 1]\n        s1, s2 = sum(a[:n // 2]), sum(a[n // 2:])\n        if s1 == s2:\n            print(\"YES\", *a)\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"NO\"\nassert solution(10) == \"NO\"\nassert solution(15) == \"YES\"\nassert solution(20) == \"YES\"\nassert solution(25) == \"YES\"\nassert solution(30) == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == 'YES\\nYES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO'\nprint(\"YES\")",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES\\n'\nassert solution(input()) == 'YES\\n'\nassert solution(input()) == 'YES\\n'\nassert solution(input()) == 'YES\\n'\nassert solution(input()) == 'YES\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4\\n6\\n8\\n10\\n\") == \"YES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 'YES'\nassert solution(4) == 'YES'\nassert solution(6) == 'YES'\nassert solution(8) == 'YES'\nassert solution(10) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2\\n4\\n6\\n8\\n10\") == \"NO\\nYES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\"\nassert solution(\"10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100\\n110\\n120\\n130\\n140\\n150\\n160\\n170\\n180\\n190\\n200\\n210\\n220\\n230\\n240\\n250\\n260\\n270\\n280\\n290\\n300\") == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"NO\"\nassert solution(6) == \"YES\"\nassert solution(7) == \"NO\"\nassert solution(8) == \"YES\"\nassert solution(9) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n1\\n0\\n4\\n0\"\nprint(solution(stdin))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1\\n\") == \"5\\n1\\n0\\n4\\n0\"\nassert solution(\"1\\n2\\n1\\n1\\n\") == \"2\\n0\\n1\\n0\"\nassert solution(\"1\\n2\\n1\\n1\\n1\\n\") == \"2\\n0\\n1\\n0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 129,
        "num_ids_4": 1027
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 5\nassert solution(4) == 1\nassert solution(5) == 0\nassert solution(6) == 4\nassert solution(7) == 0\nassert solution(8) == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test Case Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '5\\n1\\n0\\n4\\n0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9\\n1 1 1 1 1\") == \"5\\n1\\n0\\n4\\n0\"\nassert solution(\"1 2 3 4 5 6 7 8 9\\n3 1 4 1 5 9 2 6 5\") == \"1\\n0\"\nassert solution(\"1 2 3 4 5 6 7 8 9\\n3 1 4 1 5 9 2 6 5\") == \"1\\n0\"\nassert solution(\"1 2 3 4 5 6 7 8 9\\n3 1 4 1 5 9 2 6 5\") == \"1\\n0\"\nassert solution(\"1 2 3 4 5 6 7 8 9\\n3 1 4 1 5 9 2 6 5\") == \"1\\n0\"\nassert solution(\"1 2 3 4 5 6 7 8 9\\n3 1 4 1 5 9 2 6 5\") == \"1\\n0\"\nassert solution(\"1 2 3 4 5 6 7 8 9\\n3 1 4 1 5 9 2 6 5\") == \"1\\n0\"\nassert solution(\"1 2 3 4 5 6 7 8 9\\n3 1 4 1 5 9 2 6 5\") == \"1\\n0\"",
        "num_ids_2": 97,
        "num_ids_4": 193
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match expected output for input {stdin}.\"\nfor _ in range(t):\n    n, *a = map(int, stdin.split())\n    a.sort()\n    special = 0\n    for i in range(n):\n        if i > 0 and a[i] == a[i-1] + a[i-1+1]:\n            special += 1\n    print(special)",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0, \"Your solution is incorrect.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1\") == \"5\\n1\\n0\\n4\\n0\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test case {index+1} failed. Expected output: {output()}, got: {solution(input())}\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"your_answer\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\\n2 4\\n2 3\\n3 4\\n5\") == \"3\\n4\\n2\\n7\"\nassert solution(\"1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\") == \"3\"\nassert solution(\"1 3\\n2 4\\n2 3\\n7\") == \"3\"\nassert solution(\"1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\"",
        "num_ids_2": 74,
        "num_ids_4": 142
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\\n4\\n2\\n7\"",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3\\n4\\n2\\n7'\nassert solution(input()) == '4\\n2\\n7'\nassert solution(input()) == '2\\n7'\nassert solution(input()) == '7'",
        "num_ids_2": 35,
        "num_ids_4": 58
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\") == \"3\\n4\\n2\\n7\"\n\nassert solution(\n\"\"\"\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\") == \"2\\n7\"\n\nassert solution(\n\"\"\"\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\") == \"7\"\n\nassert solution(\n\"\"\"\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\") == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {i+1} failed.\\nExpected output: {expected_output}\\nActual output: {solution(input_str)}\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution ==",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\\n4\\n2\\n7\"\nassert solution(\"7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"2\\n4\\n7\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"5\"\n",
        "num_ids_2": 179,
        "num_ids_4": 201
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n60\\n1439\\n1180\\n1\"\nprint(\"All test cases passed\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == 60, \"Expected: 60, but got: {}\".format(solution(5))\nassert solution(5) == 1439, \"Expected: 1439, but got: {}\".format(solution(5))\nassert solution(5) == 1180, \"Expected: 1180, but got: {}\".format(solution(5))\nassert solution(5) == 1, \"Expected: 1, but got: {}\".format(solution(5))",
        "num_ids_2": 60,
        "num_ids_4": 118
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\\n60\\n1439\\n1180\\n1\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected {output}, but got {solution(input())}\"\nfor i, (h, m) in enumerate(input().split()):\n    if not (0 <= int(h) < 24 and 0 <= int(m) < 60):\n        raise ValueError(\"Invalid time\")\n    if h == 0 and m == 0:\n        raise ValueError(\"Invalid time\")\nprint(sum(range(int(m) * 60, 24 * 60 * 60, int(h) * 60)))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test case {t} failed. Expected output: '{expected}', got output: '{solution(input())}'.\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '5\\n60\\n1439\\n1180\\n1\\n'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '5\\n60\\n1439\\n1180\\n1'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n23 55\\n23 0\\n0 1\\n4 20\\n23 59\") == \"5\\n60\\n1439\\n1180\\n1\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Received: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Test failed with input {input_data} and output {output_data}\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: expected '{output}', got '{solution(input())}'\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    4\n    4\n    LRUD\n    4\n    LURD\n    5\n    RRUDU\n    5\n    LLDDR\n''') == '''\n1 2\n1 4\n3 4\n-1\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test {i+1} failed.\" for i, (input, output) in enumerate([\n    ((4, \"LRUD\"), (-1, -1)),\n    ((4, \"LURD\"), (-1, -1)),\n    ((5, \"RRUDU\"), (-1, -1)),\n    ((5, \"LLDDR\"), (-1, -1)),\n])",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1 2\\n1 4\\n3 4\\n-1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"Solution does not match the expected output: {solution}!= {expected_output}\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Incorrect output: {solution(input())}\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"4\\n4\\nLLLLL\\n5\\nDDDDD\\n7\\nUUUUU\") == \"-1\"\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case_number + 1} failed: {expected_output}!= {solution(stdin)}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output\nprint(\"All test cases passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\nprint(\"All test cases passed\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n1\\n0\\n2\" #Correct answer\nassert solution() == \"3\\n1\\n0\\n2\" #Correct answer",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n1\\n0\\n2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"example.in\", \"r\").read()) == \"3\\n1\\n0\\n2\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n1\\n0\\n2\"\nassert solution() == \"3\\n1\\n0\\n2\"\nassert solution() == \"3\\n1\\n0\\n2\"\nassert solution() == \"3\\n1\\n0\\n2\"\nassert solution() == \"3\\n1\\n0\\n2\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"3\\n1\\n0\\n2\"\nassert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"3\\n1\\n0\\n2\"\nassert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"3\\n1\\n0\\n2\"\nassert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"3\\n1\\n0\\n2\"\nassert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"3\\n1\\n0\\n2\"",
        "num_ids_2": 138,
        "num_ids_4": 276
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}, but got {solution(stdin)}\"\nfor test_case in range(int(stdin)):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    x = n\n    for i in range(n):\n        if a[i] in a[:i] or a[i] in a[i+1:]:\n            x -= 1\n    print(x)\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n\") == \"121\\n\"\nassert solution(\"1\\n1337\\n\") == \"0\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\"\nassert solution() == \"121\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n\") == \"121\"\nassert solution(\"1\\n1337\\n\") == \"0\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\") == \"121\"\nassert solution(\"1\\n1337\") == \"0\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([8, 9, 4, 1, 7, 10, 1, 6, 5, 1, 2, 2, 3, 1, 4, 1, 5, 5, 5, 6, 5, 7, 5, 8]) == 121, \"Test 1 failed\"\nassert solution([1, 1337]) == 0, \"Test 2 failed\"\n\nfrom typing import List",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'Output\\n0'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\") == \"121\\n\"\nassert solution(\"1\\n1337\") == \"0\\n\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '121' # expected output: 121\nassert solution() == '0' # expected output: 0",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n\") == \"121\\n\"\nassert solution(\"1\\n1337\\n\") == \"0\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, Received output: {solution}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == '6\\n18\\n0\\n227\\n8'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed\"\nfor i in range(t):\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    expected = 0\n    for i in range(1, n+1):\n        a[i] += a[i-1]\n        if a[i] % k == 0:\n            expected += 1\n    print(expected)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Your code is incorrect. \\nExpected output: {expected_output}\\nActual output: {solution(input())}\"\nfor _ in range(t):\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    expected_output = min(x for x in range(1, n+1) if a[x-1] % k == 0)\n    result = solution(str(n) + \" \" + \" \".join(str(x) for x in a))\n    print(result)",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\") == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\") == \"6\\n18\\n0\\n227\\n8\"\n",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\") == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"6\"\nassert solution(8) == \"18\"\nassert solution(20) == \"0\"\nassert solution(10) == \"227\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([1, 2, 3], [1, 1]) == 1\nassert solution([1, 2], [1, 2, 3]) == 2",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([1,2,3],[1,1]) == 1\nassert solution([1,2],[1,2,3]) == 2",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([1, 2, 3], [1, 1]) == 1\nassert solution([1, 2], [1, 2, 3]) == 2\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([1, 2, 3], [1, 1]) == 1\nassert solution([1, 2], [1, 2, 3]) == 2",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([1, 2, 3], [1, 1]) == 1\nassert solution([1, 2], [1, 2, 3]) == 2",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([1,2,3], [1,1]) == 1, \"Test Case 1\"\nassert solution([1,2], [1,2,3]) == 2, \"Test Case 2\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == [1,3,3,1]\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == [1,3,3,1]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3') == [1, 3, 3, 1]\nassert solution('10') == [1, 10, 30, 10, 1]\nassert solution('20') == [1, 20, 60, 20, 1]\nassert solution('33') == [1, 33, 91, 33, 1]\nassert solution('34') == [1, 34, 98, 34, 1]",
        "num_ids_2": 45,
        "num_ids_4": 97
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == [1,3,3,1]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == [1, 3, 3, 1]\nassert solution(0) == []\nassert solution(1) == [1]\nassert solution(10) == [55, 110, 162, 210, 258, 306, 354, 402, 450, 498]\nassert solution(33) == [1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862, 17643, 64218, 227911, 781966, 2886721, 9843882, 37522643, 120768354, 500464742, 1428906102, 5368709120, 16706108042, 62505590436, 192108988114, 678024904482, 2205942377529, 7588057964058, 25832892084069, 84603149657608, 337018196126748, 1103368694181758, 4971632941745660, 13994326588731482, 59472664042218050, 180104420125438500, 717601272544154978, 2480841856487712228, 9063310725908692620, 30959250688271930160, 109648075843626884100, 440922637051205688722, 1350867772282776205888, 6183212086242223684442, 19583149431635896537329, 75533385371523995469760, 270172131851055039429082, 1011330614929535694765960, 4072360719292182811726818, 1258999068426243669164634, 55555555555555555555555555555, 200000000000000000000000000000, 797615336759937840143715731151, 292868207320349332566058760565, 1264207018572007323768491647629, 647362716780286107968597461061, 215248833147182799009990",
        "num_ids_2": 27,
        "num_ids_4": 94
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == [1, 3, 3, 1]",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"[1,3,3,1]\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == [1,3,3,1]\n\nfrom typing import List",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == [1, 3, 3, 1]",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == [1,3,3,1]\n\nExplanation:\n\nWe can iterate through the Pascal's triangle using a nested loop and compute the sum of the two numbers directly above it. For example, the sum of the second row of Pascal's triangle for index 3 is:\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"000000000000000000000000000001011\") == \"3\"\nassert solution(\"00000000000000000000000000001000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 86,
        "num_ids_4": 128
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"000000000000000000000000000001011\") == 3\nassert solution(\"0000000000000000000000000000010000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31",
        "num_ids_2": 86,
        "num_ids_4": 127
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'\\x00') == '0'\nassert solution(b'\\x01') == '1'\nassert solution(b'\\x10') == '2'\nassert solution(b'\\x11') == '3'\nassert solution(b'\\x7f') == '127'\nassert solution(b'\\x80') == '128'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"\n",
        "num_ids_2": 80,
        "num_ids_4": 122
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'1111111111111111111111111111101') == '31'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000000010000000\") == \"1\"\nassert solution(\"1111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 84,
        "num_ids_4": 125
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('0000000000000000000000000010000000') == 1\nassert solution('11111111111111111111111111111101') == 31",
        "num_ids_2": 82,
        "num_ids_4": 123
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"000000000000000000000000000001011\") == \"3\", \"Example 1 test failed\"\nassert solution(\"00000000000000000000000010000000\") == \"1\", \"Example 2 test failed\"\nassert solution(\"11111111111111111111111111111101\") == \"31\", \"Example 3 test failed\"",
        "num_ids_2": 97,
        "num_ids_4": 146
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == ['1','2','3','4','5']",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"123\") == [1, 2, 3]\nassert solution(\"4321\") == [4, 3, 2, 1]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([1, 2, 3]) == [1, 2, 4]\nassert solution([4, 3, 2, 1]) == [4, 3, 2, 2]",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"123\") == [\"1\", \"2\", \"3\"]\nassert solution(\"4321\") == [\"4\", \"3\", \"2\", \"1\"]\n\nsolution = lambda s: [str(int(d) + 1) for d in s]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('123') == '[1,2,3]'\nassert solution('4321') == '[4,3,2,1]'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"123\") == [1,2,3]\nassert solution(\"4321\") == [4,3,2,1]\nassert solution(\"0\") == [1]\nassert solution(\"12345\") == [1,2,3,4,5]",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"4\\n\", \"Your solution is not correct.\"\n\nprint(\"Your solution is correct.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"4\\n\"\nassert solution(\"6 2\") == \"9\\n\"\nassert solution(\"2 3\") == \"6\\n\"\nassert solution(\"7 10\") == \"32\\n\"\nassert solution(\"5 6\") == \"32\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\\n\", \"The largest value among A+B, A-B and A \\times B is 4.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"4\\n\", \"Output should be 4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"4\", \"The output should be: 4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"4\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 2\") == \"6\"\nassert solution(\"1 3\") == \"6\"\nassert solution(\"1 1\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"4\\n\", \"Test 1\"\nassert solution(\"5 6\") == \"12\\n\", \"Test 2\"\nassert solution(\"7 8\") == \"16\\n\", \"Test 3\"\nassert solution(\"9 10\") == \"20\\n\", \"Test 4\"\nassert solution(\"11 12\") == \"24\\n\", \"Test 5\"",
        "num_ids_2": 39,
        "num_ids_4": 80
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"4\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"4\\n\", \"Input is not as expected.\"\nassert solution(\"0 -10\") == \"2\\n\", \"Input is not as expected.\"\nassert solution(\"10 100\") == \"100\\n\", \"Input is not as expected.\"\nassert solution(\"1000 2000\") == \"2000\\n\", \"Input is not as expected.\"\nassert solution(\"-10 100\") == \"100\\n\", \"Input is not as expected.\"",
        "num_ids_2": 43,
        "num_ids_4": 99
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\\n\") == \"3\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\"\n\nfrom typing import List",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\\n\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\\n\") == \"3\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"0\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\", \"Test Failed\"\nassert solution(stdin) == \"3\", \"Test Failed\"\nassert solution(stdin) == \"3\", \"Test Failed\"\nassert solution(stdin) == \"3\", \"Test Failed\"\nassert solution(stdin) == \"3\", \"Test Failed\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'\nprint('All test cases passed.')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('12') == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"100\") == \"No\"\nassert solution(\"123\") == \"No\"\nassert solution(\"123456\") == \"Yes\"\nassert solution(\"1000000000\") == \"Yes\"\nassert solution(\"1000000001\") == \"Yes\"",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\\n\", \"The output should be Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"12\") == \"Yes\", \"Test failed for example input 12\"\nassert solution(stdin=\"13\") == \"No\", \"Test failed for example input 13\"\nassert solution(stdin=\"21\") == \"Yes\", \"Test failed for example input 21\"\nassert solution(stdin=\"22\") == \"No\", \"Test failed for example input 22\"\nassert solution(stdin=\"23\") == \"Yes\", \"Test failed for example input 23\"\nassert solution(stdin=\"24\") == \"No\", \"Test failed for example input 24\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"Yes\\n\"\nprint(\"Test passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"Yes\\n\", \"Test failed\"\nassert solution(\"1000\") == \"No\\n\", \"Test failed\"\nassert solution(\"123456789\") == \"No\\n\", \"Test failed\"\nassert solution(\"0\") == \"No\\n\", \"Test failed\"\nassert solution(\"12345678910\") == \"No\\n\", \"Test failed\"\nassert solution(\"12345678911\") == \"Yes\\n\", \"Test failed\"\n\nprint(\"All test cases passed successfully\")",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"Yes\\n\", \"Test case 1\"\nassert solution(\"5\") == \"No\\n\", \"Test case 2\"\nassert solution(\"15\") == \"Yes\\n\", \"Test case 3\"\nassert solution(\"123\") == \"No\\n\", \"Test case 4\"\nassert solution(\"12345678901234567890\") == \"Yes\\n\", \"Test case 5\"",
        "num_ids_2": 37,
        "num_ids_4": 76
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(12) == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"12\\n8\\n10\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test case failed: {solution(input())}!= {expected}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}\\nActual output: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 5 -1\\n\") == \"12\\n8\\n10\\n\"\nassert solution(\"10\\n3 4 5\\n6 2 1\\n\") == \"10\\n8\\n6\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\\n\"\nassert solution(\"4\\n5 6 7\") == \"12\\n8\\n10\\n\"\nassert solution(\"5\\n10 5\") == \"12\\n8\\n10\\n\"\nassert solution(\"6\\n5 2 1\") == \"8\\n10\\n\"\nassert solution(\"7\\n1 1 1\") == \"10\\n10\\n\"\n",
        "num_ids_2": 54,
        "num_ids_4": 103
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '12\\n8\\n10'\nprint(\"All test cases passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"12\\n8\\n10\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"12\\n8\\n10\\n\", \"The solution is not correct.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'consonant'\nassert solution('c') == 'consonant'\nassert solution('d') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('f') == 'consonant'",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'consonant'\nassert solution('c') == 'consonant'\nassert solution('d') == 'consonant'\nassert solution('e') == 'vowel'\nassert solution('f') == 'consonant'\nassert solution('g') == 'consonant'\nassert solution('h') == 'consonant'\nassert solution('i') == 'vowel'\nassert solution('j') == 'vowel'\nassert solution('k') == 'consonant'\nassert solution('l') == 'vowel'\nassert solution('m') == 'consonant'\nassert solution('n') == 'consonant'\nassert solution('o') == 'vowel'\nassert solution('p') == 'consonant'\nassert solution('q') == 'consonant'\nassert solution('r') == 'consonant'\nassert solution('s') == 'consonant'\nassert solution('t') == 'vowel'\nassert solution('u') == 'vowel'\nassert solution('v') == 'vowel'\nassert solution('w') == 'consonant'\nassert solution('x') == 'consonant'\nassert solution('y') == 'vowel'\nassert solution('z') == 'consonant'",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'consonant'\nassert solution('c') == 'consonant'\nassert solution('d') == 'consonant'\nassert solution('e') == 'vowel'\nassert solution('f') == 'consonant'\nassert solution('g') == 'consonant'\nassert solution('h') == 'consonant'\nassert solution('i') == 'vowel'\nassert solution('j') == 'consonant'\nassert solution('k') == 'consonant'\nassert solution('l') == 'consonant'\nassert solution('m') == 'consonant'\nassert solution('n') == 'consonant'\nassert solution('o') == 'vowel'\nassert solution('p') == 'consonant'\nassert solution('q') == 'consonant'\nassert solution('r') == 'consonant'\nassert solution('s') == 'consonant'\nassert solution('t') == 'consonant'\nassert solution('u') == 'vowel'\nassert solution('v') == 'consonant'\nassert solution('w') == 'consonant'\nassert solution('x') == 'consonant'\nassert solution('y') == 'consonant'\nassert solution('z') == 'consonant'",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"vowel\", \"The given input should be a vowel.\"\n\nassert solution(\"b\") == \"consonant\", \"The given input should be a consonant.\"\n\nassert solution(\"C\") == \"consonant\", \"The given input should be a consonant.\"\n\nassert solution(\"d\") == \"consonant\", \"The given input should be a consonant.\"\n\nassert solution(\"z\") == \"vowel\", \"The given input should be a vowel.\"",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a\") == \"vowel\", \"Function is not returning the expected output.\"\nassert solution(\"b\") == \"consonant\", \"Function is not returning the expected output.\"\nassert solution(\"c\") == \"consonant\", \"Function is not returning the expected output.\"\nassert solution(\"d\") == \"consonant\", \"Function is not returning the expected output.\"\nassert solution(\"e\") == \"vowel\", \"Function is not returning the expected output.\"",
        "num_ids_2": 41,
        "num_ids_4": 83
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"vowel\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"B\") == \"consonant\"\nassert solution(\"c\") == \"consonant\"\nassert solution(\"D\") == \"consonant\"\nassert solution(\"f\") == \"consonant\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('a') == 'vowel'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"b\") == \"consonant\"\nassert solution(\"c\") == \"consonant\"\nassert solution(\"d\") == \"consonant\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"f\") == \"consonant\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('a') == 'vowel'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('BBBWW') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BBBWW\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\\n\", \"Test case 1 failed.\"\n\nassert solution(input()) == \"2\\n\", \"Test case 2 failed.\"\n\nassert solution(input()) == \"3\\n\", \"Test case 3 failed.\"\n\nassert solution(input()) == \"4\\n\", \"Test case 4 failed.\"\n\nassert solution(input()) == \"5\\n\", \"Test case 5 failed.\"\n\nassert solution(input()) == \"6\\n\", \"Test case 6 failed.\"\n\nassert solution(input()) == \"7\\n\", \"Test case 7 failed.\"\n\nassert solution(input()) == \"8\\n\", \"Test case 8 failed.\"\n\nassert solution(input()) == \"9\\n\", \"Test case 9 failed.\"\n\nassert solution(input()) == \"10\\n\", \"Test case 10 failed.\"\n\nassert solution(input()) == \"11\\n\", \"Test case 11 failed.\"\n\nassert solution(input()) == \"12\\n\", \"Test case 12 failed.\"\n\nassert solution(input()) == \"13\\n\", \"Test case 13 failed.\"\n\nassert solution(input()) == \"14\\n\", \"Test case 14 failed.\"\n\nassert solution(input()) == \"15\\n\", \"Test case 15 failed.\"\n\nassert solution(input()) == \"16\\n\", \"Test case 16 failed.\"\n\nassert solution(input()) == \"17\\n\", \"Test case 17 failed.\"\n\nassert solution(input()) == \"18\\n\", \"Test case 18 failed.\"\n\nassert solution(input()) == \"19\\n\", \"Test case 19 failed.\"\n\nassert solution(input()) == \"20\\n\", \"Test case 20 failed.\"\n\nassert solution(input()) == \"21\\n\", \"Test case 21 failed.\"\n\nassert solution(input()) == \"22\\n\", \"Test case 22 failed.\"\n\nassert solution(input()) == \"23\\n\", \"Test case 23 failed.\"\n\nassert solution(input()) == \"24\\n\", \"Test case 24 failed.\"\n\nassert solution(input()) == \"25\\n\", \"Test case 25 failed.\"\n\nassert solution(input()) == \"26\\n\", \"Test case 26 failed.\"\n\nassert solution(input()) == \"27\\n\", \"Test case 27 failed.\"\n\nassert solution(input()) == \"28\\n\", \"Test case 28 failed.\"\n\nassert solution(input()) == \"29\\n\", \"Test case 29 failed.\"\n\nassert solution(input()) == \"30\\n\", \"Test case 30 failed.\"\n\nassert solution(input()) == \"31\\n\", \"Test case 31 failed.\"\n\nassert solution(input()) == \"32\\n\", \"Test case 32 failed.\"\n\nassert solution(input()) == \"33\\n\", \"Test case 33 failed.\"\n\nassert solution(input()) == \"34\\n\", \"Test case 34 failed.\"\n\nassert solution(input()) == \"35\\n\", \"Test case 35 failed.\"\n\nassert solution(input()) == \"36\\n\", \"Test case 36 failed.\"\n\nassert solution(input()) == \"37\\n\", \"Test case 37 failed.\"\n\nassert solution(input()) == \"38\\n\", \"Test case 38 failed.\"\n\nassert solution(input()) == \"39\\n\", \"Test case 39 failed.\"\n\nassert solution(input()) == \"40\\n\", \"Test case 40 failed.\"\n\nassert solution(input()) == \"41\\n\", \"Test case 41 failed.\"\n\nassert solution(input()) == \"42\\n\", \"Test case 42 failed.\"\n\nassert solution(input()) == \"43\\n\", \"Test case 43 failed.\"\n\nassert solution(input()) == \"44\\n\", \"Test case 44 failed.\"\n\nassert solution(input()) == \"45\\n\", \"Test case 45 failed.\"\n\nassert solution(input()) == \"46\\n\", \"Test case 46 failed.\"\n\nassert solution(input()) == \"47\\n\", \"Test case 47 failed.\"\n\nassert solution(input()) == \"48\\",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BBBWW\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1\\n', \"Test Case 1 failed\"\n\nassert solution(input()) == '2\\n', \"Test Case 2 failed\"\n\nassert solution(input()) == '1\\n', \"Test Case 3 failed\"\n\nassert solution(input()) == '3\\n', \"Test Case 4 failed\"\n\nassert solution(input()) == '0\\n', \"Test Case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BBBWW\") == \"1\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('BBBWW') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"BBBWW\") == \"1\\n\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BBBWW\") == \"1\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 21\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 21') == 'Yes'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nprint(\"All tests passed.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1 21\") == \"Yes\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 21\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 4\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"12 22\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 21\") == \"Yes\", \"Expected 'Yes' but got '{}'\".format(solution(\"1 21\"))\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 4 1 5 9 2\") == \"4\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\na_1 a_2.. a_N\") == \"4\"\nprint(\"All test cases passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\"\nassert solution(\"10\\n5 10 15 20 25\") == \"4\\n\"\nassert solution(\"8\\n10 30 50 70\") == \"4\\n\"\nassert solution(\"6\\n1 2 3 4 5\") == \"3\\n\"\nassert solution(\"10\\n5 10 15 20 25\") == \"4\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 103
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 3 4 5 6 7 8 9\") == \"15\\n\"\nassert solution(\"10\\n9 8 7 6 5 4 3 2 1\") == \"10\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"2\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 118
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\na_1 a_2.. a_N\\n\") == \"4\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5 6 7\\n\") == \"4\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7\\n3 1 4 1 5 9 2') == '4\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"4\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4 1 5 9 2\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4\") == \"5\"\nassert solution(\"5\\n1\") == \"4\"\nassert solution(\"10\\n2\") == \"7\"\nassert solution(\"15\\n2\") == \"11\"\nassert solution(\"10\\n20\") == \"27\"\nassert solution(\"10\\n50\") == \"31\"",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '5\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '5\\n', \"Output should be 5 but was {}\".format(solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4\") == \"5\\n\"\nassert solution(\"5\\n6\") == \"10\\n\"\nassert solution(\"7\\n8\") == \"15\\n\"\nassert solution(\"9\\n10\") == \"20\\n\"\nassert solution(\"11\\n12\") == \"25\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4') == '5'\nassert solution('5 1') == '0'\nassert solution('10 10') == '0'\nassert solution('3 3') == '10'\nassert solution('3 1') == '0'\nassert solution('2 2') == '0'\nassert solution('1 1') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5, \"The expected output is not correct\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\\n\", \"Test Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 5, \"Your solution is incorrect.\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\\n\"\nassert solution(\"2\\n3\\n\") == \"3\\n\"\nassert solution(\"10\\n10\\n\") == \"0\\n\"\nassert solution(\"1\\n1\\n\") == \"0\\n\"\nassert solution(\"1\\n2\\n\") == \"0\\n\"\nassert solution(\"3\\n4\\n\") == \"5\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"8 3 2\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"3 4 6\") == \"NO\"\nassert solution(\"4 4 6\") == \"NO\"\nassert solution(\"5 4 6\") == \"NO\"\nassert solution(\"6 4 6\") == \"NO\"\nassert solution(\"7 4 6\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 6\") == \"YES\", \"Test failed.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"0 0 0\") == \"NO\"\nassert solution(\"10 10 10\") == \"YES\"\nassert solution(\"1 2 1\") == \"NO\"\nassert solution(\"0 0 0\") == \"NO\"\nassert solution(\"10 10 10\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 6\") == \"YES\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"1 3 5\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(9) == \"Yes\"\nassert solution(29) == \"No\"\nassert solution(10) == \"No\"\nassert solution(100) == \"No\"\nassert solution(1000) == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"29\") == \"Yes\", \"Test 1 failed\"\nassert solution(\"10\") == \"No\", \"Test 2 failed\"\nassert solution(\"0\") == \"No\", \"Test 3 failed\"\nassert solution(\"1\") == \"No\", \"Test 4 failed\"\nassert solution(\"90\") == \"No\", \"Test 5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"29\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"29\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"29\") == \"Yes\\n\", \"The one's digit of 29 is 9.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(29) == 'Yes'\nprint('No') # This line will not be executed.",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('29') == 'Yes'\nassert solution('10') == 'No'\nassert solution('01') == 'No'\nassert solution('12') == 'Yes'\nassert solution('30') == 'Yes'\nassert solution('45') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"30\") == \"No\"\nassert solution(\"99\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(29) == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(29) == 'Yes'\nassert solution(123) == 'No'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\"\nprint(\"All tests passed.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 3\\n1 2 4\\n\") == \"1\"\nassert solution(\"5 3 3\\n1 2 4\\n5 6 7\\n8 9 10\\n\") == \"2\"\nassert solution(\"5 3 3\\n1 2 4\\n5 6 7\\n8 9 10\\n11 12 13\\n\") == \"5\"\nassert solution(\"5 3 3\\n1 2 4\\n5 6 7\\n8 9 10\\n11 12 13\\n14 15 16\\n\") == \"9\"\nassert solution(\"5 3 3\\n1 2 4\\n5 6 7\\n8 9 10\\n11 12 13\\n14 15 16\\n17 18 19\\n\") == \"20\"\n",
        "num_ids_2": 61,
        "num_ids_4": 167
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 3\\n1 2 4\\n\") == \"1\\n\"\nassert solution(\"5 5 1\\n1 1 1\\n\") == \"0\\n\"\nassert solution(\"5 1 0\\n3 2 1\\n\") == \"2\\n\"\n\nfrom typing import List",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 3\\n1 2 4\\n\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 4\\n2 3 5\\n\") == \"2\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 3\\n1 2 4\\n\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\"\nassert solution(\"5 4 4\\n3 2 4\") == \"1\"\nassert solution(\"5 5 5\\n3 4 1\") == \"3\"\nassert solution(\"5 6 6\\n3 4 2\") == \"3\"\nassert solution(\"5 7 7\\n3 4 3\") == \"3\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3 3\\n1 2 4') == '1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\"\nassert solution(\"5 3 3\\n1 2 1\") == \"0\"\nassert solution(\"5 3 3\\n1 2 3\") == \"1\"\nassert solution(\"5 3 3\\n1 2 4\") == \"2\"\nassert solution(\"5 3 3\\n1 2 5\") == \"3\"\nassert solution(\"5 3 3\\n1 2 6\") == \"4\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == '1'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"No\\n\"\n\nfor _ in range(int(input())):\n    H, W = map(int, input().split())\n    s = [list(map(int, input().split())) for _ in range(H)]\n    \n    for i in range(H):\n        for j in range(W):\n            if s[i][j] == \"#\":\n                if (i-1, j) not in [(0, j), (0, j+1), (0, j-1), (1, j), (1, j+1), (1, j-1)]:\n                    s[i][j] = \" \"\n            elif s[i][j] == \"..\":\n                if (i+1, j) not in [(H, j), (H, j+1), (H, j-1), (H-1, j), (H-1, j+1), (H-1, j-1)]:\n                    s[i][j] = \"#\"\n    \n    if all(s[i][j] == \" \" for i in range(H) for j in range(W)):\n        print(\"No\")\n    else:\n        print(\"Yes\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n.#.\\n.#.\\n') == 'Yes\\n'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n#.\\n#.\\n\") == \"Yes\\n\"\n\nSolution:\n\nTo solve this problem, we can use a sliding window approach. We will maintain two variables - i and j - to keep track of the current row and column of the painted square. We will also keep track of a counter variable - count - to keep track of the number of times the square has been painted. We will also keep track of the color of the current square.\n\nInitially, we will paint the first square as white, as per the objective. We will also initialize the count variable as 0.\n\nWe will iterate over all the squares in the grid. For each square, we will check whether it is adjacent to the painted square. We will check whether the square is already painted black. If it is, we will skip it.\n\nIf the square is not adjacent to the painted square, we will check if the square is horizontally or vertically adjacent. If the square is not adjacent, we will skip it.\n\nIf the square is not horizontally or vertically adjacent to the painted square, we will paint the square as white. If the square is horizontally adjacent, we will paint the square as black if its value is not equal to the value of the painted square. If the square is vertically adjacent, we will paint the square as black if its value is not equal to the value of the top row of the grid.\n\nWe will keep track of the current color of the square and increment the count variable if the square is painted black.\n\nFinally, we will check if the count variable is equal to 0. If it is, we will print \"Yes\". Otherwise, we will print \"No\".\n\nLet's implement this solution in the code below:\n\n```python\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n#.\\n#.\\n\") == \"Yes\"\nprint(\"All tests passed.\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    3 3\n    1.1 2.2 3.3\n    4.4 5.5 6.6\n    7.7 8.8 9.9\n    10.10 11.11 12.12\n''') == 'Yes'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n.#.\\n.#.\\n\") == \"Yes\\n\"\nassert solution(\"5 5\\n#.#\\n#.#\\n\") == \"Yes\\n\"\nassert solution(\"1 1\\n#.\\n#.\\n\") == \"No\\n\"\nassert solution(\"3 5\\n#.\\n#.\\n#.\\n\") == \"No\\n\"\nassert solution(\"1 5\\n#.\\n#.\\n#.\\n\") == \"No\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 93
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"#.#\") == \"No\"\nassert solution(\"##\") == \"No\"\nassert solution(\"###\") == \"Yes\"\nassert solution(\"....\") == \"No\"\nassert solution(\"###.#\") == \"No\"\nassert solution(\"....#\") == \"Yes\"\nassert solution(\"#..#\") == \"Yes\"\nassert solution(\"..#..\") == \"Yes\"\nassert solution(\"..##.\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3 3\\n.#.\\n.#.\\n\") == \"Yes\"\nassert solution(stdin=\"4 4\\n..#\\n..#\\n\") == \"No\"\nassert solution(stdin=\"1 1\\n..#\\n..#\\n\") == \"Yes\"\nassert solution(stdin=\"5 5\\n.#.\\n.#.\\n\") == \"No\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n.#\\n\") == \"Yes\\n\"\nassert solution(\"3 3\\n.#\\n\\n..\") == \"No\\n\"\nassert solution(\"4 4\\n.#\\n\\n..\") == \"Yes\\n\"\nassert solution(\"5 5\\n..#\\n\") == \"No\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n.#.\\n\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"20 10 30\") == \"Yes\"\nassert solution(\"10 20 30\") == \"No\"\nassert solution(\"20 30 10\") == \"No\"\nassert solution(\"30 20 10\") == \"No\"\nprint(\"All test cases pass\")",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"5 2 1\") == \"No\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 30 20') == 'Yes', \"The correct output is 'Yes'.\"\nassert solution('7 4 2') == 'No', \"The correct output is 'No'.\"\nassert solution('3 1 1') == 'No', \"The correct output is 'No'.\"",
        "num_ids_2": 49,
        "num_ids_4": 72
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 30 20') == 'Yes'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 30 20\") == \"Yes\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"7 10 5\") == \"No\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 30 20\") == \"Yes\", \"Your solution is incorrect.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 8 7 1') == 'Left'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 8 7 1') == 'Left'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"Left\\n\", \"Test case failed.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 8 7 1') == 'Left', \"Test case 1 failed\"\nassert solution('1 1 1 1') == 'Left', \"Test case 2 failed\"\nassert solution('5 3 2 4') == 'Right', \"Test case 3 failed\"\nassert solution('1 2 3 4 5') == 'Balanced', \"Test case 4 failed\"\nassert solution('10 5 15 20 50') == 'Left', \"Test case 5 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 95
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Left\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\\n\"\nassert solution(\"10 9 8 7\") == \"Left\\n\"\nassert solution(\"1 2 3 4\") == \"Left\\n\"\nassert solution(\"1 3 2 4\") == \"Right\\n\"\nassert solution(\"5 6 7 8\") == \"Balanced\\n\"\nassert solution(\"9 7 8 6\") == \"Right\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n0\\n10\\n
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\\n\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\\n\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\\n\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\\n\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\\n\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\\n\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\\n\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\\n\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\\n\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\\n\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\\n\"",
        "num_ids_2": 112,
        "num_ids_4": 224
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n4 5 6 7 8 9\\n\") == \"8\\n\"\nprint(\"All test cases pass\")",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"8\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\\n\"\nassert solution(\"2\\n1 0 1 0 1 1 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\\n\"\nassert solution(\"3\\n1 0 1 0 1 1 1 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\\n\"\nassert solution(\"4\\n1 0 1 0 1 1 1 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\\n\"\nassert solution(\"5\\n1 0 1 0 1 1 1 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\\n\"\nassert solution(\"6\\n1 0 1 0 1 1 1 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\\n\"\nassert solution(\"7\\n1 0 1 0 1 1 1 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\\n\"\nassert solution(\"8\\n1 0 1 0 1 1 1 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\\n\"\nassert solution(\"9\\n1 0 1 0 1 1 1 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 232
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n3\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n-2\\n-3\\n4\\n-2\\n') == '8'\nprint('All tests pass.')",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"8\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\") == \"8\\n\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n8') == '8\\n'\nassert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n1\\n2\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n8') == '8\\n'",
        "num_ids_2": 173,
        "num_ids_4": 173
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n269-6650\\n\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\nprint(\"All tests passed\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n269-6650\\n\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\\n\"\nprint(\"All test cases pass\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"A B\\nS\")) == \"Yes\"\nassert solution(input(\"4 3\\n123-4567\")) == \"No\"\nassert solution(input(\"2 3\\n123456\")) == \"No\"\nassert solution(input(\"5 4\\nABCDEF\")) == \"Yes\"",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\nassert solution(\"1 1\\n12345\") == \"No\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\n\nassert solution(\"2 3\\n1234\") == \"No\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\nassert solution(\"3 4\\n12345\") == \"No\"\nassert solution(\"2 4\\n269-6650\") == \"No\"\nassert solution(\"2 4\\n12345\") == \"No\"\nassert solution(\"1 3\\n269-6650\") == \"No\"\nassert solution(\"1 3\\n12345\") == \"No\"",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2 6') == '1', \"Expected Output: '1'\\nGot: '{}'\".format(solution('3 2 6'))  # Test case 1",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2 6') == '1\\n', 'The minimum distance the second rectangle needs to be moved is not 1.'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\", \"The minimum distance the second rectangle needs to be moved is 1.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '1'\nassert solution(\"3 2 6\") == '1'\nassert solution(\"1 1 10\") == '2'\nassert solution(\"2 3 5\") == '0'\nassert solution(\"5 5 5\") == '0'\nassert solution(\"5 5 1\") == '1'\nassert solution(\"10 10 10\") == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n\"\nprint(\"All assertions passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"1\", \"The minimum distance it needs to be moved is 1\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\", \"Input 1: Invalid input format\"\nassert solution(\"7 2 6\") == \"2\\n\", \"Input 2: Invalid input format\"\nassert solution(\"4 2 6\") == \"1\\n\", \"Input 3: Invalid input format\"\nassert solution(\"7 4 6\") == \"3\\n\", \"Input 4: Invalid input format\"\nassert solution(\"5 2 8\") == \"2\\n\", \"Input 5: Invalid input format\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\", \"The output should be 1.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\", \"Test Case 1\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\", \"The function should return the correct output.\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\", \"Test Case 1 Failed\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3\") == \"3\\n4\\n7\\n8\"\nassert solution(\"10 11 12\") == \"3\\n4\\n7\\n8\"\nassert solution(\"10 12 11\") == \"3\\n4\\n7\\n8\"\nassert solution(\"9 10 11\") == \"3\\n4\\n7\\n8\"\nassert solution(\"10 10 10\") == \"3\\n4\\n7\\n8\"",
        "num_ids_2": 29,
        "num_ids_4": 81
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Contest Contest\") == \"ABC\"\nassert solution(\"AtCoder Contest\") == \"ABC\"\nassert solution(\"AtCoder Contest123\") == \"ABC\"",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"abc\") == \"abc\"",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"ABC\") == \"ABC\"\nassert solution(\"Codeforces\") == \"AC\"\nassert solution(\"Codeforces Academy\") == \"AC\"\n",
        "num_ids_2": 29,
        "num_ids_4": 50
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\", \"Incorrect result\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\", \"Solution is not correct.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\", \"Test failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'YES'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"6 3 6\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"1 3 2\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\n\nassert solution(\"3 3 2\") == \"NO\"\n\nassert solution(\"1 1 1\") == \"YES\"\n\nassert solution(\"1 2 2\") == \"YES\"\n\nassert solution(\"1 1 2\") == \"NO\"\n\nassert solution(\"1 2 1\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"3 5 2\") == \"NO\"\nassert solution(\"1 2 1\") == \"NO\"\nassert solution(\"3 2 3\") == \"YES\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"0 2 3\") == \"NO\"\nassert solution(\"3 0 3\") == \"NO\"\nassert solution(\"1 0 3\") == \"NO\"\nassert solution(\"3 5 0\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"4 4 2\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"5 6 7\") == \"NO\"\nassert solution(\"1 2 5\") == \"YES\"\nassert solution(\"3 4 7\") == \"YES\"\nassert solution(\"3 5 1\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"6 3 2\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\\n\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == '83\\n'\n\nSolution:\n\n```python\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '83', \"Test failed\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed: Solution {solution(input())} does not match expected output {output()}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 17\") == \"83\"\nassert solution(\"200 25\") == \"125\"\nassert solution(\"200 20\") == \"100\"\nassert solution(\"300 50\") == \"150\"\nassert solution(\"1 3\") == \"Error: t should be greater than 0.\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1000000000 1000000000') == 100000000000000000\nassert solution('2\\n1000000000 1000000001') == -1",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"1000000000000000000\"\nassert solution(stdin) == \"10000000000",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1000000000000000000\" or solution(stdin) == \"-1\", \"Test failed for input: {}\".format(stdin)",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1000000000 1000000000') == '1000000000000000000'\nassert solution('3\\n5 6 7') == '-1'\nassert solution('4\\n1 2 3 4') == '-1'\nassert solution('5\\n9 8 7 6 5') == '-1'\nassert solution('6\\n10 9 8 7 6 5 4 3 2 1') == '-1'\nassert solution('7\\n100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1') == '1000000000000000000'",
        "num_ids_2": 68,
        "num_ids_4": 108
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"100000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"1000000000000000000\"\nassert solution(input()) == \"-1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"2\\n1000000000 1000000000\\n\") == \"-1\\n\"\nassert solution(\"3\\n1000000000 1000000000\\n1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"3\\n1000000000 1000000000\\n1000000000\\n\") == \"-1\\n\"\nassert solution(\"4\\n1000000000 1000000000\\n1000000000\\n1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"4\\n1000000000 1000000000\\n1000000000\\n1000000000\\n\") == \"-1\\n\"\n",
        "num_ids_2": 92,
        "num_ids_4": 208
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"2\\n1000000000 1000000000\\n\") == \"-1\\n\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1000000000\\n1000000000\\n') == '1000000000000000000\\n'\nassert solution('2\\n1000000000\\n1000000001\\n') == '-1\\n'\nassert solution('2\\n1000000000\\n1000000000\\n') == '1000000000000000000\\n'\nassert solution('2\\n1000000000\\n1000000000\\n') == '-1\\n'",
        "num_ids_2": 94,
        "num_ids_4": 188
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1000000000000000000', \"Test case 1 failed.\"\nassert solution(input()) == '1000000000000000000', \"Test case 2 failed.\"\nassert solution(input()) == '1000000000000000000', \"Test case 3 failed.\"\nassert solution(input()) == '1000000000000000000', \"Test case 4 failed.\"\nassert solution(input()) == '-1', \"Test case 5 failed.\"\n",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Incorrect output. Expected: {output()}, Got: {solution(input())}\"\n\nN = int(stdin.readline().strip())\nA = list(map(int, stdin.readline().strip().split()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\\n\"\nassert solution(\"100\\n1\") == \"No\\n\"\nassert solution(\"1000\\n1\") == \"No\\n\"\nassert solution(\"10000\\n1\") == \"No\\n\"\nassert solution(\"10000\\n1000\") == \"Yes\\n\"\nassert solution(\"20000\\n10000\") == \"No\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\\n\"\nassert solution(\"2000\\n218\\n\") == \"No\\n\"\nassert solution(\"2000\\n218\\n2\\n\") == \"Yes\\n\"\nassert solution(\"1000\\n218\\n\") == \"No\\n\"\nassert solution(\"1000\\n218\\n2\\n\") == \"Yes\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 91
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 6\") == \"safe\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) =='safe', \"Expected'safe', got '{}'\".format(solution(stdin))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 6\") == \"safe\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"6 3 4\") == \"safe\"\nassert solution(\"10 3 4\") == \"safe\"\nassert solution(\"4 3 10\") == \"safe\"\nassert solution(\"4 3 5\") == \"dangerous\"\nassert solution(\"4 4 5\") == \"dangerous\"\nassert solution(\"4 3 0\") == \"safe\"\nassert solution(\"4 5 5\") == \"safe\"\nassert solution(\"4 5 4\") == \"safe\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3 6\") == \"safe\\n\"\nassert solution(\"5 4 6\") == \"safe\\ndangerous\\n\"\nassert solution(\"6 4 6\") == \"safe\\ndangerous\\nsafe\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 57
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"safe\"\nprint(\"safe\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 6\") == \"safe\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 6\") == \"safe\\n\"\nassert solution(\"5 3 6\") == \"dangerous\\n\"\nassert solution(\"3 4 6\") == \"safe\\n\"\nassert solution(\"3 3 5\") == \"safe\\ndangerous\\n\"\nassert solution(\"1 3 6\") == \"safe\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 68
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nprint(\"All tests passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 6\") == \"safe\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == \"9\"\nassert solution(50) == \"10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\"\nassert solution(1) == \"1\"\nassert solution(0) == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 64
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"9\\n10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"9\\n10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 9\nassert solution(15) == 16\nassert solution(30) == 36\nassert solution(100) == 100\nassert solution(1000) == 144\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"3\") == \"3\"\nassert solution(\"24\") == \"24\"\nassert solution(\"15\") == \"15\"\nassert solution(\"1\") == \"1\"\n\nassert solution(\"0\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == '9', 'The largest square number not exceeding 10 is 9.'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"20\") == \"16\"\nassert solution(\"50\") == \"31\"\nassert solution(\"70\") == \"49\"\nassert solution(\"100\") == \"50\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == \"9\", \"10 is not square, but 9 = 3 \u00d7 3 is.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"9\", \"Expected: 9\"\nassert solution(\"100\") == \"100\", \"Expected: 100\"\nassert solution(\"123\") == \"123\", \"Expected: 123\"\nassert solution(\"5\") == \"5\", \"Expected: 5\"\nassert solution(\"101\") == \"101\", \"Expected: 101\"",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3\\n1 1\\n3 2') == '10\\n'\nassert solution('10\\n2 3\\n3 2\\n1 1\\n4 5\\n6 7\\n8 9\\n') == '10\\n'",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"\nassert solution(\"5\\n6 7\\n9 10\\n12 13\\n15 16\") == \"100000\"\nassert solution(\"5\\n1 2\\n3 4\\n5 6\\n7 8\") == \"100000\"",
        "num_ids_2": 66,
        "num_ids_4": 101
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"10\", \"The minimum possible total number of votes obtained by Takahashi and Aoki when AtCoDeer checked the report for the N-th time is 10.\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n2 3\\n1 1\\n3 2\\n') == '10'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\\n\"\nassert solution(\"5\\n10 5\\n15 10\\n20 15\\n25 20\") == \"30\\n\"\nassert solution(\"7\\n10 3\\n15 5\\n20 7\\n25 10\\n30 15\\n35 20\\n40 25\\n45 30\") == \"40\\n\"\nassert solution(\"8\\n10 2\\n15 4\\n20 6\\n25 8\\n30 10\\n35 12\\n40 14\\n45 16\\n50 18\\n55 20\") == \"45\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 213
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\", \"Test case 1 failed\"\nassert solution(\"copyrightable\") == \"no\", \"Test case 2 failed\"\nassert solution(\"notacolor\") == \"no\", \"Test case 3 failed\"\nassert solution(\"acolor\") == \"no\", \"Test case 4 failed\"\nassert solution(\"ab\") == \"no\", \"Test case 5 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 76
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('uncopyrightable') == 'no'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\" # correct",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\", \"Test Case 1 failed\"\nassert solution(\"abc\") == \"no\", \"Test Case 2 failed\"\nassert solution(\"apple\") == \"no\", \"Test Case 3 failed\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"no\", \"Test Case 4 failed\"\nassert solution(\"hello world\") == \"no\", \"Test Case 5 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\", \"Sample Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\nWEEWW') == '1\\n'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"5\\nWEEWW\") == \"1\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nWEEWW\\n\") == \"1\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'5\\nweeWW\\n') == '1'\nassert solution(b'6\\nWEEWW\\n') == '2'\nassert solution(b'7\\nwewWW\\n') == '3'\nassert solution(b'8\\nwWWE\\n') == '4'\nassert solution(b'9\\nwWWE\\n') == '5'",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"\nassert solution(\"1\\nSEE\") == \"0\"\nassert solution(\"5\\nWSSEEE\") == \"3\"\nassert solution(\"6\\nWWEWW\") == \"3\"\nassert solution(\"4\\nWSEW\") == \"0\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"\nassert solution(\"10\\nSEEEEEEEEE\") == \"1\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"\nassert solution(\"4\\nSWEE\") == \"1\"\nassert solution(\"1\\nSE\") == \"1\"\nassert solution(\"1\\nSE\") == \"0\"\nassert solution(\"3\\nSE\") == \"2\"",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    4 3\n    1 2\n    2 3\n    1 4\n    '''\n) == '''\n2\n2\n1\n1\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n\") == \"2\\n2\\n1\\n1\"\n\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n\") == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected output: '{expected}', Received output: '{solution(input())}'\"\n\ninput_string = \"\"\"\n4 3\n1 2\n2 3\n1 4\n\"\"\"\n\nexpected = '''\n2\n2\n1\n1\n'''\n\nsolution(input_string)",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\na_1 b_1\\na_2 b_2\\na_3 b_3\\na_4 b_4\\n') == '2\\n2\\n1\\n1'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\\n\"\nassert solution(\"5 3\\n1 2\\n2 3\\n1 4\\n1 5\") == \"3\\n2\\n1\\n\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\") == \"2\\n2\\n2\\n1\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 122
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\"2\n2\n1\n1\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n\") == \"2\\n2\\n1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n2 4\\n2 5\\n\") == \"2\\n1\\n1\\n1\\n\"\nassert solution(\"3 4\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n1\\n1\\n1\\n\"\nassert solution(\"2 3\\n1 2\\n2 3\\n1 4\\n\") == \"2\\n2\\n1\\n1\\n\"",
        "num_ids_2": 85,
        "num_ids_4": 165
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n5\\n10\\n15\\n') == '25\\n'\nassert solution('3\\n5\\n10\\n15\\n') == '25\\n'\nassert solution('3\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('3\\n5\\n10\\n15\\n') == '25\\n'\nassert solution('3\\n5\\n10\\n15\\n') == '0\\n'\nassert solution('3\\n5\\n10\\n15\\n') == '25\\n'\nassert solution('3\\n5\\n10\\n15\\n') == '0\\n'",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"30\\n\"\nassert solution(\"100\\n100\\n100\\n100\\n\") == \"100\\n\"\nassert solution(\"10\\n10\\n10\\n10\\n\") == \"100\\n\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n\") == \"25\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 115
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"25\\n\", \"Your grade will be 25 if the 10-point and 15-point questions are answered correctly and the 5-point question is not, and this grade will be displayed correctly.\"\n\nassert solution() == \"30\\n\", \"Your grade will be 30 if the 5-point question is also answered correctly, but this grade will be incorrectly displayed as 0.\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter the number of questions: \")) == \"25\"\nassert solution(input(\"Enter the scores of questions: \")) == \"30\"\nassert solution(input(\"Enter the scores of questions: \")) == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 53
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\"\nassert solution(\"5\\n10\\n15\\n\") == \"30\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n20\\n\") == \"30\\n\"\nassert solution(\"10\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"10\\n5\\n10\\n15\\n20\\n\") == \"30\\n\"\nassert solution(\"15\\n10\\n20\\n5\\n\") == \"25\\n\"\nassert solution(\"15\\n10\\n20\\n5\\n20\\n\") == \"30\\n\"\nassert solution(\"25\\n10\\n15\\n10\\n\") == \"30\\n\"\nassert solution(\"25\\n10\\n15\\n10\\n20\\n\") == \"30\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 114
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3\n    5\n    10\n    15\n    20\n    \"\"\"\n) == \"25\"\n\nassert solution(\n    \"\"\"\n    3\n    5\n    10\n    15\n    20\n    25\n    \"\"\"\n) == \"30\"\n\nassert solution(\n    \"\"\"\n    3\n    5\n    10\n    15\n    20\n    25\n    30\n    \"\"\"\n) == \"30\"\n\nassert solution(\n    \"\"\"\n    3\n    5\n    10\n    15\n    20\n    25\n    30\n    35\n    \"\"\"\n) == \"35\"\n\nassert solution(\n    \"\"\"\n    3\n    5\n    10\n    15\n    20\n    25\n    30\n    35\n    40\n    \"\"\"\n) == \"40\"\n\nassert solution(\n    \"\"\"\n    3\n    5\n    10\n    15\n    20\n    25\n    30\n    35\n    40\n    45\n    \"\"\"\n) == \"45\"\n\nassert solution(\n    \"\"\"\n    3\n    5\n    10\n    15\n    20\n    25\n    30\n    35\n    40\n    45\n    50\n    \"\"\"\n) == \"50\"\n\nassert solution(\n    \"\"\"\n    3\n    5\n    10\n    15\n    20\n    25\n    30\n    35\n    40\n    45\n    50\n    55\n    \"\"\"\n) == \"55\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\naabbca\\n\") == \"2\"\nassert solution(\"7\\nabcde\\n\") == \"3\"\nassert solution(\"8\\nabcdefg\\n\") == \"4\"\nassert solution(\"9\\nabcdefghij\\n\") == \"5\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"\nassert solution(\"5\\naabbba\") == \"2\"\nassert solution(\"7\\nbbbbbb\") == \"3\"\nassert solution(\"3\\naaaabbbbc\") == \"3\"\nassert solution(\"5\\naaaaa\") == \"3\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\naabbca\") == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    6\n    aabbca\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    5\n    abcdefg\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    6\n    abcdefg\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    5\n    aabbcb\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3\n    abacde\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    5\n    abcdefg\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    6\n    abcdefg\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    5\n    abdabcdefg\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    5\n    abcdefg\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3\n    abcde\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    5\n    abcdefg\n    \"\"\"\n) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aabbca\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"\nassert solution(\"3\\nabcde\") == \"1\"\nassert solution(\"4\\nabcd\") == \"0\"\nassert solution(\"1\\n\") == \"0\"\nassert solution(\"2\\nabc\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 53
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\naabbca\\n\") == \"2\", \"The given solution is incorrect.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"\nassert solution(\"5\\nxyz\") == \"0\"\nassert solution(\"10\\nabcd\") == \"3\"\nassert solution(\"6\\naaabbbcc\") == \"3\"\nassert solution(\"6\\nabcabcabc\") == \"3\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\", \"Incorrect output for Sunny input.\"\nassert solution(\"Cloudy\") == \"Rainy\", \"Incorrect output for Cloudy input.\"\nassert solution(\"Rainy\") == \"Sunny\", \"Incorrect output for Rainy input.\"\nassert solution(\"Sunny\") == \"Sunny\", \"Incorrect output for Sunny input.\"\nassert solution(\"Cloudy\") == \"Rainy\", \"Incorrect output for Cloudy input.\"",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\", \"Test failed for the given code\"\nassert solution(\"Cloudy\") == \"Cloudy\", \"Test failed for the given code\"\nassert solution(\"Rainy\") == \"Cloudy\", \"Test failed for the given code\"\nassert solution(\"Sunny\") == \"Cloudy\", \"Test failed for the given code\"\nassert solution(\"Cloudy\") == \"Cloudy\", \"Test failed for the given code\"\nassert solution(\"Rainy\") == \"Cloudy\", \"Test failed for the given code\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Rainy\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Rainy\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Sunny\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\", \"Incorrect solution.\"\nassert solution(\"Cloudy\") == \"Sunny\", \"Incorrect solution.\"\nassert solution(\"Rainy\") == \"Sunny\", \"Incorrect solution.\"\nassert solution(\"Sunny\") == \"Cloudy\", \"Incorrect solution.\"\nassert solution(\"Cloudy\") == \"Sunny\", \"Incorrect solution.\"\nassert solution(\"Rainy\") == \"Sunny\", \"Incorrect solution.\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunny') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Rainy'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 17 120\") == \"119\", \"Expected output: 119\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 17 120\") == \"119\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 17 120\") == \"119\", \"Incorrect output\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 17 120\") == \"119\\n\", \"Your solution is incorrect.\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"5 1 20\") == \"50\"\nassert solution(\"3 2 100\") == \"50\"\nassert solution(\"6 5 30\") == \"180\"\nassert solution(\"10 25 75\") == \"285\"\nassert solution(\"20 20 20\") == \"200\"",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 17 120\") == \"119\", \"The correct output is not provided.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 17 120\") == \"119\", \"Plan 1, should return 119 yen\"\nassert solution(\"7 17 120\") == \"120\", \"Plan 2, should return 120 yen\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"119\", \"Output should be 119\"\nprint(\"Test Passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='7 17 120') == '119\\n', \"Test Failed\"\nassert solution(stdin='3 10 20') == '10 yen\\n', \"Test Failed\"\nassert solution(stdin='6 25 10') == '20 yen\\n', \"Test Failed\"\nassert solution(stdin='2 5 1') == '5 yen\\n', \"Test Failed\"\nassert solution(stdin='1 1 1') == '1 yen\\n', \"Test Failed\"",
        "num_ids_2": 54,
        "num_ids_4": 105
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"3800\\n\"\nassert solution(\"1 3\") == \"7600\\n\"\nassert solution(\"1 5\") == \"11400\\n\"\nassert solution(\"2 2\") == \"3800\\n\"\nassert solution(\"2 4\") == \"7600\\n\"\nassert solution(\"2 6\") == \"11400\\n\"\nassert solution(\"2 8\") == \"15200\\n\"\nassert solution(\"3 3\") == \"10000\\n\"\nassert solution(\"3 5\") == \"14000\\n\"\nassert solution(\"3 7\") == \"18000\\n\"\nassert solution(\"3 9\") == \"22000\\n\"\nassert solution(\"4 4\") == \"14000\\n\"\nassert solution(\"4 6\") == \"18000\\n\"\nassert solution(\"4 8\") == \"22000\\n\"\nassert solution(\"5 5\") == \"18000\\n\"\nassert solution(\"5 7\") == \"22000\\n\"\nassert solution(\"5 9\") == \"26000\\n\"\nassert solution(\"6 6\") == \"22000\\n\"\nassert solution(\"6 8\") == \"26000\\n\"\nassert solution(\"6 10\") == \"30000\\n\"\nassert solution(\"7 7\") == \"26000\\n\"\nassert solution(\"7 9\") == \"30000\\n\"\nassert solution(\"8 8\") == \"30000\\n\"\nassert solution(\"8 10\") == \"34000\\n\"\nassert solution(\"9 9\") == \"30000\\n\"\nassert solution(\"9 11\") == \"34000\\n\"\nassert solution(\"10 10\") == \"34000\\n\"\nassert solution(\"10 12\") == \"38000\\n\"\nassert solution(\"11 11\") == \"38000\\n\"\nassert solution(\"11 13\") == \"42000\\n\"\nassert solution(\"12 12\") == \"38000\\n\"\nassert solution(\"12 14\") == \"42000\\n\"\nassert solution(\"13 13\") == \"42000\\n\"\nassert solution(\"13 15\") == \"46000\\n\"\nassert solution(\"14 14\") == \"42000\\n\"\nassert solution(\"14 16\") == \"46000\\n\"\nassert solution(\"15 15\") == \"46000\\n\"\nassert solution(\"15 17\") == \"50000\\n\"\nassert solution(\"16 16\") == \"46000\\n\"\nassert solution(\"16 18\") == \"50000\\n\"\nassert solution(\"17 17\") == \"50000\\n\"\nassert solution(\"17 19\") == \"54000\\n\"\nassert solution(\"18 18\") == \"50000\\n\"\nassert solution(\"18 20\") == \"54000\\n\"\nassert solution(\"19 19\") == \"54000\\n\"\nassert solution(\"19 21\") == \"58000\\n\"\nassert solution(\"20 20\") == \"54000\\n\"\nassert solution(\"20 22\") == \"58000\\n\"\nassert solution(\"21 21\") == \"58000\\n\"\nassert solution(\"21 23\") == \"62000\\n\"\nassert solution(\"22 22\") == \"58000\\n\"\nassert solution(\"22 24\") == \"62000\\n\"\nassert solution(\"23 23\") == \"62000\\n\"\nassert solution(\"23 25\") == \"66000\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"3800\", \"Test case 1\"\nassert solution(\"2 1\") == \"1500\", \"Test case 2\"\nassert solution(\"3 1\") == \"1000\", \"Test case 3\"\nassert solution(\"4 1\") == \"750\", \"Test case 4\"\nassert solution(\"5 1\") == \"500\", \"Test case 5\"\n\nimport random",
        "num_ids_2": 42,
        "num_ids_4": 83
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3800'\n\nassert solution(stdin='1 1') == '3800'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '3800'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"3800\", \"Test case 1 failed\"\nassert solution(\"2 1\") == \"666\", \"Test case 2 failed\"\nassert solution(\"3 1\") == \"132\", \"Test case 3 failed\"\nassert solution(\"4 1\") == \"264\", \"Test case 4 failed\"\nassert solution(\"5 1\") == \"528\", \"Test case 5 failed\"",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"3800\\n\"\nassert solution(\"2 1\") == \"700\\n\"\nassert solution(\"3 1\") == \"1200\\n\"\nassert solution(\"4 1\") == \"1900\\n\"\nassert solution(\"5 1\") == \"2800\\n\"\nassert solution(\"6 1\") == \"3800\\n\"\nassert solution(\"7 1\") == \"4900\\n\"\nassert solution(\"8 1\") == \"6200\\n\"\nassert solution(\"9 1\") == \"7600\\n\"\nassert solution(\"10 1\") == \"9100\\n\"\nassert solution(\"11 1\") == \"10700\\n\"\nassert solution(\"12 1\") == \"12400\\n\"\nassert solution(\"13 1\") == \"14200\\n\"\nassert solution(\"14 1\") == \"16100\\n\"\nassert solution(\"15 1\") == \"18000\\n\"\nassert solution(\"16 1\") == \"20000\\n\"\nassert solution(\"17 1\") == \"22000\\n\"\nassert solution(\"18 1\") == \"24000\\n\"\nassert solution(\"19 1\") == \"26000\\n\"\nassert solution(\"20 1\") == \"28000\\n\"\nassert solution(\"21 1\") == \"30000\\n\"\nassert solution(\"22 1\") == \"32000\\n\"\nassert solution(\"23 1\") == \"34000\\n\"\nassert solution(\"24 1\") == \"36000\\n\"\nassert solution(\"25 1\") == \"38000\\n\"\nassert solution(\"26 1\") == \"40000\\n\"\nassert solution(\"27 1\") == \"42000\\n\"\nassert solution(\"28 1\") == \"44000\\n\"\nassert solution(\"29 1\") == \"46000\\n\"\nassert solution(\"30 1\") == \"48000\\n\"\nassert solution(\"31 1\") == \"50000\\n\"\nassert solution(\"32 1\") == \"52000\\n\"\nassert solution(\"33 1\") == \"54000\\n\"\nassert solution(\"34 1\") == \"56000\\n\"\nassert solution(\"35 1\") == \"58000\\n\"\nassert solution(\"36 1\") == \"60000\\n\"\nassert solution(\"37 1\") == \"62000\\n\"\nassert solution(\"38 1\") == \"64000\\n\"\nassert solution(\"39 1\") == \"66000\\n\"\nassert solution(\"40 1\") == \"68000\\n\"\nassert solution(\"41 1\") == \"70000\\n\"\nassert solution(\"42 1\") == \"72000\\n\"\nassert solution(\"43 1\") == \"74000\\n\"\nassert solution(\"44 1\") == \"76000\\n\"\nassert solution(\"45 1\") == \"78000\\n\"\nassert solution(\"46 1\") == \"80000\\n\"\nassert solution(\"47 1\") == \"82000\\n\"\nassert solution(\"48 1\") == \"84000\\n\"\nassert solution(\"49 1\") == \"86000\\n\"\nassert solution(\"50 1\") == \"88000\\n\"\nassert solution(\"51 1\") == \"90000\\n\"\nassert solution(\"52 1\") == \"92000\\n\"\nassert solution(\"53 1\") == \"94000\\n\"\nassert solution(\"54 1\") == \"96000\\n\"\nassert solution(\"55 1\") == \"98000\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"3800\\n\"\nprint(\"All test cases passed\")\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1') == '3800'\nassert solution('2 2') == '1900'\nassert solution('3 3') == '3800'\nassert solution('4 4') == '1900'\nassert solution('5 5') == '3800'",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"3800\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3800\", \"Incorrect answer\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('atcoderregularcontest') == 'b', \"The string atcoderregularcontest contains a, but does not contain b.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"hello\") == None\nassert solution(\"hello world\") == \"z\"\nassert solution(\"\") == None\nassert solution(\"abcde\") == None",
        "num_ids_2": 21,
        "num_ids_4": 38
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('atcoderregularcontest') == 'b', \"The string atcoderregularcontest contains a, but does not contain b.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"\") == None\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('atcoderregularcontest') == 'b'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\", \"The string atcoderregularcontest does not contain b.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n1\\n1\\n2\\n3\\n4\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"6\\n1\\n1\\n2\\n3\\n4\\n5\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"7\\n1\\n1\\n2\\n3\\n4\\n5\\n6\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"8\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"9\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\") == \"11\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"12\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"13\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"14\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"15\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"16\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"17\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"18\\n1\\",
        "num_ids_2": 64,
        "num_ids_4": 151
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"\nassert solution(\"6\\n1 1 1 1 1 1 1\") == \"1\\n1\\n1\\n1\\n1\\n1\\n1\"\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1\") == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\"\nassert solution(\"5\\n5 5 5 5 5\") == \"5\\n5\\n5\\n5\\n5\"\nassert solution(\"15\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 71,
        "num_ids_4": 163
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect. \\nExpected output: {output()}\\nActual output: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n2 4 4 3') == '4\\n3\\n3\\n4\\n'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"\nassert solution(\"5\\n5 3 2 1\\n1 2 3 4 5\") == \"5\\n3\\n2\\n1\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 4 4 3') == '4\\n3\\n3\\n4\\n'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"\nassert solution(\"1\\n1\") == \"1\\n1\"\nassert solution(\"2\\n2 4 4 3\") == \"2\\n2\\n3\\n3\\n3\\n4\"\nassert solution(\"3\\n3 4 4 3\") == \"3\\n3\\n4\\n4\\n3\\n3\"\nassert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"",
        "num_ids_2": 44,
        "num_ids_4": 112
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2\\n1 rectangle can be formed.'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 3\\n2 4 5\\n3 5 6\\n6 7 8\\n9 10 11\\n\") == \"2\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '1 \\times 2 rectangle can be formed.'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n3 1 2 4 2 1') == '2\\n1 rectangle can be formed.'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n3 1 2 4 2 1') == '2\\n1 \\times 2 rectangle can be formed.'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"Solution is incorrect. Please check the input and try again.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n1 2 rectangle can be formed.\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\"\nassert solution(\"3\\n2 1\\n2\\n5\\n10\") == \"6\\n\"\nassert solution(\"3\\n2 1\\n2\\n5\\n10\") == \"6\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\\n4\") == \"9\"\nassert solution(\"10\\n3\\n5\\n6\\n8\\n9\") == \"14\"\nassert solution(\"5\\n1\\n2\\n3\\n4\") == \"10\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"",
        "num_ids_2": 53,
        "num_ids_4": 103
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"8\\n\", \"Incorrect output. Please check the sample input and the solution.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\"\nassert solution(\"2\\n1\") == \"0\\n\"\nassert solution(\"4\\n1\\n1\\n1\") == \"4\\n\"\nassert solution(\"3\\n10 1\") == \"0\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 81
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\nassert solution(\"6\\n100 50\\n10\\n50\\n100\") == \"38\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\", \"Test failed\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"2\\n2\\n2\\n100\") == \"2\"\n\nassert solution(\"2\\n2\\n2\\n100\") == \"2\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2\\n', 'Test case 1 failed'\nassert solution(input()) == '2\\n', 'Test case 2 failed'\nassert solution(input()) == '2\\n', 'Test case 3 failed'\nassert solution(input()) == '2\\n', 'Test case 4 failed'\nassert solution(input()) == '2\\n', 'Test case 5 failed'",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"1\\n1\\n1\\n50\") == \"1\"\nassert solution(\"3\\n3\\n3\\n25\") == \"3\"\nassert solution(\"10\\n10\\n10\\n5\") == \"10\"\n",
        "num_ids_2": 41,
        "num_ids_4": 84
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"\nassert solution(\"5\\n7\\n3\\n\") == \"12\"\nassert solution(\"15\\n20\\n15\\n\") == \"12\"\nassert solution(\"0\\n0\\n0\\n\") == \"0\"\nassert solution(\"50\\n20\\n50\\n\") == \"0\"\nassert solution(\"10\\n30\\n15\\n\") == \"0\"\nassert solution(\"15\\n15\\n15\\n\") == \"0\"\nassert solution(\"100\\n100\\n50\\n\") == \"1\"",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"\nassert solution(\"2\\n2\\n2\\n200\\n\") == \"0\\n\"\nassert solution(\"2\\n2\\n2\\n100\\n\") == \"0\\n\"\nassert solution(\"2\\n2\\n2\\n50\\n\") == \"2\\n\"\nassert solution(\"2\\n2\\n2\\n500\\n\") == \"0\\n\"\nassert solution(\"2\\n2\\n2\\n1000\\n\") == \"2\\n\"\nassert solution(\"2\\n2\\n2\\n10000\\n\") == \"2\\n\"\n\nassert solution(\"2\\n2\\n2\\n500\\n\") == \"0\\n\"\nassert solution(\"2\\n2\\n2\\n10000\\n\") == \"2\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 99
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"\nassert solution(\"2\\n2\\n2\\n50\\n\") == \"2\"\nassert solution(\"2\\n2\\n2\\n50\\n\") == \"2\"\nassert solution(\"100\\n\") == \"1\"\nassert solution(\"50\\n\") == \"1\"",
        "num_ids_2": 45,
        "num_ids_4": 81
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"\nassert solution(\"3\\n1\\n2\\n100\\n\") == \"3\\n\"\nassert solution(\"5\\n1\\n1\\n100\\n\") == \"3\\n\"\nassert solution(\"4\\n2\\n2\\n100\\n\") == \"4\\n\"\nassert solution(\"10\\n100\\n100\\n100\\n100\\n\") == \"36\\n\"\nassert solution(\"1\\n1\\n1\\n100\\n\") == \"10\\n\"\nassert solution(\"10\\n100\\n100\\n100\\n100\\n\") == \"10\\n\"\nassert solution(\"10000\\n10000\\n10000\\n10000\\n10000\\n\") == \"10\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\\n\"\nassert solution(\"2\\n2\\n2\\n50\") == \"0\\n\"\nassert solution(\"2\\n2\\n2\\n25\") == \"0\\n0\\n\"\nassert solution(\"2\\n2\\n2\\n10\") == \"0\\n0\\n0\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 98
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"4 2 5\") == \"Yes\"\nassert solution(\"5 6 3\") == \"No\"\nassert solution(\"1 3 6\") == \"No\"\nassert solution(\"2 1 4\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"2 3 1\") == \"Yes\"\nassert solution(\"1 3 4\") == \"No\"\nassert solution(\"5 3 2\") == \"No\"\nassert solution(\"1 3 1\") == \"No\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 5 2\") == \"Yes\"\nassert solution(\"5 1 2\") == \"No\"\nassert solution(\"1 3 6\") == \"No\"\nassert solution(\"1 4 2\") == \"No\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"5 7 3\") == \"No\"\nassert solution(\"2 10 4\") == \"Yes\"\nassert solution(\"8 12 6\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2\") == \"Yes\", \"Incorrect output.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 2\") == \"Yes\", \"The output should be Yes\"\nassert solution(\"1 1 1\") == \"No\", \"The output should be No\"\nassert solution(\"2 3 4\") == \"Yes\", \"The output should be Yes\"\nassert solution(\"1 3 5\") == \"No\", \"The output should be No\"\nassert solution(\"1 2 1\") == \"Yes\", \"The output should be Yes\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"0 5 5\") == \"No\"\nassert solution(\"10 10 10\") == \"Yes\"\nassert solution(\"10 5 15\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 1000\n    120\n    100\n    140\n    \"\"\"\n) == \"9\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9\\n', 'test failed'\nprint(\"All tests passed.\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\nassert solution(\"5 2000\\n250\\n200\\n175\") == \"6\"\nassert solution(\"4 3000\\n250\\n200\\n175\") == \"3\"\nassert solution(\"3 5000\\n250\\n200\\n175\") == \"6\"\nassert solution(\"2 7500\\n250\\n200\\n175\") == \"1\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\nprint(\"All tests passed!\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"N X\\n\")) == \"9\\n\"\nassert solution(input(\"3 1000\\n120\\n100\\n140\\n\")) == \"9\\n\"\nassert solution(input(\"2 25\\n1\\n2\\n\")) == \"2\\n\"\nassert solution(input(\"5 5000\\n1000\\n1000\\n1000\\n\")) == \"9\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 117
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\napple\\noffice\\norange\\napple\") == \"2\"\n\nassert solution(\"5\\ntwo\\nthree\\nfive\\nsix\\nseven\\neight\\n\") == \"4\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\napple\\nother\\napple\\n\") == \"2\\n\"\nassert solution(\"5\\napple\\nbanana\\nbanana\\norange\\n\") == \"2\\n\"\nassert solution(\"1\\nbanana\\nbanana\\nbanana\\nbanana\\n\") == \"2\\n\"\nassert solution(\"2\\nbanana\\nbanana\\nbanana\\nbanana\\n\") == \"2\\n\"\nassert solution(\"3\\nbanana\\nbanana\\nbanana\\nbanana\\n\") == \"2\\n\"\nassert solution(\"4\\nbanana\\nbanana\\nbanana\\nbanana\\n\") == \"2\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 111
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n\") == \"2\\n\"\nassert solution(\"1\\ncat\\nbird\\n\") == \"1\\n\"\nassert solution(\"2\\napple\\nbanana\\norange\\n\") == \"2\\n\"\nassert solution(\"3\\napple\\norange\\nbanana\\n\") == \"3\\n\"\nassert solution(\"3\\napple\\nbanana\\nostrich\\n\") == \"2\\n\"\nassert solution(\"3\\napple\\nostrich\\nbanana\\n\") == \"2\\n\"\nassert solution(\"4\\napple\\nbanana\\nostrich\\nbush\\n\") == \"3\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 91
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\", \"Your code is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'3\\nbanana\\nbanana\\nbanana\\n') == b'2\\nbanana\\n'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\napple\\no\\ne\\np\\na\\np\\ne\\np\\napple\\no\\ne\\ne\\ne\") == \"2\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\napple\\norANGE\\napple\\n\") == \"2\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\napple\\no\\ngrape\\n\") == \"2\\n\"\nassert solution(\"3\\ngrape\\norange\\napple\\n\") == \"2\\n\"\nassert solution(\"3\\ngrape\\norange\\napple\\n\") == \"2\\n\"\nassert solution(\"3\\ngrape\\norange\\napple\\n\") == \"2\\n\"\nassert solution(\"3\\ngrape\\norange\\napple\\n\") == \"2\\n\"\n",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\napple\\noorange\\napple\") == \"2\\n\"\nassert solution(\"3\\napple\\noorange\\norange\") == \"2\\n\"\nassert solution(\"3\\napple\\norange\\noapple\") == \"2\\n\"\nassert solution(\"3\\napple\\norange\\nplease\") == \"2\\n\"\nassert solution(\"3\\napple\\norange\\napple\\noapple\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n\") == \"2\\n\"\nassert solution(\"3\\napple\\norange\\n\") == \"2\\n\"\nassert solution(\"1\\napple\\n\") == \"1\\n\"\nassert solution(\"5\\napple\\norange\\napple\\n\") == \"2\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 83
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\\n\"\nassert solution(\"4\\n3200 3200 3200 3200\") == \"3 3\\n\"\nassert solution(\"4\\n2100 2500 3100 2700\") == \"2 2\\n\"\nassert solution(\"4\\n1200 1200 1200 1200\") == \"8 8\\n\"\nassert solution(\"4\\n1500 1500 1500 1500\") == \"8 8\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2 2\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\nassert solution(\"4\\n2100 2500 2700 2701\") == \"2 2\"\nassert solution(\"4\\n2100 2500 2700 2702\") == \"2 2\"\nassert solution(\"4\\n2100 2500 2700 2703\") == \"2 2\"\nassert solution(\"4\\n2100 2500 2700 2704\") == \"2 2\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2 2\\n\", \"Output incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\\n\") == \"2 2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\nassert solution(\"3\\n1000 1000 1000\") == \"1 1\"\nassert solution(\"2\\n1000 1000\") == \"1 1\"\nassert solution(\"1\\n1000\") == \"1 1\"\nassert solution(\"0\") == \"0 0\"\n",
        "num_ids_2": 61,
        "num_ids_4": 102
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2 2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\nassert solution(\"4\\n2000 2200 2300 2400\") == \"2 2\"\nassert solution(\"4\\n2300 2100 2400 2500\") == \"1 3\"\nassert solution(\"4\\n2500 2300 2600 2700\") == \"1 3\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2 2\"\nprint(\"OK\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n2100 2500 2700 2700') == '2 2'\nassert solution('5\\n1200 1400 1600 1800 2000') == '3 5'\nassert solution('6\\n3200 3400 3600 3800 4000 4200 4400 4600 4800') == '5 8'\n\nfrom typing import List",
        "num_ids_2": 71,
        "num_ids_4": 129
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"oxx\") == \"1000\"\nassert solution(\"oxxx\") == \"9900\"\nassert solution(\"xoxo\") == \"1000\"\nassert solution(\"xoxx\") == \"9000\"\nassert solution(\"xoxxx\") == \"9900\"\nassert solution(\"xoxoo\") == \"1000\"\nassert solution(\"xoxox\") == \"1000\"\nassert solution(\"xoxoxx\") == \"10000\"\nassert solution(\"xoxooxx\") == \"100000\"\nassert solution(\"xoxooox\") == \"100000\"",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('oxo') == '900'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"oxo\") == \"900\", \"The price of a ramen topped with two kinds of toppings, boiled egg and green onions, is 700 + 100 \\times 2 = 900 yen.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"oxo\") == \"900\", \"Invalid output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"oxo\") == \"900\", \"Test case 1 failed\"\nprint(\"Test case 1 passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"oxo\") == \"900\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H H D D\") == \"H\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D H D D\") == \"D\"\nassert solution(\"D H D D D\") == \"H\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"H H\\n\") == \"H\\n\"  # Test Case 1\nassert solution(\"H H\\nD D\\n\") == \"H\\n\"  # Test Case 2\nassert solution(\"H H\\nD D\\nH H\\n\") == \"H\\n\"  # Test Case 3\nassert solution(\"H H\\nD D\\nH H\\nD D\\n\") == \"H\\n\"  # Test Case 4\nassert solution(\"H H\\nD D\\nH H\\nD D\\nH H\\n\") == \"D\\n\"  # Test Case 5",
        "num_ids_2": 46,
        "num_ids_4": 108
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"H H\") == \"H\", \"The output is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"H H\") == \"H\", \"Solution 1 is incorrect\"\nassert solution(\"H D\") == \"D\", \"Solution 2 is incorrect\"\nassert solution(\"D H\") == \"D\", \"Solution 3 is incorrect\"\nassert solution(\"D D\") == \"H\", \"Solution 4 is incorrect\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"H H\") == \"H\", \"Your code is not correct\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"H H\") == \"H\", \"Test failed\"\nassert solution(\"H H\") == \"H\", \"Test failed\"\nassert solution(\"D H\") == \"D\", \"Test failed\"\nassert solution(\"D H\") == \"D\", \"Test failed\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"H H\") == \"H\", \"Expected 'H' but got '{}' instead.\".format(solution(\"H H\"))\nassert solution(\"H H\") == \"H\", \"Expected 'H' but got '{}' instead.\".format(solution(\"H H\"))\nassert solution(\"H H\") == \"H\", \"Expected 'H' but got '{}' instead.\".format(solution(\"H H\"))\nassert solution(\"H H\") == \"H\", \"Expected 'H' but got '{}' instead.\".format(solution(\"H H\"))\nassert solution(\"H H\") == \"H\", \"Expected 'H' but got '{}' instead.\".format(solution(\"H H\"))\n\nprint(\"All assertions passed\")",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"D D\") == \"D\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"H H\") == \"H\", \"Test case 1\"\nassert solution(\"H D\") == \"D\", \"Test case 2\"\nassert solution(\"D H\") == \"H\", \"Test case 3\"\nassert solution(\"D D\") == \"D\", \"Test case 4\"\nassert solution(\"H D\") == \"H\", \"Test case 5\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"Input is not valid.\"\nassert solution(\"ABCD\") == \"7\", \"Input is not valid.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nprint(\"All tests passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1222') == '1+2+2+2=7', 'The solution is incorrect'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"Your solution is not correct.\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'5\\n1 1 2 2\\n') == '2\\n2\\n0\\n0\\n0\\n'\nassert solution(b'5\\n2 3 4 5\\n') == '2\\n2\\n0\\n0\\n0\\n'\nassert solution(b'5\\n1 2 2 3\\n') == '0\\n0\\n0\\n0\\n0\\n'",
        "num_ids_2": 74,
        "num_ids_4": 111
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_file) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input_file)}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 3\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 3 4\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 3 4 5\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 3 4 5 6\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 3 4 5 6 7\") == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 64,
        "num_ids_4": 136
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 2 3 4\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 1\") == \"1\\n2\\n2\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 1 1\") == \"2\\n2\\n1\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 1 1 1\") == \"3\\n2\\n2\\n1\\n0\"\nassert solution(\"5\\n1 1 2 2 1 1 1 1\") == \"3\\n2\\n2\\n1\\n0\"\nassert solution(\"5\\n1 1 2 2 1 1 1 1 1\") == \"4\\n2\\n2\\n1\\n0\"\nassert solution(\"5\\n1 1 2 2 1 1 1 1 1 1\") == \"4\\n2\\n2\\n1\\n0\"\n",
        "num_ids_2": 62,
        "num_ids_4": 130
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n2\\n0\\n0\\n0\"\nprint(\"All test cases passed\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n2\\n0\\n0\\n0\\n\", \"Your code is not correct.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\\n\"\nassert solution(\"5\\n1 2 2 3\") == \"2\\n2\\n0\\n0\\n0\\n\"\nassert solution(\"5\\n1 3 2 1\") == \"0\\n0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 99
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"10\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"15\") == \"7\"\nassert solution(\"16\") == \"8\"\nassert solution(\"100\") == \"100\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"6\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\n\", \"Test failed.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n\") == \"3\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"2\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"0\\n\") == \"0\\n\"\nassert solution(\"9\\n\") == \"9\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"3\", \"The kangaroo can reach his nest at time 3 by jumping to the right three times, which is the earliest possible time.\"\nprint(\"All tests passed\")",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"3\"\n\nHere's the solution code:\n\n```python\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"6\\n\") == \"3\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1119\") == \"No\"\nassert solution(\"1128\") == \"No\"\nassert solution(\"1191\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"1911\") == \"Yes\"\nassert solution(\"2345\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1118\") == \"Yes\", \"Test 1 failed\"\nassert solution(\"9999\") == \"No\", \"Test 2 failed\"\nassert solution(\"1234\") == \"No\", \"Test 3 failed\"\nassert solution(\"9111\") == \"Yes\", \"Test 4 failed\"\nassert solution(\"10001\") == \"Yes\", \"Test 5 failed\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1118) == \"Yes\"\nassert solution(1234) == \"Yes\"\nassert solution(9876) == \"No\"\nassert solution(9123) == \"No\"\nassert solution(12345) == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1119\") == \"No\"\nassert solution(\"1120\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"1235\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes', 'Solution is incorrect. Please provide the correct input.'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1118\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(\"1118\") == 'Yes'\nassert solution(\"1122\") == 'No'\nassert solution(\"112233\") == 'No'\nassert solution(\"111811\") == 'No'",
        "num_ids_2": 23,
        "num_ids_4": 51
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1118\") == \"Yes\"\nprint(\"Yes\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1118\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1 5\\n2 4\\n3 6') == '3'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\\n\") == \"3\\n\"\nprint(\"All test cases pass\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\\n\") == \"3\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\"\nprint(\"All test cases passed\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\\n\") == \"3\\n\"\nassert solution(\"2\\n1 5\\n2 4\\n3 6\\n\") == \"3\\n\"\nassert solution(\"1\\n10\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 58,
        "num_ids_4": 1027
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1 5\\n2 4\\n3 6') == '3'\n\nfrom itertools import combinations",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n\", \"Test case failed\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3', 'Test case 1 failed'\n\nassert solution(stdin) == '3', 'Test case 2 failed'\n\nassert solution(stdin) == '3', 'Test case 3 failed'\n\nassert solution(stdin) == '3', 'Test case 4 failed'\n\nassert solution(stdin) == '3', 'Test case 5 failed'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"A B\") == '<\\n', \"<\"\nassert solution(\"C D\") == '>'\nassert solution(\"E F\") == '='\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 33
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"C F\") == \">\"\nassert solution(\"D G\") == \"=\"",
        "num_ids_2": 20,
        "num_ids_4": 29
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"D E\") == \"<\"\nassert solution(\"G H\") == \">\"\nassert solution(\"I J\") == \">\"\nassert solution(\"M N\") == \"=\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A B\") == \"<\\n\"\nassert solution(\"C D\") == \">\"\nassert solution(\"A F\") == \">\"\nassert solution(\"F C\") == \">\"\nassert solution(\"E F\") == \"=\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('A B') == '<\\n10 < 11.\\n'\nassert solution('a b') == '<\\n10 < 11.\\n'\nassert solution('d f') == '<\\n10 < 11.\\n'\nassert solution('F g') == '<\\n10 < 11.\\n'\nassert solution('H j') == '<\\n10 < 11.\\n'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A B\") == \"<\\n10 < 11.\\n\"\nassert solution(\"a b\") == \">\"\nassert solution(\"A\") == \"=\"\nassert solution(\"10\") == \">\"\nassert solution(\"11\") == \"<\"\nassert solution(\"12\") == \"<\"\nassert solution(\"13\") == \"<\"\nassert solution(\"14\") == \"<\"\nassert solution(\"15\") == \"<\"",
        "num_ids_2": 30,
        "num_ids_4": 48
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"A B\") == \"<\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('A B') == '<'\nassert solution('B A') == '<'\nassert solution('C D') == '<'\nassert solution('D C') == '<'\nassert solution('E F') == '<'\nassert solution('F E') == '<'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A B\") == \">\"\nassert solution(\"C D\") == \"=\"\nassert solution(\"A C\") == \">\"\nassert solution(\"D E\") == \"=\"\nassert solution(\"F G\") == \">\"\n\nprint(\"All tests passed.\")",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A B\") == \"<\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\"\nassert solution(\"3 5\\n....#\\n.#.#\\n....#\\n\") == \"11211\\n1#2#1\\n11211\"\nassert solution(\"3 5\\n....#\\n..#..\\n....#\\n\") == \"11211\\n1#2#1\\n11211\"\nassert solution(\"3 5\\n.....\\n..#..\\n.....\\n\") == \"11211\\n1#2#1\\n11211\"\nassert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\"",
        "num_ids_2": 84,
        "num_ids_4": 168
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 5\\n.....\\n.#.#. \\n.....\\n') == '11211\\n1#2#1\\n11211'\nprint(\"All test cases passed\")",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"11211\\n1#2#1\\n11211\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 5\\n.....\\n.#.#.\\n.....\\n') == '11211\\n1#2#1\\n11211\\n'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"11211\\n1#2#1\\n11211\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == expected_output, f\"Expected: {expected_output}, Got: {solution(input_str)}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5\\n.....\\n.#.#.\\n.....\\n') == '11211\\n1#2#1\\n11211\\n'\n\nfrom typing import List",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"11211\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, \"Your solution is incorrect!\"\n\nHere's the corrected solution:\n\n```python\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n100 120 80 150\") == \"0\"\nassert solution(\"3 4 240\\n60 90 120\\n100 120 80 150\") == \"2\"",
        "num_ids_2": 85,
        "num_ids_4": 128
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3'\nassert solution(stdin='3 4 240\\n",
        "num_ids_2": 88,
        "num_ids_4": 176
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4 240\\n60 90 120\\n80 150 80 150') == 3\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='3 4 240\\n60 90 120\\n80 150 80 150') == '3\\n'\nassert solution(stdin='3 4 320\\n60 90 120') == '0\\n'\nassert solution(stdin='5 4 240\\n60 90 120') == '2\\n'\nassert solution(stdin='5 4 320\\n60 90 120') == '0\\n'\nassert solution(stdin='6 4 240\\n60 90 120') == '2\\n'\nassert solution(stdin='6 4 320\\n60 90 120') == '1\\n'",
        "num_ids_2": 77,
        "num_ids_4": 139
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"",
        "num_ids_2": 84,
        "num_ids_4": 168
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Test failed: {solution(input_data)}!= {output_data}\"\nprint(\"Test passed\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"3 5 100\\n40 50 60 70\\n80 120 130 140\") == \"1\"\nassert solution(\"2 4 240\\n10 20 30 40\\n50 100 150 200\") == \"0\"",
        "num_ids_2": 87,
        "num_ids_4": 132
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"5000 7000 10000 4 3\") == \"28500\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Pizza At, a fast food chain, offers three kinds of pizza: A-pizza, B-pizza and AB-pizza. A-pizza and B-pizza are completely different pizzas, and AB-pizza is one half of A-pizza and one half of B-pizza combined together. The prices of one A-pizza, B-pizza and AB-pizza are A yen, B yen and C yen (yen is the currency of Japan), respectively. Nakahashi needs to prepare X A-pizzas and Y B-pizzas for a party tonight. He can only obtain these pizzas by directly buying A-pizzas and B-pizzas, or buying two AB-pizzas and then rearrange them into one A-pizza and one B-pizza. At least how much money does he need for this? It is fine to have more pizzas than necessary by rearranging pizzas.\n\n-----Constraints-----\n - 1 \u2264 A, B, C \u2264 5000\n - 1 \u2264 X, Y \u2264 10^5\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B C X Y\n\n-----Output-----\nPrint the minimum amount of money required to prepare X A-pizzas and Y B-pizzas.\n\n-----Sample Input-----\n1500 2000 1600 3 2\n\n-----Sample Output-----\n7900\n\nIt is optimal to buy four AB-pizzas and rearrange them into two A-pizzas and two B-pizzas, then buy additional one A-pizza.\n\nfrom typing import List",
        "num_ids_2": 224,
        "num_ids_4": 224
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"5000 2500 3000 2 3\") == \"3100\"\nassert solution(\"1000 1500 1000 2 3\") == \"2800\"\nassert solution(\"1000 1000 1500 3 2\") == \"6800\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"4000 2000 1800 3 2\") == \"7200\"\nassert solution(\"2000 1500 1600 3 2\") == \"5800\"\nassert solution(\"1000 1000 1000 3 2\") == \"2000\"\nassert solution(\"1000 1000 1000 2 2\") == \"500\"\nassert solution(\"1000 1000 1000 3 1\") == \"1000\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 4, \"There are four divisors of 3! = 6: 1, 2, 3 and 6.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"4\", \"Test failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"4\"\nassert solution(5) == \"7\"\nassert solution(7) == \"12\"\nassert solution(10) == \"336800\"\nassert solution(11) == \"336801\"\nassert solution(13) == \"336803\"",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '4', \"The output should be 4\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 4, \"Incorrect output. Expected 4, got: {}\".format(solution(3))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 4, \"Test Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == 4\nassert solution(\"5\") == 3\nassert solution(\"10\") == 21\nassert solution(\"15\") == 10\nassert solution(\"30\") == 1\n\nassert 1000000007 % 1000000007 == 0",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 4, \"Incorrect output: 4\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 4, \"Your code is wrong.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == \"9\"\nprint(\"All tests passed\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '9\\n', \"Output should be 9.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == \"9\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == \"9\"\nassert solution(12) == \"16\"\nassert solution(15) == \"31\"\nassert solution(20) == \"63\"\nassert solution(25) == \"125\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"9\"\nprint(\"All test cases passed\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"9\", \"Testcase Failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\\n\") == \"3\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\\n\") == \"3\\n\"\nassert solution(\"1\\n10\\n\") == \"1\\n\"\nassert solution(\"2\\n10\\n8\\n\") == \"2\\n\"\nassert solution(\"3\\n10\\n8\\n6\\n\") == \"3\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 90
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\\n\" # This line will fail since the solution expects a string as output\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\\n\") == \"3\\n\"\nassert solution(\"6\\n10\\n8\\n8\\n6\\n\") == \"3\\n\"\nassert solution(\"5\\n10\\n8\\n8\\n6\\n\") == \"2\\n\"\nassert solution(\"7\\n10\\n8\\n8\\n6\\n\") == \"3\\n\"\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\\n\"\nassert solution(\"3\\n10\\n8\\n8\\n6\") == \"1\\n\"\nassert solution(\"1\\n10\\n8\\n8\\n6\") == \"2\\n\"\nassert solution(\"4\\n8\\n6\\n6\\n6\") == \"2\\n\"\nassert solution(\"5\\n8\\n6\\n6\\n6\") == \"2\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 99
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\\n\") == \"3\"\nassert solution(\"5\\n10\\n8\\n8\\n6\\n\") == \"3\"\nassert solution(\"3\\n10\\n8\\n8\\n6\\n\") == \"1\"\nassert solution(\"6\\n10\\n8\\n8\\n6\\n\") == \"1\"\nassert solution(\"7\\n10\\n8\\n8\\n6\\n\") == \"2\"\nassert solution(\"8\\n10\\n8\\n8\\n6\\n\") == \"2\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\\n\") == \"3\\n\"\nassert solution(\"5\\n10\\n8\\n6\\n\") == \"3\\n\"\nassert solution(\"3\\n10\\n8\\n6\\n\") == \"2\\n\"\nassert solution(\"1\\n10\\n8\\n6\\n\") == \"1\\n\"\nassert solution(\"0\\n10\\n8\\n6\\n\") == \"0\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\\n\", \"The output should be '3'\"\nassert solution(\"2\\n20\\n15\\n5\") == \"3\\n\", \"The output should be '3'\"\nassert solution(\"3\\n40\\n25\\n20\") == \"4\\n\", \"The output should be '4'\"\nassert solution(\"4\\n60\\n30\\n25\") == \"4\\n\", \"The output should be '4'\"\nassert solution(\"5\\n80\\n50\\n40\") == \"4\\n\", \"The output should be '4'\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nprint(\"All tests passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\", \"Snuke has decided to construct a string that starts with A and ends with Z, by taking out a substring of a string s (that is, a consecutive part of s).\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\", \"The code is incorrect.\"\nprint(\"Correct\")\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='QWERTYASDFZXCV') == '5'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\\n\", \"Input should be 3 integers separated by space and each integer should be an integer between 1 and 10^9. For example, '8 12 40' or '1 2 3'.\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\\n\", \"Expected output: 2, Actual output: \" + solution(input())",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\", \"Solution should return 2\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\", \"The maximum number of operations that Snuke can perform is 2.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n8 12 40') == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\", \"Output should be 2\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3\\n8 12 40\") == \"2\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\\n\", \"Test 1\"\n\nassert solution(\"3\\n10 10 10\") == \"2\\n\", \"Test 2\"\n\nassert solution(\"3\\n8 12 40 4\") == \"2\\n\", \"Test 3\"\n\nassert solution(\"3\\n8 12 40 2\") == \"1\\n\", \"Test 4\"\n\nassert solution(\"3\\n8 12 40 1\") == \"1\\n\", \"Test 5\"\n\nassert solution(\"3\\n8 12 40 0\") == \"0\\n\", \"Test 6\"",
        "num_ids_2": 53,
        "num_ids_4": 109
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"1\\n3 5 7\") == \"0\"\nassert solution(\"4\\n1 3 5 7\") == \"3\"\nassert solution(\"5\\n3 5 7 9\") == \"3\"\nassert solution(\"6\\n1 2 3 4 5\") == \"1\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"2\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8 9\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\", \"Solution should return 2\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"100\") == \"999999999\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\"\nprint(\"All tests passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\\n\", \"Your solution is incorrect. Please check the constraints and input format.\"\n\nfrom typing import List",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\\n\", \"Incorrect output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n\") == \"6\\n\", \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '6\\n', \"Your solution is incorrect. Please check it again.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6\"\nprint(\"All tests passed.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3') == '6'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 6, \"The answer should be 6\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '6\\n', \"The answer is 1+2+3=6.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\", \"The answer is 1+2+3=6.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\\n\", \"The answer is 1+2+3=6.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\", \"The answer is 1+2+3=6.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\\n\", \"Incorrect answer\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"6\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='3') == '6', \"The answer is 1+2+3=6.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '6\\n', 'Incorrect Output'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 1\") == \"2\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b\"2\\na_1 a_2 a_3... a_N\\n\") == \"2\"\nassert solution(b\"1\\n3 1\\n\") == \"2\"\nassert solution(b\"1\\n2 3\\n\") == \"1\"\nassert solution(b\"2\\n1 3\\n\") == \"0\"\nassert solution(b\"1\\n2 4\\n\") == \"0\"\nassert solution(b\"1\\n3 4\\n\") == \"0\"",
        "num_ids_2": 47,
        "num_ids_4": 85
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2\\n', 'Expected \"2\"\\nGot \"{}\"\\n'.format(solution(stdin))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 1\") == \"2\"\nassert solution(\"3\\n1 2\") == \"3\"\nassert solution(\"3\\n1 1\") == \"0\"\nassert solution(\"4\\n1 2 3 4\") == \"2\"\nassert solution(\"2\\n1 2\") == \"0\"\nassert solution(\"1\\n2 3\") == \"5\"",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 1\") == \"2\"\nassert solution(\"1\\n2 3\") == \"3\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"1\\n2 3\") == \"2\"\nassert solution(\"1\\n2 1\") == \"3\"\nassert solution(\"1\\n1 1\") == \"0\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 1\") == \"2\"\nassert solution(\"3\\n1 2\") == \"2\"\nassert solution(\"2\\n1 3\") == \"2\"\nassert solution(\"2\\n1 2 4\") == \"1\"\nassert solution(\"2\\n1 1 2\") == \"1\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n3 1') == '2'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 1\") == \"2\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 1\") == \"2\\n\"\nassert solution(\"3\\n1 3\\n2 4\\n5 6\") == \"2\\n\"\nassert solution(\"2\\n3 1\\n4 5\\n6 7\\n8 9\") == \"2\\n\"\nassert solution(\"3\\n1 3\\n2 4\\n5 6\\n7 8\\n9 10\") == \"0\\n\"\nassert solution(\"4\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\") == \"10\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 114
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n\") == \"2 2\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n\") == \"2 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2 2'\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n') == '2 2'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n\") == \"2 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\"\nassert solution(\"1 1\\n2 2 3\") == \"3\"\nassert solution(\"1 1\\n2 2 3\") == \"3\"\nassert solution(\"1 1\\n2 2 3\") == \"3\"\nassert solution(\"1 1\\n2 2 3\") == \"3\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\\n\", \"Invalid output\"\nprint(\"All tests passed\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"1 5 5 5\") == \"0\"\nassert solution(\"5\") == \"0\"",
        "num_ids_2": 31,
        "num_ids_4": 57
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\"\nassert solution(\"3 2\\n4 1 5\") == \"5\"\nassert solution(\"2 3\\n4 1 5\") == \"5\"\nassert solution(\"2 3\\n4 2 5\") == \"5\"\nassert solution(\"3 2\\n4 2 5\") == \"5\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\"\nassert solution(\"5 2\\n4 1 6\") == \"7\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '5\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\\n\"\n\nsolution(\"3 1\\n4 1 5\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5\\n', \"Test case 1 failed.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\\n\"\nassert solution(\"1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n10\\n2\\n') == '4\\n'\nassert solution('1\\n10\\n2\\n1\\n10\\n2\\n1\\n10\\n2\\n1\\n10\\n2\\n') == '4\\n'\nassert solution('1\\n10\\n2\\n2\\n1\\n10\\n2\\n2\\n1\\n10\\n2\\n2\\n1\\n10\\n2\\n2\\n1\\n10\\n2\\n') == '16\\n'",
        "num_ids_2": 72,
        "num_ids_4": 146
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n10\\n2\\n3\\n4\\n') == '16'\nassert solution('2\\n2\\n') == '4'\nassert solution('2\\n2\\n3\\n4\\n') == '16'\nassert solution('1\\n10\\n2\\n3\\n4\\n') == '16'\nassert solution('1\\n10\\n2\\n3\\n4\\n5\\n') == '24'",
        "num_ids_2": 45,
        "num_ids_4": 82
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"2\\n10\\n2\\n\") == \"8\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"5\\n10\\n2\\n\") == \"16\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\", \"The solution should be 4.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"3\\n5\\n3\\n\") == \"10\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n10\\n2\\n') == '4'\nassert solution('3\\n5\\n3\\n') == '2'\nassert solution('2\\n5\\n1\\n1\\n') == '16'\nassert solution('1\\n2\\n') == '4'\nassert solution('3\\n5\\n3\\n') == '2'\nassert solution('2\\n5\\n1\\n1\\n') == '16'\n",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\", \"Test failed for the given input.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the values of A, B, C, D: \")) == \"520\"\nprint(\"Test passed successfully\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter the price of an unlimited ticket (A): \")) == \"520\"\nassert solution(input(\"Enter the price of an unlimited ticket (B): \")) == \"520\"\nassert solution(input(\"Enter the price of an unlimited ticket (C): \")) == \"520\"\nassert solution(input(\"Enter the price of an unlimited ticket (D): \")) == \"520\"\nprint(\"The minimum total fare is 520 yen.\")",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('600\\n300\\n220\\n420\\n') == '520'\nassert solution('1000\\n500\\n250\\n550\\n') == '900'\nassert solution('1000\\n500\\n250\\n') == '250'\nassert solution('600\\n300\\n220\\n420\\n500\\n250\\n550\\n') == '3200'\nassert solution('600\\n300\\n220\\n420\\n500\\n250\\n') == '3200'",
        "num_ids_2": 63,
        "num_ids_4": 137
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"600\\n300\\n220\\n420\\n\") == \"520\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"600\\n300\\n220\\n420\\n\") == \"520\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nprint(\"All test cases passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n2 5 4 1 3\") == \"4\"\nassert solution(\"5\\n3 1 4 5 2\") == \"4\"\nassert solution(\"5\\n3 5 4 1 2\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\"\nassert solution(\"5\\n3 4 2 5 1\") == \"0\"\nassert solution(\"5\\n1 4 5 3 2\") == \"0\"\nassert solution(\"5\\n2 3 1 5 4\") == \"0\"\nassert solution(\"5\\n5 4 3 2 1\") == \"0\"\nassert solution(\"5\\n3 5 1 2 4\") == \"0\"\nassert solution(\"5\\n2 4 1 5 3\") == \"0\"\nassert solution(\"5\\n4 2 5 3 1\") == \"0\"\nassert solution(\"5\\n1 5 3 2 4\") == \"0\"\nassert solution(\"5\\n3 4 5 1 2\") == \"0\"\nassert solution(\"5\\n4 1 5 2 3\") == \"0\"\nassert solution(\"5\\n1 3 5 4 2\") == \"0\"\nassert solution(\"5\\n3 2 4 5 1\") == \"0\"\nassert solution(\"5\\n2 5 3 4 1\") == \"0\"\nassert solution(\"5\\n5 1 3 2 4\") == \"0\"\nassert solution(\"5\\n5 3 1 4 2\") == \"0\"\nassert solution(\"5\\n5 2 4 1 3\") == \"0\"\nassert solution(\"5\\n5 4 1 2 3\") == \"0\"\nassert solution(\"5\\n5 3 2 1 4\") == \"0\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\\n\", \"Test case failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n3 4 3 0 3\") == \"0\"\nassert solution(\"5\\n1 1 1 0 1\") == \"0\"\nassert solution(\"5\\n5 4 5 0 5\") == \"0\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\"\nassert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"4\\n3 4 0 2 5\") == \"4\"\nassert solution(\"5\\n2 4 4 0 2\") == \"0\"\n",
        "num_ids_2": 31,
        "num_ids_4": 73
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 4 4 0 2\\n\") == \"4\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 4 0 2\") == \"4\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n3 2 4\") == \"3\"\nassert solution(\"4\\n2 3 5 0 1\") == \"4\"",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n\", \"Test failed.\"\n\nsolution(stdin)",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\nassert solution() == \"0\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 5 20\") == \"20\"\nassert solution(\"10 1 10\") == \"100\"\nassert solution(\"5 1 10\") == \"10\"",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 2 5\") == \"84\\n\", \"Input is incorrect\"\nassert solution(\"10 1 3\") == \"0\\n\", \"Input is incorrect\"\nassert solution(\"10 10 10\") == \"0\\n\", \"Input is incorrect\"\nassert solution(\"30 2 5\") == \"100\\n\", \"Input is incorrect\"\nassert solution(\"30 5 9\") == \"150\\n\", \"Input is incorrect\"",
        "num_ids_2": 45,
        "num_ids_4": 93
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"1000 1000 1000\") == \"1000000000\"\nassert solution(\"1000 1000 1001\") == \"1000000001\"\nassert solution(\"10000 10000 10000\") == \"10000000000\"\nassert solution(\"10000 10000 10001\") == \"10000000001\"",
        "num_ids_2": 48,
        "num_ids_4": 116
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 2 5\") == \"84\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nprint(\"All tests passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 2 5\") == \"84\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 2 5\") == \"84\", \"The sum of the integers between 1 and 20, whose sum of digits written in base 10 is between 2 and 5, is not 84.\"\nassert solution(\"15 4 7\") == \"25\", \"The sum of the integers between 1 and 15, whose sum of digits written in base 10 is between 4 and 7, is not 25.\"\nassert solution(\"1000000 1000000 1000000\") == \"5000000000\", \"The sum of the integers between 1 and 10^6, whose sum of digits written in base 10 is between 1000000 and 1000000, is not 5000000000.\"\nassert solution
        "num_ids_2": 108,
        "num_ids_4": 1027
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 2 5\") == \"84\\n\"\nassert solution(\"21 2 1\") == \"21\\n\"\nassert solution(\"10 3 10\") == \"220\\n\"\nassert solution(\"20 100 3\") == \"258\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 77
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 2 5\") == \"84\\n\"\nassert solution(\"100 1 10\") == \"555\\n\"\nassert solution(\"100 1 5\") == \"25\\n\"\nassert solution(\"100 1 1\") == \"1\\n\"\nassert solution(\"100 1 0\") == \"0\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 76
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('20 2 5') == '84'\nprint('All test cases passed.')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"100\") == \"ABC100\", \"The 100th round of ABC is ABC100\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"ABC100\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"ABC100\", \"Incorrect output\"\n\nThis is a correct solution. The program reads the input from standard input and checks if it is equal to \"ABC100\".",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'ABC100'\nassert solution(input()) == 'ABC101'\nassert solution(input()) == 'ABC102'\nassert solution(input()) == 'ABC103'\nassert solution(input()) == 'ABC104'\nassert solution(input()) == 'ABC105'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(100) == \"ABC100\"\n\nassert solution(101) == \"ABC101\"\n\nassert solution(102) == \"ABC102\"\n\nassert solution(103) == \"ABC103\"\n\nassert solution(104) == \"ABC104\"\n\nassert solution(105) == \"ABC105\"\n\nassert solution(106) == \"ABC106\"\n\nassert solution(107) == \"ABC107\"\n\nassert solution(108) == \"ABC108\"\n\nassert solution(109) == \"ABC109\"\n\nassert solution(110) == \"ABC110\"\n\nassert solution(111) == \"ABC111\"\n\nassert solution(112) == \"ABC112\"\n\nassert solution(113) == \"ABC113\"\n\nassert solution(114) == \"ABC114\"\n\nassert solution(115) == \"ABC115\"\n\nassert solution(116) == \"ABC116\"\n\nassert solution(117) == \"ABC117\"\n\nassert solution(118) == \"ABC118\"\n\nassert solution(119) == \"ABC119\"\n\nassert solution(120) == \"ABC120\"\n\nassert solution(121) == \"ABC121\"\n\nassert solution(122) == \"ABC122\"\n\nassert solution(123) == \"ABC123\"\n\nassert solution(124) == \"ABC124\"\n\nassert solution(125) == \"ABC125\"\n\nassert solution(126) == \"ABC126\"\n\nassert solution(127) == \"ABC127\"\n\nassert solution(128) == \"ABC128\"\n\nassert solution(129) == \"ABC129\"\n\nassert solution(130) == \"ABC130\"\n\nassert solution(131) == \"ABC131\"\n\nassert solution(132) == \"ABC132\"\n\nassert solution(133) == \"ABC133\"\n\nassert solution(134) == \"ABC134\"\n\nassert solution(135) == \"ABC135\"\n\nassert solution(136) == \"ABC136\"\n\nassert solution(137) == \"ABC137\"\n\nassert solution(138) == \"ABC138\"\n\nassert solution(139) == \"ABC139\"\n\nassert solution(140) == \"ABC140\"\n\nassert solution(141) == \"ABC141\"\n\nassert solution(142) == \"ABC142\"\n\nassert solution(143) == \"ABC143\"\n\nassert solution(144) == \"ABC144\"\n\nassert solution(145) == \"ABC145\"\n\nassert solution(146) == \"ABC146\"\n\nassert solution(147) == \"ABC147\"\n\nassert solution(148) == \"ABC148\"\n\nassert solution(149) == \"ABC149\"\n\nassert solution(150) == \"ABC150\"\n\nassert solution(151) == \"ABC151\"\n\nassert solution(152) == \"ABC152\"\n\nassert solution(153) == \"ABC153\"\n\nassert solution(154) == \"ABC154\"\n\nassert solution(155) == \"ABC155\"\n\nassert solution(156) == \"ABC156\"\n\nassert solution(157) == \"ABC157\"\n\nassert solution(158) == \"ABC158\"\n\nassert solution(159) == \"ABC159\"\n\nassert solution(160) == \"ABC160\"\n\nassert solution(161) == \"ABC161\"\n\nassert solution(162) == \"ABC162\"\n\nassert solution(163) == \"ABC163\"\n\nassert solution",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"ABC100\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100\") == \"ABC100\", \"Solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'ABC100'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"ABC100\", \"The 100th round of ABC is ABC100.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100\") == \"ABC100\", \"The solution is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\") == \"5\\n\"\n\nsolution(\"5 5\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\") == \"5\\n\", \"Sample Input does not match expected output.\"\nassert solution(\"1 5\") == \"5\\n\", \"Sample Input does not match expected output.\"\nassert solution(\"12 5\") == \"5\\n\", \"Sample Input does not match expected output.\"\nassert solution(\"1 31\") == \"30\\n\", \"Sample Input does not match expected output.\"\nassert solution(\"30 5\") == \"5\\n\", \"Sample Input does not match expected output.\"\nassert solution(\"12 31\") == \"30\\n\", \"Sample Input does not match expected output.\"",
        "num_ids_2": 46,
        "num_ids_4": 95
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"5\\n\", \"Test 1 failed.\"\nassert solution(\"5 10\") == \"1\\n\", \"Test 2 failed.\"\nassert solution(\"1 10\") == \"1\\n\", \"Test 3 failed.\"\nassert solution(\"10 1\") == \"1\\n\", \"Test 4 failed.\"\nassert solution(\"31 31\") == \"1\\n\", \"Test 5 failed.\"",
        "num_ids_2": 41,
        "num_ids_4": 83
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5') == '5\\n', \"5-5\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"5\\n\"\nassert solution(\"1 1\") == \"1\\n\"\nassert solution(\"12 1\") == \"1\\n\"\nassert solution(\"12 31\") == \"1\\n\"\nassert solution(\"3 3\") == \"3\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\") == \"5\\n\"\nassert solution(\"12 10\") == \"0\\n\"\nassert solution(\"12 12\") == \"10\\n\"\nassert solution(\"12 31\") == \"25\\n\"\nassert solution(\"11 29\") == \"0\\n\"\nassert solution(\"31 29\") == \"25\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\"\nassert solution(\"5 5\") == \"5\"\nprint(\"All tests passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\") == \"5\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3\\n1\\n2\\n') == '2\\n'\nassert solution('3\\n3\\n1\\n2\\n3\\n') == '-1\\n'\nassert solution('4\\n3\\n1\\n2\\n') == '-1\\n'\nassert solution('3\\n4\\n1\\n2\\n') == '2\\n'\nassert solution('3\\n1\\n2\\n3\\n') == '2\\n'\nassert solution('3\\n4\\n1\\n2\\n3\\n4\\n') == '-1\\n'\nassert solution('3\\n3\\n2\\n4\\n') == '-1\\n'\nassert solution('3\\n3\\n1\\n5\\n') == '-1\\n'\nassert solution('3\\n3\\n1\\n2\\n4\\n') == '-1\\n'\nassert solution('4\\n3\\n1\\n2\\n5\\n') == '-1\\n'\nassert solution('3\\n3\\n1\\n2\\n3\\n5\\n') == '-1\\n'\nassert solution('3\\n3\\n1\\n2\\n3\\n4\\n5\\n') == '-1\\n'\nassert solution('3\\n3\\n1\\n2\\n3\\n4\\n3\\n') == '-1\\n'",
        "num_ids_2": 49,
        "num_ids_4": 95
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\na_1\\na_2\\na_3\\na_4\\na_5') == -1",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == -1\nassert solution(\"4\\n3\\n1\\n2\\n\") == 2\nassert solution(\"1\\n1\\n2\\n\") == -1\nassert solution(\"1\\n1\\n1\\n2\\n\") == 1",
        "num_ids_2": 40,
        "num_ids_4": 77
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == \"2\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"-1\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == -1  # impossible to lighten up Button 2",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == -1\nassert solution(input()) == 1\nprint(solution(input()))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == -1\nassert solution(\"3\\n3\\n1\\n2\\n\") == 2\nassert solution(\"3\\n3\\n2\\n1\\n\") == -1\nassert solution(\"3\\n3\\n1\\n1\\n\") == 2\nassert solution(\"3\\n3\\n2\\n1\\n\") == 2\nassert solution(\"3\\n3\\n1\\n1\\n\") == 2\nassert solution(\"3\\n3\\n2\\n1\\n\") == 2",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3\\n1\\n2\\n') == 2\nassert solution('3\\n3\\n1\\n2\\n3\\n') == -1\nassert solution('3\\n3\\n1\\n2\\n3\\n4\\n') == 1\nassert solution('3\\n3\\n1\\n2\\n3\\n4\\n5\\n') == 2\nassert solution('3\\n3\\n1\\n2\\n3\\n4\\n5\\n6\\n') == 3\n\nfrom typing import List",
        "num_ids_2": 43,
        "num_ids_4": 98
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 2\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n6\\n2\\n6\\n') == '1\\n', \"The solution is incorrect.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"1\\n\"\nassert solution(\"6\\n12\\n18\\n24\\n30\\n\") == \"6\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 79
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"10\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n6\\n2\\n6\") == \"1\"\nassert solution(\"3\\n2\\n3\\n5\\n2\") == \"1\"\nassert solution(\"4\\n2\\n2\\n4\\n6\") == \"2\"\nassert solution(\"2\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"2\\n1\\n1\\n1\\n1\") == \"0\"",
        "num_ids_2": 41,
        "num_ids_4": 85
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n6\\n2\\n6') == '1\\n'\nassert solution('1\\n1\\n1') == '0\\n'\nassert solution('1\\n2\\n3') == '3\\n'\nassert solution('1\\n\\n\\n\\n\\n') == '0\\n'\nassert solution('3\\n1\\n1\\n1\\n1') == '4\\n'",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '1'\nassert solution(6) == '2'\nassert solution(2) == '3'\nassert solution(6) == '2'\nassert solution(6) == '2'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n6\\n2\\n6\") == \"1\\n\", \"Test failed\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\\n6\\n2\\n6\\n\"\n) == \"1\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"3 5\\n1 1 2 2 3\") == \"2\\n\"\nassert solution(\"1 1\\n1 2\") == \"2\\n\"\nassert solution(\"3 3\\n1 1 2\") == \"2\\n\"\nassert solution(\"5 3\\n1 1 2 3\") == \"2\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 90
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 5\\n1 2 3 4 5\\n1 3 4 5 6\\n1 4 5 6 7\\n1 5 6 7 8\\n1 6 7 8 9\\n1 7 8 9 10\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 5\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1 1 2 2 5\\n1",
        "num_ids_2": 117,
        "num_ids_4": 178
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2\\n1 1 2 2 5\\n') == '1\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1\\n', 'Output not as expected'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 4\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 1\") == \"3\"\nassert solution(\"5 2\\n1 1 2 2 2\") == \"2\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\"\nassert solution(\"5 2\\n1 1 2 3 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"2\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\\n\") == \"Yes\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\"\nassert solution(\"5\\n1 1 1\\n1 1 0\\n0 1 0\\n1 1 0\\n1 1 1\") == \"No\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2\n3 1 2\n6 1 1\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n3\n2 1 2\n3 1 2\n\"\"\") == \"No\"\n\nassert solution(\"\"\"\n5\n5 1 1 1 1\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n5\n1 1 1 1 1\n\"\"\") == \"No\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1\\n') == 'Yes\\n'\nassert solution('5\\n1 2 3 4 5\\n') == 'No\\n'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\\n\") == \"Yes\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\"\nassert solution(\"5\\n1 1 1 1 1\\n1 2 3 4 5\\n1 3 4 5 6\") == \"No\"\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\\n\") == \"Yes\\n\"\nassert solution(\"3\\n3 1 1\\n3 1 2\\n\") == \"No\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes\\n', 'Test case not passed'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\\n\") == \"Yes\\n\"\nassert solution(\"10\\n1 1\\n\") == \"No\\n\"\nassert solution(\"2\\n3 1 2\\n4 2 2\\n5 3 2\\n\") == \"Yes\\n\"\nassert solution(\"3\\n1 1\\n2 2\\n3 3\\n\") == \"No\\n\"\nassert solution(\"10\\n1 1\\n\") == \"No\\n\"\nassert solution(\"1\\n1 1\\n\") == \"No\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 112
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter two positive integers a and b: \")) == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"0 5\") == \"0\"\nassert solution(\"-1 5\") == \"-2\"\nassert solution(\"10 -5\") == \"-5\"",
        "num_ids_2": 27,
        "num_ids_4": 51
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"2\", \"Invalid input\"\nassert solution(\"100 30\") == \"30\", \"Invalid input\"\nassert solution(\"20 50\") == \"50\", \"Invalid input\"\nassert solution(\"1000 1000\") == \"1000\", \"Invalid input\"\nassert solution(\"100 50\") == \"50\", \"Invalid input\"",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"2\", \"Solution not correct\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"2\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"2\", \"The average of 1 and 3 is 2.0, and it will be rounded up to the nearest integer, 2.\"\n\nprint(solution(\"1 3\"))",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"2\", \"Your code is incorrect. It should print 2 as output.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"2\", \"Test 1 Failed\"\nassert solution(\"5 10\") == \"15\", \"Test 2 Failed\"\nassert solution(\"0 0\") == \"0\", \"Test 3 Failed\"\nassert solution(\"-1 2\") == \"-1\", \"Test 4 Failed\"\nassert solution(\"100 100\") == \"100\", \"Test 5 Failed\"",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4\\n'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 2\\n2 3\\n3 4\") == \"4\\n\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"3\\n\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 2\\n2 3\\n3 4\\n2 1\\n1 4\") == \"4\\n\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 2\\n2 3\\n3 4\\n2 1\\n1 4\") == \"4\\n\"",
        "num_ids_2": 113,
        "num_ids_4": 236
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n') == '4'",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\nassert solution('''7 7\n1 2\n2 3\n3 4\n4 5\n4 6\n5 6\n6 7''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\\n\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 6\\n2 5\\n\") == \"3\\n\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 6\\n2 5\\n1 4\\n2 3\\n\") == \"2\\n\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n1 6\\n2 5\\n1 4\\n2 3\\n",
        "num_ids_2": 112,
        "num_ids_4": 1027
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n''') == '4\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"5\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 7, \"The result should be 7, but it is {}\".format(solution(input()))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"7\", \"Solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"7\", \"The output must be '7'.\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"3 6 7\") == \"3\"\nassert solution(\"2 2 2\") == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"Your solution is not correct.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7 5\") == \"7\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 7 5') == '7', \"The output should be 7\"\nassert solution('3 8 1') == '1', \"The output should be 1\"\nassert solution('1 1 1') == '2', \"The output should be 2\"\nassert solution('5 7 8') == '8', \"The output should be 8\"\nassert solution('10 10 10') == '11', \"The output should be 11\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7 5\") == \"7\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"Test failed.\"\nassert solution(\"5 7 8\") == \"8\", \"Test failed.\"\nassert solution(\"5 7 4\") == \"4\", \"Test failed.\"\nassert solution(\"5 7 9\") == \"9\", \"Test failed.\"\nassert solution(\"5 7 6\") == \"6\", \"Test failed.\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"Test 1: Input 5 7 5, Output 7\"\nassert solution(\"3 5 8\") == \"5\", \"Test 2: Input 3 5 8, Output 5\"\nassert solution(\"1 1 1\") == \"1\", \"Test 3: Input 1 1 1, Output 1\"\nassert solution(\"2 2 2\") == \"2\", \"Test 4: Input 2 2 2, Output 2\"\nassert solution(\"1 1 2\") == \"2\", \"Test 5: Input 1 1 2, Output 2\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"5 2 5 5 5 5\") == \"50 0\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"110 10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"200 100\") == \"0 0\"\nassert solution(\"5 3 7 12 15 30\") == \"48 15\"\nassert solution(\"100 100\") == \"200 200\"",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 3 100 100 100 100\") == \"300 300\"\nassert solution(\"100 1 10 20 15 200\") == \"110 10\"\nassert solution(\"1 100 100 100 100 100 100\") == \"300 300\"",
        "num_ids_2": 64,
        "num_ids_4": 136
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"110 10\", \"Testcase 1 Failed\"\n\nassert solution(stdin=input()) == \"110 10\", \"Testcase 2 Failed\"\n\nassert solution(stdin=input()) == \"110 10\", \"Testcase 3 Failed\"\n\nassert solution(stdin=input()) == \"110 10\", \"Testcase 4 Failed\"\n\nassert solution(stdin=input()) == \"110 10\", \"Testcase 5 Failed\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('internationalization') == 'i18n', 'The solution should return \"i18n\" for the given input'\nassert solution('abc') == 'abc', 'The solution should return \"abc\" for the given input'\nassert solution('a') == 'a', 'The solution should return \"a\" for the given input'\nassert solution('') == '', 'The solution should return an empty string for the given input'",
        "num_ids_2": 53,
        "num_ids_4": 95
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"internationalization\") == \"i18n\", \"Test failed for function solution()\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\\n\"\nassert solution(\"pot\\n\") == \"NO\\n\"\nassert solution(\"pot\\ntop\\ntop\\n\") == \"YES\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 51
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\\n\"\nassert solution(\"pot\\ntop\\n\") == \"NO\\n\"\nassert solution(\"pot\\ntop\\n\") == \"YES\\n\"\nassert solution(\"pot\\ntop\\n\") == \"NO\\n\"\nassert solution(\"pot\\ntop\\n\") == \"YES\\n\"\nassert solution(\"pot\\ntop\\n\") == \"NO\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\\n\"\nassert solution(\"pots\\ntops\\n\") == \"NO\\n\"\nassert solution(\"pot\\ntop\\n\") == \"NO\\n\"\nassert solution(\"pots\\ntopp\\n\") == \"YES\\n\"\nassert solution(\"pots\\ntopp\\n\") == \"YES\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\"\nassert solution(\"pots\\ntops\\n\") == \"YES\"\nassert solution(\"potpots\\ntop\\n\") == \"YES\"\nassert solution(\"pot\\npots\\ntop\\n\") == \"NO\"\nassert solution(\"pot\\ntop\\npots\\n\") == \"NO\"\nassert solution(\"pots\\ntops\\n\") == \"NO\"",
        "num_ids_2": 31,
        "num_ids_4": 66
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\\n\", \"Test case 1 failed\"\nassert solution(\"pot\\nbot\\n\") == \"NO\\n\", \"Test case 2 failed\"\nassert solution(\"top\\npot\\n\") == \"YES\\n\", \"Test case 3 failed\"\nassert solution(\"bot\\npot\\n\") == \"NO\\n\", \"Test case 4 failed\"\nassert solution(\"pot\\ntop\\n\") == \"YES\\n\", \"Test case 5 failed\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"pot\\ntop\") == \"YES\\n\", \"Incorrect solution\"\nassert solution(\"ABC\\nXYZ\\n\") == \"NO\\n\", \"Incorrect solution\"\nassert solution(\"123\\n456\\n789\\n\") == \"YES\\n\", \"Incorrect solution\"\nassert solution(\"123\\n456\\n789\\n\\n\") == \"YES\\n\", \"Incorrect solution\"\nassert solution(\"ABC\\nXYZ\\n\") == \"NO\\n\", \"Incorrect solution\"",
        "num_ids_2": 40,
        "num_ids_4": 102
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"pot\") == \"YES\", \"Error: Test Case 1\"\nassert solution(\"top\") == \"NO\", \"Error: Test Case 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\"\nassert solution(\"pota\\ntop\\n\") == \"YES\"\nassert solution(\"pota\\ntopa\\n\") == \"NO\"\nassert solution(\"pot\\ntop\\npot\\n\") == \"YES\"",
        "num_ids_2": 31,
        "num_ids_4": 66
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('pot\\ntop') == 'YES', \"The solution is not correct\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"pot\\ntop\") == \"YES\\n\"\nassert solution(\"hot\") == \"NO\\n\"\nassert solution(\"abc\") == \"YES\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\\n4\") == \"b\"\nassert solution(\"aba\\n5\") == \"a\"\nassert solution(\"abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab",
        "num_ids_2": 26,
        "num_ids_4": 1027
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"ac\") == \"c\"\nassert solution(\"az\") == \"a\"\nassert solution(\"abc\") == \"aba\"\nassert solution(\"aaa\") == \"aaa\"\nassert solution(\"abcdefg\") == \"abc\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"b\"\nprint(solution(\"aba\"))  # Output: \"b\"\n\nassert solution(\"acacac\") == \"acacac\"\nprint(solution(\"acacac\"))  # Output: \"acacac\"\n\nassert solution(\"abcabc\") == \"ab\"\nprint(solution(\"abcabc\"))  # Output: \"ab\"\n\nassert solution(\"aabbcdefghijk\") == \"a\"\nprint(solution(\"aabbcdefghijk\"))  # Output: \"a\"\n\nassert solution(\"abcdefghij\") == \"a\"\nprint(solution(\"abcdefghij\"))  # Output: \"a\"\n\nassert solution(\"aba\") == \"b\"\nprint(solution(\"aba\"))  # Output: \"b\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abcde\") == \"cde\"\nassert solution(\"abcdefg\") == \"fg\"\nassert solution(\"aaa\") == \"a\"\nassert solution(\"aaaabbbccc\") == \"bbbccc\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"a\") == \"a\"\nassert solution(\"abc\") == \"ab\"\nassert solution(\"abcabc\") == \"aba\"\nassert solution(\"abcd\") == \"aba\"\nassert solution(\"aaabbb\") == \"aaab\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abab\") == \"bab\"\nassert solution(\"ababa\") == \"b\"\nassert solution(\"ababab\") == \"bab\"\nassert solution(\"abcabcabc\") == \"abcabcabc\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"aab\") == \"b\"\nassert solution(\"aabbc\") == \"aba\"\nassert solution(\"abbcc\") == \"abac\"\nassert solution(\"abcdef\") == \"abacb\"\n\nprint(\"Test Passed\")",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\\n4\") == \"b\"\nassert solution(\"aaaaa\\n4\") == \"a\"\nassert solution(\"abc\\n3\") == \"abc\"\nassert solution(\"abcde\\n4\") == \"def\"\nassert solution(\"abcdefg\\n4\") == \"fg\"\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"b\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"b\"\nprint(\"Correct\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n\") == \"9\"\nassert solution(\"5 5 1\\n1 1 1\\n1 1 1\\n\") == \"0\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4\\n') == '9\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\\n\", \"Incorrect output\"\nassert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n5 4 1\") == \"13\\n\", \"Incorrect output\"\nassert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n5 4 2\") == \"18\\n\", \"Incorrect output\"\n",
        "num_ids_2": 76,
        "num_ids_4": 118
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"\nassert solution(\"1 2 1\\n1 1 2\\n2 2 3\\n3 3 4\") == \"9\"\nassert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n5 6 7\") == \"13\"\nassert solution(\"1 2 1\\n1 1 2\\n2 2 3\\n3 3 4\\n5 6 7\") == \"13\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"30\"\nassert solution(\"1 2 1\\n1 1 2\\n2 2 3\\n3 3 4\") == \"30\"\nassert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n5 6 7\\n1 2 3\\n1 3 2\\n1 2 3\\n1 3 2\\n1 2 3\\n1 3 2\") == \"100\"\nassert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n5 6 7\\n1 2 3\\n1 3 2\\n1 2 3\\n1 3 2\\n1 2 3\\n1 3 2\") == \"100\"\n",
        "num_ids_2": 63,
        "num_ids_4": 142
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4') == '9\\n'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"9\\n\", \"Test failed.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == output, f\"Test Case Failed: {output}\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('railroad.in', 'r').read()) == '12\\n11\\n0\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12\\n11\\n0\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"12\\n11\\n0\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12\\n11\\n0\"\nassert solution(\"10\\n10 1\") == \"0\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\\n\"\nassert solution(\"2\\n1 1\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1\\n5\\n\") == \"2\\n1\\n\"\nassert solution(\"2\\n1 1\\n1\\n\") == \"1\\n\"\nassert solution(\"2\\n1 1\\n2\\n\") == \"0\\n\"\nassert solution(\"1\\n1 1\\n1\\n\") == \"0\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 103
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n.*\\n.*\\n\") == \".*\\n.*\\n.*\\n\"\nassert solution(\"2 2\\n..*\\n.*\\n\") == \".*\\n.*\\n.*\\n\"\nassert solution(\"2 2\\n..*\\n.*\\n\") == \".*\\n..*\\n.*\\n\"\nassert solution(\"2 2\\n..*\\n.*\\n\") == \"..*\\n.*\\n.*\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 111
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\n*.\\n.*\\n') == '.*\\n*.\\n.*\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\n*.\\n.*\\n') == '*.\\n*.\\n.*\\n'\nassert solution('2 3\\n*.\\n.*\\n') == '*.\\n.*\\n*.\\n'\nassert solution('3 2\\n*.\\n.*\\n') == '.*\\n*.\\n.*\\n'\nassert solution('3 4\\n*.\\n.*\\n') == '.*\\n.*\\n*.\\n'\nassert solution('4 3\\n*.\\n.*\\n') == '.*\\n.*\\n.*\\n'\n\nprint('All test cases passed.')",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"**.\\n**.\\n**.\\n\"\nassert solution(\"1 2\\n*.\\n.*\\n\") == \"***\\n*.*\\n*.*\\n\"\nassert solution(\"2 3\\n*.\\n.*\\n\") == \"*****\\n*****\\n*****\\n\"\nassert solution(\"1 3\\n*.\\n.*\\n\") == \"*****\\n*.*.*\\n*.*.*\\n\"\nassert solution(\"2 4\\n*.\\n.*\\n\") == \"******\\n******\\n******\\n\"\nassert solution(\"1 4\\n*.\\n.*\\n\") == \"******\\n*.*.*\\n*.*.*\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 117
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"3 3\\n*.\\n*.\\n\\n*.\\n\\n\") == \".*\\n.*\\n.*\\n.*\\n.*\\n\"\nassert solution(\"4 5\\n.*\\n.*\\n\\n*.\\n\\n\") == \".*\\n.*\\n.*\\n.*\\n.*\\n\"\nassert solution(\"2 3\\n*.\\n*.\\n\\n*.\\n\\n\") == \".*\\n.*\\n.*\\n.*\\n.*\\n\"\nassert solution(\"2 4\\n.*\\n.*\\n\\n*.\\n\\n\") == \".*\\n.*\\n.*\\n.*\\n.*\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 150
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b\"\\n2 2\\n*.\\n.*\\n\\n\") == \".\\n. \\n. \\n.\\n\"\nassert solution(b\"\\n2 2\\n*.\\n.*\\n\\n\") == \".\\n. \\n. \\n.\\n\"\nassert solution(b\"\\n2 2\\n*.\\n.*\\n\\n\") == \".\\n. \\n. \\n.\\n\"\nassert solution(b\"\\n2 2\\n*.\\n.*\\n\\n\") == \".\\n. \\n. \\n.\\n\"\nassert solution(b\"\\n2 2\\n*.\\n.*\\n\\n\") == \".\\n. \\n. \\n.\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n*\\n\") == \".*\\n*.\\n.*\\n*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n*\\n*\\n*\\n\") == \".*\\n*.\\n.*\\n*\\n*\\n*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n*\\n",
        "num_ids_2": 58,
        "num_ids_4": 130
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2\\n*.\\n.*\\n') == '*.\\n*.\\n.*\\n*.\\n'\nassert solution('1 1\\n..\\n.\\n') == '..\\n...\\n..\\n..\\n'\nassert solution('3 3\\n.*\\n.*\\n.*\\n') == '.*\\n.*\\n.*\\n.*\\n'\nassert solution('10 10\\n.*\\n.*\\n.*\\n') == '.*\\n.*\\n.*\\n.*\\n'",
        "num_ids_2": 55,
        "num_ids_4": 125
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\n*.\\n.*') == '***\\n***\\n.*\\n.*\\n'\nassert solution('2 2\\n*.\\n.*\\n') == '***\\n***\\n.*\\n.*\\n'\nassert solution('2 2\\n*.\\n.*\\n*\\n') == '***\\n***\\n.*\\n.*\\n'\nassert solution('2 2\\n*.\\n.*\\n*\\n*\\n') == '***\\n***\\n.*\\n.*\\n'\nassert solution('2 2\\n*.\\n.*\\n*\\n*\\n*\\n') == '***\\n***\\n.*\\n.*\\n*\\n*\\n'\nassert solution('2 2\\n*.\\n.*\\n*\\n*\\n*\\n*\\n') == '***\\n***\\n.*\\n.*\\n*\\n*\\n*\\n'\n",
        "num_ids_2": 60,
        "num_ids_4": 128
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'YES\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 6 1 4 5\\n\") == \"YES\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 6 1 4 5') == 'YES'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\nassert solution(\"5\\n2 3 6 1 4\") == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 6 1 4 5\\n\") == \"YES\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\", \"Output is not correct\"\n\nsolution(\"5\\n2 6 1 4 5\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n6\\n1\\n4\\n5\\n\") == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\nassert solution(\"5\\n2 6 1 4 6\") == \"NO\"\nassert solution(\"5\\n1 2 3 4 5\") == \"NO\"\nassert solution(\"5\\n1 2 3 4 6\") == \"YES\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == [\"2\", \"3\", \"4\", \"1\", \"2\"]\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2') == '2\\n3\\n4\\n1\\n2'",
        "num_ids_2": 204,
        "num_ids_4": 408
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"",
        "num_ids_2": 204,
        "num_ids_4": 306
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n\") == \"2\\n3\\n4\\n1\\n2\"",
        "num_ids_2": 208,
        "num_ids_4": 416
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(5)) == \"2\"\nassert solution(str(8)) == \"2\"\nassert solution(str(8)) == \"3\"\nassert solution(str(1)) == \"1\"\nassert solution(str(3)) == \"4\"\nassert solution(str(6)) == \"1\"\nassert solution(str(6)) == \"2\"\nassert solution(str(6)) == \"3\"\nassert solution(str(6)) == \"4\"\nassert solution(str(6)) == \"6\"\nassert solution(str(6)) == \"12\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n3\\n4\\n1\\n2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"",
        "num_ids_2": 201,
        "num_ids_4": 390
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n3\\n4\\n1\\n2\", \"Test case 1\"\nassert solution(input()) == \"2\\n3\\n4\\n1\\n2\", \"Test case 2\"\nassert solution(input()) == \"4\\n6\\n3\\n1\\n2\", \"Test case 3\"\nassert solution(input()) == \"4\\n6\\n3\\n1\\n2\", \"Test case 4\"\nassert solution(input()) == \"3\\n6\\n4\\n1\\n2\", \"Test case 5\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2') == '2\\n3\\n4\\n1\\n2'\n\nassert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2') == '2\\n3\\n4\\n1\\n2'",
        "num_ids_2": 204,
        "num_ids_4": 204
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"3\\n1\\n5\\n77\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13\\n') == '3\\n1\\n5\\n77'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\", \"Expected output: 3\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(example1) == '3'\nassert solution(example2) == '1'\nassert solution(example3) == '5'\nassert solution(example4) == '77'\nassert solution(example5) == '3'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13\\n') == '3\\n1\\n5\\n77'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: got {solution(input())}, expected {expected_output}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect. Please check your code and test cases.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\nassert solution(\"codeforces\") == \"9 4 5 3 1 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"",
        "num_ids_2": 283,
        "num_ids_4": 283
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(open('input.txt').read()) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(open('input.txt').read()) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(open('input.txt').read()) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(open('input.txt').read()) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(open('input.txt').read()) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(open('input.txt').read()) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(open('input.txt').read()) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(open('input.txt').read()) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(open('input.txt').read()) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(open('input.txt').read()) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(open('input.txt').read()) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(open('input.txt').read()) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(open('input.txt').read()) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(open('input.txt').read()) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 136,
        "num_ids_4": 274
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abca') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('codeforces') == '4 2 2 0 0 9 4 5 3 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'",
        "num_ids_2": 182,
        "num_ids_4": 182
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"codeforces\") == \"9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(\"qwertyuioplkjhgfdsazxcvbnm\") == \"26 10 1 2 3 5 10 5 9 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"",
        "num_ids_2": 122,
        "num_ids_4": 197
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == # Solution\nassert solution(stdin) == expected",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == '''\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n'''\n\nfrom typing import List",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"\n4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\n\"\"\"\n\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n    s = input()\n    p = list(map(int, input().split()))\n\n    m += 1\n    t = len(p)\n\n    count = [0] * 26\n    for i in range(1, t):\n        if p[i] == p[i - 1]:\n            count[ord(s[i - 1]) - ord('a')] += 1\n\n    result = [0] * 26\n    for i in range(1, m):\n        count = [0] * 26\n        for j in range(1, t):\n            if p[j] == p[j - 1]:\n                count[ord(s[j - 1]) - ord('a')] += 1\n                if i < m - 1 and p[j] == p[j + 1]:\n                    count[ord(s[j]) - ord('a')] -= 1\n                elif i == m - 1:\n                    count[ord(s[j]) - ord('a')] -= 1\n        for j in range(26):\n            result[j] += count[j]\n\n    for i in range(26):\n        print(result[i], end=\" \")",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n\"\"\"\n) == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"\n\nassert solution(\n    \"\"\"\n8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n2\n4\n3\n1\n1000000000 1000000000\n999999999 999999999\n2\n4\n3\n1\n1000000000 1000000000\n999999999 999999999\n3\n2\n5\n3\n2\n6\n2\n4\n3\n1\n1000000000 1000000000\n999999999 999999999\n3\n2\n5\n3\n2\n6\n1\n1000000000 1000000000\n999999999 999999999\n4\n2\n5\n3\n2\n6\n2\n4\n3\n1\n1000000000 1000000000\n999999999 999999999\n3\n2\n5\n3\n2\n6\n1\n1000000000 1000000000\n999999999 999999999\n4\n2\n5\n3\n2\n6\n2\n4\n3\n1\n1000000000 1000000000\n999999999 999999999\n3\n2\n5\n3\n2\n6\n1\n1000000000 1000000000\n999999999 999999999\n4\n2\n5\n3\n2\n6\n2\n4\n3\n1\n1000000000 1000000000\n999999999 999999999\n3\n2\n5\n3\n2\n6\n1\n1000000000 1000000000\n999999999 999999999\n4\n2\n5\n3\n2\n6\n2\n4\n3\n1\n1000000000 1000000000\n999999999 999999999\n3\n2\n5\n3\n2\n6\n1\n1000000000 1000000000\n999999999 999999999\n4\n2\n5\n3\n2\n6\n2\n4\n3\n1\n1000000000 1000000000\n999999999 999999999\n3\n2\n5\n3\n2\n6\n1\n1000000000 1000000000\n9",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\") == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"",
        "num_ids_2": 144,
        "num_ids_4": 144
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, but got {solution(input())}\"\n\nfor i in range(q):\n    a, b, c = map(int, input().split())\n    # code",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0\nassert solution() == 36\nassert solution() == 0\nassert solution() == 0\nassert solution() == 1999999994\nassert solution() == 1999999994\nassert solution() == 2\nassert solution() == 4",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected output: {output}, but got: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\") == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"",
        "num_ids_2": 144,
        "num_ids_4": 144
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Actual: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Solution({input()})!= expected({expected})\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {index + 1} failed: got {solution(input())}, expected {output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'YES\\nNO\\nYES\\nYES\\nYES\\nNO'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([11, 14, 16, 12]) == \"YES\"\nassert solution([1, 8, 4]) == \"YES\"\nassert solution([1, 1, 1, 1]) == \"YES\"\nassert solution([12, 13]) == \"NO\"\nassert solution([1, 6, 3, 10, 5, 8]) == \"YES\"\nassert solution([1, 12, 3, 10, 5, 8]) == \"YES\"\nassert solution([2, 1]) == \"NO\"",
        "num_ids_2": 39,
        "num_ids_4": 73
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(read()) == 'YES'\n\nfrom sys import stdin\n\nt = int(stdin.readline())\n\nfor _ in range(t):\n    n = int(stdin.readline().strip())\n    a = list(map(int, stdin.readline().split()))\n\n    if n % 2!= 0:\n        print(\"NO\")\n        continue\n\n    similar_pairs = []\n\n    for i in range(n - 1):\n        x, y = a[i], a[i + 1]\n\n        while x % 2!= y % 2:\n            x, y = x % 2 == x % 2 and (x // 2) or x, y % 2 == y % 2 and (y // 2) or y\n\n        if x == y:\n            similar_pairs.append((x, y))\n\n    if len(similar_pairs) > 1:\n        print(\"NO\")\n    else:\n        print(\"YES\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\"",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == 'YES'\nassert solution(open('input.txt', 'r').read()) == 'YES'\nassert solution('YES') == 'YES'\nassert solution('NO') == 'NO'\nassert solution('NO\\nYES') == 'NO'\nassert solution('YES\\nNO') == 'YES'",
        "num_ids_2": 36,
        "num_ids_4": 56
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test Case {test_case+1} failed. Expected: {expected}, Received: {solution(input())}\"\ntest_case += 1",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\nassert solution() == 'YES'\nassert solution() == 'YES'\nassert solution() == 'YES'\nassert solution() == 'NO'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\") == 22\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == 13",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected, f\"Testcase failed: {solution}!= {expected}\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\") == \"22\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\") == \"22\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"13\"",
        "num_ids_2": 134,
        "num_ids_4": 134
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '22', 'Your solution is incorrect. The output should be \"22\".'\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10, 5, 2) == 22\nassert solution(5, 5, 4) == 13\nassert solution(6, 5, 2) == 22\nassert solution(1, 2, 5) == 22\nassert solution(2, 3, 7) == 22\nassert solution(2, 4, 4) == 13\nassert solution(4, 5, 2) == 22\nassert solution(4, 6, 8) == 22\nassert solution(1, 6, 2) == 22\nassert solution(5, 3, 2) == 22\nassert solution(1, 5, 2) == 22\nassert solution(1, 3, 2) == 22\nassert solution(3, 3, 2) == 22\nassert solution(1, 5, 2) == 13\nassert solution(1, 3, 2) == 13",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\\n5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '22'\nassert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '13'",
        "num_ids_2": 198,
        "num_ids_4": 198
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\\n5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"22\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"13\"",
        "num_ids_2": 198,
        "num_ids_4": 198
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n\"\"\") == \"22\"\nassert solution(r\"\"\"\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\"\"\") == \"13\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"22\", \"Your solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"7\n1\n2\n6\n13\n14\n3620\n10000\"\"\"\n) == \"\"\"1\n3\n9\n13\n27\n6561\n19683\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test case {t+1} failed. Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"6\") == \"6\"\nassert solution(\"13\") == \"13\"\nassert solution(\"14\") == \"14\"\nassert solution(\"3620\") == \"3620\"\nassert solution(\"10000\") == \"19683\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Test {test_num} failed\"\n\ntest_num = 1\nstdin = \"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n\"\nexpected_output = \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n\"\nassert solution(\"2\\n4\\n8\\n16\\n32\\n64\\n128\\n256\\n512\\n1024\\n\") == \"2\\n4\\n8\\n16\\n32\\n64\\n128\\n256\\n512\\n1024\\n\"\nassert solution(\"3\\n6\\n12\\n24\\n48\\n96\\n192\\n\") == \"3\\n6\\n12\\n24\\n48\\n96\\n192\\n\"\nassert solution(\"10\\n100\\n1000\\n10000\\n\") == \"10\\n100\\n1000\\n10000\\n\"\nassert solution(\"10\\n100\\n1000\\n10000\\n2000000\\n\") == \"10\\n100\\n1000\\n10000\\n2000000\\n\"",
        "num_ids_2": 158,
        "num_ids_4": 272
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n\", \"The function should return the expected output\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n6\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\"\n) == \"\"\"\n1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([6, 5, 1, 2, 3, 4, 5, 3, 1, 2, 4, 3, 5, 5, 1, 2, 4, 3, 5, 1]) == '1 1 1 1 1'\nassert solution([6, 5, 1, 2, 3, 4, 5, 3, 1, 2, 4, 3, 5, 5, 1, 2, 4, 3, 5, 1]) == '3 3 3'\nassert solution([6, 5, 1, 2, 3, 4, 5, 3, 1, 2, 4, 3, 5, 5, 1, 2, 4, 3, 5, 1]) == '2 3 3 2 1 3'\nassert solution([6, 5, 1, 2, 3, 4, 5, 3, 1, 2, 4, 3, 5, 5, 1, 2, 4, 3, 5, 1]) == '1'\nassert solution([6, 5, 1, 2, 3, 4, 5, 3, 1, 2, 4, 3, 5, 5, 1, 2, 4, 3, 5, 1]) == '2 2 2 2'\nassert solution([6, 5, 1, 2, 3, 4, 5, 3, 1, 2, 4, 3, 5, 5, 1, 2, 4, 3, 5, 1]) == '4 4 4 1 4'",
        "num_ids_2": 146,
        "num_ids_4": 290
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 156,
        "num_ids_4": 312
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"No input given\"\nassert solution(\"\") == \"No input given\"\nassert solution(\"1\") == \"No input given\"\nassert solution(\"1 2 3 4 5\") == \"No input given\"\nassert solution(\"1 2 3 4 5 6\") == \"No input given\"\nassert solution(\"6\") == \"No input given\"\nassert solution(\"5\") == \"No input given\"\nassert solution(\"6 1 2 3 4\") == \"No input given\"\nassert solution(\"6 1 2 3 4 5\") == \"No input given\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"No input given\"",
        "num_ids_2": 22,
        "num_ids_4": 54
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"8\\n-1 2 6 4 0 3\"\nassert solution(stdin) == \"7\\n5 -2 4 -1 2\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\\n2 6\") == \"8\\n-1 2 6 4 0 3\"\nassert solution(\"3 5\\n0 3 1\") == \"7\\n5 -2 4 -1 2\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 6\\n1 5\\n\") == \"8\\n-1 2 6 4 0 3\"\nassert solution(\"3 5\\n0 3 1\\n\") == \"7\\n5 -2 4 -1 2\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 6\\n1 5\\n\") == \"8\\n-1 2 6 4 0 3\\n\"\nassert solution(\"3 5\\n0 3 1\\n\") == \"7\\n5 -2 4 -1 2\\n\"\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n2 6\\n1 5\\n\\nOutput\\n8\\n-1 2 6 4 0 3 \\n\\nInput\\n3 5\\n0 3 1\\n\\nOutput\\n7\\n5 -2 4 -1 2\\n') == 'Output\\n8\\n-1 2 6 4 0 3 \\n\\nInput\\n3 5\\n0 3 1\\n\\nOutput\\n7\\n5 -2 4 -1 2\\n'",
        "num_ids_2": 135,
        "num_ids_4": 135
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 6\\n1 5\\n') == '8\\n-1 2 6 4 0 3\\n'\nassert solution('3 5\\n0 3 1\\n') == '7\\n5 -2 4 -1 2\\n'\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '8\\n-1 2 6 4 0 3\\n7\\n5 -2 4 -1 2'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output of the solution {solution(input())} is not as expected.\\nExpected output:\\n{expected_output}\\nBut got:\\n{solution(input())}\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\\n\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(stdin) == \"YES\\nRRRRUUU\\nYES\\nRUUURRRRUU\"\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 57,
        "num_ids_4": 67
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(\"3\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\") == \"YES\\nRU\\nNO\\nYES\\nRR\"\nassert solution(\"1\\n0 1\\n1\\n4 3\") == \"YES\\nRRUUUUURRRR\"\nassert solution(\"3\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 126,
        "num_ids_4": 232
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('YES') == 'YES'\nassert solution('RUUURRRRUU') == 'RUUURRRRUU'\nassert solution('NO') == 'NO'\n\nfor _ in range(int(stdin.strip())):\n    n = int(stdin.split()[1])\n    packages = []\n    for _ in range(n):\n        x, y = map(int, stdin.split())\n        packages.append((x, y))\n    \n    print(solution(str(packages)))",
        "num_ids_2": 30,
        "num_ids_4": 40
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 179,
        "num_ids_4": 379
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed: expected {output}, got {solution(input())}\"\nprint(\"Test case passed\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed: expected '{output()}' but got '{solution(input())}'\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"8\\n0\\n500\\n2128012501878\\n899999999999999999\"\nprint(\"All test cases passed\")",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(stdin)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\") == \"8\\n0\\n500\\n2128012501878\\n899999999999999999\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\", \"The solution provided is not correct.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed.\" for i, (n, s, expected_output) in enumerate(tests)",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {t+1} failed: expected {expected_output}, got {solution(stdin)}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1') == '8'\nassert solution('5') == '0'\n\nfrom typing import List\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, got: {solution(input())}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\"\"\") == \"2\"\n\nassert solution(\"\"\"5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\"\"\") == \"2\"\n\nassert solution(\"\"\"5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\"\"\") == \"4\"\n\nassert solution(\"\"\"5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"2\\n\"\nassert solution(\"3\") == \"2\\n\"\nassert solution(\"5\") == \"2\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"5\") == \"2\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"1\") ==",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\\n0\\n2\\n4\\n1\\n\"\nassert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\\n0\\n2\\n4\\n1\\n\"\nassert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"0\\n\"\nassert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\\n0\\n2\\n4\\n1\\n\"",
        "num_ids_2": 192,
        "num_ids_4": 372
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\"\"\") == 2\n\nassert solution(\"\"\"5\n1\n1\n0\n0\n1\"\"\") == 0\n\nassert solution(\"\"\"5\n1\n1\n1\n1\n1\"\"\") == 2\n\nassert solution(\"\"\"5\n1\n1\n1\n1\n0\"\"\") == 0\n\nassert solution(\"\"\"5\n1\n1\n1\n0\n1\"\"\") == 1\n\nassert solution(\"\"\"5\n1\n1\n1\n1\n0\"\"\") == 0",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n0\\n2\\n4\\n1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2\\n0\\n2\\n4\\n1\\n'\nassert solution() == '0\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\\n0\\n2\\n4\\n1\"\nassert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\\n0\\n2\\n4\\n1\"\nassert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\\n0\\n2\\n4\\n1\"",
        "num_ids_2": 188,
        "num_ids_4": 282
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n0\\n2\\n4\\n1\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n0\\n2\\n4\\n1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Solution for the given constraints is {solution(stdin)}, but expected {expected}\"\n\nfor i in range(t):\n    n, k = list(map(int, input().split()))\n    s = input()\n    result = \"\"\n    freq = {}\n    for c in s:\n        if c in freq:\n            freq[c] += 1\n        else:\n            freq[c] = 1\n    for i in range(k):\n        max_freq = -1\n        for c in freq:\n            if c!= 'a' and c!= 'b' and c!= 'c' and c!= 'd' and c!= 'e' and c!= 'f' and c!= 'g' and c!= 'h' and c!= 'i' and c!= 'j' and c!= 'k' and c!= 'l' and c!='m' and c!= 'n' and c!= 'o' and c!= 'p' and c!= 'q' and c!= 'r' and c!='s' and c!= 't' and c!= 'u' and c!= 'v' and c!= 'w' and c!= 'x' and c!= 'y' and c!= 'z':\n                if freq[c] <= i:\n                    max_freq = max(max_freq, freq[c])\n        result += s[:i] + max_freq * 'a'\n        s = s[i+1:]\n    print(result)",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"cbcacab\"\nassert solution(2) == \"abcd\"\nassert solution(1) == \"baabab\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"cbcacab\"\nassert solution(4) == \"abcd\"\nassert solution(6) == \"baabab\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"cbcacab\"\nassert solution() == \"abcd\"\nassert solution() == \"baabab\"",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, but got {solution(stdin)}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7 3\\n4 4\\n6 2\\n\") == \"cbcacab\"\nassert solution(\"3\\n7 3\\n4 4\\n6 2\\n\") == \"abcd\"\nassert solution(\"3\\n7 3\\n4 4\\n6 2\\n\") == \"baabab\"\nassert solution(\"1\\n5 5\\n6 3\\n\") == \"ababab\"\nassert solution(\"1\\n5 5\\n6 3\\n\") == \"aba\"",
        "num_ids_2": 56,
        "num_ids_4": 107
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', but got '{solution(stdin)}'.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"cbcacab\"\nassert solution() == \"abcd\"\nassert solution() == \"baabab\"",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"cbcacab\", \"The correct answer is 'cbcacab'.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 3\\n4 4\\n6 2\\n\") == \"cbcacab\"\nassert solution(\"7 3\\n4 4\\n6 2\\n\") == \"abcd\"\nassert solution(\"7 3\\n4 4\\n6 2\\n\") == \"baabab\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == expected_output, f\"Your solution is incorrect. \\nExpected output: {expected_output} \\nActual output: {solution(input_str)}\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1\") == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"\nassert solution(\"7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1\") == \"1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"",
        "num_ids_2": 363,
        "num_ids_4": 363
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"\"\"6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\"\"\"\n\nfrom typing import List",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6 23 21\", \"Test case 1 failed\"\nassert solution() == \"1 1000 0\", \"Test case 2 failed\"\nassert solution() == \"2 1 2\", \"Test case 3 failed\"\nassert solution() == \"6 45 46\", \"Test case 4 failed\"\nassert solution() == \"3 4 2\", \"Test case 5 failed\"\nassert solution() == \"4 4 3\", \"Test case 6 failed\"",
        "num_ids_2": 43,
        "num_ids_4": 83
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1\") == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"\n",
        "num_ids_2": 183,
        "num_ids_4": 183
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test case {i+1} failed: expected {output}, got {solution(input)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1\") == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 186,
        "num_ids_4": 186
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"The output is not as expected. Please check the solution and update the output accordingly.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\"\n) == \"6\\n27\\n39\\n11\\n17\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\\n27\\n39\\n11\\n17\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\\n\") == \"6\\n27\\n39\\n11\\n17\\n\"",
        "num_ids_2": 148,
        "num_ids_4": 148
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\\n\") == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\\n\") == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\\n\") == \"6\\n27\\n39\\n11\\n17\\n\"",
        "num_ids_2": 145,
        "num_ids_4": 145
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed: expected '{output()}', got '{solution(input())}'\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\") == \"6\\n27\\n39\\n11\\n17\\n\"\nassert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\") == \"6\\n27\\n39\\n11\\n17\\n\"\nassert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\") == \"6\\n27\\n39\\n11\\n17\\n\"\nassert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\") == \"6\\n27\\n39\\n11\\n17\\n\"",
        "num_ids_2": 292,
        "num_ids_4": 584
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"6\\n27\\n39\\n11\\n17\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\\n\") == \"0 7 13 18 24 35 36 37 40 45\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\\n') == [0, 7, 13, 18, 24, 35, 36, 37, 40, 45]\nassert solution('10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\\n') == [0, 2, 4, 7, 8, 11, 13, 14, 16, 17]",
        "num_ids_2": 180,
        "num_ids_4": 180
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0 7 13 18 24 35 36 37 40 45\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\\n\"\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\") == \"0 2 4 7 8 11 13 14 16 17\"",
        "num_ids_2": 160,
        "num_ids_4": 160
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == [\"0\", \"7\", \"13\", \"18\", \"24\", \"35\", \"36\", \"37\", \"40\", \"45\"]\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45 \"\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\") == \"0 2 4 7 8 11 13 14 16 17\"",
        "num_ids_2": 158,
        "num_ids_4": 158
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == [\"0\", \"7\", \"13\", \"18\", \"24\", \"35\", \"36\", \"37\", \"40\", \"45\"]",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5, 1) == 'aaabb'\nassert solution(5, 2) == 'aabab'\nassert solution(5, 8) == 'abaaab'\nassert solution(5, 10) == 'baaaab'\nassert solution(3, 1) == 'abb'\nassert solution(3, 2) == 'bab'\nassert solution(20, 100) == 'aaaaabaaaaabaaaaaaaa'",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('123456789') == 'aaabb'\nassert solution('12345678901234567890123456789') == 'aaaabbaaaabbaaaaaaaabbaaaaaaabaaaaaaaabbaaaaaabaaa'\nassert solution('123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901",
        "num_ids_2": 72,
        "num_ids_4": 1027
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"aaabb\\n\"\nassert solution(input()) == \"aabab\\n\"\nassert solution(input()) == \"baaba\\n\"\nassert solution(input()) == \"bbaaa\\n\"\nassert solution(input()) == \"abb\\n\"\nassert solution(input()) == \"bab\\n\"\nassert solution(input()) == \"aaaaabaaaaabaaaaaaaa\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"aaabb\\naaaaabaaaaabaaaaaaaa\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\\n\") == \"aaabb\\naabab\\nbaaab\\bbaaa\\abb\\bab\\aaaaabaaaaabaaaaaaaa\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'aaabb'\nassert solution(stdin) == 'aabab'\nassert solution(stdin) == 'baaba'\nassert solution(stdin) == 'bbaaa'\nassert solution(stdin) == 'abb'\nassert solution(stdin) == 'bab'\nassert solution(stdin) == 'aaaaabaaaaabaaaaaaaa'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 'aaabb'\nassert solution(100) == 'bbaaa'\nassert solution(1) == 'aaabb'\nassert solution(5) == 'aaabb'\nassert solution(1000) == 'abbaaa'\nassert solution(1001) == 'aaaaabaaaaabaaaaaaaa'\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 1) == 'aaabb'\nassert solution(2, 1) == 'aaabb'\nassert solution(5, 1) == 'aaabb'\nassert solution(5, 2) == 'aabab'\nassert solution(5, 8) == 'aabab'\nassert solution(5, 10) == 'aabab'\nassert solution(3, 1) == 'aaabb'\nassert solution(3, 2) == 'aaabb'\nassert solution(20, 100) == 'aaabb'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 1) == \"aaabb\"\nassert solution(3, 2) == \"aabab\"\nassert solution(5, 1) == \"aaabb\"\nassert solution(5, 2) == \"aabab\"\nassert solution(5, 8) == \"aaabb\"\nassert solution(5, 10) == \"aaabb\"\nassert solution(3, 1) == \"aaabb\"\nassert solution(3, 2) == \"aabab\"\nassert solution(20, 100) == \"aaabb\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == \"aaabb\"\nassert solution(\"5 2\") == \"aabab\"\nassert solution(\"5 8\") == \"aabba\"\nassert solution(\"5 10\") == \"ababa\"\nassert solution(\"3 1\") == \"aab\"\nassert solution(\"3 2\") == \"aaab\"\nassert solution(\"20 100\") == \"aabba\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Test case {test_case} has incorrect output. Expected: '{output_data}', got: '{solution(input_data)}'.\" for test_case, input_data, output_data in [\n    (1, \"1\", 2),\n    (2, \"1\", 6),\n    (3, \"5 10\", 3),\n    (4, \"10 10\", 1),\n    (5, \"10 10\", 1),\n    (6, \"5 10\", 1),\n]",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == \"6\\n1\\n5\\n10\"\nassert solution(open(\"input.txt\").read()) == \"1\\n2\\n3\"\nassert solution(open(\"input.txt\").read()) == \"4\\n5\\n6\\n7\"\nassert solution(open(\"input.txt\").read()) == \"5\\n10\"\nassert solution(open(\"input.txt\").read()) == \"6\\n10\"\nassert solution(open(\"input.txt\").read()) == \"6\\n1\"\nassert solution(open(\"input.txt\").read()) == \"6\\n5\"\nassert solution(open(\"input.txt\").read()) == \"1\\n5\"\nassert solution(open(\"input.txt\").read()) == \"5\\n10\"",
        "num_ids_2": 48,
        "num_ids_4": 93
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"6\\n1\\n5\\n10\"\nassert solution(\"10 5\\n1 1\\n2 3 4 5\\n6 7 8 9\\n10 11 12 13 14 15 16 17 18 19\\n12 13 14 15 16 17 18 19 20 21\\n20 21 22 23 24 25 26 27 28 29\\n30 31 32 33 34 35 36 37 38 39\\n40 41 42 43 44 45 46 47 48 49\\n\") == \"1\\n\"\nassert solution(\"20 1\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"2\\n\"\nassert solution(\"4 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"6\\n\"\nassert solution(\"4 2\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"2\\n\"\nassert solution(\"3 5\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"0\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n\") == \"0\\n\"\nassert solution(\"3 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n\") == \"2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"2\\n\"\nassert solution(\"3 4\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1",
        "num_ids_2": 379,
        "num_ids_4": 461
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '6\\n1\\n5\\n10\\n'\n\nassert solution() == '1\\n'\n\nassert solution() == '5\\n'\n\nassert solution() == '10\\n'",
        "num_ids_2": 30,
        "num_ids_4": 51
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"6\\n1\\n5\\n10\"",
        "num_ids_2": 187,
        "num_ids_4": 187
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '6\\n1\\n5\\n10'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([1, 1, 1]) == '1'\nassert solution([1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == '1'\nassert solution([1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]) == '1'\n\nt = int(stdin.readline().strip())\nfor _ in range(t):\n    n = int(stdin.readline().strip())\n    k = int(stdin.readline().strip())\n    x = [int(stdin.readline().strip()) for _ in range(n)]\n    y = [int(stdin.readline().strip()) for _ in range(n)]\n    x.sort()\n    y.sort()\n\n    # Test case 1\n    platform1 = [0, -1]\n    platform2 = [n, -1]\n    points = [(-1, -1), (2, -1), (4, 3), (5, 3)]\n\n    result = 0\n    for point in points:\n        if (point[0] + k, point[1]) not in x or (point[0], point[1] + k) not in x:\n            continue\n        if (point[0], point[1]) in platform1:\n            result += 1\n            if (point[0], point[1]) not in y:\n                platform2 = platform1\n                platform1 = point\n            else:\n                platform2 = [min(point[0], platform1[0]), min(point[1], platform1[1])]\n        elif (point[0] + k, point[1]) in platform2:\n            result += 1\n            if (point[0] + k, point[1]) not in y:\n                platform1 = platform2\n                platform2 = point\n            else:\n                platform1 = [max(point[0] + k, platform2[0]), max(point[1] + k, platform2[1])]\n        else:\n            result += 1\n\n    print(result)\n\n    # Test case 2\n    platform1 = [0, -1]\n    platform2 = [n, -1]\n    points = [(0, 0), (k, 0), (k, n), (0, n)]\n\n    result = 0\n    for point in points:\n        if (point[0] + k, point[1]) not in x or (point[0], point[1] + k) not in x:\n            continue\n        if (point[0], point[1]) in platform1:\n            result += 1\n            if (point[0], point[1]) not in y:\n                platform2 = platform1\n                platform1 = point\n            else:\n                platform2 = [min(point[0], platform1[0]), min(point[1], platform1[1])]\n        elif (point[0] + k, point[1]) in platform2:\n            result += 1\n            if (point[0] + k, point[1]) not in y:\n                platform1 = platform2\n                platform2 = point\n            else:\n                platform1 = [max(point[0] + k, platform2[0]), max(point[1] + k, platform2[1])]\n        else:\n            result += 1\n\n    print(result)\n\n    # Test case 3\n    platform1 = [0, -1]\n    platform2 = [n, -1]\n    points = [(0, 0), (k, 0), (k, n), (0, n), (0, 0)]\n\n    result = 0\n    for point in points:\n        if (point[0] + k, point[1]) not in x or (point[0], point[1] + k) not in x:\n            continue\n        if (point[0], point[1]) in platform1:\n            result += 1\n            if (point[0], point[1]) not in y:\n                platform2 = platform1\n                platform1 = point\n            else:\n                platform2 = [min(point[0], platform1[0]), min(point[1], platform1[1])]\n        elif (point[0] + k, point[1]) in platform2:\n            result += 1\n            if (point[0] + k, point[1]) not in y:\n                platform1 = platform2\n                platform2 = point\n            else:\n                platform1 = [max(point[0]",
        "num_ids_2": 57,
        "num_ids_4": 138
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\\n1\\n5\\n10\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: expected {expected_output}, got {solution(input())}\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10') == '1\\n2\\n3\\n3\\n4\\n4\\n7\\n'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0\\n'\nassert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10') == '1\\n2\\n3\\n3\\n4\\n4\\n7\\n'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0\\n'",
        "num_ids_2": 91,
        "num_ids_4": 182
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10') == '1\\n2\\n3\\n3\\n4\\n4\\n7\\n'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0\\n'\nassert solution('7 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0\\n'",
        "num_ids_2": 91,
        "num_ids_4": 128
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n7 3\n0\n1\n2\n2\n0\n0\n10\n\"\"\") == \"\"\"\n1\n2\n3\n3\n4\n4\n7\n\"\"\"\n\nassert solution(\"\"\"\n4 3\n1\n2\n1\n2\n\"\"\") == \"\"\"\n0\n0\n0\n0\n\"\"\"\n\nassert solution(\"\"\"\n7 10\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\") == \"\"\"\n10\n8\n6\n4\n2\n0\n\"\"\"\n\nassert solution(\"\"\"\n3 10\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\") == \"\"\"\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1 2 3 4 0 10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\"",
        "num_ids_2": 82,
        "num_ids_4": 131
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == ['1', '2', '3', '3', '4', '4', '7']",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"0\\n0\\n0\\n0\\n\") == \"0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 125
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"1\n2\n3\n3\n4\n4\n7\"\"\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n7 3\n0\n1\n2\n2\n0\n0\n10\n''') == '1\\n2\\n3\\n3\\n4\\n4\\n7\\n'\n\nassert solution('''\n4 3\n1\n2\n1\n2\n''') == '0\\n0\\n0\\n0\\n'\n\nassert solution('''\n4 3\n1\n2\n1\n2\n''') == '0\\n0\\n0\\n0\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n7 3\n0\n1\n2\n2\n0\n0\n10\n''') == '''1\n2\n3\n3\n4\n4\n7\n'''\n\nassert solution('''\n4 3\n1\n2\n1\n2\n''') == '''0\n0\n0\n0\n'''\n\nassert solution('''\n5 2\n1\n2\n3\n4\n5\n''') == '''0\n1\n2\n3\n4\n5\n'''\n\nassert solution('''\n6 4\n1\n2\n3\n4\n5\n6\n''') == '''0\n1\n2\n3\n4\n4\n'''\n\nassert solution('''\n7 4\n1\n2\n3\n4\n5\n6\n7\n''') == '''0\n1\n2\n3\n4\n4\n6\n7\n'''\n\nassert solution('''\n9 2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '''0\n1\n2\n3\n4\n4\n5\n5\n6\n6\n7\n7\n8\n8\n9\n9\n'''\n\nassert solution('''\n10 4\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '''0\n1\n2\n3\n4\n5\n5\n6\n6\n7\n7\n8\n8\n9\n9\n10\n10\n'''\n\nassert solution('''\n1000 4\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n''') == '''0\n1\n2\n3\n4\n5\n5\n6\n6\n7\n7\n8\n8\n9\n9\n10\n10\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\") == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\") == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed.\"\nfor i in range(t):\n    n, x, y = map(int, input().split())\n    a = [x, y]\n    a.sort()\n    a.reverse()\n    a = [a[i] for i in range(len(a)-1)]\n    print(*a)\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, but got: {solution(input())}\" for i, (n, x, y, expected_output) in enumerate(test_cases)",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\") == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == ['1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\\n']",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"1 49\n20 40 30 50 10\n26 32 20 38 44 50 \n8 23 18 13 3 \n1 10 13 4 19 22 25 16 7\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please check the output: \\n{output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1 2 3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1 2 3\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3 1 2') == '1 2 3\\n'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"5 2 7 1 9 3\") == \"1 2 3 7 9\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"\") == \"\"\nassert solution(\"0 1 2 3\") == \"1 2 3\"",
        "num_ids_2": 48,
        "num_ids_4": 76
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test {test_num} failed\"\n\ntest_num = 1\ninput_array = [int(x) for x in input().split()]\nn = input_array[0]\na = [int(x) for x in input().split()]",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1') == 'YES\\nNO\\nYES\\nNO\\nNO'",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"YES\"\nassert solution(7) == \"NO\"\nassert solution(6) == \"YES\"\nassert solution(8) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == \"NO\"\nassert solution(3) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(6) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"YES\\nNO\\nYES\\nNO\\nNO\"\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 'YES'\nassert solution(open('input.txt', 'r')) == 'NO'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"YES\\nNO\\nYES\\nNO\\nNO\"\nprint(\"All test cases passed.\")\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n6\\n2\\n4\\n6\\n7\\n13\\n') == '9 6 10 8 4 7 3 1 5 2 '\nassert solution('6\\n2\\n4\\n6\\n7\\n13\\n') == '-1'\nassert solution('1\\n2\\n4\\n6\\n7\\n13\\n') == '-1'\nassert solution('5\\n3\\n6\\n2\\n4\\n1\\n') == '5 3 6 2 4 1 '\nassert solution('3\\n1\\n4\\n2\\n5\\n6\\n') == '5 3 6 2 4 1 '\nassert solution('5\\n1\\n3\\n6\\n2\\n4\\n7\\n') == '13 9 7 11 8 4 1 3 5 2 6 10 12'",
        "num_ids_2": 78,
        "num_ids_4": 143
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test case {test_case_id} failed\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected_output\nprint(f\"Output\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5 6\\n5\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"1 2 3 4 5 6\\n3\") == \"-1\"\nassert solution(\"5\\n10\\n3\\n2\\n4\\n6\\n7\\n13\") == \"3 1 4 2 5 3 6 2 4 1 5 3 6 2 4 7 13 9 7 11 8 4 1 3 5 2 6 10 12\"\nassert solution(\"1 2\\n1 3\\n4 5\\n6 7\\n8 9\") == \"9 8 7 6 5 4 3 2 1\"",
        "num_ids_2": 65,
        "num_ids_4": 206
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '9 6 10 8 4 7 3 1 5 2 -1\\n3 1 4 2\\n5 3 6 2 4 1\\n5 1 3 6 2 4 7\\n13 9 7 11 8 4 1 3 5 2 6 10 12'\nprint(solution(input()))",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '-1'\nassert solution() == '13 9 7 11 8 4 1 3 5 2 6 10 12'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == 3\nassert solution(100) == 9\nassert solution(2) == -1",
        "num_ids_2": 21,
        "num_ids_4": 30
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output\n\nfor _ in range(input()):\n    n = int(input())\n    p = sorted([int(x) for x in input().split()])\n    count = [0] * n\n    diff = [0] * n\n\n    for num in p:\n        if num - 1 >= 0 and abs(num - p[num - 1]) <= 2:\n            count[num - 1] += 1\n        if num + 1 < n and abs(num - p[num + 1]) <= 2:\n            count[num + 1] += 1\n\n        if count[num - 1] == 1 and count[num + 1] == 1:\n            diff[num - 1] += 1\n            diff[num + 1] += 1\n            if diff[num - 1] + diff[num + 1] <= 4:\n                perm = [num]\n                for i in range(n):\n                    if i!= num and perm[i] - perm[i - 1] < 2 and perm[i] + perm[i + 1] < 2:\n                        perm.append(perm[i] + perm[i + 1])\n\n                if perm:\n                    print(\" \".join(str(x) for x in perm))\n                else:\n                    print(\"-1\")\n            else:\n                print(\"-1\")\n\n    else:\n        print(\"-1\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6) == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(10) == \"-1\"\nassert solution(2) == \"3 1 4 2 \"\nassert solution(4) == \"5 3 6 2 4 1 \"\nassert solution(6) == \"5 1 3 6 2 4 7 \"\nassert solution(13) == \"13 9 7 11 8 4 1 3 5 2 6 10 12\"",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([3, 2, 7, 6]) == 2, \"Input [3, 2, 7, 6]\"\nassert solution([3, 2, 6]) == 1, \"Input [3, 2, 6]\"\nassert solution([1]) == -1, \"Input [1]\"\nassert solution([3, 2, 7, 6]) == 2, \"Input [3, 2, 7, 6]\"\n\nsolution([3, 2, 7, 6, 1, 5]) # fails\nsolution([3, 2, 7, 6, 1, 5]) # fails\n\nsolution([1, 7, 7, 4, 9, 2, 1, 3, 0]) # fails\nsolution([1, 7, 7, 4, 9, 2, 1, 3, 0]) # fails\n\nsolution([3, 2, 7, 6, 1, 5, 1, 2, 3]) # fails\nsolution([3, 2, 7, 6, 1, 5, 1, 2, 3]) # fails\n\nsolution([3, 2, 7, 6, 1, 5, 1, 2, 3, 4, 5]) # fails\nsolution([3, 2, 7, 6, 1, 5, 1, 2, 3, 4, 5]) # fails",
        "num_ids_2": 60,
        "num_ids_4": 108
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([3, 2, 7, 6, 3, 2, 6, 1, 7, 7, 4, 9, 2, 1, 18, 3, 0]) == 2\nassert solution([3, 2, 6, 1, 7, 7, 4, 9, 2, 1, 18, 3, 0]) == -1\nassert solution([0, 5, 2, 1]) == 0\nassert solution([-1, 0, 1, 0]) == 0\nassert solution([0, 0, 0, 0]) == 0\nassert solution([1, 1, 1, 1]) == 0\nassert solution([0, 0, 0, 0, 0]) == 0\nassert solution([1, 1, 1, 1, 1]) == 0\nassert solution([0, 0, 0, 0, 0, 0]) == 0\nassert solution([1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 0\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1",
        "num_ids_2": 104,
        "num_ids_4": 140
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '2\\n1\\n-1\\n0'\nassert solution('3\\n3\\n2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '1\\n0'\nassert solution('1\\n7\\n7\\n4 9 2 1 18 3 0') == '-1\\n0'",
        "num_ids_2": 113,
        "num_ids_4": 148
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Expected 2, got {}\".format(solution())",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Expected 2, got: \" + str(solution())",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2, \"Expected 2, got {}\".format(solution())",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n') == '2 2 2 2 2 1 1 0 2 \\n'\n\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n') == '0 -1 1 -1 \\n'",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n\") == \"2 2 2 2 2 1 1 0 2\\n\"\nassert solution(\"0 0 1 0\\n1 2\\n1 3\\n1 4\\n\") == \"0 -1 1 -1\\n\"\n",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n') == '2 2 2 2 2 1 1 0 2'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n') == '0 -1 1 -1'\n\nfrom typing import List",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n') == '2 2 2 2 2 1 1 0 2 '\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n') == '0 -1 1 -1 '",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n\") == \"2 2 2 2 2 1 1 0 2\\n\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n\") == \"0 -1 1 -1\\n\"",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0, \"The solution is incorrect.\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n\\nOutput\\n2 2 2 2 2 1 1 0 2\\n\") == \"2 2 2 2 2 1 1 0 2\\n\", \"Test failed\"",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(example) == \"2 2 2 2 2 1 1 0 2\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n\"\nassert solution(\"7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n\"\nassert solution(\"8\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 153,
        "num_ids_4": 1027
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0', '0'\nassert solution(stdin) == '-1', '1'\nassert solution(stdin) == '2', '1'\nassert solution(stdin) == '-1', '1'\nassert solution(stdin) == '12', '36'\nassert solution(stdin) == '-1', '1'\nassert solution(stdin) == '387420489', '1'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: expected '{expected}', got '{solution(input())}'\"\nfor i, expected in enumerate(expected_output):\n    assert solution(input()) == expected, f\"Test case {i+1} failed: expected '{expected}', got '{solution(input())}'\"\nprint(\"All test cases passed\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(\"7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n19",
        "num_ids_2": 149,
        "num_ids_4": 1027
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(15116544) == 0, \"Invalid answer\"\nassert solution(12345) == 2, \"Invalid answer\"\nassert solution(1) == -1, \"Invalid answer\"\nassert solution(387420489) == 12, \"Invalid answer\"",
        "num_ids_2": 39,
        "num_ids_4": 76
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"12\") == \"36\"\nassert solution(\"12345\") == \"-1\"\nassert solution(\"15116544\") == \"12\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n\"\nassert solution(\"1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"-1\\n\"\nassert solution(\"1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n7\") == \"-1\\n\"",
        "num_ids_2": 125,
        "num_ids_4": 178
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RBRGR\") == \"1\"\nassert solution(\"BBBRR\") == \"0\"\nassert solution(\"GBRG\") == \"2\"\nassert solution(\"BRGR\") == \"2\"\nassert solution(\"BBGR\") == \"2\"\nassert solution(\"GGG\") == \"1\"",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n0\\n3\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"BGGGG\") == 1\nassert solution(\"RBRGR\") == 3\nassert solution(\"BBBRR\") == 3",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR') == '1\\n0\\n3'\nassert solution('5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR') == '1\\n0\\n3'\nassert solution('5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR') == '1\\n0\\n3'\nassert solution('5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR') == '1\\n0\\n3'",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"BGGGG\") == \"1\"\nassert solution(\"RBRGR\") == \"0\"\nassert solution(\"BBBRR\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BGGGG\") == \"RGRG\"\nassert solution(\"RBRGR\") == \"BRGRB\"\nassert solution(\"BBBRR\") == \"GRRGG\"",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\nBGGGG\") == \"1\"\nassert solution(\"5 3\\nRBRGR\") == \"0\"\nassert solution(\"5 5\\nBBBRR\") == \"3\"",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n0\\n3'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR\") == \"1\\n0\\n3\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3\\n3'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\\n3\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Output\\n3\\n3\\n'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\n3\"\nassert solution(stdin) == \"3\\n3\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\"\nassert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"3\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint('All tests passed.')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '3\\n3\\n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1 5 2 4 3 \\n1 2 3 4 \\n1 \\n1 4 3 2\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\\n\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed: expected '{expected}', got '{solution(stdin)}'.\"\nfor i, expected in enumerate(outputs):\n    assert solution(stdin) == expected, f\"Test case {i+1} failed: expected '{expected}', got '{solution(stdin)}'.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\\n\") == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2 \"\nassert solution(\"4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\\n\") == \"1 2 3 4 \"\nassert solution(\"4\\n1 2 4 3\\n1 3 4 5\\n1\\n1\\n4\\n4 3 2 1\\n\") == \"1 2 3 4 \"\nassert solution(\"4\\n1 2 4 3\\n1 3 4 5\\n1 4 5 6\\n1\\n1\\n4\\n4 3 2 1\\n\") == \"1 2 3 4 \"",
        "num_ids_2": 130,
        "num_ids_4": 247
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\"\nassert solution(\"4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 2 3 4\"\nassert solution(\"4\\n1 2 3 4\\n1\\n1\\n4\\n4 3 2 1\") == \"1 2 3 4\"",
        "num_ids_2": 126,
        "num_ids_4": 169
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n\"\"\") == \"1 5 2 4 3 \\n1 2 3 4 \\n1 \\n1 4 3 2 \\n\"\n\nassert solution(\"\"\"\n4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n\"\"\") == \"1 5 2 4 3 \\n1 2 3 4 \\n1 \\n1 4 3 2 \\n\"\n\nassert solution(\"\"\"\n4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n\"\"\") == \"1 5 2 4 3 \\n1 2 3 4 \\n1 \\n1 4 3 2 \\n\"\n\nassert solution(\"\"\"\n4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n\"\"\") == \"1 5 2 4 3 \\n1 2 3 4 \\n1 \\n1 4 3 2 \\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\\n\") == \"1 5 2 4 3 \\n1 2 3 4 \\n1 \\n1 4 3 2 \"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 5 2 4 3 \\n1 2 3 4 \\n1 \\n1 4 3 2\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\nYES\\nNO\\nYES\\nYES\\nYES\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\nYES\\nNO\\nYES\\nYES\"\nassert solution(\"4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\nYES\\nNO\\nYES\\nYES\"\nassert solution(\"5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\\n2\\n4\\n2\") == \"YES\\nNO\\nYES\"\nassert solution(\"3\\n1 2 3\\n1\\n5\\n2\\n3\\n4\\n3\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n1\\n5\\n2\\n3\\n4\\n3\") == \"YES\"",
        "num_ids_2": 150,
        "num_ids_4": 263
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\nYES\\nNO\\nYES\\nYES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\nYES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 156,
        "num_ids_4": 156
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"YES\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n\") == \"NO\"\nassert solution(\"1\\n1\\n5\\n3\\n2\\n\") == \"YES\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"NO\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n\") == \"YES\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\nYES\\nNO\\nYES\\nYES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10') == \"YES\\nNO\\nYES\\nYES\\nNO\"\nassert solution('5') == \"YES\\nNO\\nYES\\nYES\\nNO\"\nassert solution('10') == \"YES\\nNO\\nYES\\nYES\\nNO\"\nassert solution('10') == \"YES\\nNO\\nYES\\nYES\\nNO\"\nassert solution('5') == \"YES\\nNO\\nYES\\nYES\\nNO\"",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\nYES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\\nYES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 'YES'\nassert solution(2) == 'NO'\nassert solution(3) == 'YES'\nassert solution(4) == 'YES'\nassert solution(5) == 'NO'\nassert solution(6) == 'NO'\nassert solution(7) == 'NO'\nassert solution(8) == 'NO'\nassert solution(9) == 'NO'\nassert solution(10) == 'YES'\nassert solution(11) == 'YES'\nassert solution(12) == 'YES'\nassert solution(13) == 'YES'\nassert solution(14) == 'YES'\nassert solution(15) == 'YES'\nassert solution(16) == 'YES'\nassert solution(17) == 'YES'\nassert solution(18) == 'YES'\nassert solution(19) == 'YES'\nassert solution(20) == 'YES'\nassert solution(21) == 'YES'\nassert solution(22) == 'YES'\nassert solution(23) == 'YES'\nassert solution(24) == 'YES'\nassert solution(25) == 'YES'\nassert solution(26) == 'YES'\nassert solution(27) == 'YES'\nassert solution(28) == 'YES'\nassert solution(29) == 'YES'\nassert solution(30) == 'YES'\nassert solution(31) == 'YES'\nassert solution(32) == 'YES'\nassert solution(33) == 'YES'\nassert solution(34) == 'YES'\nassert solution(35) == 'YES'\nassert solution(36) == 'YES'\nassert solution(37) == 'YES'\nassert solution(38) == 'YES'\nassert solution(39) == 'YES'\nassert solution(40) == 'YES'\nassert solution(41) == 'YES'\nassert solution(42) == 'YES'\nassert solution(43) == 'YES'\nassert solution(44) == 'YES'\nassert solution(45) == 'YES'\nassert solution(46) == 'YES'\nassert solution(47) == 'YES'\nassert solution(48) == 'YES'\nassert solution(49) == 'YES'\nassert solution(50) == 'YES'\nassert solution(51) == 'YES'\nassert solution(52) == 'YES'\nassert solution(53) == 'YES'\nassert solution(54) == 'YES'\nassert solution(55) == 'YES'\nassert solution(56) == 'YES'\nassert solution(57) == 'YES'\nassert solution(58) == 'YES'\nassert solution(59) == 'YES'\nassert solution(60) == 'YES'\nassert solution(61) == 'YES'\nassert solution(62) == 'YES'\nassert solution(63) == 'YES'\nassert solution(64) == 'YES'\nassert solution(65) == 'YES'\nassert solution(66) == 'YES'\nassert solution(67) == 'YES'\nassert solution(68) == 'YES'\nassert solution(69) == 'YES'\nassert solution(70) == 'YES'\nassert solution(71) == 'YES'\nassert solution(72) == 'YES'\nassert solution(73) == 'YES'\nassert solution(74) == 'YES'\nassert solution(75) == 'YES'\nassert solution(76) == 'YES'\nassert solution(77) == 'YES'\nassert solution(78) == 'YES'\nassert solution(79) == 'YES'\nassert solution(80) == 'YES'\nassert solution(81) == 'YES'\nassert solution(82) == 'YES'\nassert solution(83) == 'YES'\nassert solution(84) == 'YES'\nassert solution(85) == 'YES'\nassert solution(86) == 'YES'\nassert solution(87) == 'YES'\nassert solution(88) == 'YES'\nassert solution(89) == 'YES'\nassert solution(90) == 'YES'\nassert solution(91) == 'YES'\nassert solution(92) == 'YES'\nassert solution(93) == 'YES'\nassert solution(94) == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\\n\") == \"YES\\nYES\\nNO\\nYES\\nYES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\\n\") == \"YES\\nYES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 160,
        "num_ids_4": 160
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '5\\n18\\n10\\n6\\n75015'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The output '{solution(input())}' does not match the expected output '{output}'.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Error: expected output '{expected_output}', but got '{solution(input())}'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == 75015, \"Test case 1 failed\"\nassert solution(10) == 10, \"Test case 2 failed\"\nassert solution(1) == 1, \"Test case 3 failed\"\nassert solution(2) == 1, \"Test case 4 failed\"\nassert solution(3) == 2, \"Test case 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"5\"\nassert solution(1) == \"5\"\nassert solution(2) == \"1\"\nassert solution(4) == \"4\"\nassert solution(8) == \"10\"\nassert solution(12) == \"6\"\nassert solution(18) == \"75015\"\nassert solution(20) == \"18\"\nassert solution(25) == \"10\"\nassert solution(50) == \"6\"\nassert solution(51) == \"75015\"\nassert solution(52) == \"18\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '5\\n18\\n10\\n6\\n75015\\n'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case {i + 1} failed. Expected {output}, got {solution(input())}.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test case failed for {input()}\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(6) == \"YES\"\nassert solution(7) == \"YES\"\nassert solution(8) == \"YES\"\nassert solution(9) == \"YES\"\nassert solution(10) == \"YES\"\nassert solution(11) == \"YES\"\nassert solution(12) == \"YES\"\nassert solution(13) == \"YES\"\nassert solution(14) == \"YES\"\nassert solution(15) == \"YES\"\nassert solution(16) == \"YES\"\nassert solution(17) == \"YES\"\nassert solution(18) == \"YES\"\nassert solution(19) == \"YES\"\nassert solution(20) == \"YES\"\nassert solution(21) == \"YES\"\nassert solution(22) == \"YES\"\nassert solution(23) == \"YES\"\nassert solution(24) == \"YES\"\nassert solution(25) == \"YES\"\nassert solution(26) == \"YES\"\nassert solution(27) == \"YES\"\nassert solution(28) == \"YES\"\nassert solution(29) == \"YES\"\nassert solution(30) == \"YES\"\nassert solution(31) == \"YES\"\nassert solution(32) == \"YES\"\nassert solution(33) == \"YES\"\nassert solution(34) == \"YES\"\nassert solution(35) == \"YES\"\nassert solution(36) == \"YES\"\nassert solution(37) == \"YES\"\nassert solution(38) == \"YES\"\nassert solution(39) == \"YES\"\nassert solution(40) == \"YES\"\nassert solution(41) == \"YES\"\nassert solution(42) == \"YES\"\nassert solution(43) == \"YES\"\nassert solution(44) == \"YES\"\nassert solution(45) == \"YES\"\nassert solution(46) == \"YES\"\nassert solution(47) == \"YES\"\nassert solution(48) == \"YES\"\nassert solution(49) == \"YES\"\nassert solution(50) == \"YES\"\nassert solution(51) == \"YES\"\nassert solution(52) == \"YES\"\nassert solution(53) == \"YES\"\nassert solution(54) == \"YES\"\nassert solution(55) == \"YES\"\nassert solution(56) == \"YES\"\nassert solution(57) == \"YES\"\nassert solution(58) == \"YES\"\nassert solution(59) == \"YES\"\nassert solution(60) == \"YES\"\nassert solution(61) == \"YES\"\nassert solution(62) == \"YES\"\nassert solution(63) == \"YES\"\nassert solution(64) == \"YES\"\nassert solution(65) == \"YES\"\nassert solution(66) == \"YES\"\nassert solution(67) == \"YES\"\nassert solution(68) == \"YES\"\nassert solution(69) == \"YES\"\nassert solution(70) == \"YES\"\nassert solution(71) == \"YES\"\nassert solution(72) == \"YES\"\nassert solution(73) == \"YES\"\nassert solution(74) == \"YES\"\nassert solution(75) == \"YES\"\nassert solution(76) == \"YES\"\nassert solution(77) == \"YES\"\nassert solution(78) == \"YES\"\nassert solution(79) == \"YES\"\nassert solution(80) == \"YES\"\nassert solution(81) == \"YES\"\nassert solution(82) == \"YES\"\nassert solution(83) == \"YES\"\nassert solution(84) == \"YES\"\nassert solution(85) == \"YES\"\nassert solution(86) == \"YES\"\nassert solution(87) == \"YES\"\nassert solution(88) == \"YES\"\nassert solution(89) == \"YES\"\nassert solution(90) == \"YES\"\nassert solution(91) == \"YES\"\nassert solution(92) == \"YES\"\nassert solution(93) == \"YES\"\nassert solution(94) == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed with input: {input()} and expected output: {expected}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\nassert solution('10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n8 9\\n97 9\\n7 8\\n10 10\\n800 40\\n10 1\\n100 20\\n90 10\\n80 80\\n100 100\\n30 50\\n10 20\\n100 50') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\nassert solution('10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n8 9\\n97 9\\n7 8\\n10 10\\n800 40\\n10 1\\n100 20\\n90 10\\n80 80\\n100 100\\n30 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 20\\n100 50\\n10 2",
        "num_ids_2": 500,
        "num_ids_4": 1027
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"YES\n4 2 4\nYES\n55 5 5 35\nNO\nNO\nYES\n1 1 1 1 1 1 1 1\nNO\nYES\n3 1 1\nYES\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\n",
        "num_ids_2": 166,
        "num_ids_4": 166
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\nNO\\nYES\\n1000000000 9\\nNO\\nNO\"\nprint(\"Test Passed\")",
        "num_ids_2": 159,
        "num_ids_4": 159
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"",
        "num_ids_2": 208,
        "num_ids_4": 208
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\") == \"4\\n55\\n150000000000000000\"\nassert solution(\"23 34 45\") == \"51\"\nassert solution(\"\") == \"\"\nassert solution(\"1 10000000000000000 10000000000000000 10000000000000000\") == \"55\"",
        "num_ids_2": 121,
        "num_ids_4": 192
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([1, 3, 4]) == \"4\\n55\\n150000000000000000\\n51\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000') == '4\\n55\\n150000000000000000'\nassert solution('23 34 45\\n') == '51'\nassert solution('10000000000000000 10000000000000000 10000000000000000') == '1'\nassert solution('50000000000000000 50000000000000000 50000000000000000') == '0'",
        "num_ids_2": 123,
        "num_ids_4": 247
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n4\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n\"\"\"\n) == \"4\\n55\\n150000000000000000\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"4\\n55\\n150000000000000000\"\nassert solution(2) == \"2\\n46\\n150000000000000000\"\nassert solution(5) == \"5\\n127000000000000000\"",
        "num_ids_2": 68,
        "num_ids_4": 98
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_solution, f\"Solution is incorrect. Expected: {expected_solution}, Received: {solution}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\") == \"4\\n55\\n150000000000000000\"\nassert solution(\"1 10 100\\n100000000000000000 100000000000000000 100000000000000000\") == \"55\\n150000000000000000\"\nassert solution(\"23 34 45\\n100000000000000000 100000000000000000 100000000000000000\") == \"51\"\n",
        "num_ids_2": 199,
        "num_ids_4": 275
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\\n55\\n150000000000000000\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\\n3\\nabcbac\\n3\\naaa\\n7\\n1000\\nabczgyo\\n5\\n4\\nababa\\n20\\n10\\naaebdbabdbbddaadaadc\\n20\\n5\\necbedececacbcbccbdec\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\abczgyo\\n5 4\\ababa\\n20 10\\aaebdbabdbbddaadaadc\\n20 5\\ecbedececacbcbccbdec\") == \"6\\n3\\n5\\n4\\n15\\n10\"\nassert solution(\"1\\n1\\n\") == \"1\\n1\"\nassert solution(\"5\\n3\\n\") == \"5\\n3\"\nassert solution(\"2\\n5\\n\") == \"2\\n5\"\nassert solution(\"6\\n3\\nabcxyz\\n5 4\\nababa\\n20 10\\aaebdbabdbbddaadaadc\\n20 5\\ecbedececacbcbccbdec\") == \"6\\n3\\n5\\n4\\n15\\n10\"",
        "num_ids_2": 115,
        "num_ids_4": 151
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\ababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\\n\") == \"6\\n3\\n5\\n4\\n15\\n10\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\ababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\\n\") == \"6\\n3\\n5\\n4\\n15\\n10\\n\"\nassert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\ababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\\n6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\ababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\\n\") == \"3\\n5\\n4\\n15\\n10\\n\"",
        "num_ids_2": 278,
        "num_ids_4": 278
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec') == '6\\n3\\n5\\n4\\n15\\n10\\n'\nassert solution('abcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec') == '6\\n3\\n5\\n4\\n15\\n10\\n'\nassert solution('abcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec') == '6\\n3\\n5\\n4\\n15\\n10\\n'",
        "num_ids_2": 190,
        "num_ids_4": 285
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == [\"6\", \"3\"]\nassert solution(stdin) == [\"6\", \"5\"]\nassert solution(stdin) == [\"6\", \"4\"]\nassert solution(stdin) == [\"3\", \"15\"]\nassert solution(stdin) == [\"3\", \"10\"]",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nbczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\") == \"6\\n3\\n5\\n4\\n15\\n10\\n\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '6\\n3\\nabcbac\\n3\\naaaa\\n1000\\nabczgyo\\n5\\nababa\\n20\\n10\\aaebdbabdbbddaadaadc\\n20\\n5\\necbedececacbcbccbdec\\n'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('test_input.txt').read()) == \"6\\n3\\nabcbac\\n3\\naaa\\n7\\n1000\\nabczgyo\\n5\\n4\\nababa\\n20\\n10\\naaebdbabdbbddaadaadc\\n20\\n5\\necbedececacbcbccbdec\\n\"\n\nimport re",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\abczgyo\\n5 4\\ababa\\n20 10\\aaebdbabdbbddaadaadc\\n20 5\\ecbedececacbcbccbdec') == '6\\n3\\n5\\n4\\n15\\n10\\n'",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\\n1 3 5\"\nassert solution(stdin) == \"NO\\nNO\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"YES\n1 3 5\nNO\nNO\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('YES\\n1 3 5\\nNO\\nNO\\n') == 'YES\\n1 3 5\\nNO\\nNO\\n'\nassert solution('NO\\n') == 'NO\\n'\nassert solution('YES\\n3 3\\n3 2\\n2 3\\n2 3\\n1 3\\n1 3\\n1 3\\n1 3\\n') == 'YES\\n1 3 3\\n1 3 2\\n2 3 2\\n2 3 3\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3\\n'",
        "num_ids_2": 54,
        "num_ids_4": 162
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"YES\\n1 3 5\\nNO\\nNO\"\nassert solution(\"6\\n2 3\\n1 4 2 7 5 9 6\\n1 8 7 6 5 4 3 2\\n\") == \"YES\\n2 3 7\\nNO\"",
        "num_ids_2": 135,
        "num_ids_4": 135
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"YES\\n1 3 5\\nNO\\nNO\"\n\nfrom typing import List",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\\n1 3 5\\nNO\\nNO\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"YES\\n1 3 5\\nNO\\nNO\"\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\n1 3 5\"\nassert solution() == \"NO\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"YES\\n1 3 5\"\nassert solution(5) == \"YES\\n1 2 4\"\nassert solution(6) == \"NO\"\nassert solution(7) == \"YES\\n1 2 3 5\"\nassert solution(8) == \"NO\"\n",
        "num_ids_2": 34,
        "num_ids_4": 63
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('00000010100101000001111010011100') == 964176192\nassert solution('1111111111111111111111111111101') == 3221225471",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"\n",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\", \"Incorrect result for example 1\"\nassert solution(\"1111111111111111111111111111101\") == \"3221225471\", \"Incorrect result for example 2\"",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"\n",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"1111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"\n",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(00000010100101000001111010011100) == 964176192\nassert solution(1111111111111111111111111111101) == 3221225471",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\", \"Example 1\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\", \"Example 2\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\", \"Test Example 1 failed\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\", \"Test Example 2 failed\"\n\nfrom typing import List",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == [\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n], \"The solution is incorrect.\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == [\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == [['1'],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]\nassert solution(10) == [['1'],[1,1],[1,2,1],[1,3,3,1],[1,4,5,4,3,1],[1,5,10,10,5,1],[1,6,15,20,15,6,1]]",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == [\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n], \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == [\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\") == [\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n], \"Test 1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == [\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\nhello@example.com\\napple@example.org\\ngoogle@example.com\\n') == '[\"apple@example.org\", \"hello@example.com\"]'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3\nexample.com\nadmin@example.net\nuser1@example.com\nuser2@example.net\nuser3@example.org''') == ['admin@example.net', 'user2@example.net']\n\nassert solution('''4\njohn.doe@example.com\njane.doe@example.net\njim.doe@example.org\njuan.doe@example.edu''') == []",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\njohn-doe@example.com\\njohn_doe2@example.com2\\njohn_doe3@example.com3\\n\") == [\"john_doe2@example.com2\", \"john_doe3@example.com3\", \"john_doe@example.com\"]\nassert solution(\"2\\n\\n\") == []\n\nfor _ in range(int(input())):\n    n = int(input())\n    email_list = [input().strip() for _ in range(n)]\n    valid_emails = list(filter(lambda email: re.match(r'^[a-zA-Z0-9_\\-\\.]+@[a-zA-Z0-9_\\-\\.]+\\.[a-zA-Z]{2,3}$', email), email_list))\n    valid_emails.sort()\n    print(\" \".join(valid_emails))",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\njohn.doe@example.com\\njohn2.doe@example.com\\njohn3.doe@example.com\\njohn4.doe@example.com\\n\") == [\"john.doe@example.com\", \"john2.doe@example.com\", \"john3.doe@example.com\"]\nassert solution(\"2\\njohn.doe@example.com\\njohn2.doe@example.com\\njohn3.doe@example.com\\njohn4.doe@example.com\\n\") == []\n",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nhello@example.com\\njohn.doe@example.com\") == ['hello@example.com', 'john.doe@example.com']\nassert solution(\"2\\njohndoe@example.com\\njohn-doe@example.com\\n\") == ['johndoe@example.com', 'john-doe@example.com']\nassert solution(\"3\\njohndoe123@example.com\\njohn_doe23@example.com\\njohn.doe456@example.com\\n\") == ['johndoe123@example.com', 'john_doe23@example.com', 'john.doe456@example.com']\nassert solution(\"4\\njohndoe@example.co.in\\njohn_doe23@example.com\\njohn.doe456@example.co.in\\n\") == []",
        "num_ids_2": 82,
        "num_ids_4": 204
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10\\nexample@example.com\\nblah@example.net\\n') == ['example@example.com', 'blah@example.net']\nassert solution('5\\nexample@example.com\\nblah@example.net\\n') == ['example@example.com', 'blah@example.net']\nassert solution('1\\nexample@example.com\\n') == ['example@example.com']\nassert solution('') == []",
        "num_ids_2": 75,
        "num_ids_4": 104
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\njohn-smith@example.com\\njohn_doe@example.com\\n\") == [\"john-smith@example.com\", \"john_doe@example.com\"]\nassert solution(\"2\\njohn.doe@example.com\\njohn-doe@example.com\\n\") == []\nassert solution(\"3\\njohn.doe@example\\njohn_doe@example\\njohn.doe@example.co\\n\") == [\"john.doe@example.co\"]\nassert solution(\"4\\na.b@c.com\\n123@d.com\\n\") == [\"a.b@c.com\", \"123@d.com\"]\nassert solution(\"5\\njohn.doe@example.com\\njohn-doe@example.com\\njohn.doe@example.co\\n\") == [\"john.doe@example.co\"]\n\nassert solution(\"1\\njohn_doe@example.com\\njohn_doe@example.com\\n\") == [\"john_doe@example.com\", \"john_doe@example.com\"]\nassert solution(\"2\\njohn.doe@example.com\\njohn-doe@example.com\\n\") == []\nassert solution(\"3\\njohn.doe@example\\njohn_doe@example\\njohn.doe@example.co\\n\") == [\"john.doe@example.co\"]\nassert solution(\"4\\na.b@c.com\\n123@d.com\\n\") == [\"a.b@c.com\", \"123@d.com\"]\nassert solution(\"5\\njohn.doe@example.com\\njohn-doe@example.com\\njohn.doe@example.co\\n\") == [\"john.doe@example.co\"]",
        "num_ids_2": 73,
        "num_ids_4": 158
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nexample.com\\nexample2.net\\nexample.org\\nexample-test.com\\nexample.edu\\n\") == [\"example.edu\", \"example.net\", \"example.com\", \"example.org\", \"example-test.com\"]",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == [\"example.com\", \"example.co.uk\", \"example.net\", \"example.org\", \"example.edu\"]\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\njohn@example.com\\njanedoe@example.com\\nben@example.com\\n\") == ['john@example.com', 'janedoe@example.com', 'ben@example.com']\nassert solution(\"2\\njohn@example.com,john@example.net\\nben@example.com\\nclem@example.net\\n\") == ['john@example.com', 'janedoe@example.com', 'ben@example.com', 'clem@example.net']\nassert solution(\"1\\njohn@example.com\\nclem@example.net\\n\") == []\nassert solution(\"5\\njohn@example.com,john@example.net,john@example.com,john@example.net,john@example.com\\nben@example.com,ben@example.net,ben@example.com,ben@example.net,ben@example.com\\n\") == ['john@example.com', 'janedoe@example.com', 'ben@example.com', 'clem@example.net', 'john@example.net']\nassert solution(\"2\\njohn@example.com@example.org,john@example.com@example.net,john@example.com@example.org,john@example.com@example.net,john@example.com@example.org\\nben@example.com@example.org,ben@example.com@example.net,ben@example.com@example.org,ben@example.com@example.net,ben@example.com@example.org\\n\") == ['john@example.com@example.org', 'janedoe@example.com@example.org', 'ben@example.com@example.org', 'clem@example.com@example.org', 'john@example.com@example.net', 'john@example.com@example.org']",
        "num_ids_2": 122,
        "num_ids_4": 255
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == ['0', '1', '8', '27', '64']",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == [1, 8, 27, 64, 100]",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"7\") == \"21\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(N=10) == [0, 1, 8, 27, 120, 720, 5040, 40320, 362880, 3628800]\n\nassert solution(N=15) == [0, 1, 8, 27, 120, 720, 5040, 40320, 362880, 39916800, 479001600]",
        "num_ids_2": 138,
        "num_ids_4": 138
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"List on a single line containing the cubes of the first N fibonacci numbers.\\n[64, 49, 36, 25, 16, 12, 8, 4, 1, 0]\\n\", \"Test case failed.\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == ['0', '1', '8', '27', '64']",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == ['36', '252', '1788', '13704', '113852', '1000000']\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5') == ['0', '1', '8', '27', '64']",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == [1, 1, 2, 8]\nassert solution(2) == [0, 1, 1, 2, 3, 5, 8, 13]\nassert solution(3) == [0, 1, 2, 4, 10, 21, 53, 144, 408, 1161, 3628, 10041, 48624, 213071, 999357, 5913783, 30569031, 175078365, 1000000000]\nassert solution(4) == [0, 1, 4, 21, 81, 345, 1701, 9168, 40321, 201008, 1121393, 5698601, 32456251, 232372893, 1909570041, 14699124641, 123493472832, 1137909304192, 11084370880641, 118320766336064, 1409786234869441, 17722420943716416, 227759280183328641, 3035344912123434881, 40695218169214158721, 65075000000000000000, 1143662535327349396161, 20425500000000000000000, 344287866837713497400321, 6568000000000000000000000, 124786414444309535541616161, 2328000000000000000000000000, 489986269604600780870241616161, 1000000000000000000000000000000, 200000000000000000000000000000000, 40000000000000000000000000000000000, 8000000000000000000000000000000000000, 160000000000000000000000000000000000000, 3200000000000000000000000000000000000000, 64000000000000000000000000000000000000000, 12800000000000000000000000000000000000000, 2560000000000000000000000000000000000000",
        "num_ids_2": 51,
        "num_ids_4": 1027
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4') == ['16', '120', '720']\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n  <level1>\\n    <level2>\\n      <level3>\\n        <level4>\\n          <level5>\\n          </level5>\\n        </level4>\\n      </level3>\\n    </level2>\\n  </level1>\\n</root>\") == 3\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n  <level1>\\n    <level2>\\n      <level3>\\n        <level4>\\n          <level5>\\n          </level5>\\n        </level4>\\n      </level3>\\n    </level2>\\n  </level1>\\n</root>\") == 3\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n  <level1>\\n    <level2>\\n      <level3>\\n        <level4>\\n          <level5>\\n            <level6>\\n            </level6>\\n          </level5>\\n        </level4>\\n      </level3>\\n    </level2>\\n  </level1>\\n</root>\") == 4\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n  <level1>\\n    <level2>\\n      <level3>\\n        <level4>\\n          <level5>\\n          </level5>\\n        </level4>\\n      </level3>\\n    </level2>\\n  </level1>\\n</root>\") == 4\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n  <level1>\\n    <level2>\\n      <level3>\\n        <level4>\\n          <level5>\\n            <level6>\\n            </level6>\\n          </level5>\\n        </level4>\\n      </level3>\\n    </level2>\\n  </level1>\\n</root>\") == 4",
        "num_ids_2": 182,
        "num_ids_4": 376
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test Case {i+1} failed: expected {expected}, got {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == 0\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><a><b><c/></b><d/></a></root>\") == 3\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><a><b><c/></b><d/></a><e/><f/><g/></root>\") == 3\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><a><b><c/></b><d/><e/><f/><g/><h/></root>\") == 3\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><a><b/><c/><d/></a><e/><f/><g/></root>\") == 4",
        "num_ids_2": 48,
        "num_ids_4": 142
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\"?>\\n<root>\\n<child1>\\n<grandchild1>\\n<grandchild2>\\n<nested1>\\n<nested2>\\n<nested3>\\n<nested4>\\n<nested5>\\n</nested5>\\n</nested4>\\n</nested3>\\n</nested2>\\n</nested1>\\n</child1>\\n</root>\") == 5, \"Expected output: 5\"\nassert solution(\"<?xml version=\\\"1.0\\\"?>\\n<root>\\n<child1>\\n<nested1>\\n<nested2>\\n<nested3>\\n<nested4>\\n<nested5>\\n</nested5>\\n</nested4>\\n</nested3>\\n</nested2>\\n</nested1>\\n</child1>\\n</root>\") == 4, \"Expected output: 4\"\nassert solution(\"<?xml version=\\\"1.0\\\"?>\\n<root>\\n<child1>\\n<grandchild1>\\n<nested1>\\n<nested2>\\n<nested3>\\n<nested4>\\n<nested5>\\n</nested5>\\n</nested4>\\n</nested3>\\n</nested2>\\n</nested1>\\n</child1>\\n</root>\") == 0, \"Expected output: 0\"",
        "num_ids_2": 198,
        "num_ids_4": 297
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0, \"Invalid XML document\"\n\nfor i in range(int(stdin)):\n    document = input()\n    # Your code goes here",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"test.xml\") == 2, \"The maximum level of nesting in the XML document should be 2.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '10'\nprint(5)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root><level1><level2><level3><level4><level5>abc</level5></level4></level3></level2></level1></root>\") == 5\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root><level1><level2><level3><level4><level5>abc</level5></level4></level3></level2></level1></root>\") == 5\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root><level1><level2><level3><level4><level5>abc</level5></level4></level3></level2></level1></root>\") == 5\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root><level1><level2><level3><level4><level5>abc</level5></level4></level3></level2></level1></root>\") == 5\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root><level1><level2><level3><level4><level5>abc</level5></level4></level3></level2></level1></root>\") == 5",
        "num_ids_2": 122,
        "num_ids_4": 244
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n<root><a><b><c></c><d><e></e></d></b><f><g></g></f></a></root>\") == 4\nassert solution(\"1\\n<root><a><b><c></c><d><e></e></d></b><f><g></g></f></a><h><i><j></j></i></h></root>\") == 4\nassert solution(\"1\\n<root><a><b><c></c><d><e></e></d></b><f><g></g></f></a><h><i><j></j></i></h><k></k></root>\") == 4\nassert solution(\"1\\n<root><a><b><c></c><d><e></e></d></b><f><g></g></f></a><h><i><j></j></i><k></k></h></root>\") == 4\nassert solution(\"1\\n<root><a><b><c></c><d><e></e></d></b><f><g></g></f></a><h><i><j></j></i><k></k><l></l></h></root>\") == 4",
        "num_ids_2": 98,
        "num_ids_4": 216
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><root><a><b><c><d><e></e></d></c></b></a></root>\") == 2\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><a><b><c><d><e></e></d></c></b></a></root>\") == 2\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><a><b><c><d><e></e></d></c></b></a></root>\") == 2\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<a><b><c><d><e></e></d></c></b></a></root>\") == 2\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><a><b><c><d><e><f></f></e></d></c></b></a></root>\") == 2\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<a><b><c><d><e><f></f></e></d></c></b></a></root>\") == 2",
        "num_ids_2": 96,
        "num_ids_4": 188
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"71234567890\\n9876543210\") == \"YES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"71234567890\\n9876543211\") == \"YES\\nYES\\nYES\\nYES\\nNO\"\nassert solution(\"1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\",
        "num_ids_2": 88,
        "num_ids_4": 1027
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1234567890\") == \"YES\"\nassert solution(\"1234567891\") == \"NO\"\nassert solution(\"1234567892\") == \"YES\"\nassert solution(\"1234567893\") == \"YES\"\nassert solution(\"1234567894\") == \"NO\"\nassert solution(\"1234567895\") == \"NO\"\nassert solution(\"1234567896\") == \"YES\"\nassert solution(\"1234567897\") == \"NO\"\nassert solution(\"1234567898\") == \"YES\"\nassert solution(\"1234567899\") == \"YES\"\nassert solution(\"1234567900\") == \"NO\"\nassert solution(\"1234567901\") == \"YES\"\nassert solution(\"1234567902\") == \"NO\"\nassert solution(\"1234567903\") == \"YES\"\nassert solution(\"1234567904\") == \"NO\"\nassert solution(\"1234567905\") == \"YES\"\nassert solution(\"1234567906\") == \"YES\"\nassert solution(\"1234567907\") == \"YES\"\nassert solution(\"1234567908\") == \"YES\"\nassert solution(\"1234567909\") == \"YES\"\nassert solution(\"1234567910\") == \"NO\"\nassert solution(\"1234567911\") == \"YES\"\nassert solution(\"1234567912\") == \"YES\"\nassert solution(\"1234567913\") == \"NO\"\nassert solution(\"1234567914\") == \"YES\"\nassert solution(\"1234567915\") == \"NO\"\nassert solution(\"1234567916\") == \"YES\"\nassert solution(\"1234567917\") == \"YES\"\nassert solution(\"1234567918\") == \"NO\"\nassert solution(\"1234567919\") == \"YES\"\nassert solution(\"1234567920\") == \"YES\"\nassert solution(\"1234567921\") == \"YES\"\nassert solution(\"1234567922\") == \"NO\"\nassert solution(\"1234567923\") == \"NO\"\nassert solution(\"1234567924\") == \"NO\"\nassert solution(\"1234567925\") == \"YES\"\nassert solution(\"1234567926\") == \"NO\"\nassert solution(\"1234567927\") == \"YES\"\nassert solution(\"1234567928\") == \"NO\"\nassert solution(\"1234567929\") == \"NO\"\nassert solution(\"1234567930\") == \"NO\"\nassert solution(\"1234567931\") == \"YES\"\nassert solution(\"1234567932\") == \"YES\"\nassert solution(\"1234567933\") == \"YES\"\nassert solution(\"1234567934\") == \"YES\"\nassert solution(\"1234567935\") == \"YES\"\nassert solution(\"1234567936\") == \"YES\"\nassert solution(\"1234567937\") == \"YES\"\nassert solution(\"1234567938\") == \"YES\"\nassert solution(\"1234567939\") == \"NO\"\nassert solution(\"1234567940\") == \"YES\"\nassert solution(\"1234567941\") == \"YES\"\nassert solution(\"1234567942\") == \"NO\"\nassert solution(\"1234567943\") == \"NO\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12345678901\") == \"YES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"1234567890123456789012\") == \"NO\\nNO\\nNO\\nNO\\nYES\"\nassert solution(\"123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678",
        "num_ids_2": 75,
        "num_ids_4": 1027
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1234567890\") == \"YES\"\nassert solution(\"12345678901\") == \"YES\"\nassert solution(\"123456789012\") == \"YES\"\nassert solution(\"1234567890123\") == \"YES\"\nassert solution(\"12345678901234\") == \"NO\"\nassert solution(\"123456789012345\") == \"NO\"",
        "num_ids_2": 39,
        "num_ids_4": 82
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1234567890\") == \"YES\" # True\nassert solution(\"123456789\") == \"NO\" # True\nassert solution(\"12345678\") == \"YES\" # True\nassert solution(\"1234567\") == \"YES\" # True\nassert solution(\"123456\") == \"NO\" # True",
        "num_ids_2": 41,
        "num_ids_4": 78
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n1234567890') == 'NO'\nassert solution('1\\n123456789012345678901234567890') == 'YES'\nassert solution('2\\n+1 911\\n555 555 5555') == 'YES'\nassert solution('2\\n01234 5678\\n555 555 5555') == 'NO'\nassert solution('2\\n+1 555 555 5555\\n1234 5678 9012') == 'NO'",
        "num_ids_2": 64,
        "num_ids_4": 132
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1234567\") == \"NO\"\nassert solution(\"12345678\") == \"YES\"\nassert solution(\"9123456789\") == \"YES\"\nassert solution(\"0123456789\") == \"YES\"\nassert solution(\"1234567890\") == \"NO\"",
        "num_ids_2": 33,
        "num_ids_4": 71
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1234567890\\n9876543210\\n\\n\\n12345678901234\\n7890123456789\\n\\n\\n09876543210987\\n') == 'YES'\nassert solution('1234567890\\n9876543210\\n\\n\\n12345678901234\\n7890123456789\\n\\n\\n09876543210987\\n123456789012345678901234567890') == 'NO'\nassert solution('1234567890\\n9876543210\\n\\n\\n12345678901234\\n7890123456789\\n\\n\\n09876543210987\\n123456789012345678901234567890') == 'NO'\nassert solution('1234567890\\n9876543210\\n\\n\\n12345678901234\\n7890123456789\\n\\n\\n09876543210987\\n123456789012345678901234567890') == 'YES'\nassert solution('1234567890\\n9876543210\\n\\n\\n12345678901234\\n7890123456789\\n\\n\\n09876543210987\\n123456789012345678901234567890') == 'YES'",
        "num_ids_2": 206,
        "num_ids_4": 442
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1234567890\") == \"YES\"\nassert solution(\"1234567891\") == \"YES\"\nassert solution(\"1234567892\") == \"YES\"\nassert solution(\"1234567893\") == \"YES\"\nassert solution(\"1234567894\") == \"YES\"\nassert solution(\"1234567895\") == \"YES\"\nassert solution(\"1234567896\") == \"YES\"\nassert solution(\"1234567897\") == \"YES\"\nassert solution(\"1234567898\") == \"YES\"\nassert solution(\"1234567899\") == \"YES\"\nassert solution(\"1234567900\") == \"YES\"\nassert solution(\"1234567901\") == \"YES\"\nassert solution(\"1234567902\") == \"YES\"\nassert solution(\"1234567903\") == \"YES\"\nassert solution(\"1234567904\") == \"YES\"\nassert solution(\"1234567905\") == \"YES\"\nassert solution(\"1234567906\") == \"YES\"\nassert solution(\"1234567907\") == \"YES\"\nassert solution(\"1234567908\") == \"YES\"\nassert solution(\"1234567909\") == \"YES\"\nassert solution(\"1234567910\") == \"YES\"\nassert solution(\"1234567911\") == \"YES\"\nassert solution(\"1234567912\") == \"YES\"\nassert solution(\"1234567913\") == \"YES\"\nassert solution(\"1234567914\") == \"YES\"\nassert solution(\"1234567915\") == \"YES\"\nassert solution(\"1234567916\") == \"YES\"\nassert solution(\"1234567917\") == \"YES\"\nassert solution(\"1234567918\") == \"YES\"\nassert solution(\"1234567919\") == \"YES\"\nassert solution(\"1234567920\") == \"YES\"\nassert solution(\"1234567921\") == \"YES\"\nassert solution(\"1234567922\") == \"YES\"\nassert solution(\"1234567923\") == \"YES\"\nassert solution(\"1234567924\") == \"YES\"\nassert solution(\"1234567925\") == \"YES\"\nassert solution(\"1234567926\") == \"YES\"\nassert solution(\"1234567927\") == \"YES\"\nassert solution(\"1234567928\") == \"YES\"\nassert solution(\"1234567929\") == \"YES\"\nassert solution(\"1234567930\") == \"YES\"\nassert solution(\"1234567931\") == \"YES\"\nassert solution(\"1234567932\") == \"YES\"\nassert solution(\"1234567933\") == \"YES\"\nassert solution(\"1234567934\") == \"YES\"\nassert solution(\"1234567935\") == \"YES\"\nassert solution(\"1234567936\") == \"YES\"\nassert solution(\"1234567937\") == \"YES\"\nassert solution(\"1234567938\") == \"YES\"\nassert solution(\"1234567939\") == \"YES\"\nassert solution(\"1234567940\") == \"YES\"\nassert solution(\"1234567941\") == \"YES\"\nassert solution(\"1234567942\") == \"YES\"\nassert solution(\"1234567943\") == \"YES\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'''\n5\n4 3 2\n5\n1 2\n''') == '''\n3\n4\n5\n'''\n\nassert solution(r'''\n3\n2\n3\n4\n''') == '''\n2\n3\n4\n'''\n\nassert solution(r'''\n4\n3\n2\n1\n''') == '''\n1\n2\n3\n4\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n5 4 3 2\n3 2 1\n4 1\n6 7 8\n''') == '''\n7 8\n5 4\n'''\n\nassert solution('''\n5 4 3 2\n''') == '''\n'''\n\nassert solution('''\n5 4 3 2\n3 2 1\n4 1\n''') == '''\n3 2 1\n'''\n\nassert solution('''\n5 4 3 2\n3 2 1\n4 1\n''') == '''\n7 8\n5 4\n'''\n\nassert solution('''\n5 4 3 2\n3 2 1\n4 1\n6 7 8\n''') == '''\n'''\n\nassert solution('''\n5 4 3 2\n3 2 1\n4 1\n6 7 8\n''') == '''\n3 2 1\n'''\n\nassert solution('''\n5 4 3 2\n3 2 1\n4 1\n6 7 8\n''') == '''\n7 8\n5 4\n'''\n\nassert solution('''\n5 4 3 2\n3 2 1\n4 1\n6 7 8\n''') == '''\n3 2 1\n'''\n\nassert solution('''\n5 4 3 2\n3 2 1\n4 1\n6 7 8\n''') == '''\n7 8\n5 4\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == \"5\\n15\\n\"\nassert solution(1) == \"2\\n3\\n\"\nassert solution(100) == \"5\\n15\\n17\\n19\\n21\\n23\\n25\\n27\\n29\\n31\\n33\\n35\\n37\\n39\\n41\\n43\\n45\\n47\\n49\\n51\\n53\\n55\\n57\\n59\\n61\\n63\\n65\\n67\\n69\\n71\\n73\\n75\\n77\\n79\\n81\\n83\\n85\\n87\\n89\\n91\\n93\\n95\\n97\\n99\\n\"\nassert solution(\"1 2 3 4\") == \"2\\n4\\n\"\nassert solution(\"-1 2 -3\") == \"2\\n4\\n\"\nassert solution(\"1 2 3 4 -5\") == \"2\\n4\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 239
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 4 3 2 1\\n1 2 3 4 5\\n6 7 8 9 10') == ['5', '1', '6', '7', '8', '9', '10', '4', '2', '3', '1', '5']\n\nassert solution('5\\n1 2 3 4 5') == ['1', '2', '3', '4', '5']\n\nassert solution('5 6\\n1 2 3 4 5\\n6 7 8 9 10') == ['5', '1', '6', '7', '8', '9', '10', '4', '2', '3', '1', '5']\n\nassert solution('5 6\\n1 2 3 4 5\\n6 7 8 9 10') == ['5', '1', '6', '7', '8', '9', '10', '4', '2', '3', '1', '5']",
        "num_ids_2": 108,
        "num_ids_4": 246
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The solution for the given problem {input()} is incorrect. Please check the output and the input.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4 3 2\\n5 4 3 2\\n5 4 3 2') == '4 3 5 2'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\n5\\n3\\n6\\n\", \"Incorrect output.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2') == '5 4 3 2'\nassert solution('5\\n'\n                   '4\\n'\n                   '3\\n'\n                   '2') == '5 4 3 2'\nassert solution('5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2') == '5 4 3 2'\nassert solution('5\\n'\n                   '4\\n'\n                   '3\\n'\n                   '2\\n'\n                   '4\\n'\n                   '3\\n'\n                   '2\\n'\n                   '1') == '5 4 3 2 1'\nassert solution('5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n'\n                   '5 4 3 2\\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4\\n3\\n2\") == \"2\\n4\\n3\\n5\\n4\\n3\\n2\\n4\\n3\\n2\"\nassert solution(\"5\\n4\\n3\\n2\\n5\\n6\\n3\\n2\\n7\\n4\\n5\\n6\\n3\\n2\\n7\\n4\\n5\\n6\\n3\\n2\\n7\\n4\\n5\\n6\\n3\\n2\") == \"2\\n4\\n3\\n5\\n6\\n3\\n2\\n7\\n4\\n5\\n6\\n3\\n2\\n7\\n4\\n5\\n6\\n3\\n2\"",
        "num_ids_2": 185,
        "num_ids_4": 185
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\nID,MARKS,CLASS,NAME\\n1,80,Y,John\\n2,90,Y,Jane\\n3,85,Y,Alice\\n4,75,X,Bob\\n5,95,X,Charlie\\n\") == \"85.0\"\nassert solution(\"2\\nID,MARKS,CLASS,NAME\\n1,80,Y,John\\n2,90,Y,Jane\\n3,85,Y,Alice\\n4,75,X,Bob\\n5,95,X,Charlie\\n\") == \"90.0\"\nassert solution(\"3\\nID,MARKS,CLASS,NAME\\n1,80,Y,John\\n2,90,Y,Jane\\n3,85,Y,Alice\\n4,75,X,Bob\\n5,95,X,Charlie\\n\") == \"88.5\"\nassert solution(\"4\\nID,MARKS,CLASS,NAME\\n1,80,Y,John\\n2,90,Y,Jane\\n3,85,Y,Alice\\n4,75,X,Bob\\n5,95,X,Charlie\\n\") == \"77.0\"\nassert solution(\"5\\nID,MARKS,CLASS,NAME\\n1,80,Y,John\\n2,90,Y,Jane\\n3,85,Y,Alice\\n4,75,X,Bob\\n5,95,X,Charlie\\n\") == \"95.0\"\nassert solution(\"6\\nID,MARKS,CLASS,NAME\\n1,80,Y,John\\n2,90,Y,Jane\\n3,85,Y,Alice\\n4,75,X,Bob\\n5,95,X,Charlie\\n\") == \"85.0\"",
        "num_ids_2": 154,
        "num_ids_4": 308
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\nID, MARKS, CLASS, NAME\n1, 90, Computer Science, John\n2, 85, Mathematics, Jane\n3, 95, Chemistry, Mary\n\"\"\") == \"43.33\"\n\nassert solution(\"\"\"\n3\nID, MARKS, CLASS, NAME\n1, 80, Maths, John\n2, 90, Physics, Jane\n3, 75, Chemistry, Mary\n\"\"\") == \"28.33\"\n\nassert solution(\"\"\"\n3\nID, MARKS, CLASS, NAME\n1, 90, Maths, John\n2, 85, Physics, Jane\n3, 80, Chemistry, Mary\n\"\"\") == \"33.33\"\n\nassert solution(\"\"\"\n2\nID, MARKS, CLASS, NAME\n1, 85, Maths, Jane\n2, 90, Physics, John\n3, 95, Chemistry, Mary\n\"\"\") == \"50.00\"\n\nassert solution(\"\"\"\n2\nID, MARKS, CLASS, NAME\n1, 90, Maths, Jane\n2, 85, Physics, John\n\"\"\") == \"45.00\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\nID,MARKS,CLASS,NAME\n1,20,Math,John\n2,30,English,Jane\n3,10,Science,Sarah\n\"\"\") == \"50.0\"\n\nassert solution(\"\"\"\n3\nID,MARKS,CLASS,NAME\n1,20,Math,John\n2,30,English,Jane\n3,10,Science,Sarah\n\"\"\") == \"50.0\"\n\nassert solution(\"\"\"\n2\nID,MARKS,CLASS\n1,20,Math\n2,30,English\n3,10,Science\n\"\"\") == \"20.0\"\n\nassert solution(\"\"\"\n3\nID,MARKS,CLASS,NAME\n1,20,Math,John\n2,30,English,Jane\n3,10,Science,Sarah\n\"\"\") == \"50.0\"\n\nassert solution(\"\"\"\n2\nID,MARKS,CLASS\n1,20,Math\n2,30,English\n3,10,Science\n\"\"\") == \"20.0\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\nID MARKS CLASS NAME\nA 85 90s Male\nB 92 88s Female\nC 88 92s Male\n\"\"\") == 90",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == solution",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('-----\\n10,50,Mark,John\\n-----\\n20,60,Tut,Jane\\n-----\\n30,70,Eva,Alice\\n-----\\n40,80,Eva,Bob\\n-----\\n50,90,Eva,Charlie\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\n-----\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(0) == \"0.00\"\nassert solution(1) == \"0.00\"\nassert solution(10) == \"9.28\"\nassert solution(1000) == \"999.00\"",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0\\n\") == \"0.0\"\nassert solution(\"1\\nID,MARKS,CLASS,NAME\\n100,50,Y,John\\n101,60,Y,Jane\\n102,70,Y,Bob\\n\") == \"60.0\"\nassert solution(\"2\\nID,MARKS,CLASS,NAME\\n103,80,Y,Alice\\n104,90,Y,Bob\\n\") == \"85.0\"\nassert solution(\"3\\nID,MARKS,CLASS,NAME\\n105,100,Y,Charlie\\n106,110,Y,Dave\\n\") == \"90.0\"\nassert solution(\"4\\nID,MARKS,CLASS,NAME\\n107,120,Y,Eve\\n108,130,Y,Frank\\n\") == \"105.0\"\nassert solution(\"5\\nID,MARKS,CLASS,NAME\\n109,140,Y,Grace\\n110,150,Y,Henry\\n\") == \"110.0\"",
        "num_ids_2": 76,
        "num_ids_4": 178
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '11.0'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == \"50.0\"\nassert solution(15) == \"46.66666666666667\"\nassert solution(20) == \"55.0\"\nassert solution(25) == \"55.0\"\nassert solution(30) == \"60.0\"",
        "num_ids_2": 41,
        "num_ids_4": 69
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"Not Weird\"\nassert solution(\"16\") == \"Weird\"\nassert solution(\"23\") == \"Weird\"\nassert solution(\"34\") == \"Not Weird\"\nassert solution(\"41\") == \"Weird\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Weird\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test failed: solution({input()}) returned {solution(input())}, expected {output()}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"Not Weird\"\nassert solution(\"12\") == \"Weird\"\nassert solution(\"30\") == \"Not Weird\"\nassert solution(\"21\") == \"Weird\"\nassert solution(\"1000\") == \"Not Weird\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"Not Weird\"\nassert solution(\"6\") == \"Weird\"\nassert solution(\"17\") == \"Not Weird\"\nassert solution(\"21\") == \"Weird\"\nassert solution(\"25\") == \"Not Weird\"",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3') == 'Weird', \"Function should return Weird when input is 3\"\nassert solution('15') == 'Not Weird', \"Function should return Not Weird when input is 15\"\nassert solution('22') == 'Weird', \"Function should return Weird when input is 22\"\nassert solution('25') == 'Not Weird', \"Function should return Not Weird when input is 25\"\nassert solution('60') == 'Weird', \"Function should return Weird when input is 60\"",
        "num_ids_2": 50,
        "num_ids_4": 102
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5') == 'Not Weird'\nassert solution('7') == 'Weird'\nassert solution('11') == 'Not Weird'\nassert solution('13') == 'Weird'\nassert solution('17') == 'Not Weird'",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"Weird\"\nassert solution(\"21\") == \"Weird\"\nassert solution(\"12345\") == \"Not Weird\"\nassert solution(\"0\") == \"Not Weird\"",
        "num_ids_2": 23,
        "num_ids_4": 51
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"Weird\"\nassert solution(\"4\") == \"Not Weird\"\nassert solution(\"9\") == \"Weird\"\nassert solution(\"16\") == \"Not Weird\"\nassert solution(\"21\") == \"Weird\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"Not Weird\"\nassert solution(\"15\") == \"Not Weird\"\nassert solution(\"25\") == \"Weird\"\nassert solution(\"30\") == \"Weird\"\nassert solution(\"40\") == \"Not Weird\"\nassert solution(\"60\") == \"Not Weird\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n<bookstore>\n    <book id=\"1\">\n        <title>To Kill a Mockingbird</title>\n        <author>J.D. Salinger</author>\n        <price>39.99</price>\n    </book>\n    <book id=\"2\">\n        <title>Pride and Prejudice</title>\n        <author>George Orwell</author>\n        <price>45.99</price>\n    </book>\n</bookstore>\n''') == 12",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 285 # Incorrect solution - wrong code\nassert solution('''<root>\n   <item attr1=\"val1\" attr2=\"val2\" attr3=\"val3\">\n      <subitem attr4=\"val4\" attr5=\"val5\">\n         <subsubitem attr6=\"val6\">Text content</subsubitem>\n      </subitem>\n   </item>\n</root>''') == 285 # Correct solution",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input.txt').read()) == 45",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == 25, \"Score not equal to expected\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<html>\\n<head>\\n<title>Example Document</title>\\n</head>\\n<body>\\n<p>Hello, World!</p>\\n</body>\\n</html>\") == 14",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\nassert solution() == \"5\"\nassert solution() == \"10\"",
        "num_ids_2": 16,
        "num_ids_4": 25
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 5\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n  <element attr1=\\\"value1\\\" attr2=\\\"value2\\\" attr3=\\\"value3\\\" />\\n</root>\") == 3\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n  <element>\\n    <child1 attr1=\\\"value1\\\" attr2=\\\"value2\\\" />\\n    <child2 attr1=\\\"value1\\\" attr2=\\\"value2\\\" />\\n  </element>\\n</root>\") == 6\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n  <element attr1=\\\"value1\\\" attr2=\\\"value2\\\" attr3=\\\"value3\\\" />\\n  <element attr1=\\\"value1\\\" attr2=\\\"value2\\\" attr3=\\\"value3\\\" />\\n</root>\") == 15\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n  <element attr1=\\\"value1\\\" attr2=\\\"value2\\\" attr3=\\\"value3\\\" />\\n</root>\") == 0\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n  <element attr1=\\\"value1\\\" attr2=\\\"value2\\\" attr3=\\\"value3\\\" />\\n</root>\") == 0\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n</root>\") == 0",
        "num_ids_2": 131,
        "num_ids_4": 263
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''<book id=\"123\" title=\"Book Title\">\n        <author>John Doe</author>\n        <publisher>publisher</publisher>\n        <year>2022</year>\n        <price>49.99</price>\n        <description>This is a great book</description>\n        <tags>good, science fiction, fantasy</tags>\n        <pages>250</pages>\n    </book>''') == 42",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><root><name>John</name><age>30</age><gender>Male</gender><city>New York</city><address>123 Main St</address></root>\") == \"38\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><root><name>John</name><age>30</age><gender>Male</gender><city>New York</city><address>123 Main St</address><address>456 Oak St</address></root>\") == \"60\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><root><name>John</name><age>30</age><gender>Male</gender><city>New York</city><address>123 Main St</address><address>456 Oak St</address><address>789 Elm St</address></root>\") == \"75\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><root><name>John</name><age>30</age><gender>Male</gender><city>New York</city><address>123 Main St</address><address>456 Oak St</address><address>789 Elm St</address><address>111 Queen St</address></root>\") == \"90\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><root><name>John</name><age>30</age><gender>Male</gender><city>New York</city><address>123 Main St</address><address>456 Oak St</address><address>789 Elm St</address><address>111 Queen St</address><address>144 Park Ave</address></root>\") == \"105\"",
        "num_ids_2": 141,
        "num_ids_4": 326
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\\n\") == \"0.00\"\nassert solution(\"2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\\n1 2 3 4 5\\n\") == \"31.66\"\nassert solution(\"1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\\n1 2 3 4 6\\n\") == \"45.27\"\nassert solution(\"1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\\n1 2 3 4 7\\n\") == \"22.68\"\nassert solution(\"1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\\n1 2 3 4 8\\n\") == \"11.54\"\nassert solution(\"1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\\n1 2 3 4 9\\n\") == \"0.00\"",
        "num_ids_2": 135,
        "num_ids_4": 293
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5 6') == '35.0', \"Your code is not correct.\"\nassert solution('1 2 3 4 5 7') == '35.0', \"Your code is not correct.\"\nassert solution('1 2 3 4 5 8') == '35.0', \"Your code is not correct.\"\nassert solution('1 2 3 4 5 9') == '35.0', \"Your code is not correct.\"\nassert solution('1 2 3 4 5 10') == '35.0', \"Your code is not correct.\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5\") == \"36.28\", \"Test case 1 failed\"\nassert solution(\"6 7 8 9 10\") == \"35.71\", \"Test case 2 failed\"\nassert solution(\"1 1 1 1 1\") == \"0.0\", \"Test case 3 failed\"\nassert solution(\"1 -1 -1 -1 -1\") == \"180.0\", \"Test case 4 failed\"\nassert solution(\"2 2 2 2 2\") == \"90.0\", \"Test case 5 failed\"",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 1 2 3 4') == '90.0', \"The angle between the plane made by the points A, B, C and B, C, D in degrees(not radians) should be 90.0.\"\nassert solution('1 1 1 1 1') == '180.0', \"The angle between the plane made by the points A, B, C and B, C, D in degrees(not radians) should be 180.0.\"\nassert solution('1 0 0 1 1') == '0.0', \"The angle between the plane made by the points A, B, C and B, C, D in degrees(not radians) should be 0.0.\"\nassert solution('1 1 0 1 0') == '-45.0', \"The angle between the plane made by the points A, B, C and B, C, D in degrees(not radians) should be -45.0.\"",
        "num_ids_2": 114,
        "num_ids_4": 224
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.0\", \"Expected result: 0.0\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4 5\") == \"45.0\"\nassert solution(\"1 3 4 2 5\") == \"132.0\"\nassert solution(\"2 4 6 8 10\") == \"67.0\"\nassert solution(\"3 5 7 9 11\") == \"12.0\"",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '24.55', \"The correct output should be '24.55'.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 4 5\") == \"45.000\"\nassert solution(\"1 1 1 1\") == \"0.000\"\nassert solution(\"0 0 0 0\") == \"0.000\"\nassert solution(\"1 -1 0 0\") == \"90.000\"\nassert solution(\"-1 -1 0 0\") == \"270.000\"",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2.0 0.0 0.0 0.0 0.0 1.0 1.0 0.0 0.0 0.0') == '90.0', \"Test Case 1 failed\"\nassert solution('1.0 0.0 0.0 1.0 0.0 1.0 0.0 0.0 0.0 0.0') == '45.0', \"Test Case 2 failed\"\nassert solution('0.0 2.0 0.0 0.0 0.0 1.0 0.0 1.0 0.0 0.0') == '135.0', \"Test Case 3 failed\"\nassert solution('0.0 1.0 0.0 0.0 0.0 1.0 0.0 1.0 0.0 0.0') == '225.0', \"Test Case 4 failed\"\nassert solution('1.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0') == '90.0', \"Test Case 5 failed\"",
        "num_ids_2": 116,
        "num_ids_4": 234
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\napple\\nbanana\\norange\\n123\\napple\\nbanana\\norange\\n123\\napple\\nbanana\\norange\\n') == '5\\n4\\n2\\n2\\n1\\n'\nassert solution('5\\napple\\nbanana\\norange\\n123\\napple\\nbanana\\norange\\n123\\napple\\nbanana\\norange\\n') == '5\\n4\\n2\\n2\\n1\\n'\nassert solution('5\\napple\\nbanana\\norange\\n123\\napple\\nbanana\\norange\\n123\\napple\\nbanana\\norange\\n') == '5\\n4\\n2\\n2\\n1\\n'\nassert solution('5\\napple\\nbanana\\norange\\n123\\napple\\nbanana\\norange\\n123\\napple\\nbanana\\norange\\n') == '5\\n4\\n2\\n2\\n1\\n'\nassert solution('5\\napple\\nbanana\\norange\\n123\\napple\\nbanana\\norange\\n123\\napple\\nbanana\\norange\\n') == '5\\n4\\n2\\n2\\n1\\n'",
        "num_ids_2": 132,
        "num_ids_4": 264
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\\n1\\n2\\n3\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"The output for the test case is incorrect. The expected output is {expected_output}, but the function returned {solution(input())}.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\na b c\\nd e f\\ng h i j\\nj k l m\\nk n o p\\no q r s\\ns t u v\\nu w x y\\ny z') == '3'\nassert solution('1\\napple\\nbanana\\ncucumber') == '2'\nassert solution('2\\nhello\\nworld\\n') == '4'",
        "num_ids_2": 71,
        "num_ids_4": 89
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\napple\\norange\\nbanana\\ngrape\\n\") == \"2\\nbanana\\norange\\nbanana\\nbanana\\norange\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\napple\\nbanana\\nbanana\\ncherry\") == \"3\"\nassert solution(\"2\\ncat\\ndog\\n\") == \"0\"\nassert solution(\"4\\nhello\\nworld\\nhello\\n\") == \"3\"\nassert solution(\"2\\napple\\nbanana\\ncherry\") == \"2\"",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'The correct score is 3', \"Function should return 3, but it returns: {}\".format(solution(input()))\nassert solution(input()) == 'The correct score is 2', \"Function should return 2, but it returns: {}\".format(solution(input()))\nassert solution(input()) == 'The correct score is 1', \"Function should return 1, but it returns: {}\".format(solution(input()))\nassert solution(input()) == 'The correct score is 4', \"Function should return 4, but it returns: {}\".format(solution(input()))",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\nhello world\\npython\\napple\\npython\\nbanana\\n') == '2\\n'\nassert solution('2\\napple\\npython\\nbanana\\npython\\neven\\n') == '3\\n'\nassert solution('2\\nhello\\nworld\\npython\\nbanana\\npython\\napple\\n') == '2\\n'\nassert solution('2\\napple\\npython\\nbanana\\npython\\napple\\neven\\n') == '3\\n'\nassert solution('2\\napple\\npython\\nbanana\\npython\\nbanana\\neven\\n') == '4\\n'\n",
        "num_ids_2": 61,
        "num_ids_4": 127
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\napple\\n1\\nbanana\\n2\\norange\\n3\\npear\\n4\\npineapple\\n5\\nsalmon\") == \"2\"\nassert solution(\"2\\ncat\\n2\\ndog\\n1\\nElephant\\n3\\nbear\\n2\\ncattle\") == \"1\"\nassert solution(\"3\\nworld\\n1\\nHello\\n2\\nworld\\n1\\nworld\") == \"1\"\nassert solution(\"4\\nbird\\n2\\nElephant\\n2\\ncat\\n1\\nElephant\") == \"1\"\nassert solution(\"5\\napple\\n3\\nbanana\\n3\\norange\\n1\\nsalmon\") == \"2\"",
        "num_ids_2": 86,
        "num_ids_4": 152
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"I\") == True\nassert solution(\"IV\") == True\nassert solution(\"IX\") == True\nassert solution(\"III\") == True\nassert solution(\"IV\") == False\nassert solution(\"IX\") == False\nassert solution(\"III\") == False\nassert solution(\"VIII\") == True\nassert solution(\"MCMXCIV\") == True\nassert solution(\"MCMLXXXCIV\") == False\nassert solution(\"MCMLXXXIV\") == False\nassert solution(\"MCMXCIX\") == True\nassert solution(\"MCMXCVIII\") == True\nassert solution(\"MCMXCIV\") == False\nassert solution(\"MCMXCVIII\") == True\nassert solution(\"MCMXCIV\") == True\nassert solution(\"MMMXIV\") == True\nassert solution(\"MMMCMXCIV\") == True\nassert solution(\"MMMCMXCIX\") == True\nassert solution(\"MMMCCXXXIV\") == True\nassert solution(\"MMMCCXCIV\") == True\nassert solution(\"MMMMMCMXCIX\") == False\nassert solution(\"MMMCCXXXIV\") == True\nassert solution(\"MMMCCXCIV\") == True\nassert solution(\"MMMMMCMXCIX\") == True\nassert solution(\"MMMCMXCIV\") == True\nassert solution(\"MMMMMCMXCIX\") == False",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"MCMXCIV\") == True, \"Test Case 1\"\nassert solution(\"MMMIV\") == False, \"Test Case 2\"\nassert solution(\"MCMLXXXVII\") == True, \"Test Case 3\"\nassert solution(\"MMMMCMXCIX\") == False, \"Test Case 4\"\nassert solution(\"MCMXCIX\") == False, \"Test Case 5\"",
        "num_ids_2": 35,
        "num_ids_4": 73
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"IV\") == True\nassert solution(\"VIII\") == True\nassert solution(\"IX\") == True\nassert solution(\"XXX\") == True\nassert solution(\"XL\") == False\n\nimport re",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"I\") == True\nassert solution(\"IV\") == True\nassert solution(\"IX\") == True\nassert solution(\"XL\") == True\nassert solution(\"XC\") == True\nassert solution(\"CD\") == True\nassert solution(\"CM\") == True",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"MCMXCIV\") == True\nassert solution(\"MMIV\") == False\nassert solution(\"MMM\") == False\nassert solution(\"MCDXCIV\") == True",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"MCMXCIV\") == \"True\"\nassert solution(\"MCMLXXXIX\") == \"True\"\nassert solution(\"MMMCMXCIV\") == \"True\"\nassert solution(\"MMMIV\") == \"False\"\nassert solution(\"X\") == \"False\"",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"I\") == \"True\"\nassert solution(\"IV\") == \"True\"\nassert solution(\"IX\") == \"True\"\nassert solution(\"X\") == \"False\"\nassert solution(\"XX\") == \"False\"\nassert solution(\"XXX\") == \"False\"\nassert solution(\"XC\") == \"False\"\nassert solution(\"CD\") == \"False\"\nassert solution(\"D\") == \"False\"\nassert solution(\"CM\") == \"False\"\nassert solution(\"M\") == \"True\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"MCMLXXXVIII\") == True\nassert solution(\"MCMLXXXIX\") == True\nassert solution(\"MCMXCIV\") == True\nassert solution(\"MMMCMXCIV\") == False\nassert solution(\"MXXIV\") == False\nassert solution(\"XXXIX\") == False\nassert solution(\"IV\") == False",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"IV\") == True, \"Test case 1 failed\"\nassert solution(\"IX\") == True, \"Test case 2 failed\"\nassert solution(\"LVIII\") == False, \"Test case 3 failed\"\nassert solution(\"MCMXCIV\") == True, \"Test case 4 failed\"\nassert solution(\"MMMCMXCIX\") == False, \"Test case 5 failed\"",
        "num_ids_2": 32,
        "num_ids_4": 69
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"MCMXCIV\") == True\nassert solution(\"XCIV\") == True\nassert solution(\"XIX\") == True\nassert solution(\"MMM\") == False\nassert solution(\"MMMIV\") == False\nassert solution(\"MMMM\") == False\nassert solution(\"MMMCMXCIX\") == False",
        "num_ids_2": 22,
        "num_ids_4": 39
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9186753095\\n9176543210\\n9134567890\\n9987654321\\n1234567890\\n\") == \"+91 91 8675 3095\\n+91 91 7654 3210\\n+91 91 3456 7890\\n+91 99 8765 4321\\n+91 123 4567 890\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 155,
        "num_ids_4": 155
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1234567890123456\") == \"+91 1234567890\"\nassert solution(\"9112345678901234\") == \"+91 1234567890\"\nassert solution(\"09112345678901234\") == \"+91 1234567890\"\nassert solution(\"+9112345678901234\") == \"+91 1234567890\"\nassert solution(\"01234567890123456\") == \"0 1234567890\"\nassert solution(\"91123456789012345\") == \"0 1234567890\"\nassert solution(\"091123456789012345\") == \"0 1234567890\"",
        "num_ids_2": 74,
        "num_ids_4": 149
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"91234567890\\n9876543210\\n1234567890\\n+91 9876543210\") == \"91 9876543210 91234567890\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter the number of mobile numbers: \")) == '91 xxxxx xxxxx\\n91 123456789\\n91 0987654321\\n91 1234567890\\n91 09876543210'",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1234567890\") == \"+91 1234567890\"\nassert solution(\"9876543210\") == \"+91 9876543210\"\nassert solution(\"0987654321\") == \"+91 0987654321\"\nassert solution(\"123456789\") == \"+91 123456789\"\nassert solution(\"1234567891\") == \"+91 1234567891\"\n",
        "num_ids_2": 62,
        "num_ids_4": 122
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9111222333444555\\n9123456789012\\n09876543210\") == \"+91 9123456789012 09876543210\\n+91 111222333444555\"\nassert solution(\"0123456789012\\n123456789012\\n23456789012\") == \"+91 23456789012 123456789012\"\nassert solution(\"123456789012\\n123456789012\\n123456789012\") == \"+91 123456789012 123456789012\"\nassert solution(\"9111111111111111\\n9111111111111111\\n9111111111111111\\n9111111111111111\\n9111111111111111\") == \"+91 9111111111111111 9111111111111111 9111111111111111 9111111111111111\"\n",
        "num_ids_2": 176,
        "num_ids_4": 418
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"91xxxxxxxx xxxxxxxxx\\n91xxxxxxxx xxxxxxxxx\\n91xxxxxxxx xxxxxxxxx\\n91xxxxxxxx xxxxxxxxx\\n91xxxxxxxx xxxxxxxxx\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('91 92 7555 9876\\n91 092 1234 5678\\n1234567890\\n') == '+91 1234567890\\n+91 567890\\n+91 09212345678\\n'\n\nassert solution('91\\n92\\n7555\\n9876\\n') == '+91 92 7555 9876\\n+91 092 1234 5678\\n+91 1234567890\\n'\n\nassert solution('1234567890\\n') == '+91 1234567890\\n+91 567890\\n+91 09212345678\\n'\n\nassert solution('') == ''\n\nassert solution('91\\n') == '+91\\n'\n\nassert solution('91\\n92\\n93\\n94\\n95\\n') == '+91 92 93 94 95\\n'",
        "num_ids_2": 179,
        "num_ids_4": 249
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1234567890\") == \"+91 1234567890\"\nassert solution(\"9876543210\") == \"+91 9876543210\"\nassert solution(\"911234567890\") == \"+91 11234567890\"\nassert solution(\"987654321\") == \"+91 987654321\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 62,
        "num_ids_4": 125
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nalpha 20 30 40\\nbeta 30 50 70\\nquery_name beta\\n\") == \"50\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3\n    3alpha 20\n    3beta 30\n    3alpha 40\n    4beta 50\n    5beta 70\n    query_name 5beta\n    \"\"\"\n) == \"50\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    3alpha 20\n    3beta 30\n    3alpha 40\n    4beta 50\n    5beta 70\n    query_name alpha\n    \"\"\"\n) == \"15\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    3alpha 20\n    3beta 30\n    3alpha 40\n    4beta 50\n    5beta 70\n    query_name beta\n    \"\"\"\n) == \"50\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    3alpha 20\n    3beta 30\n    3alpha 40\n    4beta 50\n    5beta 70\n    query_name gamma\n    \"\"\"\n) == \"No student found with name 'gamma'.\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases:\\n# example test case\\n# example test case\\n# example test case\\n# example test case\\n# example test case'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '50.0', 'Solution should return the average of marks for given student'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r'''\n3\nalpha 20 30 40\nbeta 30 50 70\ngamma 40 60 80\ndelta 50 70 90\nquery_name beta\n''') == '50'\nprint(\"All tests pass\")",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nalpha\\n30\\nbeta\\n40\\nquery_name\\nquery_name\\n\") == \"The average of the marks obtained by the particular student correct to 2 decimal places.\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test Failed: Expected output: {output()}, Received: {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    2\n    100 80 90\n    10\n    beta\n    \"\"\") == \"50.00\\n\"\n\nassert solution(\"\"\"\n    2\n    100 80 90\n    10\n    alpha\n    \"\"\") == \"NaN\\n\"\n\nassert solution(\"\"\"\n    2\n    100 80 90\n    10\n    x\n    \"\"\") == \"NaN\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"The average of the marks obtained by the particular student correct to 2 decimal places.\\n\", \"Test failed\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'The average of the marks obtained by the particular student correct to 2 decimal places.'\nprint('The average of the marks obtained by the particular student correct to 2 decimal places.')",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\nHenry Davids\\nGeorge Washington\\nMary George\\nDavid Johnson\\nJohn Doe\\n') == 'Mr. Henry Davids\\nMs. Mary George\\n'\nassert solution('3\\nAdam\\nAmy\\nEve\\nJack') == 'Adam\\nAmy\\nEve\\nJack'",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\nJohn\\n25\\nF\\nSarah\\n30\\nM\\n\") == \"Mr. Sarah\\nMs. John\\nMr. Henry Davids\\nMs. Mary George\"\nassert solution(\"2\\nAlice\\n22\\nM\\nBob\\n28\\nF\\nElizabeth\\n35\\nM\\n\") == \"Ms. Alice\\nMr. Bob\\nMr. Elizabeth\"\nassert solution(\"3\\nBob\\n28\\nM\\nAlice\\n25\\nF\\nElizabeth\\n30\\nM\\n\") == \"Mr. Alice\\nMr. Bob\\nMs. Elizabeth\\nMr. Henry Davids\\nMs. Mary George\"\nassert solution(\"4\\nElizabeth\\n28\\nF\\nAlice\\n20\\nM\\nBob\\n30\\nM\\n\") == \"Ms. Bob\\nMr. Elizabeth\\nMr. Alice\\nMr. Henry Davids\\nMs. Mary George\"\nassert solution(\"5\\nAlice\\n25\\nM\\nBob\\n28\\nF\\nElizabeth\\n30\\nM\\nCharlie\\n29\\nF\\nDaniel\\n32\\nF\\n\") == \"Ms. Charlie\\nMr. Bob\\nMr. Daniel\\nMs. Elizabeth\\nMr. Alice\\nMr. Henry Davids\\nMs. Mary George\"",
        "num_ids_2": 118,
        "num_ids_4": 272
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nHenry Davids\\nMary George\\nMary Jane\\nJohn Doe\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\nMs. Mary Jane\\nJohn Doe\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nJohn Smith 25\\nJane Doe 30\\nAlice Johnson 28\\nBob Johnson 35\\n\") == \"Mr. John Smith\\nMr. Jane Doe\\nMs. Alice Johnson\\nMs. Bob Johnson\"\nassert solution(\"2\\nMark Johnson 22\\nPaul Johnson 33\\nMark Lee 26\\n\") == \"Mr. Mark Johnson\\nMs. Paul Johnson\\nMs. Mark Lee\"\nassert solution(\"1\\nAlexander Palomino 22\\nDaniel Palomino 33\\n\") == \"Mr. Alexander Palomino\\nMs. Daniel Palomino\"\nassert solution(\"1\\nJackson Johnson 25\\nEmily Lee 30\\n\") == \"Mr. Jackson Johnson\\nMs. Emily Lee\"\nassert solution(\"1\\nDavid Davis 25\\nEmily Lee 30\\n\") == \"Mr. David Davis\\nMs. Emily Lee\"",
        "num_ids_2": 120,
        "num_ids_4": 207
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Mr. Henry Davids\\nMs. Mary George\\n'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Henry Davids 25 1 M\") == \"Mr. Henry Davids\\n\", \"Test case 1\"\nassert solution(\"Mary George 30 1 F\\nGeorge Brown 25 1 F\\nJane Doe 40 0 M\\n\") == \"Ms. Jane Doe\\nMs. George Brown\\nMr. Henry Davids\\n\", \"Test case 2\"\nassert solution(\"Jack 20 0 F\\nJane Doe 35 1 F\\nEmily Johnson 25 1 M\\n\") == \"Mr. Jane Doe\\nMr. Emily Johnson\\nMs. Jack\\n\", \"Test case 3\"\nassert solution(\"John 40 0 M\\nSara 35 1 F\\nMary 25 1 F\\nEmily 30 1 F\\n\") == \"Ms. Sara\\nMr. John\\nMr. Mary\\n\", \"Test case 4\"\nassert solution(\"Tom 20 1 F\\nJane Doe 30 1 F\\n\") == \"Mr. Jane Doe\\n\", \"Test case 5\"",
        "num_ids_2": 106,
        "num_ids_4": 242
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\nMary George 30 M\\nJohn Smith 25 F\\nAlex 40 M\\nJack 35 F') == 'Mr. Henry Davids\\nMs. Mary George\\n'\nassert solution('2\\nJohn Smith 25 F\\nAlex 40 M\\nJack 35 F\\nSarah 28 M') == 'Ms. Mary George\\nMr. Henry Davids\\n'\nassert solution('3\\nMary George 30 M\\nJohn Smith 25 F\\nAlex 40 M\\nJack 35 F') == 'Ms. Mary George\\nMr. Henry Davids\\n'\nassert solution('4\\nJohn Smith 25 F\\nAlex 40 M\\nJack 35 F\\nSarah 28 M') == 'Ms. Mary George\\nMr. Henry Davids\\n'\nassert solution('5\\nMary George 30 M\\nJohn Smith 25 F\\nAlex 40 M\\nJack 35 F') == 'Ms. Mary George\\nMr. Henry Davids\\n'",
        "num_ids_2": 114,
        "num_ids_4": 228
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\nMark\\nJohn\\nMary\\nJohn\\nHenry\\nJane\\nSarah\\n') == 'Mr. Henry Davids\\nMr. Mary George\\nMs. Mary George\\nMs. Sarah John\\nMs. John Henry\\nMs. Jane Sarah\\nMr. Mark John\\nMr. Sarah Henry\\nMr. Jane Mary\\n'",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nJohn Doe 35 M\\nJane Doe 31 F\\n\") == \"Mr. Henry Davids\\nMs. Mary George\"\nassert solution(\"3\\nAlice 28 M\\nBob 26 F\\nCharlie 30 M\\n\") == \"Ms. Mary George\\nMr. Henry Davids\\nMs. Mary George\"\nassert solution(\"2\\nEve 32 M\\nMary 27 F\\n\") == \"Mr. Henry Davids\\nMr. Henry Davids\"\nassert solution(\"1\\nAlice 28 M\\n\") == \"Mr. Henry Davids\"\nassert solution(\"1\\n\") == \"Mr. Henry Davids\"",
        "num_ids_2": 99,
        "num_ids_4": 167
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\nHenry\\nDavids\\nMary\\nGeorge\\n') == 'Mr. Henry Davids\\nMs. Mary George\\n'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n2\\n3\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution(\"1\\n1\\n2\\n4\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 2]]\nassert solution(\"1\\n1\\n2\\n3\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nassert solution(\"1\\n1\\n2\\n3\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2]]",
        "num_ids_2": 212,
        "num_ids_4": 442
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n2\\n3\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"\nassert solution(\"1\\n1\\n2\\n3\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"",
        "num_ids_2": 162,
        "num_ids_4": 162
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 2 3\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\"\nassert solution(\"1 1 2 3\\n4 4 4 4\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\"\nassert solution(\"2 2 2 2\\n4 4 4 4\") == \"[[0,0,0],[0,0,1],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[2,0,0],[2,0,1],[2,1,0],[2,1,1],[2,2,0],[2,2,1],[2,2,2]]\"\nassert solution(\"1 2 3 4\\n4 4 4 4\") == \"[[0,0,0],[0,1,0],[0,2,0],[0,3,0],[0,0,1],[0,1,1],[0,2,1],[0,3,1],[0,0,2],[0,1,2],[0,2,2],[0,3,2],[1,0,0],[1,1,0],[1,2,0],[1,3,0],[1,0,1],[1,1,1],[1,2,1],[1,3,1],[1,0,2],[1,1,2],[1,2,2],[1,3,2],[2,0,0],[2,1,0],[2,2,0],[2,3,0],[2,0,1],[2,1,1],[2,2,1],[2,3,1],[2,0,2],[2,1,2],[2,2,2],[2,3,2],[3,0,0],[3,1,0],[3,2,0],[3,3,0],[3,0,1],[3,1,1],[3,2,1],[3,3,1],[3,0,2],[3,1,2],[3,2,2],[3,3,2]]\"\nassert solution(\"1 2 3 4\\n1 2 3 4\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[0,2,0],[0,2,1],[0,2,2],[0,3,0],[0,3,1],[0,3,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2],[1,2,0],[1,2,1],[1,2,2],[1,3,0],[1,3,1],[1,3,2],[2,0,0],[2,0,1],[2,0,2],[2,1,0],[2,1,1],[2,1,2],[2,2,0],[2,2,1],[2,2,2],[2,3,0],[2,3,1],[2,3,2],[3,0,0],[3,0,1],[3,0,2],[3,1,0],[3,1,1],[3,1,2],[3,2,0],[3,2,1],[3,2,2],[3,3,0],[3,3,1],[3,3,2]]\"\nassert solution(\"2 2 2 2\\n1 2 3 4\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[0,2,0],[0,2,1],[0,2,2],[0,3,0],[0,3,1],[0,3,2],[1,0,0],[1,0",
        "num_ids_2": 181,
        "num_ids_4": 609
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n2\\n3') == [['0', '0', '0'], ['0', '0', '1'], ['0', '0', '2'], ['0', '1', '0'], ['0', '1', '1'], ['0', '1', '2'], ['1', '0', '0'], ['1', '0', '1'], ['1', '0', '2'], ['1', '1', '0'], ['1', '1', '1'], ['1', '1', '2']]\nassert solution('1\\n1\\n2\\n3\\n4') == [['0', '0', '0'], ['0', '0', '1'], ['0', '0', '2'], ['0', '1', '0'], ['0', '1', '1'], ['0', '1', '2'], ['1', '0', '0'], ['1', '0', '1'], ['1', '0', '2'], ['1', '1', '0'], ['1', '1', '1'], ['1', '1', '2'], ['0', '0', '3'], ['0', '0', '4'], ['0', '1', '3'], ['0', '1', '4'], ['1', '0', '3'], ['1', '0', '4'], ['1', '1', '3'], ['1', '1', '4']]\nassert solution('1\\n1\\n2\\n3\\n4\\n5') == [['0', '0', '0'], ['0', '0', '1'], ['0', '0', '2'], ['0', '1', '0'], ['0', '1', '1'], ['0', '1', '2'], ['1', '0', '0'], ['1', '0', '1'], ['1', '0', '2'], ['1', '1', '0'], ['1', '1', '1'], ['1', '1', '2'], ['0', '0', '3'], ['0', '0', '4'], ['0', '1', '3'], ['0', '1', '4'], ['1', '0', '3'], ['1', '0', '4'], ['1', '1', '3'], ['1', '1', '4'], ['0', '0', '5'], ['0', '1', '5'], ['1', '0', '5'], ['1', '1', '5']]\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == [['0', '0', '0'], ['0', '0', '1'], ['0', '0', '2'], ['0', '1', '0'], ['0', '1', '1'], ['0', '1', '2'], ['1', '0', '0'], ['1', '0', '1'], ['1', '0', '2'], ['1', '1', '0'], ['1', '1', '1'], ['1', '1', '2'], ['0', '0', '3'], ['0', '0', '4'], ['0', '1', '3'], ['0', '1', '4'], ['1', '0', '3'], ['1', '0', '4'], ['1', '1', '3'], ['1', '1', '4'], ['0', '0', '5'], ['0', '1', '5'], ['1', '0', '5'], ['1', '1', '5'], ['0', '0', '6'], ['0', '1', '6'], ['1', '0', '6'], ['1', '1', '6']]\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == [['0', '0', '0'], ['0', '0', '1'], ['0', '0', '2'], ['0', '1', '0'], ['0', '1', '1'], ['0', '1', '2'], ['1', '0', '0'], ['1', '0', '1'], ['1', '0', '2'], ['1', '1', '0'], ['1', '1', '1'], ['1', '1', '2'], ['0', '0', '3'], ['0', '0', '4'], ['0', '1', '3'], ['0', '1', '4'], ['1', '0', '3'], ['1', '0', '4'], ['1', '1",
        "num_ids_2": 323,
        "num_ids_4": 835
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n2\\n3\") == [[0,0,0], [0,0,1], [0,0,2], [0,1,0], [0,1,1], [0,1,2], [1,0,0], [1,0,1], [1,1,0], [1,1,1], [1,1,2]]\nprint([i for i in range(x*y*z) if i not in [[0,0,0], [0,0,1], [0,0,2], [0,1,0], [0,1,1], [1,0,0], [1,0,1], [1,1,0], [1,1,2]]])",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('x = 1\\ny = 1\\nz = 2\\nn = 3\\n') == '\\n'.join(['[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]'])\nprint('All permutations of [i,j,k] are:')\nprint('[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]')\nprint('Print an array of the elements that do not sum to n = 3')\nprint('[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]')",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: Expected output is {expected_output}, but got {solution(input())}\"\n\nfrom itertools import permutations",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\"\"\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 2 3\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\"\nassert solution(\"1 1 2 3\\n4 5 6 7\\n8 9 10 11\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\"\nassert solution(\"1 1 2 3\\n4 5 6 7\\n8 9 10 11\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"\nassert solution(\"1 1 2 3\\n4 5 6 7\\n8 9 10 11\\n8 9 10 11\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"",
        "num_ids_2": 198,
        "num_ids_4": 399
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1+1i\") == \"1.000+0.000i\"\nassert solution(\"-1+1i\") == \"1.000-0.000i\"\nassert solution(\"123+456i\") == \"123.000+456.000i\"\nassert solution(\"2.34+5.67i\") == \"2.341+5.670i\"\nassert solution(\"0+0i\") == \"0.000+0.000i\"\nassert solution(\"-0+0i\") == \"0.000-0.000i\"",
        "num_ids_2": 48,
        "num_ids_4": 110
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 + 4i\") == \"3+4i\"\nassert solution(\"2 - 5i\") == \"2-5i\"\nassert solution(\"2 * 3i\") == \"2*3i\"\nassert solution(\"5 / 2i\") == \"2+3i\"\nassert solution(\"5 % 2i\") == \"1+1i\"\nassert solution(\"3 + 4i - 5i\") == \"3-10i\"\nassert solution(\"2 + 3i * 4i\") == \"6-9i\"\nassert solution(\"5 + 0.0000000001i\") == \"5+0.000000000001i\"\nassert solution(\"0.00 + 0.00i\") == \"0.00+0.00i\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1+1i\") == \"2.00+2.00i\"\nassert solution(\"-1+1i\") == \"0.00+1.00i\"\nassert solution(\"2+2i\") == \"4.00+4.00i\"\nassert solution(\"-2+2i\") == \"0.00+2.00i\"\nassert solution(\"1+2i\") == \"1.00+2.00i\"\nassert solution(\"-1+2i\") == \"-1.00+2.00i\"\nassert solution(\"1+1i\") == \"1.00+0.00i\"\nassert solution(\"1+2i\") == \"3.00+1.00i\"\nassert solution(\"1+2i\") == \"1.00+2.00i\"\nassert solution(\"1+2i\") == \"1.00+2.00i\"\nassert solution(\"1+2i\") == \"1.00+2.00i\"\nassert solution(\"1+2i\") == \"1.00+2.00i\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed for input: {}, expected output: {}, actual output: {}\".format(input(), output(), solution(input()))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2+3i\") == \"2.00+3.00i\", \"The output should be 2.00+3.00i\"\nassert solution(\"3-2i\") == \"3.00-2.00i\", \"The output should be 3.00-2.00i\"\nassert solution(\"4*5i\") == \"20.00+4.00i\", \"The output should be 20.00+4.00i\"\nassert solution(\"9/2i\") == \"4.00+0.00i\", \"The output should be 4.00+0.00i\"\nassert solution(\"5%3i\") == \"1.00+0.00i\", \"The output should be 1.00+0.00i\"\n",
        "num_ids_2": 78,
        "num_ids_4": 158
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"1.1+2.2i\") == \"3.3-1.1i\"\nassert solution(stdin=\"2.0-3.0i\") == \"1.0+2.0i\"\nassert solution(stdin=\"2.0*3.0i\") == \"6.0-9.0i\"\nassert solution(stdin=\"1.0/3.0i\") == \"0.3333333333333333i\"\nassert solution(stdin=\"1.0+0.0i\") == \"1.0+0.0i\"\nassert solution(stdin=\"0.0+1.0i\") == \"0.0+1.0i\"",
        "num_ids_2": 52,
        "num_ids_4": 115
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1+2i\") == \"3+4i\\n\"\nassert solution(\"-1-2i\") == \"1+4i\\n\"\nassert solution(\"2*3i\") == \"6+9i\\n\"\nassert solution(\"5/2i\") == \"2.5+1.0i\\n\"\nassert solution(\"3%2i\") == \"1+1i\\n\"\nassert solution(\"1+2i\") == \"3+4i\\n\"\nassert solution(\"1+2i\") == \"3+4i\\n\"\nassert solution(\"1+2i\") == \"3+4i\\n\"\nassert solution(\"1+2i\") == \"3+4i\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1+2i\") == \"3.00+0.00i\"\nassert solution(\"1-2i\") == \"-3.00+0.00i\"\nassert solution(\"1*2i\") == \"3.00+0.00i\"\nassert solution(\"1/2i\") == \"0.50-0.25i\"\nassert solution(\"2+3i\") == \"5.00+2.00i\"\nassert solution(\"2-3i\") == \"5.00-2.00i\"\nassert solution(\"2*3i\") == \"5.00+6.00i\"\nassert solution(\"2/3i\") == \"1.00-0.33i\"\nassert solution(\"3+4i\") == \"7.00+4.00i\"\nassert solution(\"3-4i\") == \"5.00-4.00i\"\nassert solution(\"3*4i\") == \"12.00+8.00i\"\nassert solution(\"3/4i\") == \"1.00-1.00i\"\nassert solution(\"4+5i\") == \"11.00+5.00i\"\nassert solution(\"4-5i\") == \"11.00-5.00i\"\nassert solution(\"4*5i\") == \"22.00+10.00i\"\nassert solution(\"4/5i\") == \"0.25+0.25i\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"2+3i\"\nassert solution(\"-2 3\") == \"-2+3i\"\nassert solution(\"2 -3\") == \"2-3i\"\nassert solution(\"-2 -3\") == \"-2-3i\"\nassert solution(\"2 4+5i\") == \"2+4i\"\nassert solution(\"-2 4-5i\") == \"-2-4i\"\nassert solution(\"2 -4+5i\") == \"2-4i\"\nassert solution(\"-2 -4-5i\") == \"-2+4i\"\nassert solution(\"2 0+0i\") == \"2+0i\"\nassert solution(\"-2 0-0i\") == \"-2+0i\"\nassert solution(\"2 0+0i\") == \"2+0i\"\nassert solution(\"-2 0-0i\") == \"-2+0i\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 + 2i\") == \"3.0000000000000002i\"\nassert solution(\"1 - 2i\") == \"-1.0000000000000002i\"\nassert solution(\"1 * 2i\") == \"2.0000000000000003i\"\nassert solution(\"1 / 2i\") == \"0.5000000000000002i\"\nassert solution(\"5 - 2i\") == \"-1.0000000000000002i\"\nassert solution(\"5 * 2i\") == \"10.0000000000000002i\"\nassert solution(\"5 / 2i\") == \"2.0000000000000002i\"\nassert solution(\"5 % 2i\") == \"-1i\"\nassert solution(\"-1 + 2i\") == \"-3.0000000000000002i\"\nassert solution(\"-1 - 2i\") == \"3.0000000000000002i\"\nassert solution(\"-1 * 2i\") == \"-2.0000000000000003i\"\nassert solution(\"-1 / 2i\") == \"-0.5000000000000002i\"\nassert solution(\"-5 - 2i\") == \"1.0000000000000002i\"\nassert solution(\"-5 * 2i\") == \"-20.0000000000000002i\"\nassert solution(\"-5 / 2i\") == \"-2.0000000000000002i\"\nassert solution(\"-5 % 2i\") == \"1i\"\nassert solution(\"1 + 0i\") == \"1.0000000000000002i\"\nassert solution(\"0 + 0i\") == \"0.00000000000000000i\"\nassert solution(\"1 - 0i\") == \"-1.0000000000000002i\"\nassert solution(\"0 - 0i\") == \"0.00000000000000000i\"\nassert solution(\"1 * 0i\") == \"0.00000000000000000i\"\nassert solution(\"0 * 0i\") == \"0.00000000000000000i\"\nassert solution(\"1 / 0i\") == \"0.00000000000000000i\"\nassert solution(\"0 / 0i\") == \"0.00000000000000000i\"\nassert solution(\"1 % 0i\") == \"0.00000000000000000i\"\nassert solution(\"0 % 0i\") == \"0.00000000000000000i\"\nassert solution(\"1 + 1i\") == \"2.0000000000000003i\"\nassert solution(\"1 - 1i\") == \"-1.0000000000000002i\"\nassert solution(\"1 * 1i\") == \"1.0000000000000000i\"\nassert solution(\"1 / 1i\") == \"1.0000000000000000i\"\nassert solution(\"1 % 1i\") == \"0.00000000000000000i\"\nassert solution(\"-1 + 1i\") == \"-2.0000000000000003i\"\nassert solution(\"-1 - 1i\") == \"1.000000000000",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\", \"Test 1\"\nassert solution(\"aaa\\nbbb\") == \"aaaabbb\", \"Test 2\"\nassert solution(\"ccc\\nddd\") == \"ccdded\", \"Test 3\"\nassert solution(\"zzz\\naaa\") == \"zzzaaa\", \"Test 4\"\nassert solution(\"zzz\\nzzz\") == \"zzzzzz\", \"Test 5\"",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\n\nassert solution(\"\") == \"xyz\"\nassert solution(\" \") == \"xyz\"\nassert solution(\"xy\") == \"xyz\"\nassert solution(\"xaybzc\") == \"xyz\"\n\nfor i in range(1, 51):\n    assert solution(\"abc\" * i) == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 43
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\nassert solution(\"xyzxyzxyz\") == \"xaybzc\"\nassert solution(\"abcabcabc\") == \"xaybzc\"\nassert solution(\"def\") == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\\n\"\nassert solution(\"xyz\\n\\n\\nabc\") == \"xaybzc\\n\"\nassert solution(\"xyz\\n\\t\\t\\tabc\") == \"xaybzc\\n\"\nassert solution(\"xyz\\n\\t\\t\\ta\\n\\n\\ta\\n\\t\\ta\") == \"xaybzc\\n\"\nassert solution(\"xyz\\n\\t\\t\\ta\\n\\n\\ta\\n\\t\\tb\") == \"xaybzc\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 99
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"01B0\") == \"00\", \"The function should return '00' when given '01B0' as input.\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('01B0') == '00', \"The solution is incorrect\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"01B0\") == \"00\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"01B0\") == \"00\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"0000\") == \"00\"\nassert solution(\"0010\") == \"10\"\nassert solution(\"00001\") == \"001\"\nassert solution(\"0101B\") == \"101B\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"01B0\") == \"00\", \"Testcase 1 failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"01B0\") == \"00\", \"The correct answer is '00'.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('01B0') == '00'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"01B0\") == \"00\", \"Test case failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"01B0\") == \"00\", \"The correct answer is '00'.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4\\n'\nassert solution('5\\n1000000000 1 5 4 3') == '5\\n'\nassert solution('5\\n5 1 5 4 3') == '4\\n'\nassert solution('5\\n2 1 5 4 3 4 5') == '4\\n'\nassert solution('5\\n2 1 5 4 3 5 4') == '4\\n'\nassert solution('5\\n2 1 5 4 3 4 5 4') == '4\\n'",
        "num_ids_2": 55,
        "num_ids_4": 105
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\\n\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '4\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 5 4 3\\n\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\"\nprint(\"The minimum total height of the stools needed to meet the goal is 4.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\n\"\nassert solution(\"10\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"7\\n1 2 1 2 3\") == \"3\\n\"\nassert solution(\"3\\n2 1 1 2\") == \"2\\n\"\nassert solution(\"7\\n2 1 1 2 3\") == \"4\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 91
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2 1\") == \"2\"\nassert solution(\"2\\n2 1 3\") == \"3\"\nassert solution(\"3\\n3 2 4\") == \"4\"\n",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"A\\n\", \"Expected A, got {} instead\".format(solution(input()))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aca\") == \"A\", \"Invalid Output\"\nassert solution(\"accc\") == \"C\", \"Invalid Output\"\nassert solution(\"ca\") == \"A\", \"Invalid Output\"",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aca') == 'A', 'Test failed'\nassert solution('accc') == 'B', 'Test failed'\nassert solution('ca') == 'C', 'Test failed'",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aca') == 'A', \"Expected 'A', but got '{}' instead.\".format(solution('aca'))  # Test case 1\nassert solution('accc') == 'B', \"Expected 'B', but got '{}' instead.\".format(solution('accc'))  # Test case 2\nassert solution('ca') == 'C', \"Expected 'C', but got '{}' instead.\".format(solution('ca'))  # Test case 3\nassert solution('') == '', \"Expected '', but got '{}' instead.\".format(solution(''))  # Test case 4",
        "num_ids_2": 66,
        "num_ids_4": 123
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aca\\naccc\\nca\") == \"A\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'A'\nassert solution(input()) == 'B'\nassert solution(input()) == 'C'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aca\") == \"A\\n\"\nassert solution(\"accc\") == \"B\\n\"\nassert solution(\"ca\") == \"C\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"6 5 7\") == \"NO\"\nassert solution(\"5 5 6\") == \"NO\"\nassert solution(\"5 5 7 8\") == \"NO\"\nassert solution(\"5 5 7 7 6\") == \"YES\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES', 'Invalid test case.'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"5 5 7\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5 7\") == \"YES\", \"The solution is not correct\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\n\nassert solution(\"5 7 5\") == \"YES\"\n\nassert solution(\"7 5 5\") == \"YES\"\n\nassert solution(\"5 5 7\") == \"YES\"\n\nassert solution(\"5 7 5\") == \"YES\"\n\nassert solution(\"7 5 5\") == \"YES\"\n\nassert solution(\"5 5 7\") == \"YES\"\n\nassert solution(\"5 7 5\") == \"YES\"\n\nassert solution(\"7 5 5\") == \"YES\"\n\nassert solution(\"5 5 7\") == \"YES\"\n\nassert solution(\"5 7 5\") == \"YES\"\n\nassert solution(\"7 5 5\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"11\\n\", \"Test failed for the given constraints.\"\nprint(\"Test passed for the given constraints.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"11\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == '11', 'Invalid solution'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"11\\n\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"11\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"11\", \"The solution should be 11, but it is %s\" % solution(5)\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"11\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '11', 'Your solution is incorrect. Please check the solution provided.'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"5\\n\") == \"11\\n\", \"Test case 1 failed\"\n\nassert solution(stdin=\"10\\n\") == \"29\\n\", \"Test case 2 failed\"\n\nassert solution(stdin=\"86\\n\") == \"130189\\n\", \"Test case 3 failed\"\n\nassert solution(stdin=\"97\\n\") == \"302357\\n\", \"Test case 4 failed\"\n\nassert solution(stdin=\"1000000\\n\") == \"1304577\\n\", \"Test case 5 failed\"",
        "num_ids_2": 49,
        "num_ids_4": 107
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"11\", \"The output should be 11\"\nassert solution(input()) == \"22\", \"The output should be 22\"\nassert solution(input()) == \"35\", \"The output should be 35\"\nassert solution(input()) == \"46\", \"The output should be 46\"\nassert solution(input()) == \"59\", \"The output should be 59\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\", \"Test case 1 failed\"\nassert solution(\"5\\n6\\n3\\n\") == \"12\", \"Test case 2 failed\"\nassert solution(\"7\\n8\\n4\\n\") == \"20\", \"Test case 3 failed\"\nassert solution(\"9\\n10\\n5\\n\") == \"25\", \"Test case 4 failed\"\nassert solution(\"11\\n12\\n6\\n\") == \"30\", \"Test case 5 failed\"",
        "num_ids_2": 51,
        "num_ids_4": 104
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"7\", \"Test Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '7', 'Incorrect output. Expected 7, got {}.'.format(solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\\n\", \"Test case 1 failed\"\nassert solution(\"2\\n5\\n3\\n\") == \"10\\n\", \"Test case 2 failed\"\nassert solution(\"3\\n6\\n4\\n\") == \"12\\n\", \"Test case 3 failed\"\nassert solution(\"4\\n5\\n6\\n\") == \"18\\n\", \"Test case 4 failed\"\nassert solution(\"6\\n7\\n8\\n\") == \"24\\n\", \"Test case 5 failed\"\n",
        "num_ids_2": 55,
        "num_ids_4": 111
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\\n\", \"Incorrect output for length of upper base and height are 3, 4, and 2, respectively.\"\nassert solution(\"3\\n4\\n\") == \"5\\n\", \"Incorrect output for length of upper base is 3, length of lower base is 4, and height is 0.\"\nassert solution(\"3\\n\") == \"0\\n\", \"Incorrect output for length of upper base is 3, and length of lower base is 0.\"\nassert solution(\"4\\n\") == \"0\\n\", \"Incorrect output for length of upper base is 4, and length of lower base is 0.\"\nassert solution(\"0\\n\") == \"0\\n\", \"Incorrect output for length of upper base is 0, and length of lower base is 0.\"\nassert solution(\"3\\n4\\n2\\n\") == \"7\\n\", \"Incorrect output for length of upper base and height are 3, 4, and 2, respectively.\"",
        "num_ids_2": 86,
        "num_ids_4": 156
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"7\\n\", \"Your solution is incorrect. It should return the area of the trapezoid (7).\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"11\", \"The output should be 11, but it is \" + solution(input())",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"11\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"11\\n\", \"The solution is incorrect\"\nprint(\"All tests passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"11\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"22\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"200\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"4260\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"53204\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 82
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '11'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3') == '11\\n'\nassert solution('2\\n3 4 5') == '6\\n'\nassert solution('6\\n1 2 3 4 5') == '28\\n'\nassert solution('10\\n1 2 3 4 5 6 7 8 9') == '188\\n'\nassert solution('1000000000\\n') == '1000000000\\n'",
        "num_ids_2": 39,
        "num_ids_4": 97
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"11\"",
        "num_ids_2": 16,
        "num_ids_4": 27
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 2\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"5 4 2\") == \"NO\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 3 5\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"4 5 6\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"0 0 0\") == \"YES\"\nassert solution(\"4 6 8\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"4 6 1\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"10 10 10\") == \"YES\"\nassert solution(\"20 20 20\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"6 3 1\") == \"NO\"\nassert solution(\"4 3 5\") == \"YES\"\nassert solution(\"2 7 8\") == \"NO\"\nassert solution(\"2 9 8\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2\") == \"YES\", \"Output is incorrect\"\nassert solution(\"4 2 1\") == \"NO\", \"Output is incorrect\"\nassert solution(\"3 3 3\") == \"YES\", \"Output is incorrect\"\nassert solution(\"3 3 2\") == \"NO\", \"Output is incorrect\"\nassert solution(\"2 2 2\") == \"YES\", \"Output is incorrect\"\nassert solution(\"2 2 1\") == \"NO\", \"Output is incorrect\"\nassert solution(\"1 1 1\") == \"NO\", \"Output is incorrect\"\nassert solution(\"1 2 3\") == \"YES\", \"Output is incorrect\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"4 6 5\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"5 9 8\") == \"YES\"\nassert solution(\"4 2 1\") == \"NO\"\nassert solution(\"3 1 4\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"30\\n\", \"Your solution should return 30.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"30\", \"Incorrect output\"\nassert solution(input()) == \"30\", \"Incorrect output\"\nassert solution(input()) == \"30\", \"Incorrect output\"\nassert solution(input()) == \"30\", \"Incorrect output\"\nassert solution(input()) == \"30\", \"Incorrect output\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '30', 'Test case failed'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\"\nassert solution(\"6 5 8\\n2\\n\") == \"42\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\", \"Test 1 failed.\"\nassert solution(\"5 3 11\\n2\\n\") == \"60\", \"Test 2 failed.\"\nassert solution(\"5 3 11\\n3\\n\") == \"100\", \"Test 3 failed.\"\nassert solution(\"5 3 11\\n4\\n\") == \"200\", \"Test 4 failed.\"\nassert solution(\"5 3 11\\n5\\n\") == \"300\", \"Test 5 failed.\"\nassert solution(\"5 3 11\\n6\\n\") == \"400\", \"Test 6 failed.\"\nassert solution(\"5 3 11\\n7\\n\") == \"500\", \"Test 7 failed.\"\nassert solution(\"5 3 11\\n8\\n\") == \"600\", \"Test 8 failed.\"\nassert solution(\"5 3 11\\n9\\n\") == \"700\", \"Test 9 failed.\"\nassert solution(\"5 3 11\\n10\\n\") == \"800\", \"Test 10 failed.\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\"\nassert solution(\"2 1 1\\n2\\n\") == \"20\"\nassert solution(\"4 1 3\\n2\\n\") == \"12\"\nassert solution(\"3 2 4\\n3\\n\") == \"15\"\nassert solution(\"1 1 1\\n1\\n\") == \"3\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"30\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abaccaba\") == \"Yes\\n\", \"Test case 1 failed.\"\nassert solution(\"abcde\") == \"No\\n\", \"Test case 2 failed.\"\nassert solution(\"hello\") == \"No\\n\", \"Test case 3 failed.\"\nassert solution(\"world\") == \"Yes\\n\", \"Test case 4 failed.\"\nassert solution(\"abcd\") == \"Yes\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 41,
        "num_ids_4": 79
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"Hello\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"aaa\") == \"Yes\"\nassert solution(\"aabbccddee\") == \"No\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"defgfedcba\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"def\") == \"No\"\nassert solution(\"a\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"a\") == \"Yes\"\nassert solution(\"abc\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abaccaba') == 'Yes', 'Expected Yes, got:'+ solution('abaccaba')",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abaccaba\") == \"Yes\", \"The correct output is Yes.\"\nassert solution(\"banana\") == \"No\", \"The correct output is No.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abaccaba\") == \"Yes\", \"Test case 1 failed\"\nassert solution(\"abc\") == \"No\", \"Test case 2 failed\"\nassert solution(\"a\") == \"No\", \"Test case 3 failed\"\nassert solution(\"w\") == \"Yes\", \"Test case 4 failed\"\nassert solution(\"abcabc\") == \"No\", \"Test case 5 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n1 1\\n2 2\\n3 3\\n') == '3'\nprint('All tests passed!')",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n1 1\\n2 2\\n3 3\\n') == '3'\nassert solution('3 5\\n1 2\\n2 3\\n3 4\\n') == '1'\nassert solution('3 6\\n1 1\\n2 2\\n3 3\\n4 4\\n') == '2'\nassert solution('3 7\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n') == '3'\nassert solution('3 8\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n') == '1'",
        "num_ids_2": 58,
        "num_ids_4": 131
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3 4\n1 1\n2 2\n3 3\n''') == '3'\n\nassert solution('''1 10\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '5'\n\nassert solution('''1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '10'\n\nassert solution('''1 10\n1 20\n2 30\n3 40\n4 50\n5 60\n6 70\n7 80\n8 90\n9 100\n10 110\n''') == '70'\n\nassert solution('''1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n''') == '1'\n\nassert solution('''1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '10'\n\nassert solution('''1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '10'\n\nassert solution('''1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '10'\n\nassert solution('''1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '10'\n\nassert solution('''1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '10'\n\nassert solution('''1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '10'\n\nassert solution('''1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '10'",
        "num_ids_2": 15,
        "num_ids_4": 30
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\\n\") == \"3\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\"\nassert solution(\"4 2\\n1 2\\n3 3\") == \"2\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"1 1\\n2 2\\n3 3\") == \"2\"\nassert solution(\"1 2\\n2 2\\n3 3\") == \"3\"\n",
        "num_ids_2": 49,
        "num_ids_4": 93
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\\n\") == \"3\\n\"\nassert solution(\"4 2\\n1 1\\n2 2\\n3 3\\n\") == \"2\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n\") == \"2\\n\", \"Test case 1 failed\"\nassert solution(\"3 3\\n\") == \"6\\n\", \"Test case 2 failed\"\nassert solution(\"5 2\\n\") == \"130\\n\", \"Test case 3 failed\"\nassert solution(\"10 3\\n\") == \"31280\\n\", \"Test case 4 failed\"\nassert solution(\"20 3\\n\") == \"1032000\\n\", \"Test case 5 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 99
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"2\\n\", \"Invalid input\"\nassert solution(\"3 1\") == \"0\\n\", \"Invalid input\"\nassert solution(\"1000 1000\") == \"17179869184\\n\", \"Invalid input\"\nassert solution(\"1 1\") == \"2\\n\", \"Invalid input\"",
        "num_ids_2": 36,
        "num_ids_4": 88
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b\"2 2\\n\") == \"2\"\nassert solution(b\"1 3\\n\") == \"1\"\nassert solution(b\"5 3\\n\") == \"18\"\nassert solution(b\"3 1\\n\") == \"0\"\nassert solution(b\"100 2\\n
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\", \"Test case 1 failed\"\nassert solution(input()) == \"1\\n\", \"Test case 2 failed\"\nassert solution(input()) == \"0\\n\", \"Test case 3 failed\"\nassert solution(input()) == \"3\\n\", \"Test case 4 failed\"\nassert solution(input()) == \"2\\n\", \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b\"2 2\\n\") == \"2\\n\"\nassert solution(b\"1 1\\n\") == \"1\\n\"\nassert solution(b\"1 0\\n\") == \"2\\n\"\nassert solution(b\"1 2\\n\") == \"1\\n\"\nassert solution(b\"0 1\\n\") == \"1\\n\"\nassert solution(b\"0 0\\n\") == \"1\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n\") == \"2\\n\"\nassert solution(\"3 2\\n\") == \"1\\n\"\nassert solution(\"4 2\\n\") == \"2\\n\"\nassert solution(\"5 2\\n\") == \"1\\n\"\nassert solution(\"6 2\\n\") == \"2\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2') == '2\\n', 'Test failed'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2 2\\n\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2') == '2'\nprint('All tests passed')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=stdin) == expected_output, f\"Test failed: {solution(stdin=stdin)} should be {expected_output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10\\n\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\\n\", \"Testcase 1 incorrect\"\nassert solution(\"10 3\\n5 10 15\") == \"10\\n\", \"Testcase 2 incorrect\"\nassert solution(\"20 3\\n5 10 15\\n20 3\\n5 10 15\\n20 3\\n5 10 15\") == \"10\\n\", \"Testcase 3 incorrect\"",
        "num_ids_2": 64,
        "num_ids_4": 126
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\nassert solution(\"5 10 15\") == \"10\"\nassert solution(\"10 5 15\") == \"10\"\nassert solution(\"20 10 25\") == \"15\"",
        "num_ids_2": 40,
        "num_ids_4": 75
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 3\\n5 10 15\\n\") == \"10\"\nassert solution(\"20 4\\n5 10 15\\n\") == \"20\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\nassert solution(\"20 4\\n5 10 15\") == \"15\"\nassert solution(\"20 3\\n5 10 15 12\") == \"10\"\nassert solution(\"20 4\\n5 10 15 12\") == \"15\"\nassert solution(\"20 3\\n5 10 15 12 18\") == \"10\"\nassert solution(\"20 4\\n5 10 15 12 18\") == \"15\"",
        "num_ids_2": 46,
        "num_ids_4": 98
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"10\", \"Incorrect solution\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"10\\n\", \"Expected output: 10\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('20 3\\n5 10 15') == '10'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 2 7\") == \"15\", \"Test failed\"\nassert solution(\"4 6 1 5\") == \"12\", \"Test failed\"\nassert solution(\"2 1 2 1\") == \"2\", \"Test failed\"\nassert solution(\"5 5 5 5\") == \"25\", \"Test failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 42,
        "num_ids_4": 83
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\", \"Test Case 1\"\nassert solution(\"4 6 2 8\") == \"14\\n\", \"Test Case 2\"\nassert solution(\"5 6 2 8\") == \"14\\n\", \"Test Case 3\"\nassert solution(\"3 5 3 7\") == \"15\\n\", \"Test Case 4\"\nassert solution(\"5 6 3 7\") == \"14\\n\", \"Test Case 5\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\", \"The first rectangle has an area of 3\u00d75=15, and the second rectangle has an area of 2\u00d77=14. Thus, the output should be 15, the larger area.\"\nprint(\"All tests pass!\")",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\", \"Test case 1 failed\"\nassert solution(\"1 1 1 1\") == \"1\\n\", \"Test case 2 failed\"\nassert solution(\"1 1 2 2\") == \"2\\n\", \"Test case 3 failed\"\nassert solution(\"2 2 2 2\") == \"4\\n\", \"Test case 4 failed\"\nassert solution(\"3 3 3 3\") == \"6\\n\", \"Test case 5 failed\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 51,
        "num_ids_4": 101
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\"\nassert solution(\"4 1 3 6\") == \"14\\n\"\nassert solution(\"1 1 1 1\") == \"1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\", \"Test 1\"\nassert solution(\"6 7 8 9\") == \"14\\n\", \"Test 2\"\nassert solution(\"3 5 1 2\") == \"3\\n\", \"Test 3\"\nassert solution(\"2 3 4 5\") == \"15\\n\", \"Test 4\"\nassert solution(\"2 3 4 5\") == \"10\\n\", \"Test 5\"\nassert solution(\"1 1 1 1\") == \"1\\n\", \"Test 6\"\nassert solution(\"1 1 1 1\") == \"0\\n\", \"Test 7\"",
        "num_ids_2": 48,
        "num_ids_4": 95
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\", \"The first rectangle has an area of 3\u00d75=15, and the second rectangle has an area of 2\u00d77=14. Thus, the output should be 15, the larger area.\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3 5 2 7\") == \"15\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\", \"Output should be 15, the larger area\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 5 2 7') == '15\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nA x 1\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\", \"Test Failed\"\nprint(\"All Test Cases Passed\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"21\") == \"27\"\nassert solution(\"24\") == \"0\"\nassert solution(\"10\") == \"0\"\nassert solution(\"30\") == \"13\"\nassert solution(\"22\") == \"0\"\nassert solution(\"5\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"21\") == \"27\"\nassert solution(\"13\") == \"17\"\nassert solution(\"59\") == \"61\"\nassert solution(\"24\") == \"24\"\nassert solution(\"25\") == \"27\"\n\nfor input_value in [21, 13, 59, 24, 25]:\n    assert solution(str(input_value)) == str(27)",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(21) == \"27\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"21\") == \"27\", \"Test 1\"\nassert solution(\"24\") == \"0\", \"Test 2\"\nassert solution(\"25\") == \"0\", \"Test 3\"\nassert solution(\"30\") == \"27\", \"Test 4\"\nassert solution(\"31\") == \"27\", \"Test 5\"",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(21) == \"27\"\nassert solution(24) == \"25\"\nassert solution(5) == \"5\"\nassert solution(10) == \"15\"\nassert solution(13) == \"19\"\nassert solution(23) == \"24\"",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(21) == '27', 'Test Failed'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"27\", \"The output should be 27\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"21\") == \"27\"\nassert solution(\"24\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"24\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"21\") == \"27\", \"The output is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '27', \"Test Failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\") == \"9\", \"Output should be 9\"\nassert solution(\"10 3\") == \"error\", \"Output should be error\"\nassert solution(\"5 7\") == \"error\", \"Output should be error\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\") == \"9\\n\"\nassert solution(\"8 3\") == \"error\\n\"\nassert solution(\"10 3\") == \"error\\n\"\nassert solution(\"11 3\") == \"error\\n\"\nassert solution(\"12 3\") == \"error\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"10 5\") == \"error\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"0 -5\") == \"error\"\nassert solution(\"5 0\") == \"error\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\") == \"9\\n\"\nassert solution(\"10 3\") == \"error\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"2 10\") == \"error\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n\") == \"9\\n\"\nassert solution(\"10 5\\n\") == \"error\\n\"\nassert solution(\"3 5\\n\") == \"error\\n\"\nassert solution(\"6 11\\n\") == \"error\\n\"\nassert solution(\"3 9\\n\") == \"error\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"10 5\") == \"error\"\nassert solution(\"10 10\") == \"error\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\") == \"9\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3\") == \"9\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\") == \"9\", \"Test 1\"\nassert solution(\"7 3\") == \"error\", \"Test 2\"\nassert solution(\"10 3\") == \"error\", \"Test 3\"\nassert solution(\"5 3\") == \"5\", \"Test 4\"\nassert solution(\"0 3\") == \"0\", \"Test 5\"",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\") == \"7\"\nprint(\"All assertions passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '7\\n', \"Expected output is 7, but got {}\".format(solution(open('input.txt', 'r').read()))",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n2 3 7 9') == '7'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 7 9\\n\") == \"7\\n\"\nassert solution(\"2\\n4 5\\n\") == \"4\\n\"\nassert solution(\"1\\n5\\n\") == \"5\\n\"\nassert solution(\"1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n1 1\\n\") == \"1\\n\"\nassert solution(\"1\\n1 1 1\\n\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 76
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\\n\") == \"7\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\") == \"7\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\\n\", \"Test 1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 3 7 9') == '7'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '7'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3\\n\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"Yes\\n\"\nassert solution(\"2 5\") == \"No\\n\"\nassert solution(\"1 11\") == \"Yes\\n\"\nassert solution(\"12 12\") == \"No\\n\"\nassert solution(\"0 0\") == \"No\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 4\") == \"No\"\nassert solution(\"5 7\") == \"Yes\"\nassert solution(\"8 10\") == \"No\"\nassert solution(\"11 13\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"Yes\\n\", \"Test case 1\"\nassert solution(\"2 2\") == \"No\\n\", \"Test case 2\"\nassert solution(\"3 3\") == \"Yes\\n\", \"Test case 3\"\nassert solution(\"4 4\") == \"No\\n\", \"Test case 4\"\nassert solution(\"5 5\") == \"Yes\\n\", \"Test case 5\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\\n\") == \"Yes\"\nassert solution(\"2 3\\n\") == \"No\"\nassert solution(\"3 3\\n\") == \"Yes\"\nassert solution(\"4 4\\n\") == \"Yes\"\nassert solution(\"5 5\\n\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\\n\") == \"Yes\\n\"\nassert solution(\"2 4\\n\") == \"No\\n\"\nassert solution(\"5 6\\n\") == \"Yes\\n\"\nassert solution(\"10 11\\n\") == \"No\\n\"\nassert solution(\"12 12\\n\") == \"Yes\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='1 3\\n') == 'Yes\\n'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"Yes\\n\", \"Test 1\"\nassert solution(\"5 5\") == \"No\\n\", \"Test 2\"\nassert solution(\"4 6\") == \"No\\n\", \"Test 3\"\nassert solution(\"2 10\") == \"No\\n\", \"Test 4\"\nassert solution(\"7 12\") == \"Yes\\n\", \"Test 5\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\", \"Solution should return Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"Even\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"Even\"\nassert solution(\"5 7\") == \"Odd\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"Even\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"Even\\n\"\nassert solution(\"2 3\") == \"Odd\\n\"\nassert solution(\"1 1\") == \"Even\\n\"\nassert solution(\"4 6\") == \"Odd\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"Even\", \"Test failed: AtCoDeer the deer found two positive integers, a and b. Determine whether the product of a and b is even or odd.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"Even\", \"The output should be Even\"\nassert solution(\"6 8\") == \"Odd\", \"The output should be Odd\"\nassert solution(\"10 20\") == \"Odd\", \"The output should be Odd\"\nassert solution(\"100 200\") == \"Even\", \"The output should be Even\"\nassert solution(\"1000 2000\") == \"Odd\", \"The output should be Odd\"",
        "num_ids_2": 39,
        "num_ids_4": 84
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"Even\\n\"\nassert solution(\"5 6\") == \"Odd\\n\"\nassert solution(\"7 8\") == \"Odd\\n\"\nassert solution(\"9 10\") == \"Even\\n\"\nassert solution(\"11 12\") == \"Even\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4') == 'Even'\nassert solution('5 6') == 'Odd'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"Even\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"Even\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\", \"Expected '2', got '{}' instead\".format(solution(stdin))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 6\\n\") == \"2\\n\"\nassert solution(\"3 4\\n\") == \"1\\n\"\nassert solution(\"5 6\\n\") == \"3\\n\"\nassert solution(\"7 8\\n\") == \"1\\n\"\nassert solution(\"9 10\\n\") == \"2\\n\"\n\nfor _ in range(1000):\n    N, M = map(int, input().split())\n    result = solution(str(N) + \" \" + str(M))\n    assert int(result) == 2",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"The solution is incorrect\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 6\") == \"2\", \"Incorrect answer\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 6\") == \"2\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 6\") == \"2\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 6') == '2', \"The expected output is not correct.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 6\") == \"2\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3\\n') == '6\\n9\\n'\nassert solution('4\\n2 1 4\\n2\\n1 1\\n2 3\\n') == '6\\n9\\n'\nassert solution('3\\n2 1 4\\n1\\n1 1\\n2 3\\n') == '6\\n9\\n'\nassert solution('3\\n2 1 4\\n1\\n2 3\\n') == '6\\n9\\n'\nassert solution('3\\n2 1 4\\n2\\n1 1\\n1 3\\n') == '6\\n9\\n'\n",
        "num_ids_2": 74,
        "num_ids_4": 143
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\"\nassert solution(\"4\\n1 2\\n2 1\\n3 1\\n2\") == \"2\\n1\"\nassert solution(\"5\\n5 5\\n2 3\\n1 1\\n4 4\") == \"2\\n3\"\n",
        "num_ids_2": 64,
        "num_ids_4": 97
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\\n9\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\\n9\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3\\n') == '6\\n9\\n'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\\n\") == \"6\\n9\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\\n\") == \"6\\n9\\n\"\nassert solution(\"4\\n5 2 4\\n6\\n2 1 2\\n7\\n8 3 1\\n\") == \"16\\n25\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\\n\") == \"6\\n9\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\\n9\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\\n9\"\nprint(\"All tests passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1000 8\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1 1 1\\n1 1 1') == '1000'\nassert solution('1 0 0\\n0 0 0') == '0'\nassert solution('1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9') == '2000'\nassert solution('1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 0') == '0'\nassert solution('1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 2') == '1000'",
        "num_ids_2": 59,
        "num_ids_4": 128
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9 1\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9 2\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9 3\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9 4\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9 5\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9 6\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9 7\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9 8\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9 9\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 10\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 11\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 12\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 13\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 14\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 15\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 16\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 17\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 18\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 19\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 20\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 21\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 22\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 23\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 24\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 25\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 26\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 27\") == \"2000\"\nassert solution(\"1000 8\\",
        "num_ids_2": 72,
        "num_ids_4": 146
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nprint(\"All tests passed.\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2000\"\nprint(\"She dislikes all digits except 0 and 2.\")\nprint(\"The smallest integer equal to or greater than N=1000 whose decimal notation contains only 0 and 2, is 2000.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"100 1\\n0 2 3 4 5 6 7 8 9\") == \"200\"\nassert solution(\"1000 2\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 9\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 0\\n1 3 4 5 6 7 8 9\") == \"1000\"\n",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"\nassert solution(\"1000 7\\n1 3 4 5 6 7 8 9\") == \"1000\\n\"\nassert solution(\"1000 6\\n1 3 4 5 6 7 8 9\") == \"500\\n\"\nassert solution(\"1000 5\\n1 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"1000 4\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"\nassert solution(\"1000 3\\n1 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"1000 2\\n1 3 4 5 6 7 8 9\") == \"2000\\n\"\nassert solution(\"1000 1\\n1 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"1000 0\\n1 3 4 5 6 7 8 9\") == \"0\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 144
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2000\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect. Please check the sample input and output.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nprint(\"Correct\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\", \"The correct output is not provided. Please check the constraints and the format of the input.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2\\n', 'Test failed'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '2'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '2'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '2'\n",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '10', \"The value will be minimized when the operations are performed in the following order: A, A, B, B.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\n4\\n3') == '10', \"Output should be '10', but got {}\".format(solution('10\\n4\\n3'))",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3\") == \"10\"\nprint(\"All test cases pass\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"4\\n3\\n\") == \"10\\n\", \"Test 1 failed\"\n\nassert solution(stdin=\"5\\n2\\n\") == \"12\\n\", \"Test 2 failed\"\n\nassert solution(stdin=\"1001\\n1001\\n\") == \"100200\\n\", \"Test 3 failed\"",
        "num_ids_2": 52,
        "num_ids_4": 88
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10\\n\", \"Test case failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3\") == \"10\"\nassert solution(\"4\\n2\") == \"8\"\nassert solution(\"4\\n1\") == \"4\"\nassert solution(\"4\\n0\") == \"0\"\nassert solution(\"4\\n-1\") == \"4\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3\") == \"10\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3\") == \"10\", \"Expected: 10, Actual: \" + solution(\"4\\n3\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3\\n\") == \"10\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n3\\n') == '10\\n', 'Square1001 has seen an electric bulletin board displaying the integer 1. He can perform the following operations A and B to change this value: A, A, B, B. Square1001 needs to perform these operations N times in total. Find the minimum possible value displayed in the board after N operations.'\n\nassert solution('1\\n3\\n') == '10\\n', 'Square1001 has seen an electric bulletin board displaying the integer 1. He can perform the following operations A and B to change this value: A, A, B, B. Square1001 needs to perform these operations N times in total. Find the minimum possible value displayed in the board after N operations.'\n\nassert solution('5\\n10\\n') == '100\\n', 'Square1001 has seen an electric bulletin board displaying the integer 1. He can perform the following operations A and B to change this value: A, A, B, B. Square1001 needs to perform these operations N times in total. Find the minimum possible value displayed in the board after N operations.'\n\nassert solution('10\\n10\\n') == '1000\\n', 'Square1001 has seen an electric bulletin board displaying the integer 1. He can perform the following operations A and B to change this value: A, A, B, B. Square1001 needs to perform these operations N times in total. Find the minimum possible value displayed in the board after N operations.'\n\nassert solution('2\\n2\\n') == '20\\n', 'Square1001 has seen an electric bulletin board displaying the integer 1. He can perform the following operations A and B to change this value: A, A, B, B. Square1001 needs to perform these operations N times in total. Find the minimum possible value displayed in the board after N operations.'",
        "num_ids_2": 174,
        "num_ids_4": 354
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\", \"Test case 1 failed\"\nassert solution(\"0\") == \"0\", \"Test case 2 failed\"\nassert solution(\"2\") == \"0\", \"Test case 3 failed\"\nassert solution(\"0.5\") == \"0\", \"Test case 4 failed\"\nassert solution(\"1.5\") == \"1\", \"Test case 5 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == 0, \"Test failed\"\nassert solution(\"0\") == 1, \"Test failed\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"-1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == '0'\nassert solution(0) == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"0\", \"Test failed\"\nassert solution(0) == \"1\", \"Test failed\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('125') == '176'\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"12345\") == \"18290\"\nassert solution(\"56789\") == \"61849\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-1234\") == \"-1234\"\nassert solution(\"abc\") == \"abc\"\nassert solution
        "num_ids_2": 32,
        "num_ids_4": 60
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"125\") == \"176\"\nprint(\"All assertions passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"125\") == \"176\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"176\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"125\") == \"176\"\nprint(\"All test cases pass\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"125\") == \"176\", \"Incorrect solution\"\nassert solution(\"234\") == \"152\", \"Incorrect solution\"\nassert solution(\"456\") == \"252\", \"Incorrect solution\"\nassert solution(\"789\") == \"322\", \"Incorrect solution\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('125') == '176'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"125\") == \"176\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"125\") == \"176\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1\\n'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n1 2 3 4 5 6\\n') == '1\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\\n\"\nassert solution(\"10\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"1\\n2 3 4 5 6\") == \"0\\n\"\nassert solution(\"2\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"10\\n1 2 3 4 5 6\") == \"1\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 95
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\\n\") == \"1\\n\"\nassert solution(\"4\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2\\n\") == \"1\\n\"\nassert solution(\"2\\n1\\n\") == \"0\\n\"\nassert solution(\"1\\n\\n\") == \"0\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 84
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20\") == \"15800\"\nassert solution(\"10\") == \"4800\"\nassert solution(\"25\") == \"24800\"\nassert solution(\"1\") == \"0\"\nassert solution(\"100\") == \"0\"",
        "num_ids_2": 29,
        "num_ids_4": 54
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20\") == \"15800\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20\") == \"15800\", \"Solution is incorrect\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20\") == \"15800\", \"Solution is incorrect.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"15800\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20\") == \"15800\", \"The answer is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20\") == \"15800\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20\") == \"15800\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"15800\", \"Test case failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '15800', 'Incorrect output'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\\n\", \"Test case 1 failed.\"\nassert solution(\"hello\") == \"hello\\n\", \"Test case 2 failed.\"\nassert solution(\"world\") == \"world\\n\", \"Test case 3 failed.\"\nassert solution(\"abc\") == \"abc\\n\", \"Test case 4 failed.\"\nassert solution(\"def\") == \"def\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 43,
        "num_ids_4": 81
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('ant\\nobe\\rec') == 'abc', \"The letters in the squares on the diagonal connecting the top-left and bottom-right corner of the grid are a, b and c from top-right to bottom-left. Concatenate these letters and print abc.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ant\\nobe\\rec\\n\") == \"abc\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\\n\", \"The letters in the squares on the diagonal connecting the top-left and bottom-right corner of the grid are a, b and c from top-right to bottom-left. Concatenate these letters and print abc.\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\", \"Incorrect output\"\nprint(\"All tests passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('ant\\nobe\\rec') == 'abc\\n', \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\", \"The solution should be abc.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ant\\nobe\\nrec\") == \"abc\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"101\") == \"2\", \"The number of squares on which Snuke will place a marble is incorrect.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"101\") == \"2\", \"Test 1 failed\"\nassert solution(\"100\") == \"0\", \"Test 2 failed\"\nassert solution(\"011\") == \"2\", \"Test 3 failed\"\nassert solution(\"010\") == \"1\", \"Test 4 failed\"\nassert solution(\"110\") == \"0\", \"Test 5 failed\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"2\\n\", \"Solution should print the correct number of squares on which a marble will be placed.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"101\") == \"2\", \"Expected 2, but got {}\".format(solution(\"101\"))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"101\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"101\") == \"2\", \"Incorrect output for given input\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"2\", \"Expected answer: 2, Actual answer: {}\".format(solution(\"101\"))\nassert solution(\"010\") == \"0\", \"Expected answer: 0, Actual answer: {}\".format(solution(\"010\"))\nassert solution(\"0100\") == \"0\", \"Expected answer: 0, Actual answer: {}\".format(solution(\"0100\"))\nassert solution(\"1010\") == \"2\", \"Expected answer: 2, Actual answer: {}\".format(solution(\"1010\"))",
        "num_ids_2": 62,
        "num_ids_4": 128
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"101\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"101\") == \"2\", \"The number of squares on which Snuke will place a marble should be 2\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"101\") == \"2\", \"Expected 2 squares, got: {}\".format(solution(\"101\"))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '48000'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"48000\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"\nassert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"48000\"\n\nfrom sys import stdin",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\\n\") == \"48000\"\nassert solution(\"5\\n4\\n5000\\n6000\\n\") == \"120000\"\nassert solution(\"5\\n3\\n5000\\n6000\\n\") == \"60000\"\nassert solution(\"5\\n4\\n10000\\n15000\\n\") == \"350000\"\nassert solution(\"100\\n10\\n50000\\n60000\\n\") == \"5100000\"",
        "num_ids_2": 64,
        "num_ids_4": 129
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"48000\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"48000\\n\", \"The solution should return 48000 yen.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"48000\\n\", \"The accommodation fee is as follows:\\n\" + solution(stdin) + \"\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n3\\n10000\\n9000\\n') == '48000\\n'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\\n\") == \"48000\\n\"\nassert solution(\"4\\n5\\n10000\\n9000\\n\") == \"48000\\n\"\nassert solution(\"1\\n1\\n10000\\n10000\\n\") == \"20000\\n\"\nassert solution(\"1\\n2\\n10000\\n10000\\n\") == \"20000\\n\"\nassert solution(\"1\\n3\\n10000\\n10000\\n\") == \"30000\\n\"\n",
        "num_ids_2": 68,
        "num_ids_4": 138
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nprint(\"All tests passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='1 + 2') == '3', 'Incorrect Output'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 + 2\") == \"3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 + 2\") == \"3\", \"Invalid output. Expected 3, got: \" + solution(\"1 + 2\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"2 - 1\") == \"1\"\nassert solution(\"1 * 2\") == \"2\"\nassert solution(\"10 / 5\") == \"2\"\nassert solution(\"5 ^ 2\") == \"25\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 + 2\") == \"3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 + 2\") == \"3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 + 2\") == \"3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 + 2\") == \"3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'ABC', \"Output is not ABC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000\") == \"ABC\\n\"\nassert solution(\"7000\") == \"ARC\\n\"\nassert solution(\"1200\") == \"ABC\\n\"\nassert solution(\"3000\") == \"ARC\\n\"\nassert solution(\"9001\") == \"ABC\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1000) == 'ABC'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000\") == \"ABC\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1000') == 'ABC'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000\") == \"ABC\", \"Sample Output 1 failed\"\nassert solution(\"5000\") == \"ARC\", \"Sample Output 2 failed\"\nassert solution(\"9000\") == \"ABC\", \"Sample Output 3 failed\"\nassert solution(\"11000\") == \"ARC\", \"Sample Output 4 failed\"\nassert solution(\"12000\") == \"ABC\", \"Sample Output 5 failed\"\nassert solution(\"13000\") == \"ABC\", \"Sample Output 6 failed\"\nassert solution(\"14000\") == \"ABC\", \"Sample Output 7 failed\"\nassert solution(\"15000\") == \"ABC\", \"Sample Output 8 failed\"\nassert solution(\"16000\") == \"ABC\", \"Sample Output 9 failed\"\nassert solution(\"17000\") == \"ABC\", \"Sample Output 10 failed\"\nassert solution(\"18000\") == \"ABC\", \"Sample Output 11 failed\"\nassert solution(\"19000\") == \"ABC\", \"Sample Output 12 failed\"\nassert solution(\"20000\") == \"ABC\", \"Sample Output 13 failed\"\nassert solution(\"21000\") == \"ABC\", \"Sample Output 14 failed\"\nassert solution(\"22000\") == \"ABC\", \"Sample Output 15 failed\"\nassert solution(\"23000\") == \"ABC\", \"Sample Output 16 failed\"\nassert solution(\"24000\") == \"ABC\", \"Sample Output 17 failed\"\nassert solution(\"25000\") == \"ABC\", \"Sample Output 18 failed\"\nassert solution(\"26000\") == \"ABC\", \"Sample Output 19 failed\"\nassert solution(\"27000\") == \"ABC\", \"Sample Output 20 failed\"\nassert solution(\"28000\") == \"ABC\", \"Sample Output 21 failed\"\nassert solution(\"29000\") == \"ABC\", \"Sample Output 22 failed\"\nassert solution(\"30000\") == \"ABC\", \"Sample Output 23 failed\"\nassert solution(\"31000\") == \"ABC\", \"Sample Output 24 failed\"\nassert solution(\"32000\") == \"ABC\", \"Sample Output 25 failed\"\nassert solution(\"33000\") == \"ABC\", \"Sample Output 26 failed\"\nassert solution(\"34000\") == \"ABC\", \"Sample Output 27 failed\"\nassert solution(\"35000\") == \"ABC\", \"Sample Output 28 failed\"\nassert solution(\"36000\") == \"ABC\", \"Sample Output 29 failed\"\nassert solution(\"37000\") == \"ABC\", \"Sample Output 30 failed\"\nassert solution(\"38000\") == \"ABC\", \"Sample Output 31 failed\"\nassert solution(\"39000\") == \"ABC\", \"Sample Output 32 failed\"\nassert solution(\"40000\") == \"ABC\", \"Sample Output 33 failed\"\nassert solution(\"41000\") == \"ABC\", \"Sample Output 34 failed\"\nassert solution(\"42000\") == \"ABC\", \"Sample Output 35 failed\"\nassert solution(\"43000\") == \"ABC\", \"Sample Output 36 failed\"\nassert solution(\"44000\") == \"ABC\", \"Sample Output 37 failed\"\nassert solution(\"45000\") == \"ABC\", \"Sample Output 38 failed\"\nassert solution(\"46000\") == \"ABC\", \"Sample Output 39 failed\"\nassert solution(\"47000\") == \"ABC\", \"Sample Output 40 failed\"\nassert solution(\"48000\") == \"ABC\", \"Sample Output 41 failed\"\nassert solution(\"49000\") == \"ABC\", \"Sample Output 42 failed\"\nassert solution(\"50000\") == \"ABC\", \"Sample Output 43 failed\"\nassert solution(\"51000\") == \"ABC\", \"Sample Output 44 failed\"\nassert solution(\"52000\") == \"ABC\", \"Sample Output 45 failed\"\nassert solution(\"53000\") == \"ABC\", \"Sample Output 46 failed\"\nassert solution(\"54000\") == \"ABC\", \"Sample Output 47 failed\"\nassert solution(\"5",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000\") == \"ABC\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1000) == 'ABC'\nassert solution(800) == 'ARC'\nassert solution(1200) == 'ABC'\nassert solution(1100) == 'ARC'\nassert solution(1500) == 'ABC'\nassert solution(2000) == 'ARC'\nassert solution(1700) == 'ABC'\nassert solution(2200) == 'ABC'\nassert solution(1600) == 'ABC'\nassert solution(3000) == 'ARC'\nassert solution(2800) == 'ARC'\nassert solution(2700) == 'ABC'\nassert solution(3200) == 'ARC'",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000\") == \"ABC\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1000) == 'ABC'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"400 500 600\") == \"1000\"\nassert solution(\"200 300 400\") == \"800\"\nassert solution(\"100 200 300\") == \"500\"\nassert solution(\"1 1 1\") == \"0\"",
        "num_ids_2": 46,
        "num_ids_4": 90
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"700 600 780\") == \"1300\", \"Test failed\"\nassert solution(\"200 800 150\") == \"1200\", \"Test failed\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('700 600 780') == '1300\\n', \"Please provide the input as a string in the format a b c\"\nprint(\"Running tests...\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"100 50 150\") == \"1000\"\nassert solution(\"100 50 500\") == \"10000\"\nassert solution(\"5000 2000 3000\") == \"12500\"\nassert solution(\"10000 10000 10000\") == \"210000\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nprint(\"All tests passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"700 600 780\") == \"1300\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"700 600 780\") == \"1300\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('700 600 780') == '1300', \"Your code is incorrect\"\n\nSolution:\n\nWe can use the concept of Knapsack problem to solve this problem. We have a Knapsack with capacity W and weights W and values V. Each bell has a different weight and value. We can't include the same bell twice in the knapsack. If the bell is included in the knapsack, we can't include it again. We can keep track of the minimum price we have found so far and the index of the bell we are currently considering. We can then compare the weight of the current bell with the weights of the bells in the knapsack. If the weight of the current bell is greater than the weight of the bell in the knapsack, we can include it. We can then update the minimum price and index of the bell we are considering. We can continue this process until we have found two different bells with the same weight.\n\nHere is the Python code:",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1300'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nprint(\"Test passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\na\\nb\\nc\") == \"\"\"#####\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\nabc\\narc\\n') == '''\n#####\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == '''#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"#####\\n#abc#\\n#arc#\\n#####\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"#####\\n#abc#\\n#arc#\\n#####\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2 3\\nabc\\narc\\n\") == \"#####\\n#abc#\\n#arc#\\n#####\\n\"\nprint(\"Correct!\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"#####\\n#abc#\\n#arc#\\n#####\"\nassert solution(\"5 6\\nabc\\ndef\\nghi\\njkl\\n\") == \"#######\\n#abc#\\n#def#\\n#ghi#\\n#jkl#\\n#######\"\nassert solution(\"7 8\\nabc\\ndef\\nghi\\njkl\\noqr\\n\") == \"################\\n#abc#\\n#def#\\n#ghi#\\n#jkl#\\n#oqr#\\n################\"",
        "num_ids_2": 76,
        "num_ids_4": 129
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"#####\\n#abc#\\n#arc#\\n#####\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\", \"The maximum value taken by x during the operations is not correct.\"\nprint(\"The maximum value taken by x during the operations is correct.\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\", \"The maximum value taken by x during the operations should be 2.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\", \"The output is incorrect.\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\", \"Test failed.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\"\nassert solution(\"1\\nID\\n\") == \"1\\n\"\nassert solution(\"1\\nID\\n\") == \"1\\n\"\nassert solution(\"1\\nID\\n\") == \"1\\n\"\nassert solution(\"1\\nID\\n\") == \"1\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\"\nassert solution(\"5\\nIDDD\") == \"1\\n\"\nassert solution(\"5\\nDDDD\") == \"0\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 47
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"110000 119999\") == \"4\"\nassert solution(\"10000 100000\") == \"0\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"99999 99999\") == \"4\"\nassert solution(\"-1 10\") == \"1\"\nassert solution(\"100000 100000\") == \"4\"",
        "num_ids_2": 42,
        "num_ids_4": 76
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"10000 99999\") == \"0\"\nassert solution(\"-1 10\") == \"1\"\nassert solution(\"-10000 10000\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10000 10000\") == \"0\"\nassert solution(\"10000 10001\") == \"1\"",
        "num_ids_2": 40,
        "num_ids_4": 73
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter A and B: \")) == \"4\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11009 11332\") == \"4\", \"Incorrect output\"\nassert solution(\"12345\") == \"0\", \"Incorrect output\"\nassert solution(\"1234\") == \"1\", \"Incorrect output\"\nassert solution(\"1234567890\") == \"9\", \"Incorrect output\"\nassert solution(\"123456789012345678901234567890\") == \"15\", \"Incorrect output\"",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"10000 99999\") == \"1\"\nassert solution(\"1000 9999\") == \"0\"\nassert solution(\"1 100\") == \"1\"\nassert solution(\"1 10\") == \"1\"",
        "num_ids_2": 40,
        "num_ids_4": 72
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"Output not as expected\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4\") == \"3\", \"Testcase 3 failed\"\nassert solution(\"5 2 1\") == \"2\", \"Testcase 4 failed\"\nassert solution(\"1 2 3\") == \"1\", \"Testcase 5 failed\"\nassert solution(\"4 5 6\") == \"0\", \"Testcase 6 failed\"\nassert solution(\"7 8 9\") == \"0\", \"Testcase 7 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3', 'The code is not correct.'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\\n\", \"Testcase failed!\"\nassert solution(\"3 1 4\") == \"3\\n\", \"Testcase failed!\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nprint(\"All test cases passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nprint(\"Three different colors: 1, 3, and 4.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"3 1 1\") == \"2\"\nassert solution(\"3 2 3\") == \"2\"\nassert solution(\"3 2 4\") == \"2\"\nassert solution(\"3 3 4\") == \"2\"\nassert solution(\"3 3 2\") == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\\n\") == \"12\\n\"\nassert solution(\"10 5\\n2 3 4 5 6\\n7 8 9 10 11\\n\") == \"14\\n\"\nassert solution(\"5 2\\n1 2 3 4 5\\n\") == \"7\\n\"\nassert solution(\"4 3\\n1 2 3 4 5\\n\") == \"5\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n\") == \"20\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"7\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 124
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\nassert solution(\"5 3\\n1 2 3 4 5\\n1 2 3 4 5\") == \"12\"\nassert solution(\"5 3\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 ",
        "num_ids_2": 59,
        "num_ids_4": 1027
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"12\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\nassert solution(\"5 5\\n1 1 1 1 1\") == \"10\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"12\", \"The answer is incorrect. Please try again.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\\n\") == \"12\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 7\") == \"B\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 7\") == \"B\", \"Output should be B\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"x a b\\n\")) == \"B\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"Invalid input format\"\nassert solution(\"5 2 7\\n\") == \"Invalid input format\"\nassert solution(\"5 2 7\\n6 4 9\\n\") == \"Invalid input format\"\nassert solution(\"5 2 7\\n6 4 9\\n7 6 10\") == \"Invalid input format\"\nassert solution(\"5 2 7\\n6 4 9\\n7 6 10\\n8 9 11\\n\") == \"Invalid input format\"\nassert solution(\"5 2 7\\n6 4 9\\n7 6 10\\n8 9 11\\n10 12 13\\n\") == \"Invalid input format\"\nassert solution(\"5 2 7\\n6 4 9\\n7 6 10\\n8 9 11\\n10 12 13\\n11 13 14\\n\") == \"Invalid input format\"\nassert solution(\"5 2 7\\n6 4 9\\n7 6 10\\n8 9 11\\n10 12 13\\n11 13 14\\n12 14 15\\n\") == \"Invalid input format\"\nassert solution(\"5 2 7\\n6 4 9\\n7 6 10\\n8 9 11\\n10 12 13\\n11 13 14\\n12 14 15\\n13 15 16\\n\") == \"Invalid input format\"\nassert solution(\"5 2 7\\n6 4 9\\n7 6 10\\n8 9 11\\n10 12 13\\n11 13 14\\n12 14 15\\n13 15 16\\n14 16 17\\n\") == \"Invalid input format\"\nassert solution(\"5 2 7\\n6 4 9\\n7 6 10\\n8 9 11\\n10 12 13\\n11 13 14\\n12 14 15\\n13 15 16\\n14 16 17\\n15 17 18\\n\") == \"Invalid input format\"\nassert solution(\"5 2 7\\n6 4 9\\n7 6 10\\n8 9 11\\n10 12 13\\n11 13 14\\n12 14 15\\n13 15 16\\n14 16 17\\n15 17 18\\n16 18 19\\n\") == \"Invalid input format\"\nassert solution(\"5 2 7\\n6 4 9\\n7 6 10\\n8 9 11\\n10 12 13\\n11 13 14\\n12 14 15\\n13 15 16\\n14 16 17\\n15 17 18\\n16 18 19\\n17 19 20\\n\") == \"Invalid input format\"\nassert solution(\"5 2 7\\n6 4 9\\n7 6 10\\n8 9 11\\n10 12 13\\n11 13 14\\n12 14 15\\n13 15 16\\n14 16 17\\n15 17 18\\n16 18 19\\n17 19 20\\n18 20 21\\n\") == \"Invalid input format\"\nassert solution(\"5 2 7\\n6 4 9\\n7 6 10\\n8 9 11\\n10 12 13\\n11 13 14\\n12 14 15\\n13 15 16\\n14 16 17\\",
        "num_ids_2": 28,
        "num_ids_4": 84
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 7\") == \"B\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 7\") == \"B\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5, 2, 7) == 'B'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 7\") == \"B\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 7\") == \"B\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2018/01/01\") == \"2018/01/01\"\nassert solution(\"2018/01/31\") == \"2018/01/31\"\nassert solution(\"2017/13/31\") == \"2018/01/01\"\nassert solution(\"2018/01/29\") == \"2018/01/29\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/02/31\") == \"2018/02/31\"\nassert solution(\"2018/04/01\") == \"2018/04/01\"\nassert solution(\"2018/01/31\") == \"2018/01/31\"\nassert solution(\"2018/02/29\") == \"2018/02/29\"\n",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2018/01/07\") == \"2018/01/07\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2017/01/07') == '2018/01/07', 'Test failed'\nprint('Test passed')",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nprint(\"All tests passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac') == 'aac'\nassert solution('1\\nabcdef\\n') == ''",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"cbaa\\ndaacc\\nacacac\") == \"aac\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\nprint(solution(\"4\\ncdde\\nabcd\\nabcde\\nabcd\"))  # This test case has only one valid answer",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\ncbaa\\ndaacca\\nacacac\\n\") == \"aac\"\nassert solution(\"3\\ncbaa\\ndaacca\\nacacac\\n\") == \"aaac\"\nassert solution(\"3\\ncbaa\\ndaacca\\nacacac\\n\") == \"aaac\"\nassert solution(\"3\\ncbaa\\ndaacca\\nacacac\\n\") == \"aaac\"\nassert solution(\"3\\ncbaa\\ndaacca\\nacacac\\n\") == \"aac\"\n",
        "num_ids_2": 49,
        "num_ids_4": 99
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\ncaba\\ndabba\\nacaaca\\n\") == \"aac\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"cbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"aa\\naba\") == \"aba\"\nassert solution(\"aaaa\\nbbbb\") == \"aaaa\"\nassert solution(\"abcd\\nefg\") == \"abcd\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 32,
        "num_ids_4": 58
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"5\\nbcd\\nabcd\\nefg\\nhij\\nklm\") == \"def\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"1\\nbcd\\ncde\\n\") == \"\"\nassert solution(\"1\\nabc\\n\") == \"abc\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"2\\nabc\\ndef\\n\") == \"abc\"\nassert solution(\"2\\nxyz\\nabc\\n\") == \"abc\"\nassert solution(\"1\\nxyz\\n\") == \"xyz\"\nassert solution(\"1\\n\") == \"\"",
        "num_ids_2": 38,
        "num_ids_4": 63
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\\n\", \"Solution should output the correct number of people sitting at the theater\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\\n\"\nassert solution(\"3\\n25 28\\n30\\n\") == \"7\\n\"\nassert solution(\"2\\n26 27\\n28\\n29\\n30\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"1000\\n24 30\\n30\\n25 28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30\\n30\\n25 28\\n29\\n\") == \"7\\n\"\nassert solution(\"5\\n24 30",
        "num_ids_2": 46,
        "num_ids_4": 115
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n24 30') == '7\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n24 30\") == \"7\"\nprint(\"All test cases passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n24 30\") == \"7\"\nassert solution(\"1\\n24 30\\n40 42\") == \"3\"\nassert solution(\"1\\n24 30\\n40 42\\n44 45\") == \"2\"\nassert solution(\"1\\n24 30\\n40 42\\n44 45\\n50 51\") == \"1\"\nassert solution(\"1\\n24 30\\n40 42\\n44 45\\n50 51\\n55 56\") == \"0\"",
        "num_ids_2": 41,
        "num_ids_4": 110
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\\n\"\nassert solution(\"1\\n24 25\\n27 30\\n\") == \"7\\n\"\nassert solution(\"1\\n24 25 26\\n27 30\\n29 30\\n\") == \"10\\n\"\nassert solution(\"1\\n24 25 26 27\\n30\\n30\\n\") == \"10\\n\"\nassert solution(\"1\\n24 25 26 27 28\\n30\\n30\\n\") == \"10\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 124
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\\n\"\nassert solution(\"2\\n3 7\\n\") == \"1\\n\"\nassert solution(\"4\\n1 2 5 8\\n\") == \"1\\n\"\nassert solution(\"1\\n100000\\n\") == \"1\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"3\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 85
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n24 30\\n') == '7\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"6\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 4) == \"6\"\nprint(\"All tests passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"6\\n\"\nassert solution(\"4 2\") == \"3\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6, \"Incorrect output for sample input\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4') == '6'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"6\\n\", \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"6\", \"Incorrect output\"\nprint(\"Correct\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 4) == \"6\\n\", \"Expected output: 6\\n, but got: \" + solution(3, 4)",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"6\"\nprint(\"All test cases passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n\") == \"Possible\"\n\nassert solution(\"1 2\\n\") == \"Impossible\"\n\nassert solution(\"1 2\\n3 4\\n5 6\\n\") == \"Impossible\"\n\nassert solution(\"4 5\\n6 7\\n8 9\\n10 11\\n\") == \"Impossible\"\n\nassert solution(\"3 4\\n5 6\\n7 8\\n\") == \"Possible\"",
        "num_ids_2": 29,
        "num_ids_4": 86
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n\") == \"Possible\"\nassert solution(\"3 4\\n\") == \"Possible\"\nassert solution(\"5 3\\n\") == \"Possible\"\nassert solution(\"3 5\\n\") == \"Possible\"\nassert solution(\"5 4\\n\") == \"Possible\"\nassert solution(\"4 6\\n\") == \"Impossible\"\nassert solution(\"5 7\\n\") == \"Impossible\"\nassert solution(\"4 8\\n\") == \"Impossible\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"6 7\") == \"Impossible\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n\") == \"Possible\\n\"\nassert solution(\"1 3\\n\") == \"Impossible\\n\"\nassert solution(\"3 1\\n\") == \"Possible\\n\"\nassert solution(\"4 4\\n\") == \"Impossible\\n\"\nassert solution(\"7 5\\n\") == \"Possible\\n\"\nassert solution(\"2 2\\n\") == \"Impossible\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"1 2\") == \"Impossible\"\nassert solution(\"5 1\") == \"Impossible\"\nassert solution(\"10 5\") == \"Impossible\"\nassert solution(\"5 10\") == \"Impossible\"\nassert solution(\"10 1\") == \"Impossible\"",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Possible\", \"Test failed\"\nassert solution(input()) == \"Possible\", \"Test failed\"\nassert solution(input()) == \"Possible\", \"Test failed\"\nassert solution(input()) == \"Possible\", \"Test failed\"\nassert solution(input()) == \"Possible\", \"Test failed\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Possible\", \"Input should be a tuple (A, B) with integers between 1 and 100\"\nprint(\"Possible\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"4 5\\n\") == \"Possible\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"6 7\") == \"Impossible\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Possible' # Solution",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('atcoder') == 'atcoder'\nassert solution('atcoderatcoder') == 'UNRESTORABLE'\nassert solution('abcdefg') == 'UNRESTORABLE'\nassert solution('atcoderatcoderatcoder') == 'UNRESTORABLE'\nassert solution('test') == 'UNRESTORABLE'\nassert solution('abcde') == 'UNRESTORABLE'",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"atcoder\"\nassert solution(\"?a??b????\") == \"UNRESTORABLE\"\n",
        "num_ids_2": 24,
        "num_ids_4": 41
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'UNRESTORABLE'\nassert solution('atcoder') == 'atcoder'",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"atcoder\"\nassert solution(\"?tc????\") == \"UNRESTORABLE\"\nassert solution(\"?tc????\") == \"UNRESTORABLE\"\n\nassert solution(\"atcoder\") == \"atcoder\"\nassert solution(\"atcoder\") == \"UNRESTORABLE\"\nassert solution(\"atcoder\") == \"UNRESTORABLE\"\nassert solution(\"atcoder\") == \"UNRESTORABLE\"\n\nassert solution(\"btcoder\") == \"btcoder\"\nassert solution(\"btcoder\") == \"btcoder\"\nassert solution(\"btcoder\") == \"btcoder\"\nassert solution(\"btcoder\") == \"btcoder\"\n\nassert solution(\"ctcoder\") == \"ctcoder\"\nassert solution(\"ctcoder\") == \"ctcoder\"\nassert solution(\"ctcoder\") == \"ctcoder\"\nassert solution(\"ctcoder\") == \"ctcoder\"\n\nassert solution(\"dtcoder\") == \"dtcoder\"\nassert solution(\"dtcoder\") == \"dtcoder\"\nassert solution(\"dtcoder\") == \"dtcoder\"\nassert solution(\"dtcoder\") == \"dtcoder\"\n\nassert solution(\"etcoder\") == \"etcoder\"\nassert solution(\"etcoder\") == \"etcoder\"\nassert solution(\"etcoder\") == \"etcoder\"\nassert solution(\"etcoder\") == \"etcoder\"\n\nassert solution(\"ftcoder\") == \"ftcoder\"\nassert solution(\"ftcoder\") == \"ftcoder\"\nassert solution(\"ftcoder\") == \"ftcoder\"\nassert solution(\"ftcoder\") == \"ftcoder\"\n\nassert solution(\"gtcoder\") == \"gtcoder\"\nassert solution(\"gtcoder\") == \"gtcoder\"\nassert solution(\"gtcoder\") == \"gtcoder\"\nassert solution(\"gtcoder\") == \"gtcoder\"\n\nassert solution(\"htcoder\") == \"htcoder\"\nassert solution(\"htcoder\") == \"htcoder\"\nassert solution(\"htcoder\") == \"htcoder\"\nassert solution(\"htcoder\") == \"htcoder\"\n\nassert solution(\"itcoder\") == \"itcoder\"\nassert solution(\"itcoder\") == \"itcoder\"\nassert solution(\"itcoder\") == \"itcoder\"\nassert solution(\"itcoder\") == \"itcoder\"\n\nassert solution(\"jtcoder\") == \"jtcoder\"\nassert solution(\"jtcoder\") == \"jtcoder\"\nassert solution(\"jtcoder\") == \"jtcoder\"\nassert solution(\"jtcoder\") == \"jtcoder\"\n\nassert solution(\"ktcoder\") == \"ktcoder\"\nassert solution(\"ktcoder\") == \"ktcoder\"\nassert solution(\"ktcoder\") == \"ktcoder\"\nassert solution(\"ktcoder\") == \"ktcoder\"\n\nassert solution(\"ltcoder\") == \"ltcoder\"\nassert solution(\"ltcoder\") == \"ltcoder\"\nassert solution(\"ltcoder\") == \"ltcoder\"\nassert solution(\"ltcoder\") == \"ltcoder\"\n\nassert solution(\"mtcoder\") == \"mtcoder\"\nassert solution(\"mtcoder\") == \"mtcoder\"\nassert solution(\"mtcoder\") == \"mtcoder\"\nassert solution(\"mtcoder\") == \"mtcoder\"\n\nassert solution(\"ntcoder\") == \"ntcoder\"\nassert solution(\"ntcoder\") == \"ntcoder\"\nassert solution(\"ntcoder\") == \"ntcoder\"\nassert solution(\"ntcoder\") == \"ntcoder\"\n\nassert solution(\"otcoder\") == \"otcoder\"\nassert solution(\"otcoder\") == \"otcoder\"\nassert solution(\"otcoder\") == \"otcoder\"\nassert solution(\"otcoder\") == \"otcoder\"\n\nassert solution(\"ptcoder\") == \"ptcoder\"\nassert solution(\"ptcoder\") == \"ptcoder\"\nassert solution(\"ptcoder\") == \"ptcoder\"\nassert solution(\"ptcoder\") == \"ptcoder\"\n\nassert solution(\"qtcoder\") == \"qtcoder\"\nassert solution(\"qtcoder\") == \"qtcoder\"\nassert solution(\"qtcoder\") == \"qtcoder\"\nassert solution(\"qtcoder\") == \"qtcoder\"\n\nassert solution(\"rtcoder\") == \"rtcoder\"\nassert solution(\"rtcoder\") == \"rtcoder\"\nassert solution(\"rtcoder\") == \"rtcoder\"\nassert solution(\"rtcoder\") == \"rtcoder\"\n\nassert solution(\"stcoder\") == \"stcoder\"\nassert solution(\"stcoder\") == \"stcoder\"\nassert solution(\"stcoder\") == \"stcoder\"\nassert solution(\"stcoder\") == \"stcoder\"\n\nassert solution(\"ttcoder\") == \"ttcoder\"\nassert solution(\"ttcoder\") == \"ttcoder\"\nassert solution(\"ttcoder\") == \"ttcoder",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"?tc????\\ncoder\") == \"atcoder\"\nassert solution(\"?ec????\\ncoder\") == \"atcoder\"\nassert solution(\"?st????\\ncoder\") == \"coder\"\nassert solution(\"?lo????\\ncoder\") == \"UNRESTORABLE\"\nassert solution(\"?tc????\\na\") == \"UNRESTORABLE\"\nassert solution(\"?ec????\\na\") == \"UNRESTORABLE\"\nassert solution(\"?st????\\na\") == \"UNRESTORABLE\"\nassert solution(\"?lo????\\na\") == \"UNRESTORABLE\"\nassert solution(\"?tc????\\ncoder\") == \"atcoder\"\nassert solution(\"?ec????\\ncoder\") == \"atcoder\"\nassert solution(\"?st????\\ncoder\") == \"coder\"\nassert solution(\"?lo????\\ncoder\") == \"UNRESTORABLE\"\nassert solution(\"?tc????\\na\") == \"UNRESTORABLE\"\nassert solution(\"?ec????\\na\") == \"UNRESTORABLE\"\nassert solution(\"?st????\\na\") == \"UNRESTORABLE\"\nassert solution(\"?lo????\\na\") == \"UNRESTORABLE\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"?tc????\\ncoder\") == \"atcoder\"\nassert solution(\"?bc????\\ncoder\") == \"btcoder\"\nassert solution(\"?gc????\\ncoder\") == \"ctcoder\"\nassert solution(\"?de????\\ncoder\") == \"dtcoder\"\nassert solution(\"?fd????\\ncoder\") == \"etcoder\"\nassert solution(\"?fe????\\ncoder\") == \"ftcoder\"\nassert solution(\"?ff????\\ncoder\") == \"gtcoder\"\nassert solution(\"?gg????\\ncoder\") == \"htcoder\"\nassert solution(\"?hh????\\ncoder\") == \"itcoder\"\nassert solution(\"?ii????\\ncoder\") == \"jtcoder\"\nassert solution(\"?jj????\\ncoder\") == \"ktcoder\"\nassert solution(\"?kk????\\ncoder\") == \"ltcoder\"\nassert solution(\"?ll????\\ncoder\") == \"mtcoder\"\nassert solution(\"?mm????\\ncoder\") == \"ntcoder\"\nassert solution(\"?nn????\\ncoder\") == \"otcoder\"\nassert solution(\"?oo????\\ncoder\") == \"ptcoder\"\nassert solution(\"?pp????\\ncoder\") == \"qtcoder\"\nassert solution(\"?qq????\\ncoder\") == \"rtcoder\"\nassert solution(\"?rr????\\ncoder\") == \"stcoder\"\nassert solution(\"?ss????\\ncoder\") == \"ttcoder\"\nassert solution(\"?tt????\\ncoder\") == \"utcoder\"\nassert solution(\"?uu????\\ncoder\") == \"vtcoder\"\nassert solution(\"?vv????\\ncoder\") == \"wtcoder\"\nassert solution(\"?ww????\\ncoder\") == \"ytcoder\"\nassert solution(\"?xx????\\ncoder\") == \"ztcoder\"\nassert solution(\"?yy????\\ncoder\") == \"atcoder\"\nassert solution(\"?zz????\\ncoder\") == \"btcoder\"\nassert solution(\"?aa????\\ncoder\") == \"ctcoder\"\nassert solution(\"?bb????\\ncoder\") == \"dtcoder\"\nassert solution(\"?cc????\\ncoder\") == \"etcoder\"\nassert solution(\"?dd????\\ncoder\") == \"ftcoder\"\nassert solution(\"?ee????\\ncoder\") == \"gtcoder\"\nassert solution(\"?ff????\\ncoder\") == \"htcoder\"\nassert solution(\"?gg????\\ncoder\") == \"itcoder\"\nassert solution(\"?hh????\\ncoder\") == \"jtcoder\"\nassert solution(\"?ii????\\ncoder\") == \"ktcoder\"\nassert solution(\"?jj????\\ncoder\") == \"ltcoder\"\nassert solution(\"?kk????\\ncoder\") == \"mtcoder\"\nassert solution(\"?ll????\\ncoder\") == \"ntcoder\"\nassert solution(\"?mm????\\ncoder\") == \"otcoder\"\nassert solution(\"?nn????\\ncoder\") == \"ptcoder\"\nassert solution(\"?oo????\\ncoder\") == \"qtcoder\"\nassert solution(\"?pp????\\ncoder\") == \"rtcoder\"\nassert solution(\"?qq????\\ncoder\") == \"stcoder\"\nassert solution(\"?rr????\\ncoder\") == \"ttcoder\"\nassert solution(\"?ss????\\ncoder\") == \"utcoder\"\nassert solution(\"?tt????\\ncoder\") == \"vtcoder\"\nassert solution(\"?uu????\\ncoder\") == \"wtcoder\"\nassert solution(\"?vv????\\ncoder\") == \"ytcoder\"\nassert solution(\"?ww????\\ncoder\") == \"ztcoder\"\nassert solution(\"?xx????\\ncoder\") == \"atcoder\"\nassert solution(\"?yy????\\ncoder\") == \"btcoder\"\nassert solution(\"?zz????\\ncoder\") == \"ctcoder\"\nassert solution(\"?aa????\\ncoder\") == \"dtcoder\"\nassert solution(\"?bb????\\ncoder\") == \"etcoder\"\nassert solution(\"?cc????\\ncoder\") == \"ftcoder\"\nassert solution(\"?dd????\\ncoder\") == \"gtcoder\"\nassert solution(\"?ee????\\ncoder\") == \"htcoder\"\nassert solution(\"?ff????\\ncoder\") == \"itcoder\"\nassert solution(\"?gg????\\ncoder\") == \"jtcoder\"\nassert solution(\"?hh????\\ncoder\") == \"ktcoder\"\nassert solution(\"?ii????\\ncoder\") == \"ltcoder\"\nassert solution(\"?jj????\\ncoder\") == \"mtcoder\"\nassert solution(\"?kk????\\ncoder\") == \"ntcoder\"\nassert solution",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"atcoder\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"atcoder\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('ss\\nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"UNRESTORABLE\"\nassert solution(\"notacontainstreach\") == \"UNRESTORABLE\"\nassert solution(\"?\") == \"UNRESTORABLE\"",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\\n\"\nassert solution(\"1999\\n2002\") == \"1982\\n\"\nassert solution(\"1998\\n2001\") == \"1985\\n\"\nassert solution(\"1997\\n2000\") == \"1989\\n\"\nassert solution(\"1996\\n1999\") == \"1988\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\\n\", \"Test Case Failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2002\\n2017\\n') == '2032\\n'\nassert solution('100\\n50\\n') == '150\\n'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\\n\"\nassert solution(\"5000\\n5000\") == \"10000\\n\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2002') == '2032', \"The solution is incorrect.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2002\\n2017\\n\") == \"2032\\n\"\nassert solution(\"50\\n100\\n\") == \"150\\n\"\nassert solution(\"1000\\n1010\\n\") == \"2010\\n\"\nassert solution(\"1000\\n1000\\n\") == \"2000\\n\"\nassert solution(\"1000\\n1000\\n\") == \"1990\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 100
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2002\\n2017\\n\") == \"2032\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"string\") == 4, \"Test failed for sample input 1\"\nassert solution(\"letter\") == 2, \"Test failed for sample input 2\"\nassert solution(\"aaaaaa\") == 0, \"Test failed for sample input 3\"\nassert solution(\"uncopyrightable\") == 13, \"Test failed for sample input 4\"\nassert solution(\"ambidextrously\") == 12, \"Test failed for sample input 5\"\nassert solution(\"assesses\") == 1, \"Test failed for sample input 6\"",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"string\") == 4, \"Incorrect output for input string\"\nassert solution(\"letter\") == 2, \"Incorrect output for input letter\"\nassert solution(\"aaaaaa\") == 0, \"Incorrect output for input aaaaaa\"\nassert solution(\"uncopyrightable\") == 13, \"Incorrect output for input uncopyrightable\"\nassert solution(\"ambidextrously\") == 12, \"Incorrect output for input ambidextrously\"\nassert solution(\"assesses\") == 1, \"Incorrect output for input assesses\"",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('string') == 4\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\nassert solution('assesses') == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('string') == 4\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\nassert solution('assesses') == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"string\") == 4, \"Test case 1 failed\"\nassert solution(\"letter\") == 2, \"Test case 2 failed\"\nassert solution(\"aaaaaa\") == 0, \"Test case 3 failed\"\nassert solution(\"uncopyrightable\") == 13, \"Test case 4 failed\"\nassert solution(\"ambidextrously\") == 12, \"Test case 5 failed\"\nassert solution(\"assesses\") == 1, \"Test case 6 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test case failed: Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(100000000, 500, 3) == \"TLE\"\nassert solution(100000000, 50, 3) == \"AC\"\nassert solution(100000000, 10001, 5) == \"TLE\"\nassert solution(100000000, 10000, 5) == \"AC\"\nassert solution(19931568, 1000000, 6) == \"TLE\"",
        "num_ids_2": 51,
        "num_ids_4": 107
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"100000000 500 3\"\n) == \"TLE\"\n\nassert solution(\n    \"100000000 50 3\"\n) == \"AC\"\n\nassert solution(\n    \"100000000 10001 5\"\n) == \"TLE\"\n\nassert solution(\n    \"100000000 10000 5\"\n) == \"AC\"\n\nassert solution(\n    \"19931568 1000000 6\"\n) == \"TLE\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('100000000 500 3') == 'TLE', 'Your code is incorrect.'\nassert solution('100000000 50 3') == 'AC', 'Your code is incorrect.'\nassert solution('100000000 10001 5') == 'TLE', 'Your code is incorrect.'\nassert solution('100000000 10000 5') == 'AC', 'Your code is incorrect.'\nassert solution('100000000 19931568 6') == 'TLE', 'Your code is incorrect.'",
        "num_ids_2": 59,
        "num_ids_4": 123
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) == 'AC'\nassert solution(stdin) == 'TLE'\nassert solution(stdin) ==",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {input()}, expected {expected_output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n1\\n2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n2\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n3\\n4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\\n2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\\n2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n3\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n2\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n3\\n4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\\n0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 4\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n3\\n4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 4\"\n\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\\n1\\n2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\\n4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\n4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\") == \"2 0 0",
        "num_ids_2": 559,
        "num_ids_4": 923
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\nSample Input 1:2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\nSample Output 1:4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\nSample Input 2:2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\nSample Output 2:2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\nSample Input 3:2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\nSample Output 3:0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\nSample Input 4:2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\nSample Output 4:2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\\nSample Input 5:2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\\nSample Output 5:4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"",
        "num_ids_2": 361,
        "num_ids_4": 676
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"\"\"\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n\"\"\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"\"\"\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n\"\"\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"\"\"\n0 0 0 4\n4 16 8 2\n2 64 32 4\n0 0 2048 64\n\"\"\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"\"\"\n2 0 0 0\n4 16 8 0\n2 64 32 4\n1024 1024 64 4\n\"\"\"\n\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"\"\"\n4 4 8 0\n8 4 0 0\n32 32 0 0\n32 32 32 0\n\"\"\"",
        "num_ids_2": 108,
        "num_ids_4": 216
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\"\n\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"",
        "num_ids_2": 199,
        "num_ids_4": 398
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4'\nassert solution('2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0') == '4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0'",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('H 2\\nO\\nSample Output 1: 0\\nSample Input 2: C2H6 10\\nSample Output 2: 6\\nSample Input 3: CH3OH 1\\nSample Output 3: 1\\nSample Input 4: C6H6OCH2O 10\\nSample Output 4: 0\\nSample Input 5: C6H14 10\\nSample Output 5: 12\\n') == '0\\n6\\n1\\n12\\n'\n\nsolution('H 2\\nO\\nSample Output 1: 0\\nSample Input 2: C2H6 10\\nSample Output 2: 6\\nSample Input 3: CH3OH 1\\nSample Output 3: 1\\nSample Input 4: C6H6OCH2O 10\\nSample Output 4: 0\\nSample Input 5: C6H14 10\\nSample Output 5: 12\\n')\n\nsolution('H 2\\nO\\nSample Output 1: 0\\nSample Input 2: C2H6 10\\nSample Output 2: 6\\nSample Input 3: CH3OH 1\\nSample Output 3: 1\\nSample Input 4: C6H6OCH2O 10\\nSample Output 4: 0\\nSample Input 5: C6H14 10\\nSample Output 5: 12\\n')",
        "num_ids_2": 134,
        "num_ids_4": 134
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"H 2\\nO\\nSample Input 1\\nSample Output 1\\nSample Input 2\\nSample Output 2\\nSample Input 3\\nSample Output 3\\nSample Input 4\\nSample Output 4\\nSample Input 5\\nSample Output 5\") == \"0\\n6\\n12\\n\"\nassert solution(\"C2H6 10\\nC3H8\\nSample Input 2\\nSample Output 2\\nSample Input 3\\nSample Output 3\\nSample Input 4\\nSample Output 4\\nSample Input 5\\nSample Output 5\") == \"6\\n12\\n\"\nassert solution(\"CH3OH 1\\nCH4\\nSample Input 3\\nSample Output 3\\nSample Input 4\\nSample Output 4\\nSample Input 5\\nSample Output 5\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\nSample Input 4\\nSample Output 4\\nSample Input 5\\nSample Output 5\") == \"0\\n\"",
        "num_ids_2": 160,
        "num_ids_4": 266
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    H 2\n    O\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    C2H6 10\n    C3H8\n    \"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n    CH3OH 1\n    CH4\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    C6H6OCH2O 10\n    HCN\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    C6H14 10\n    C5H10\n    \"\"\"\n) == \"12\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"H 2\\nO\\nSample Input 1: H 2\\nSample Input 2: C2H6 10\\nSample Input 3: CH3OH 1\\nSample Input 4: C6H6OCH2O 10\\nSample Input 5: C6H14 10\\nSample Output 1: 0\\nSample Output 2: 6\\nSample Output 3: 1\\nSample Output 4: 0\\nSample Output 5: 12\") == \"0\\n6\\n1\\n0\\n12\\n\", \"Test 1\"\n\nassert solution(\"H 2\\nO\\nSample Input 1: H 2\\nSample Input 2: C2H6 10\\nSample Input 3: CH3OH 1\\nSample Input 4: C6H6OCH2O 10\\nSample Input 5: C6H14 10\\nSample Output 1: 0\\nSample Output 2: 6\\nSample Output 3: 1\\nSample Output 4: 0\\nSample Output 5: 12\") == \"6\\n1\\n1\\n0\\n12\\n\", \"Test 2\"\n\nassert solution(\"H 2\\nO\\nSample Input 1: H 2\\nSample Input 2: C2H6 10\\nSample Input 3: CH3OH 1\\nSample Input 4: C6H6OCH2O 10\\nSample Input 5: C6H14 10\\nSample Output 1: 0\\nSample Output 2: 6\\nSample Output 3: 1\\nSample Output 4: 0\\nSample Output 5: 12\") == \"1\\n1\\n0\\n12\\n\", \"Test 3\"\n\nassert solution(\"H 2\\nO\\nSample Input 1: H 2\\nSample Input 2: C2H6 10\\nSample Input 3: CH3OH 1\\nSample Input 4: C6H6OCH2O 10\\nSample Input 5: C6H14 10\\nSample Output 1: 0\\nSample Output 2: 6\\nSample Output 3: 1\\nSample Output 4: 0\\nSample Output 5: 12\") == \"0\\n0\\n0\\n12\\n\", \"Test 4\"\n\nassert solution(\"H 2\\nO\\nSample Input 1: H 2\\nSample Input 2: C2H6 10\\nSample Input 3: CH3OH 1\\nSample Input 4: C6H6OCH2O 10\\nSample Input 5: C6H14 10\\nSample Output 1: 0\\nSample Output 2: 6\\nSample Output 3: 1\\nSample Output 4: 0\\nSample Output 5: 12\") == \"0\\n0\\n0\\n12\\n\", \"Test 5\"",
        "num_ids_2": 300,
        "num_ids_4": 594
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\", \"The second string is not a valid message for the password ABC.\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\", \"The second string is a valid message for the password ABC.\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\", \"The second string is not a valid message for the password ABC.\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\", \"The second string is not a valid message for the password SECRET.\"",
        "num_ids_2": 67,
        "num_ids_4": 130
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'PASS', 'Your solution is incorrect'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"The solution for the given input is '{solution(input())}' but the expected output is '{output}'.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\", \"Sample Input 1 failed\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\", \"Sample Input 2 failed\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\", \"Sample Input 3 failed\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\", \"Sample Input 4 failed\"\n\nfrom typing import List",
        "num_ids_2": 54,
        "num_ids_4": 102
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    ( [] [] [] )\n    '''\n) == '] 7'\n\nassert solution(\n    '''\n    (() [] [] [] )\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    ([[] []] ())\n    '''\n) == '] 20'\n\nassert solution(\n    '''\n    ([[[]] []] (()))\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    [ { { () () () () } ] ]\n    '''\n) == '] 20'\n\nassert solution(\n    '''\n    [ { [[()]] (({})) } ] () {}\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([] [[]] ())\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([] [[]] []))\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]))\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]]) [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]]) [[]]) [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]]) [[]]) [[]]) [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]]) [[]])\n    '''\n) == 'ok so far'\n\nassert solution(\n    '''\n    (([[]] [[]]) [[]])",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"([[]] ]\") == \"] 7\", \"Expected ']' to be ']'\")\nassert solution(\"(([] [[]] ())\") == \"ok so far\", \"Expected 'ok so far'\")\nassert solution(\"([ { { () () () } ] ] () {}\") == \"] 20\", \"Expected ']' to be ']'\")",
        "num_ids_2": 47,
        "num_ids_4": 78
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"ok so far\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"((\") == (\")\" + \"ok so far\" + \" \" + \"]\" + \" 7\")\nassert solution(\"([])\") == (\"ok so far\" + \" \" + \"]\" + \" 7\")\nassert solution(\"(((()))\") == (\"ok so far\" + \" \" + \"]\" + \" 20\")\nassert solution(\"[({[])})\") == (\"ok so far\" + \" \" + \"]\" + \" 20\")\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 49,
        "num_ids_4": 101
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"8\n([] [] ]\"\"\") == \"]\"\nassert solution(\"\"\"13\n(([] [[]] ())\"\"\") == \"ok so far\"\nassert solution(\"\"\"21\n[ { { () () () () } ] ]\"\"\") == \"]\"\nassert solution(\"\"\"27\n[ { [[()]] (({})) } ] () {}\"\"\") == \"ok so far\"",
        "num_ids_2": 11,
        "num_ids_4": 23
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('[( ] [])') == [(']', 7)]\nassert solution('([)] [] [)]') == [(']', 7)]\nassert solution('([)] [] [(])') == [(']', 7)]\nassert solution('([)] [] []]') == [(']', 7)]\nassert solution('((({})))') == [('}', 17)]\nassert solution('({ { }})') == [('}', 17)]\nassert solution('({ { () () () } }') == [('}', 17)]\nassert solution('[] [] [] [] [] []') == [(']', 0), ('}', 0), ('}', 0), ('}', 0)]\nassert solution('(([] [] [)] []))') == [(']', 7), ('}', 0), ('}', 0), ('}', 0), ('}', 0)]\nassert solution('({ { () () () () } })') == [('}', 17)]\nassert solution('(()())') == [(')', 11)]\nassert solution('(()())') == [(')', 11)]\nassert solution('(()()') == [(')', 11)]\nassert solution('(())') == [(')', 5)]\nassert solution('(())') == [(')', 5)]\nassert solution('()') == []\nassert solution('') == []",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'ok so far'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"([]) [] ]\") == \"]\"\nassert solution(\"(([] [[]] ())\") == \"ok so far\"\nassert solution(\"([ { { () () () } ] ] )\") == \"] 20\"\nassert solution(\"([ { [[()]] (({})) } ] ) () {}\") == \"ok so far\"",
        "num_ids_2": 28,
        "num_ids_4": 73
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(8) == (']', 7)\nassert solution(13) == ('ok so far',)\nassert solution(21) == (']', 20)\nassert solution(27) == ('ok so far',)",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n8\n([] [] ]\n''') == (']', 7)\n\nassert solution('''\n13\n(([] [[]] ())\n''') == ('ok so far',)\n\nassert solution('''\n21\n[ { { () () () () } ]\n''') == (']', 20)\n\nassert solution('''\n27\n[ { [[()]] (({})) } ] () {}\n''') == ('ok so far',)",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Fair Game\"\nassert solution(stdin) == \"Player 1 lost\"\nassert solution(stdin) == \"Player 2 lost\"",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\napple\\near\\nreal\\nletters\\nstyle\") == \"Fair Game\"\nassert solution(\"3\\napple\\neasy\\napple\\nSample Output 2:Player 1 lost\\n\") == \"Player 1 lost\"\nassert solution(\"2\\napple\\nneat\\nSample Output 3:Player 2 lost\\ndef solution(stdin: str) -> str: pass\\n\") == \"Player 2 lost\"",
        "num_ids_2": 61,
        "num_ids_4": 106
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Fair Game\", \"Output: \" + solution(stdin)\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([5, 'apple', 'ear','real', 'letters','style']) == 'Fair Game'\nassert solution([3, 'apple', 'extra', 'apple']) == 'Player 1 lost'\nassert solution([2, 'apple', 'neat']) == 'Player 2 lost'",
        "num_ids_2": 47,
        "num_ids_4": 67
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\napple\\near\\nreal\\nletters\\nstyle\") == \"Fair Game\"\nassert solution(\"3\\napple\\nextra\\napple\\n\") == \"Player 1 lost\"\nassert solution(\"2\\napple\\nneat\\n\") == \"Player 2 lost\"",
        "num_ids_2": 50,
        "num_ids_4": 72
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Fair Game\", \"Player 1 lost\"\nassert solution() == \"Player 1 lost\", \"Player 2 lost\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\napple\\near\\nreal\\nletters\\nstyle\") == \"Fair Game\"\nassert solution(\"3\\napple\\neat\\napple\") == \"Player 1 lost\"\nassert solution(\"2\\napple\\neat\\n\") == \"Player 2 lost\"",
        "num_ids_2": 48,
        "num_ids_4": 69
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\napple\\near\\nreal\\nletters\\nstyle\") == \"Fair Game\"\nassert solution(\"3\\napple\\ne\\napple\\n\") == \"Player 1 lost\"\nassert solution(\"2\\napple\\nneat\\n\") == \"Player 2 lost\"",
        "num_ids_2": 49,
        "num_ids_4": 71
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == expected1\nassert solution(sample_input2) == expected2\nassert solution(sample_input3) == expected3",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\napple\\near\\nreal\\nletters\\nstyle\") == \"Fair Game\"\nassert solution(\"3\\napple\\neat\\napple\") == \"Player 1 lost\"\nassert solution(\"2\\napple\\neat\\n\") == \"Player 2 lost\"",
        "num_ids_2": 48,
        "num_ids_4": 69
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10000\") == \"10010\"\nassert solution(\"10\") == \"1010\"",
        "num_ids_2": 36,
        "num_ids_4": 50
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000\\n* 100\\n100\\n\") == \"100000\", \"Error: Incorrect solution.\"\nassert solution(\"10000\\n+ 10\\n\") == \"10010\", \"Error: Incorrect solution.\"\nassert solution(\"10\\n+ 1000\\n\") == \"1010\", \"Error: Incorrect solution.\"\n",
        "num_ids_2": 72,
        "num_ids_4": 103
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10000\") == \"10010\"\nassert solution(\"10\") == \"1010\"",
        "num_ids_2": 36,
        "num_ids_4": 50
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000\\n*\\n100\\n\") == \"100000\", \"Test failed: expected output '100000', but got '{}'.\".format(solution(\"1000\\n*\\n100\\n\"))\nassert solution(\"10000\\n+\\n10\\n\") == \"10010\", \"Test failed: expected output '10010', but got '{}'.\".format(solution(\"10000\\n+\\n10\\n\"))\nassert solution(\"10\\n+\\n1000\\n\") == \"1010\", \"Test failed: expected output '1010', but got '{}'.\".format(solution(\"10\\n+\\n1000\\n\"))",
        "num_ids_2": 126,
        "num_ids_4": 184
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000\") == \"100000\", \"Sample Input 1\"\nassert solution(\"10000\") == \"100100\", \"Sample Input 2\"\nassert solution(\"10\") == \"1010\", \"Sample Input 3\"",
        "num_ids_2": 49,
        "num_ids_4": 69
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000\\n*\\n100\") == \"100000\"\nassert solution(\"10000\\n+\\n10\") == \"10010\"\nassert solution(\"10\\n+\\n1000\") == \"1010\"",
        "num_ids_2": 49,
        "num_ids_4": 71
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000\\n* 100\\n100\") == \"100000\"\nassert solution(\"10000\\n+ 10\\n10\") == \"10010\"\nassert solution(\"10\\n+ 1000\\n10\") == \"1010\"",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000\\n*\") == \"100000\", \"Test 1\"\nassert solution(\"10000\\n+\") == \"10010\", \"Test 2\"\nassert solution(\"10\\n+\") == \"1010\", \"Test 3\"",
        "num_ids_2": 51,
        "num_ids_4": 72
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000\") == 100000, \"Incorrect output\"\nassert solution(\"10000\") == 100100, \"Incorrect output\"\nassert solution(\"10\") == 1010, \"Incorrect output\"",
        "num_ids_2": 45,
        "num_ids_4": 63
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '100000'\nassert solution(open('input2.txt', 'r')) == '10010'\nassert solution(open('input3.txt', 'r')) == '1010'",
        "num_ids_2": 44,
        "num_ids_4": 65
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 out\") == \"3\\n\", \"Input not correct\"\nassert solution(\"8 in\") == \"6\\n\", \"Input not correct\"\nassert solution(\"52 out\") == \"8\\n\", \"Input not correct\"",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 out\") == \"3\", \"Case 1\"\nassert solution(\"8 in\") == \"6\", \"Case 2\"\nassert solution(\"52 out\") == \"8\", \"Case 3\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '3', \"Expected output: 3\\nActual output: {}\".format(solution(input()))\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 out\") == \"3\\n\", \"The output should be '3\\n' but is {}\".format(solution(\"8 out\"))\nassert solution(\"8 in\") == \"6\\n\", \"The output should be '6\\n' but is {}\".format(solution(\"8 in\"))\nassert solution(\"52 out\") == \"8\\n\", \"The output should be '8\\n' but is {}\".format(solution(\"52 out\"))",
        "num_ids_2": 66,
        "num_ids_4": 101
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"52 out\") == \"8\\n\"\nassert solution(\"8 out\") == \"3\\n\"\nassert solution(\"8 in\") == \"6\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: expected {expected}, got {solution(input())}\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 out\") == \"3\", \"Incorrect output for sample input 1\"\nassert solution(\"8 in\") == \"6\", \"Incorrect output for sample input 2\"\nassert solution(\"52 out\") == \"8\", \"Incorrect output for sample input 3\"",
        "num_ids_2": 40,
        "num_ids_4": 61
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 out') == '3\\n', \"The output is incorrect.\"\nassert solution('8 in') == '6\\n', \"The output is incorrect.\"\nassert solution('52 out') == '8\\n', \"The output is incorrect.\"",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 out\") == \"3\\n\", \"Your code is incorrect\"\nassert solution(\"8 in\") == \"6\\n\", \"Your code is incorrect\"\nassert solution(\"52 out\") == \"8\\n\", \"Your code is incorrect\"\n\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n\nfrom typing import List\n",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\", \"Sample Input 1\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\", \"Sample Input 2\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\", \"Sample Input 3\"",
        "num_ids_2": 50,
        "num_ids_4": 74
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\", \"Test failed\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\", \"Test failed\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\", \"Test failed\"",
        "num_ids_2": 46,
        "num_ids_4": 68
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"2018\") == \"yes\"\nassert solution(stdin=\"2019\") == \"no\"\nassert solution(stdin=\"2020\") == \"yes\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution is not correct. Expected: {expected_output}, Received: {solution(input())}\"\n\nclass Solution:\n    def is_optimal_launch_window(self, y: int) -> str:\n        if y < 2018 or y > 10000:\n            return \"no\"\n        \n        current_year = y\n        \n        for i in range(1, 13):\n            next_year = current_year + i\n            \n            if next_year == 2018:\n                next_year = 2020\n            \n            if self.is_year_big_finished(current_year) and self.is_year_big_finished(next_year):\n                return \"yes\"\n                \n            if self.is_year_big_finished(current_year):\n                current_year = next_year\n            else:\n                next_year = current_year\n                current_year = next_year\n                \n        return \"no\"\n    \n    def is_year_big_finished(self, year: int) -> bool:\n        # TODO: Implement the code to check if the year is big finished\n        pass",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"yes\"\nassert solution(sample_input_2) == \"no\"\nassert solution(sample_input_3) == \"yes\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2018\") == \"yes\", \"Test 1 failed\"\nassert solution(\"2019\") == \"no\", \"Test 2 failed\"\nassert solution(\"2020\") == \"yes\", \"Test 3 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2018) == 'yes'\nassert solution(2019) == 'no'\nassert solution(2020) == 'yes'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2018) == 'yes'\nassert solution(2019) == 'no'\nassert solution(2020) == 'yes'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 'yes'\nassert solution(2018) == 'yes'\nassert solution(2019) == 'no'\nassert solution(2020) == 'yes'",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"64\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1820000\"\n\nfrom typing import List",
        "num_ids_2": 21,
        "num_ids_4": 37
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected, f\"Your code is incorrect. Expected {expected}, but got {solution}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 64, \"The code is not correct\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test {test_case} failed. Expected: {expected}, got: {solution(input())}\"\nfor test_case in range(1, len(input()) + 1):\n    expected = input()\n    print(f\"\\nTest {test_case}:\")\n    print(f\"Input: {expected}\")\n    print(f\"Output: {solution(expected)}\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\\n\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\\n\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\\n\") == \"1820000\"",
        "num_ids_2": 67,
        "num_ids_4": 115
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 64, \"The expected output is not correct\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"64\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"1820000\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 43
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\") == 64\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\") == 0\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\") == 1820000",
        "num_ids_2": 61,
        "num_ids_4": 106
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\") == \"1820000\"",
        "num_ids_2": 63,
        "num_ids_4": 109
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 0\\n30 270 995 996 997 998 999') == '2 330\\n'\nassert solution('7 1\\n30 270 995 996 997 998 999') == '2 570\\n'\nassert solution('7 2\\n30 270 995 996 997 998 999') == '0 0\\n'",
        "num_ids_2": 92,
        "num_ids_4": 136
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2 330\", \"The output is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(30) == \"2 330\"\nassert solution(30) == \"2 330\"\nassert solution(30) == \"2 330\"\nassert solution(30) == \"2 330\"\nassert solution(30) == \"2 330\"\nassert solution(30) == \"2 330\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Test {t+1} failed.\\nExpected: {expected}\\nGot: {solution(stdin)}\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2 330\"\nassert solution() == \"2 570\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == '2 330'\nassert solution(sample_input2) == '2 570'\nassert solution(sample_input3) == '0 0'\n\nfrom typing import List",
        "num_ids_2": 34,
        "num_ids_4": 49
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n\nfrom typing import List",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aaaaaaaa') == 1, \"Test case 1 failed\"\nassert solution('abbaabbaabba') == 2, \"Test case 2 failed\"\nassert solution('abcdef') == 6, \"Test case 3 failed\"",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test case 1 failed.\"\nassert solution(sample_input_2) == sample_output_2, \"Test case 2 failed.\"\nassert solution(sample_input_3) == sample_output_3, \"Test case 3 failed.\"",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40') == '2\\n1 2\\n\\n1 2\\n'\n\nassert solution('5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9') == '1\\n1\\n\\n1\\n'\n\nassert solution('3 6\\n1 2 4\\n11 12 15 19 24 30') == '0\\n\\n\\n'",
        "num_ids_2": 126,
        "num_ids_4": 170
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\\n\") == \"2\\n1 2\\n\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\n\") == \"1\\n1\\n\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\\n\") == \"0\\n\"",
        "num_ids_2": 118,
        "num_ids_4": 160
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40') == '2\\n1 2\\n'\nassert solution('5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9') == '1\\n1\\n'\nassert solution('3 6\\n1 2 4\\n11 12 15 19 24 30') == '0\\n'",
        "num_ids_2": 114,
        "num_ids_4": 154
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\\n1 2\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\\n1\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\") == \"0\"",
        "num_ids_2": 110,
        "num_ids_4": 148
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40') == '2\\n1 2'\nassert solution('5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9') == '1\\n1'\nassert solution('3 6\\n1 2 4\\n11 12 15 19 24 30') == '0'",
        "num_ids_2": 110,
        "num_ids_4": 148
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"2\"\nassert solution(sample_input2) == \"1\"\nassert solution(sample_input3) == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5551212) == 1\nassert solution(5519876) == 0\nassert solution(5055555) == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5551212\") == \"1\", \"Solution for sample input 1 is incorrect\"\nassert solution(\"5519876\") == \"0\", \"Solution for sample input 2 is incorrect\"\nassert solution(\"5055555\") == \"0\", \"Solution for sample input 3 is incorrect\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5551212) == 1\nassert solution(5519876) == 0\nassert solution(5055555) == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"Enter a telephone number: \")) == 1, \"Invalid telephone number\"\nassert solution(input(\"Enter a telephone number: \")) == 0, \"Invalid telephone number\"\nassert solution(input(\"Enter a telephone number: \")) == 0, \"Invalid telephone number\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5551212) == 1, \"The number should be routed to the directory information operator\"\nassert solution(5519876) == 0, \"The number should not be routed to the directory information operator\"\nassert solution(5055555) == 0, \"The number should not be routed to the directory information operator\"",
        "num_ids_2": 59,
        "num_ids_4": 89
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index+1} failed: Expected output: {expected_output}, got: {solution(input())}\" for index, expected_output in enumerate([1, 0, 0, 0])\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5551212) == 1, \"Invalid Input 1\"\nassert solution(5519876) == 0, \"Invalid Input 2\"\nassert solution(5055555) == 0, \"Invalid Input 3\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5551212) == 1, \"Invalid input 1.\"\nassert solution(5519876) == 0, \"Invalid input 2.\"\nassert solution(5055555) == 0, \"Invalid input 3.\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5551212\") == \"1\", \"Test Case 1 failed: incorrect output\"\nassert solution(\"5519876\") == \"0\", \"Test Case 2 failed: incorrect output\"\nassert solution(\"5055555\") == \"0\", \"Test Case 3 failed: incorrect output\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5551212) == 1\nassert solution(5519876) == 0\nassert solution(5055555) == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"0/1\"\nassert solution(sample_input_2) == \"5/9\"\nassert solution(sample_input_3) == \"-40/1\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0/1\", \"Your solution is incorrect.\"\nassert solution(stdin) == \"5/9\", \"Your solution is incorrect.\"\nassert solution(stdin) == \"-40/1\", \"Your solution is incorrect.\"",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(32/1) == \"0/1\"\nassert solution(33/1) == \"5/9\"\nassert solution(-40/1) == \"-40/1\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"32/1\") == \"0/1\", \"Your solution is incorrect\"\nassert solution(\"33/1\") == \"5/9\", \"Your solution is incorrect\"\nassert solution(\"-40/1\") == \"-40/1\", \"Your solution is incorrect\"",
        "num_ids_2": 42,
        "num_ids_4": 64
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(32/1) == \"0/1\"\nassert solution(33/1) == \"5/9\"\nassert solution(-40/1) == \"-40/1\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"32/1\") == \"0/1\", \"Sample Input 1 should output '0/1'\"\nassert solution(\"33/1\") == \"5/9\", \"Sample Input 2 should output '5/9'\"\nassert solution(\"-40/1\") == \"-40/1\", \"Sample Input 3 should output '-40/1'\"",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='32/1') == '0/1'\nassert solution(stdin='33/1') == '5/9'\nassert solution(stdin='-40/1') == '-40/1'",
        "num_ids_2": 34,
        "num_ids_4": 53
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\\n\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\\n\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\\n\") == \"Retrograde\"\n",
        "num_ids_2": 58,
        "num_ids_4": 89
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"Transposition\", \"Test 1\"\nassert solution(7) == \"Inversion\", \"Test 2\"\nassert solution(7) == \"Retrograde\", \"Test 3\"",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\\n\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\\n\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\\n\") == \"Retrograde\"",
        "num_ids_2": 58,
        "num_ids_4": 89
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(['3', 'C E G', 'D F# A']) == 'Transposition'\nassert solution(['7', 'C C G G A A G', 'C C F F D# D# F']) == 'Inversion'\nassert solution(['7', 'A B C D E F G', 'G F E D C B A']) == 'Retrograde'\n",
        "num_ids_2": 54,
        "num_ids_4": 84
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\\n\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\\n\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\\n\") == \"Retrograde\"",
        "num_ids_2": 58,
        "num_ids_4": 89
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, \"C E G\\nD F# A\") == \"Transposition\"\nassert solution(7, \"C C G G A A G\\nC C F F D# D# F\") == \"Inversion\"\nassert solution(7, \"A B C D E F G\\nG F E D C B A\") == \"Retrograde\"\n",
        "num_ids_2": 54,
        "num_ids_4": 84
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\") == \"Retrograde\"",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\nC E G\\nD F# A') == 'Transposition'\nassert solution('7\\nC C G G A A G\\nC C F F D# D# F') == 'Inversion'\nassert solution('7\\nA B C D E F G\\nG F E D C B A') == 'Retrograde'\n\nfrom typing import List",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\") == \"Retrograde\"",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\") == \"Retrograde\"",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Example 1 failed\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Example 2 failed\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Example 3 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 82
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa', \"The solution for the first example is incorrect.\"\nassert solution('Cat-a-pil-lar') == 'Catacillar', \"The solution for the second example is incorrect.\"\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh', \"The solution for the third example is incorrect.\"",
        "num_ids_2": 61,
        "num_ids_4": 94
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Test 1\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Test 2\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Test 3\"",
        "num_ids_2": 51,
        "num_ids_4": 79
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Test 1\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Test 2\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Test 3\"",
        "num_ids_2": 51,
        "num_ids_4": 79
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Test 1 failed\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Test 2 failed\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Test 3 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 82
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"First test case failed\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Second test case failed\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Third test case failed\"",
        "num_ids_2": 53,
        "num_ids_4": 82
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"14\"\nassert solution(4) == \"16\"\nassert solution(1) == \"6\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '6\\n'\nassert solution(stdin) == '16\\n'\nassert solution(stdin) == '14\\n'",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14\n",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 14\nassert solution(4) == 16\nassert solution(5) == 6\nassert solution(10) == 6\nassert solution(10000) == 6",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14\n",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 6, \"Fidget spinners are so 2017; this year's rage are fidget cubes.\"\nassert solution(4) == 16, \"A fidget cube is a cube with unit side lengths, which you hold in your hand and fidget with.\"\nassert solution(3) == 14, \"Kids these days, right?\"",
        "num_ids_2": 69,
        "num_ids_4": 88
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='1\\n') == '6\\n'\nassert solution(stdin='4\\n') == '16\\n'\nassert solution(stdin='3\\n') == '14\\n'\n",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"6\\n\"\nassert solution(4) == \"16\\n\"\nassert solution(3) == \"14\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 14\nassert solution(4) == 16",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\\n\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\\n\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 81
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\"",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\\n\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\\n\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\\n\"\n",
        "num_ids_2": 55,
        "num_ids_4": 81
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\"\n\nfrom typing import List\n",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in [\n    ([5, 6], [1, 2, 3, 4, 5]),\n    ([5, 10], [4, 8, 1, 9, 7]),\n    ([4, 10], [1, 3, 1, 7]),\n]",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\") == \"3\\n\"\nassert solution(\"5 10\\n4 8 1 9 7\") == \"2\\n\"\nassert solution(\"4 10\\n1 3 1 7\") == \"4\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\nSample Output 1: 3\\n\\nSample Input 2: 5 10\\n4 8 1 9 7\\nSample Output 2: 2\\n\\nSample Input 3: 4 10\\n1 3 1 7\\nSample Output 3: 4\") == \"3\\n2\\n4\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 6\\n1 2 3 4 5\\n6') == '3\\n'\nassert solution('5 10\\n4 8 1 9 7\\n1') == '2\\n'\nassert solution('4 10\\n1 3 1 7\\n2') == '4\\n'",
        "num_ids_2": 57,
        "num_ids_4": 84
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\"",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution_1) == 3\nassert solution(solution_2) == 2\nassert solution(solution_3) == 4",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"possible\", \"Incorrect solution\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\\n\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\\n\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\\n\") == \"impossible\"\n",
        "num_ids_2": 57,
        "num_ids_4": 86
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=solution.py) == \"possible\"\nassert solution(stdin=solution.py) == \"impossible\"\nassert solution(stdin=solution.py) == \"impossible\"",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\") == \"impossible\"\n",
        "num_ids_2": 53,
        "num_ids_4": 80
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"possible\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0\\n') == 'possible'\nassert solution('1 2\\n1 0 0\\n0 1 0\\n') == 'impossible'\nassert solution('1 2\\n0 1 0\\n1 0 1\\n') == 'impossible'",
        "num_ids_2": 57,
        "num_ids_4": 86
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\\n2 0 1\\n3 1 2\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\\n3 0 0\\n1 1 2\") == \"impossible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 1\\n1 2 2\\n0 0 0\") == \"impossible\"",
        "num_ids_2": 81,
        "num_ids_4": 122
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\\n\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\\n\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\\n\") == \"impossible\"\n\nfrom typing import List",
        "num_ids_2": 57,
        "num_ids_4": 86
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\\n\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\\n\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\") == \"impossible\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 86
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"possible\"\nassert solution(sample_input2) == \"impossible\"\nassert solution(sample_input3) == \"impossible\"",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"2 3\") == \"1.875\\n\"\nassert solution(\"6 2\") == \"4.25\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index+1} failed.\" for index, (input, expected_output) in enumerate(test_cases)",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"1.875\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n2 3\\n6 2\") == \"1\\n1.875\\n4.25\"\nassert solution(\"1 2\\n2 4\\n4 2\") == \"2\\n2.625\\n5\"\nassert solution(\"3 4\\n5 6\\n2 1\") == \"1\\n1.5625\\n4.125\"\nassert solution(\"2 3\\n4 5\\n1 2\") == \"1.5\\n1.75\\n1.875\"",
        "num_ids_2": 67,
        "num_ids_4": 141
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n\"\nassert solution() == \"1.875\\n\"\nassert solution() == \"4.25\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\", \"Expected output 1\"\nassert solution() == \"1.875\", \"Expected output 2\"\nassert solution() == \"4.25\", \"Expected output 3\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n\nimport math",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case_number} failed: expected {expected_output}, got {solution(stdin)}\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed for input: {input()}, expected output: {expected}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0 0\\n1 4\\n1 6\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 0\\n2 1 1\\n\") == \"0 0\\n0 0\\n\"\nassert solution(\"4 2 7\\n\") == \"1 4\\n\"\nassert solution(\"3 0 0\\n\") == \"1 6\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 72
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test cases failed\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"Expected output is {expected_output_1}, but got {solution(sample_input_1)}\"\nassert solution(sample_input_2) == expected_output_2, f\"Expected output is {expected_output_2}, but got {solution(sample_input_2)}\"\nassert solution(sample_input_3) == expected_output_3, f\"Expected output is {expected_output_3}, but got {solution(sample_input_3)}\"\n\nsample_input_1 = \"1 1 0\"\nsample_input_2 = \"4 2 7\"\nsample_input_3 = \"3 0 0\"\n\nexpected_output_1 = \"0 0\"\nexpected_output_2 = \"1 4\"\nexpected_output_3 = \"1 6\"",
        "num_ids_2": 80,
        "num_ids_4": 120
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n') == '1\\n'\nassert solution('4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\\n') == '0\\n'\nassert solution('6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n') == '0\\n'",
        "num_ids_2": 62,
        "num_ids_4": 107
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\"\n\ninput_cases = [\n    (\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n\", \"1\"),\n    (\"4\\nBWWB\\nBWBW\\nWBBW\\nWBWW\\n\", \"0\"),\n    (\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n\", \"0\"),\n]\n\nexpected_output = [\"1\", \"0\", \"0\"]\n\nfor case in input_cases:\n    stdin, expected = case\n    assert solution(stdin) == expected, f\"Expected output: {expected}, got: {solution(stdin)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"The expected output is '{expected}' but got '{solution(input())}'.\"\nfor input in [\n    \"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\",\n    \"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\",\n    \"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\",\n]:\n    assert solution(input) == \"0\", f\"The solution for input '{input}' is incorrect.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\") == \"1\"\nassert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\") == \"0\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBWWBBW\\nWWBWBB\") == \"0\"",
        "num_ids_2": 54,
        "num_ids_4": 90
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input_, output_ in zip(stdin, output):\n    assert solution(input_) == output_, f\"Input: {input_}\\nOutput: {output_}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\nBWWB\\nBWBB\\nWBBW\\nWBWW') == '1\\n'\nassert solution('4\\nBWWB\\nBWBW\\nWBBW\\nWBWW') == '0\\n'\nassert solution('6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB') == '0\\n'",
        "num_ids_2": 58,
        "num_ids_4": 101
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\") == \"1\"\nassert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\") == \"0\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\") == \"0\"",
        "num_ids_2": 54,
        "num_ids_4": 95
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n') == '1\\n'\nassert solution('4\\nBWWB\\nBWBW\\nWBBW\\nWBWW\\n') == '0\\n'\nassert solution('6\\nBWBWWB\\nBWBWBW\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n') == '0\\n'",
        "num_ids_2": 62,
        "num_ids_4": 107
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nBWWB\\nBWB\\nBWWB\\nBWBW\") == \"1\"\nassert solution(\"4\\nBWWB\\nBWB\\nBWWB\\nBWBW\") == \"0\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\") == \"0\"",
        "num_ids_2": 50,
        "num_ids_4": 91
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: expected output {expected_output}, got {solution(input())}\"\nfor i, (test_input, expected_output) in enumerate([\n        (input(), \"1\"),\n        (input(), \"0\"),\n        (input(), \"0\")\n    ], start=1):\n    assert solution(test_input) == expected_output, f\"Test case {i+1} failed: expected output {expected_output}, got {solution(test_input)}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution, \"No solution provided\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected: '{expected}', Received: '{solution(stdin)}'\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n1\\n2\\n1\\n2\\n') == '\\n2\\n1\\n'\nassert solution('2\\n6\\n3\\n4\\n2\\n4\\n1\\n3\\n2\\n1\\n4\\n5\\n8\\n') == '\\n3 4\\n3 2\\n1 2\\n3 7\\n'",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sys.stdin) == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\"\"\"\n) == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\n\nassert solution(\n    \"\"\"\n3\n1 2\n3 4\n5 6\n7 8\n\"\"\"\n) == \"3 1\\n3 4\\n5 2\\n7 8\"\n\nassert solution(\n    \"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n\"\"\"\n) == \"10 5\\n10 6\\n10 7\\n10 8\\n10 9\\n10 10\"\n\nassert solution(\n    \"\"\"\n5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\"\"\"\n) == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sys.stdin) == sys.stdout.strip()\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == ['2 1\\n3 4\\n3 2\\n1 2\\n3 7\\n']",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == expected, f\"Expected: {expected}, but got: {solution()}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution",
        "num_ids_2": 3,
        "num_ids_4": 3
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\nassert solution([3,2,0,-4], 3) == False\nassert solution([3,2,0,-4], 4) == False\nassert solution([3,2,0,-4], 5) == False\nassert solution([3,2,0,-4], 6) == False\nassert solution([3,2,0,-4], 7) == False\nassert solution([3,2,0,-4], 8) == False\nassert solution([3,2,0,-4], 9) == False\nassert solution([3,2,0,-4], 10) == False\nassert solution([3,2,0,-4], 11) == False\nassert solution([3,2,0,-4], 12) == False\nassert solution([3,2,0,-4], 13) == False\nassert solution([3,2,0,-4], 14) == False\nassert solution([3,2,0,-4], 15) == False\nassert solution([3,2,0,-4], 16) == False\nassert solution([3,2,0,-4], 17) == False\nassert solution([3,2,0,-4], 18) == False\nassert solution([3,2,0,-4], 19) == False\nassert solution([3,2,0,-4], 20) == False\nassert solution([3,2,0,-4], 21) == False\nassert solution([3,2,0,-4], 22) == False\nassert solution([3,2,0,-4], 23) == False\nassert solution([3,2,0,-4], 24) == False\nassert solution([3,2,0,-4], 25) == False\nassert solution([3,2,0,-4], 26) == False\nassert solution([3,2,0,-4], 27) == False\nassert solution([3,2,0,-4], 28) == False\nassert solution([3,2,0,-4], 29) == False\nassert solution([3,2,0,-4], 30) == False\nassert solution([3,2,0,-4], 31) == False\nassert solution([3,2,0,-4], 32) == False\nassert solution([3,2,0,-4], 33) == False\nassert solution([3,2,0,-4], 34) == False\nassert solution([3,2,0,-4], 35) == False\nassert solution([3,2,0,-4], 36) == False\nassert solution([3,2,0,-4], 37) == False\nassert solution([3,2,0,-4], 38) == False\nassert solution([3,2,0,-4], 39) == False\nassert solution([3,2,0,-4], 40) == False\nassert solution([3,2,0,-4], 41) == False\nassert solution([3,2,0,-4], 42) == False\nassert solution([3,2,0,-4], 43) == False\nassert solution([3,2,0,-4], 44) == False\nassert solution([3,2,0,-4], 45) == False\nassert solution([3,2,0,-4], 46) == False\nassert solution([3,2,0,-4], 47) == False\nassert solution([3,2,0,-4], 48) == False\nassert solution([3,2,0,-4], 49) == False\nassert solution([3,2,0,-4], 50) == False\nassert solution([3,2,0,-4], 51) == False\nassert solution([3,2,0,-4], 52) == False\nassert solution([3,2,0,-4], 53) == False\nassert solution([3,2,0,-4], 54) == False\nassert solution([3,2,0,-4], 55) == False\nassert solution([3,2,0,-4], 56) == False\nassert solution([3,2,0,-4], 57) == False\nassert solution",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\nassert solution([3,2,0,-4], 2) == False\nassert solution([1,2], 1) == False\nassert solution([1], 0) == False",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input: head = [3,2,0,-4], pos = 1\\nOutput: true\\nExplanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).\\n\") == \"true\"\n\nassert solution(\"Input: head = [1,2], pos = 0\\nOutput: true\\nExplanation: There is a cycle in the linked list, where the tail connects to the 0th node.\\n\") == \"true\"\n\nassert solution(\"Input: head = [1], pos = -1\\nOutput: false\\nExplanation: There is no cycle in the linked list.\\n\") == \"false\"",
        "num_ids_2": 112,
        "num_ids_4": 151
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"[3,2,0,-4]\", 1) == True\nassert solution(\"[1,2]\", 0) == True\nassert solution(\"[1]\", -1) == False\nassert solution(\"[1]\", -100) == False",
        "num_ids_2": 30,
        "num_ids_4": 54
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([3,2,0,-4],1) == True\nassert solution([1,2],0) == True\nassert solution([1],-1) == False",
        "num_ids_2": 28,
        "num_ids_4": 39
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\n\nassert solution([3,2,0,-4], -1) == True\nassert solution([1,2], 1) == True\nassert solution([1], 0) == False\n\nassert solution([3,2,0,-4], 2) == False\nassert solution([1,2], -2) == False\nassert solution([1], 1) == False\n\nassert solution([3,2,0,-4], 3) == False\nassert solution([1,2], -3) == False\nassert solution([1], 2) == False\n\nassert solution([3,2,0,-4], 4) == False\nassert solution([1,2], -4) == False\nassert solution([1], 3) == False\n\nassert solution([3,2,0,-4], 5) == False\nassert solution([1,2], -5) == False\nassert solution([1], 4) == False",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\nassert solution([3,2,0,-4], 0) == True\nassert solution([1,2], -1) == True\nassert solution([1,2,3,4,5], 2) == True\nassert solution([1,2,3,4,5], -1) == False\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1], \"Test failed: Expected [0, 1], but got {}\".format(solution([2, 7, 11, 15], 9))\n\nassert solution([2, 7, 11, 15], 22) == [0, 2], \"Test failed: Expected [0, 2], but got {}\".format(solution([2, 7, 11, 15], 22))",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1]\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='[\"2\", \"7\", \"11\", \"15\", \"9\"]') == ['0', '1']",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2,7,11,15\") == [0,1]",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1]",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 7 11 15 18\") == [0, 1], \"Invalid answer\"\nassert solution(\"2 3 5 7 11\") == [0, 2], \"Invalid answer\"\nassert solution(\"5 12 21\") == [1, 4], \"Invalid answer\"\nassert solution(\"10 15\") == [0, 1], \"Invalid answer\"\nassert solution(\"3 4 6 8 10\") == [2, 5], \"Invalid answer\"",
        "num_ids_2": 54,
        "num_ids_4": 98
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1]",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"nums = [2, 7, 11, 15], target = 9\") == [0, 1]",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2,7,11,15') == [0, 1], \"Test failed\"\nassert solution('1,2,3,4,5') == [0, 1], \"Test failed\"\nassert solution('1,2,3,4,5,6') == [0, 1], \"Test failed\"\nassert solution('1,2,3,4,5,7,8') == [2, 3], \"Test failed\"\nassert solution('1,2,3,4,5,8') == [1, 3], \"Test failed\"\nassert solution('1,2,3,5,6,7') == [1, 4], \"Test failed\"",
        "num_ids_2": 50,
        "num_ids_4": 106
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"[2, 7, 11, 15]\") == \"[0, 1]\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n\") == \"0\\n\"\nassert solution(\"4\\n\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 0\nassert solution(4) == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 0, \"The number of intersections between pairs of diagonals in the given polygon is 0.\"\n\nassert solution(4) == 1, \"The number of intersections between pairs of diagonals in the given polygon is 1.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 0 #1",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == 0\nassert solution(\"4\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution.__name__ == \"__main__\"\n\nN = int(input())\n\nintersections = 0\n\nfor i in range(N-2):\n    for j in range(i+1, N):\n        for k in range(j+1, N):\n            if i!= j and i!= k and j!= k:\n                x1, y1 = j, i\n                x2, y2 = k, j\n                dx, dy = x2 - x1, y2 - y1\n                intersection_point = (x1 + dx*dy, y1 + dx - dy*dx)\n                intersections += 1\n                break\n\nprint(intersections)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 0, \"The number of intersections between pairs of diagonals is 0\"\nassert solution(4) == 1, \"The number of intersections between pairs of diagonals is 1\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"0\\n\"\nassert solution(\"4\\n\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed.\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"1\", \"Test 1\"\nassert solution(5) == \"0\", \"Test 2\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2 2 1\") == \"4\\n\"\nassert solution(\"1\\n3 7\") == \"impossible\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"impossible\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('example.txt')) == \"impossible\"\nassert solution(open('input.txt')) == \"4\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Test failed: {output}!= {stdin}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Sample Input 1\\n2\\n1 2 2 1\\nSample Output 1\\n4\\n\\nSample Input 2\\n1\\n3 7\\nSample Output 2\\nimpossible\\ndef solution(stdin: str) -> str:\\n    pass\") == \"impossible\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\\n\"\nassert solution() == \"impossible\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2\\n1 2 2 1\\n1 3 7\\n\") == \"4\\n\"\nassert solution(stdin=\"1\\n3 7\\n\") == \"impossible\\n\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2 2 1\\nSample Input 1: 2\\nSample Output 1: 4\\n\") == \"4\\n\"\nassert solution(\"1\\n3 7\\nSample Input 2: 1\\nSample Output 2: impossible\\n\") == \"impossible\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"impossible\"\n\nimport sys\nfrom typing import List",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution should return {output}, not {solution(input())}\"\nprint(f\"Solution passed.\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"184 1\\n123450995 1\") == 180\nassert solution(\"184 1\\n123450995 2\") == 123451000",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"184 1\") == \"180\"\nassert solution(\"123450995 1\") == \"123451000\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nprint(\"All test cases passed!\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"180\"\nassert solution() == \"123451000\"\n\nsolution = '''\nfrom typing import List",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"C: \")) == output(\"C: \")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"184 1\\n123450995 1\") == 180\nassert solution(stdin=\"123450995 1\\n123450996 1\") == 123451000",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"184 1\") == \"180\"\nassert solution(\"123450995 1\") == \"123451000\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('184 1') == '180'\nassert solution('123450995 1') == '123451000'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n3 3\\n\") == \"0.000000\\n\"\nassert solution(\"3\\n0 1\\n1 0\\n1 1\\n\") == \"0.000000\\n\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0.000000\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3 3\\n') == '0.000000'\nassert solution('3\\n0 1\\n1 0\\n1 1\\n') == '0.000000'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    3\n    1 1\n    2 2\n    3 3\n    '''\n) == '0.000000'\n\nassert solution(\n    '''\n    3\n    0 1\n    1 0\n    1 1\n    '''\n) == '0.000000'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000\\n'\nassert solution('3\\n0 1\\n1 0\\n1 1') == '0.000000\\n'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n3 3\\n\") == \"0.000000\"\nassert solution(\"3\\n0 1\\n1 0\\n1 1\\n\") == \"0.000000\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"0.000000\", \"The solution is not correct\"\nassert solution(sample_input2) == \"0.000000\", \"The solution is not correct\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Test case failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == '0.000000'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The solution provided is incorrect. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == \"1\\n2\\n4\\n\"\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == \"1\\n2\\n6\\n8\\n\"",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == [1, 2, 4]\nassert solution(sample_input2) == [1, 2, 6, 8]",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == [\"1\", \"2\", \"4\"]\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == [\"1\", \"2\", \"6\", \"8\"]\n",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\\n\") == \"1\\n2\\n4\\n\"\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\\n\") == \"1\\n2\\n6\\n8\\n\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n2\\n4\\n6\\n8\\n\", \"Please implement the solution function\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == \"1\\n2\\n4\\n\"\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == \"1\\n2\\n6\\n8\\n\"\nassert solution(\"100\\n1\\n1\") == \"1\\n\"",
        "num_ids_2": 115,
        "num_ids_4": 135
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == \"1\\n2\\n4\\n\"\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == \"1\\n2\\n6\\n8\\n\"",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"your code here\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == [1, 2, 4]\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == [1, 2, 6, 8]",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == \"1\\n2\\n4\\n\", \"Test 1 failed.\"\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == \"1\\n2\\n6\\n8\\n\", \"Test 2 failed.\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"1\\n2\\n3\\n4\\n\", \"Test 3 failed.\"",
        "num_ids_2": 127,
        "num_ids_4": 165
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\") == \"60\\n\"\nassert solution(\"2 2 2\") == \"8\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == \"60\\n\"\nassert solution(\"2 2 2\") == \"8\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 5\") == \"60\\n\"\nassert solution(\"2 2 2\") == \"8\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 5\") == \"60\", \"Test 1\"\nassert solution(\"2 2 2\") == \"8\", \"Test 2\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4 5') == 60\nassert solution('2 2 2') == 8",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == 60\nassert solution(\"2 2 2\") == 8",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4 5') == '60\\n', \"Expected '60\\n', got {}\".format(solution('3 4 5'))\nassert solution('2 2 2') == '8\\n', \"Expected '8\\n', got {}\".format(solution('2 2 2'))",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1.6666666666666667, \"Your solution is incorrect\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Expected {output1}, but got {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected {output2}, but got {solution(input2)}\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3, 3, 0, 2]) == '1.6666666666666667'\nassert solution([3, 1, -1, 4]) == '2.5'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 1.6666666666666667, \"Test 1 failed\"\nassert solution(3) == 2.5, \"Test 2 failed\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1.6666666666666667, \"Output is not as expected\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1.6666666666666667'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 0 2\\n') == '1.6666666666666667\\n'\nassert solution('3\\n1 -1 4\\n') == '2.5\\n'",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n3 0 2') == '1.6666666666666667', 'Sample Input 1'\nassert solution('3\\n1 -1 4') == '2.5', 'Sample Input 2'",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 0 2') == '1.6666666666666667'\nassert solution('3\\n1 -1 4') == '2.5'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 0 2\\n') == '1.6666666666666667\\n'\nassert solution('3\\n1 -1 4\\n') == '2.5\\n'",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 3\") == \"6\", \"Test 1\"\nassert solution(\"15 12\") == \"7\", \"Test 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 3\") == \"6\"\nassert solution(\"15 12\") == \"7\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"7\", \"Output not as expected\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"The output is not correct. Expected {output()}, but got {solution(input())}.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"7 3\\n\"\n) == \"6\\n\", \"The output should be 6.\"\n\nassert solution(\n    \"15 12\\n\"\n) == \"7\\n\", \"The output should be 7.\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output {expected_output}, got {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, \"Test Case 1 Failed\"\nassert solution(input2) == output2, \"Test Case 2 Failed\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3\") == \"6\", \"Input 1: 7 3\"\nassert solution(\"15 12\") == \"7\", \"Input 2: 15 12\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 3\") == \"6\\n\"\nassert solution(\"15 12\") == \"7\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"123864 123865\") == \"1\\n\"\nassert solution(stdin=\"198765 198769\") == \"0\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_solution\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Got: {solution(input())}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"123864 123865\") == \"1\\n\"\nassert solution(\"198765 198769\") == \"0\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"123864 123865\") == 1, \"Incorrect output 1\"\nassert solution(\"198765 198769\") == 0, \"Incorrect output 2\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"123864 123865\") == \"1\\n\"\nassert solution(\"198765 198769\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"123864 123865\") == \"1\\n\"\nassert solution(\"198765 198769\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 0.5\nassert solution(2) == 0.66666667\n\nfrom random import randint\nimport math",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == output(), f\"Solution error: {output()}\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Solution should be {expected}, but got {solution(stdin)}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 0.5\nassert solution(20) == 0.66666667",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n') == '0.50000000\\n'\nassert solution('3\\n') == '0.66666667\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == output(), f\"Test failed with input {stdin}, expected output {output()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.50000000\"\n\nimport math",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"0.66666667\"\n\nSolution:\nTo solve this problem, we need to find the probability that one or more people wind up giving gifts to themselves. We can do this by counting the number of times each name appears in the list of names and then dividing the sum by the total number of names.\n\nLet's write the code for this.\n\nWe can solve this problem by iterating through the names and checking if each name appears at least once in the list of names. We can use a dictionary to keep track of the number of times each name appears.\n\n```python\nimport sys",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 0.66666667, \"The output should be 0.66666667\"\nassert solution(1) == 0.5, \"The output should be 0.5\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0.50000000\\n\", \"Solution should return 0.50000000\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(180) == \"triple 20\\ntriple 20\\ntriple 20\\n\", \"The output is incorrect.\"\nassert solution(96) == \"triple 19\\ndouble 15\\nsingle 9\\n\", \"The output is incorrect.\"\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(180) == \"triple 20\", \"Test 1 failed\"\nassert solution(96) == \"triple 19\", \"Test 2 failed\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(180) == \"triple 20\\ntriple 20\\ntriple 20\"\nassert solution(96) == \"triple 19\\ndouble 15\\nsingle 9\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 4 7') == '168\\n'\nassert solution('5 2 2') == '36\\n'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 168\nassert solution() == 36",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4 7\") == \"168\\n\"\nassert solution(\"5 2 2\") == \"36\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 4 7') == '168', \"Expected output 1: 168\"\nassert solution('5 2 2') == '36', \"Expected output 2: 36\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"168\", \"The solution should be '168'.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4 7\") == 168\nassert solution(\"5 2 2\") == 36",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"7\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1\\n'\nassert solution() == '7\\n'\nassert solution() == '1\\n'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"7\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Solution does not match with expected output. Input: {input_data}, Expected Output: {expected_output}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3 10\") == \"7\\n\"\nassert solution(\"2\\n3 8 5 8\") == \"1\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3 10\\n\") == \"7\\n\"\nassert solution(\"2\\n3 8\\n5 8\\n\") == \"1\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"7\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 10\\nSample Output 1:7\\n\\n2\\n3 8\\n5 8\") == \"7\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7\\n\", \"Output is incorrect\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\nSimon says smile.') =='smile.\\n'\nassert solution('3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.') =='raise your right hand. raise your left hand.\\n'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \" smile.\\n\", \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.'\nassert solution('3\\nSimon says raise your right hand. Lower your right hand.\\nSimon says raise your left hand.\\n') =='raise your right hand. raise your left hand.'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.\\n'\nassert solution('3\\nSimon says raise your right hand.Lower your right hand.Simon says raise your left hand.\\n') =='raise your right hand. raise your left hand.\\n'\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.\\n'\nassert solution('3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n') =='raise your right hand. raise your left hand.\\n'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\nSimon says smile.\\n2\\nSimon says raise your right hand. Lower your right hand.\\n3\\nSimon says raise your left hand.\") == \" smile. \"\nassert solution(\"4\\nSimon says jackpot.\\n5\\nSimon says treasure hunt.\\n6\\nSimon says justice.\\n7\\nSimon says kick ass.\\n8\\nSimon says zombie.\\n9\\nSimon says kill the zombie.\") == \" jackpot. \"\nassert solution(\"10\\nSimon says happy birthday.\\n11\\nSimon says justice.\\n12\\nSimon says defeat the zombie.\\n13\\nSimon says stop treasure hunt.\\n14\\nSimon says break the rules.\\n15\\nSimon says stop playing.\\n16\\nSimon says put on your hat.\\n17\\nSimon says play the game.\\n18\\nSimon says go away.\\n19\\nSimon says win the game.\\n20\\nSimon says quit the game.\") == \" happy birthday. \"",
        "num_ids_2": 123,
        "num_ids_4": 265
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\"\n\nHere's the complete solution:\n\n```python\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"2\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n\") == \" raise your right hand. \\nraise your left hand. \\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\nSimon says smile.\") == \" smile.\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\") == \" raise your right hand. raise your left hand.\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"5\\nSimon says play the game.\\n\") == \"\\n\"\nassert solution(\"6\\nSimon says quit.\\n\") == \"\\n\"\nassert solution(\"7\\nSimon says smile again.\\n\") == \" smile again.\\n\"\nassert solution(\"8\\nSimon says play the game again.\\n\") == \" play the game again.\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 103
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == 5\nassert solution(\"1 2 4 6 10 12 16 18\") == 0",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == 5, \"Output should be 5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == 0, \"Output should be 0\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\\n\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\\n\", \"Incorrect output\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\\n\", \"Incorrect output\"\nassert solution(\"2 1 1 1 1 1 1 1\") == \"4\\n\", \"Incorrect output\"\nassert solution(\"3 2 1 1 1 1 1 1\") == \"3\\n\", \"Incorrect output\"\nassert solution(\"4 3 2 1 1 1 1 1\") == \"2\\n\", \"Incorrect output\"\nassert solution(\"5 4 3 2 1 1 1 1\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"6 5 4 3 2 1 1 1\") == \"0\\n\", \"Incorrect output\"\nassert solution(\"7 6 5 4 3 2 1 1\") == \"3\\n\", \"Incorrect output\"\nassert solution(\"8 7 6 5 4 3 2 1\") == \"2\\n\", \"Incorrect output\"\nassert solution(\"9 8 7 6 5 4 3 2\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"10 9 8 7 6 5 4 3\") == \"0\\n\", \"Incorrect output\"\nassert solution(\"11 10 9 8 7 6 5 4\") == \"5\\n\", \"Incorrect output\"\nassert solution(\"12 11 10 9 8 7 6 5\") == \"4\\n\", \"Incorrect output\"\nassert solution(\"13 12 11 10 9 8 7 6\") == \"3\\n\", \"Incorrect output\"\nassert solution(\"14 13 12 11 10 9 8 7\") == \"2\\n\", \"Incorrect output\"\nassert solution(\"15 14 13 12 11 10 9 8\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"16 15 14 13 12 11 10 9\") == \"0\\n\", \"Incorrect output\"\nassert solution(\"17 16 15 14 13 12 11 10\") == \"5\\n\", \"Incorrect output\"\nassert solution(\"18 17 16 15 14 13 12 11\") == \"4\\n\", \"Incorrect output\"",
        "num_ids_2": 68,
        "num_ids_4": 128
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\", \"Your code is incorrect\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\", \"Your code is incorrect\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == 5\nassert solution(\"1 2 4 6 10 12 16 18\") == 0",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '5\\n'\nprint(\"All tests passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == 5\nassert solution(\"1 2 4 6 10 12 16 18\") == 0\n\nfrom typing import List\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed: {solution(input_data)}!= {expected_output}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\nAA\nAT\nTT\nTC\n''') == '''\n3\n0 1\n1 2\n2 3\n'''\n\nassert solution('''\n4 1\nA\nA\nG\nT\n''') == '''\n2\n0 1\n0 2\n0 3\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\nAA\nAT\nTT\nTC\n''') == '''\n3\n0 1\n1 2\n2 3\n'''\n\nassert solution('''\n4 1\nA\nA\nG\nT\n''') == '''\n2\n0 1\n0 2\n0 3\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n0 1\\n1 2\\n2 3\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\nA\\nA\\aG\\aT\\n') == '3\\n0 1\\n1 2\\n2 3\\n'\nassert solution('4 1\\nA\\nA\\aG\\aT\\n') == '2\\n0 1\\n0 2\\n0 3\\n'",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\nA\\nA\\aG\\pT\\n\") == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(\"4 1\\nA\\nA\\aG\\pT\\n\") == \"2\\n0 1\\n0 2\\n0 3\"\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == '3\\n0 1\\n1 2\\n2 3'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '3\\n0 1\\n1 2\\n2 3'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaaa\") == \"a\", \"Test 1\"\nassert solution(\"ab\") == -1, \"Test 2\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"a\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"-1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1\nassert solution('abc') == 'a'\nassert solution('aaaaa') == 'a'\nassert solution('bbabab') == 'a'\nassert solution('abba') == -1\nassert solution('a') == 'a'\nassert solution('aa') == 'a'\nassert solution('aaa') == 'a'\nassert solution('aab') == 'a'\nassert solution('baa') == 'a'\nassert solution('aaba') == 'a'\nassert solution('abaa') == 'a'\nassert solution('abaaa') == 'a'",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaaa\") == \"a\", \"Sample Input 1 should output 'a', but got '{}'\".format(solution(\"aaaa\"))\nassert solution(\"ab\") == -1, \"Sample Input 2 should output -1, but got '{}'\".format(solution(\"ab\"))\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"\nDr. Chaz will have 80 pieces of chicken left over!\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution(open(\"example_1.txt\", \"r\").read()) == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution(open(\"example_2.txt\", \"r\").read()) == \"Dr. Chaz will have 1 piece of chicken left over!\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Error: {solution(stdin)}!= {expected_output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!\\n'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!\\n'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"20 100\\n\"\n) == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\n\nassert solution(\n    \"2 3\\n\"\n) == \"Dr. Chaz will have 1 piece of chicken left over!\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=sample_input_1) == sample_output_1\nassert solution(stdin=sample_input_2) == sample_output_2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('20 100') == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution('2 3') == \"Dr. Chaz needs 1 more piece of chicken!\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(20, 100) == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution(2, 3) == \"Dr. Chaz will have 1 piece of chicken left over!\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\") == \"-2\\n\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\") == \"0\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n') == '-2\\n'\nassert solution('3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n') == '0\\n'",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\"\n\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"0\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 10\n1 1 2\n2 2 2\n3 2 1\"\"\") == 0\n\nassert solution(\"\"\"3 30\n1 1 1\n5 2 3\n5 2 1\"\"\") == 20",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == \"0\\n\" # Solution 1\nassert solution(open('input2.txt', 'r')) == \"-2\\n\" # Solution 2",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"Error: Please provide the input\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\\n\"\nassert solution() == \"-2\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\\n\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"0\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"0\\n\"\n\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"-2\\n\"\n\nassert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"0\\n\"\n\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"0\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Test failed for input: {input}, expected output: {output}\"\nfor _ in range(10):\n    input, output = random.choice(test_cases), random.choice(test_cases)\n    assert solution(input) == output, f\"Test failed for input: {input}, expected output: {output}\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala'\n\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#as\\n') == 'as'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"kala\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#as\\n\") == \"as\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'kala'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"kala\"\nassert solution(input()) == \"as\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'kala'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"kala\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#as\\n\") == \"as\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\") == \"kala\\n\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#as\") == \"as\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nfrom typing import List",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"kala\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 'kala'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == \"kala\"\nassert solution(open(\"input2.txt\").read()) == \"as\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Incorrect solution\"\nassert solution(\"NSEW\") == 4, \"Incorrect solution\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"WNMWMME\") == 10, \"Solution should return 10\"\nassert solution(\"NSEW\") == 4, \"Solution should return 4\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Test case 1 failed\"\nassert solution(\"NSEW\") == 4, \"Test case 2 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample.in', 'r').read()) == '10'\nassert solution(open('sample_2.in', 'r').read()) == '4'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"The solution should output 10 characters\"\nassert solution(\"NSEW\") == 4, \"The solution should output 4 characters\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"WNEENWEENEENE\") == \"10\", \"Incorrect solution\"\nassert solution(\"NSEW\") == \"4\", \"Incorrect solution\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"WNEENWEENEENE\") == \"10\", \"Test 1 failed\"\nassert solution(\"NSEW\") == \"4\", \"Test 2 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('WNEENWEENEENE') == 10, \"Expected output 1 is not correct\"\nassert solution('NSEW') == 4, \"Expected output 2 is not correct\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Solution is incorrect.\"\nassert solution(\"NSEW\") == 4, \"Solution is incorrect.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Test 1 failed\"\nassert solution(\"NSEW\") == 4, \"Test 2 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\nproblems ahead'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead'\nassert solution('1 0 2 4') == '1 - 0 = 2 - 4\\n1 * 2 = 2 * 4\\nproblems ahead'\nassert solution('0 1 3 2') == '0 + 1 = 3 + 2\\n0 * 3 = 3 - 2\\nproblems ahead'\nassert solution('3 1 2 5') == '3 + 1 = 4 + 5\\n3 * 2 = 4 * 5\\nproblems ahead'",
        "num_ids_2": 106,
        "num_ids_4": 188
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n\"\nassert solution(\"2 4 3 0\") == \"2 - 4 = 3 - 0\\n2 / 4 = 3 / 0\\n\"\nassert solution(\"1 2 3 5\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"1 2 3 2\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"1 2 3 0\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"0 4 2 2\") == \"0 - 4 = 2 - 2\\n0 / 4 = 2 / 4\\n\"\nassert solution(\"2 4 3 0\") == \"2 - 4 = 3 - 0\\n2 / 4 = 3 / 0\\n\"\nassert solution(\"1 2 3 5\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"1 2 3 2\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"1 2 3 0\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 / 4\\n\"\nassert solution(\"2 4 3 0\") == \"2 * 4 = 6 - 0\\n2 + 4 = 6 * 0\\n2 + 4 = 6 + 0\\n2 / 4 = 6 / 0\\n\"\nassert solution(\"1 2 3 5\") == \"1 * 2 = 3 - 4\\n1 + 2 = 3 * 4\\n1 + 2 = 3 + 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"1 2 3 2\") == \"1 * 2 = 3 - 4\\n1 + 2 = 3 * 4\\n1 + 2 = 3 + 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"1 2 3 4\") == \"1 * 2 = 3 - 4\\n1 + 2 = 3 * 4\\n1 + 2 = 3 + 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"1 2 3 0\") == \"1 * 2 = 3 - 4\\n1 + 2 = 3 * 4\\n1 + 2 = 3 + 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 / 4\\n\"\nassert solution(\"2 4 3 0\") == \"2 * 4 = 6 - 0\\n2 + 4 = 6 * 0\\n2 + 4 = 6 + 0\\n2 / 4 =",
        "num_ids_2": 102,
        "num_ids_4": 180
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', Received output: '{solution(input())}'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\\n\"\nassert solution(\"0 4 2 2\\n\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n\\n\"\nassert solution(\"1 2 3 4\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\\n\"\nassert solution(\"1 2 3 4\\n5 6 7 8\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n5 6 - 7 = 5 - 8\\n5 6 + 7 = 5 + 8\\n5 6 / 7 = 5 - 8\\n\\n\"\nassert solution(\"1 2 3 4\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\\n\"\nassert solution(\"1 2 3 4\\n5 6 7 8\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n5 6 - 7 = 5 - 8\\n5 6 + 7 = 5 + 8\\n5 6 / 7 = 5 - 8\\n\\n\"\nassert solution(\"1 2 3 4\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\\n\"\nassert solution(\"1 2 3 4\\n5 6 7 8\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n5 6 - 7 = 5 - 8\\n5 6 + 7 = 5 + 8\\n5 6 / 7 = 5 - 8\\n\\n\"\nassert solution(\"1 2 3 4\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\\n\"\nassert solution(\"1 2 3 4\\n5 6 7 8\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n5 6 - 7 = 5 - 8\\n5 6 + 7 = 5 + 8\\n5 6 / 7 = 5 - 8\\n\\n\"\nassert solution(\"1 2 3 4\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\\n\"\nassert solution(\"1 2 3 4\\n5 6 7 8\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n5 6 - 7 = 5 - 8\\n5 6 + 7 = 5 + 8\\n5 6 / 7 = 5 - 8\\n\\n\"\nassert solution(\"1 2 3 4\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\\n\"\nassert solution(\"1 2 3 4\\n5 6 7 8\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n5 6 - 7 = 5 - 8\\n5 6 + 7 = 5 + 8\\n5 6 / 7 = 5 - 8\\n\\n\"\nassert solution(\"1 2 3 4\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\\n\"\nassert solution(\"1 2 3 4\\n5 6 7 8\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n5 6",
        "num_ids_2": 110,
        "num_ids_4": 247
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\", \"Sample Input 1\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n\", \"Sample Input 2\"\n",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3\nassert solution(sample_input4) == sample_output4",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str=\"1 2 3 4\\n0 4 2 2\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n\"\nassert solution(input_str=\"0 4 2 2\\n\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead\\n\"\nassert solution(input_str=\"1 2 3 4\\n\\n0 4 2 2\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead\\n\"\nassert solution(input_str=\"0 4 2 2\\n1 2 3 4\\n\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead\\n\"\nassert solution(input_str=\"1 2 3 4\\n\\n0 4 2 2\\n\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead\\n\"\nassert solution(input_str=\"1 2 3 4\\n\\n0 4 2 2\\n\\n\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead\\n\"\nassert solution(input_str=\"1 2 3 4\\n\\n0 4 2 2\\n\\n\\n\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead\\n\"\nassert solution(input_str=\"1 2 3 4\\n\\n0 4 2 2\\n\\n\\n\\n\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead\\n\"",
        "num_ids_2": 175,
        "num_ids_4": 365
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n\"\nassert solution(\"MAMA TATA\") == \".T..MAMA\\n.T..TATA\\n.T..TATA\\n.A..def solution(stdin: str) -> str:\n    pass\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('MAMA TATA') == '.T..MAMA\\n.T..def\\n.T..def\\n.A..def'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \"\"\"\n.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....\n\"\"\"\n\nassert solution(\"MAMA TATA\") == \"\"\"\n.T..\nMAMA\n.T..\n.A..\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n'\n\nassert solution('MAMA TATA') == '.T..MAMA\\n.T..\\n.A..def solution(stdin: str) -> str:\\npass'",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == output, f\"Output does not match.\\nExpected: {output}\\nActual: {solution(open('input.txt', 'r'))}\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANAAN\\nA....\\nA....\\nA....\\nA....\\nA....\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('BANANA PIDZAMA') == '''\n.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....\n'''\n\nassert solution('MAMA TATA') == '''\n.T..\nMAMA\n.T..\n.A..\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..\\n.def solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \"\"\"\n.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....\n\"\"\"\n\nassert solution(\"MAMA TATA\") == \"\"\"\n.T..\nMAMA\n.T..\n.A..\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n10 14\\n13 17\\n25 26\") == \"10\\n\"\nassert solution(\"2\\n1 365\\n20 28\") == \"365\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 10\nassert solution() == 365",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, \"Incorrect output\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 10\nassert solution == 365",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nsample_input_1 = \"\"\"\n3\n10 14\n13 17\n25 26\n\"\"\"\nsample_output_1 = \"\"\"\n10\n\"\"\"\n\nsample_input_2 = \"\"\"\n2\n1 365\n20 28\n\"\"\"\nsample_output_2 = \"\"\"\n365\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10 14\\n13 17\\n25 26\") == \"10\\n\"\nassert solution(\"2\\n1 365\\n20 28\") == \"365\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"10\", \"The output is incorrect. Please provide the correct solution.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"10\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"10\", \"Your solution is not correct.\"\nassert solution(stdin) == \"365\", \"Your solution is not correct.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 1\\n2 3\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '0 1\\n2 3', \"The solution is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"0 1\\n2 3\\n\", \"Test Case 1\"\nassert solution(\"4\\n\") == \"2 3\\n\", \"Test Case 2\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == '0 1\\n2 3\\n'\n\nHere, we have written a function `solution()` that takes an input of `stdin` parameter. The function returns the output as a string in the desired format.\n\nIn this function, we have defined an `assert` statement that checks if the output is as expected. We have provided the sample inputs and the expected outputs in the function.\n\nYou can run the function and check the output by providing the sample inputs.",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test Case 1\"\nassert solution(sample_input_2) == sample_output_2, \"Test Case 2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 0 1\nassert solution(4) == 2 3",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"0 1\"\nassert solution(4) == \"2 3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == \"0 1\\n\", \"The solution should return '0 1'.\"\nassert solution(4) == \"2 3\\n\", \"The solution should return '2 3'.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=open(\"input.txt\", \"r\").read()) == \"0 1\\n2 3\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"\nA 0 99\nA 0 99\nA 0 99\nA 0 99\n0.4974874372\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed. Expected output: {expected_output}, Actual output: {solution(input_data)}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\\n\\n0.003094117647058823\\n0.016752994117647058\\n\\n0.1965897693\\n\"",
        "num_ids_2": 165,
        "num_ids_4": 165
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\\n\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\\n\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\"\nassert solution(\"4 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\"",
        "num_ids_2": 193,
        "num_ids_4": 193
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"B 100 49\\nA 1 197\\nA 49 100\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"A 1 197\\nA 49 100\\n0.1965897693\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\", \"The input string should be empty\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Output the maximal value of the given expression.\\n\"\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 168\nassert solution(4) == 168\nassert solution(5) == 168\nassert solution(6) == 168\nassert solution(7) == 168\nassert solution(8) == 168\nassert solution(9) == 168\nassert solution(10) == 168\nassert solution(11) == 168\nassert solution(12) == 168\nassert solution(13) == 168\nassert solution(14) == 168\nassert solution(15) == 168\nassert solution(16) == 168\nassert solution(17) == 168\nassert solution(18) == 168\nassert solution(19) == 168\nassert solution(20) == 168\nassert solution(21) == 168\nassert solution(22) == 168\nassert solution(23) == 168\nassert solution(24) == 168\nassert solution(25) == 168\nassert solution(26) == 168\nassert solution(27) == 168\nassert solution(28) == 168\nassert solution(29) == 168\nassert solution(30) == 168\nassert solution(31) == 168\nassert solution(32) == 168\nassert solution(33) == 168\nassert solution(34) == 168\nassert solution(35) == 168\nassert solution(36) == 168\nassert solution(37) == 168\nassert solution(38) == 168\nassert solution(39) == 168\nassert solution(40) == 168\nassert solution(41) == 168\nassert solution(42) == 168\nassert solution(43) == 168\nassert solution(44) == 168\nassert solution(45) == 168\nassert solution(46) == 168\nassert solution(47) == 168\nassert solution(48) == 168\nassert solution(49) == 168\nassert solution(50) == 168\nassert solution(51) == 168\nassert solution(52) == 168\nassert solution(53) == 168\nassert solution(54) == 168\nassert solution(55) == 168\nassert solution(56) == 168\nassert solution(57) == 168\nassert solution(58) == 168\nassert solution(59) == 168\nassert solution(60) == 168\nassert solution(61) == 168\nassert solution(62) == 168\nassert solution(63) == 168\nassert solution(64) == 168\nassert solution(65) == 168\nassert solution(66) == 168\nassert solution(67) == 168\nassert solution(68) == 168\nassert solution(69) == 168\nassert solution(70) == 168\nassert solution(71) == 168\nassert solution(72) == 168\nassert solution(73) == 168\nassert solution(74) == 168\nassert solution(75) == 168\nassert solution(76) == 168\nassert solution(77) == 168\nassert solution(78) == 168\nassert solution(79) == 168\nassert solution(80) == 168\nassert solution(81) == 168\nassert solution(82) == 168\nassert solution(83) == 168\nassert solution(84) == 168\nassert solution(85) == 168\nassert solution(86) == 168\nassert solution(87) ==",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"168\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 168\nprint(\"Tests Passed\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1\\n4\\n3\\n5\\n\") == \"168\"\nassert solution(\"2\\n1\\n1\\n\") == \"1\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2\\n1\\n4\\n3\\n5\\n') == '168\\n', \"Test 1\"\nassert solution('2\\n1\\n1\\n') == '1\\n', \"Test 2\"\n\nfrom typing import List",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"168\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. Expected output: {output}, but got: {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Wrong output for sample input {stdin}\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == expected1, \"Test 1 failed\"\nassert solution(sample_input2) == expected2, \"Test 2 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'CDBEAF'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 3) == \"CBADEF\"\nassert solution(3, 3) == \"CDBEAF\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nABC\\nDEF\\n0\\n\") == \"CBADEF\\n\"\nassert solution(\"3 3\\nABC\\nDEF\\n2\\n\") == \"CDBEAF\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Function should return the expected output.\"\nassert solution(sample_input_2) == sample_output_2, \"Function should return the expected output.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 3) == 'CBADEF', \"Expected 'CBADEF', got '{}'.\".format(solution(3, 3))  # Test case 1\n\nassert solution(3, 3) == 'CDBEAF', \"Expected 'CDBEAF', got '{}'.\".format(solution(3, 3))  # Test case 2",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nABC\\nDEF\\n0\") == \"CBADEF\"\nassert solution(\"3 3\\nABC\\nDEF\\n2\") == \"CDBEAF\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nABC\\nDEF\\n0\") == \"CBADEF\\n\"\nassert solution(\"3 3\\nABC\\nDEF\\n2\") == \"CDBEAF\\n\"\n\nfrom typing import List",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test {test_num} failed: {solution(input())}!= {expected}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n') == '5', \"Croatia's national television programme is broadcasting an entertainment show titled \\\"I Love Croatia\\\", modeled on the licensed format I love my country. In this show two teams of celebrities and public figures play various games which require knowledge about Croatia. One of the games is Happy Birthday, which will be used in this task, although somewhat altered.\n\nEight players numbered one through eight are seated in a circle (see picture). One of them is holding a box which will explode after 3 minutes and 30 seconds from the beginning of the game when some colorful confetti will be blown out. The game begins with a question to the player holding the box. If the players answers incorrectly or skips the question, he is immediately given the next question. If the player answers correctly, he passes the box to the first player seated on his left and then that player gets the next question.\n\nYou are given the numbered label of the player who has the box in the beginning and the outcomes of the first $N$ questions asked. Determine the numbered label of the player who had the box when it finally exploded. The question outcome is described with the following data - time passed from the beginning of the question being asked to the moment an answer was given and whether the answer was true (\u201cT\u201d), false (\u201cN\u201d) or skipped (\u201cP\u201d). The time between giving the answer and asking the next question shouldn\u2019t be taken into consideration, as well as time necessary for the box to be passed to the next player. The box will surely explode on a player\u2019s turn.\"\n\nassert solution('3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n') == '4', \"Croatia's national television programme is broadcasting an entertainment show titled \\\"I Love Croatia\\\", modeled on the licensed format I love my country. In this show two teams of celebrities and public figures play various games which require knowledge about Croatia. One of the games is Happy Birthday, which will be used in this task, although somewhat altered.\n\nEight players numbered one through eight are seated in a circle (see picture). One of them is holding a box which will explode after 3 minutes and 30 seconds from the beginning of the game when some colorful confetti will be blown out. The game begins with a question to the player holding the box. If the players answers incorrectly or skips the question, he is immediately given the next question. If the player answers correctly, he passes the box to the first player seated on his left and then that player gets the next question.\n\nYou are given the numbered label of the player who has the box in the beginning and the outcomes of the first $N$ questions asked. Determine the numbered label of the player who had the box when it finally exploded. The question outcome is described with the following data - time passed from the beginning of the question being asked to the moment an answer was given and whether the answer was true (\u201cT\u201d), false (\u201cN\u201d) or skipped (\u201cP\u201d). The time between giving the answer and asking the next question shouldn\u2019t be taken into consideration, as well as time necessary for the box to be passed to the next player. The box will surely explode on a player\u2019s turn.\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 261,
        "num_ids_4": 261
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nActual: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\\n\", \"Sample Input 1\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\") == \"4\\n\", \"Sample Input 2\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T') == '5\\n'\nassert solution('3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N') == '4\\n'",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\") == \"4\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str=\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\", \"The numbered label of the player who had the box when it finally exploded should be 4.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"6\", \"Incorrect output\"\nassert solution(sample_input2) == \"22\", \"Incorrect output\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output goes here\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n6 8\\n') == '22\\n', \"The output is incorrect.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"22\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == 6\nassert solution(\"6 8\") == 22",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4, 3) == 6, \"Expected 6, got {}\".format(solution(4, 3))\nassert solution(6, 8) == 22, \"Expected 22, got {}\".format(solution(6, 8))",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='4 3') == '6'\nassert solution(stdin='6 8') == '22'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"For the given input, expected output {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Output\", \"Please provide the correct solution.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output\", \"Test failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == 1\nassert solution(\"1 4\\n4 3 2 1\") == 0",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 2 3\\n6 5 4\\n7 8 9') == '1'\nassert solution('1 4\\n4 3 2 1') == '0'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Solution '{solution(__file__.rstrip())}' is not correct. Expected output: '{expected_output}'.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 3\n6 5 4\n7 8 9\n\"\"\") == \"1\\n\"\n\nassert solution(\"\"\"\n1 4\n4 3 2 1\n\"\"\") == \"0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n\", \"Please provide the correct input and output.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='10\\n3\\n4\\n6\\n2') == '28'\nassert solution(stdin='10\\n3\\n10\\n2\\n12') == '16'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\n3\\n4\\n6\\n2\\n') == '28', \"The solution should be '28'.\"\nassert solution('10\\n3\\n10\\n2\\n12\\n') == '16', \"The solution should be '16'.\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"28\", \"Test failed for input 1\"\nassert solution() == \"16\", \"Test failed for input 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n3\\n4\\n6\\n2\") == \"28\"\nassert solution(\"10\\n3\\n10\\n2\\n12\") == \"16\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10, 3, 4, 6, 2) == 28, \"Test 1 failed\"\nassert solution(10, 3, 10, 2, 12) == 16, \"Test 2 failed\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\n3\\n4\\n6\\n2\\n') == '28'\nassert solution('10\\n3\\n10\\n2\\n12\\n') == '16'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n3\\n4\\n6\\n2\") == \"28\"\nassert solution(\"10\\n3\\n10\\n2\\n12\") == \"16\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"28\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"The solution is incorrect for the given problem\"\nassert solution(\"octopuses\") == \"no hiss\", \"The solution is incorrect for the given problem\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Test 1 failed.\"\nassert solution(\"octopuses\") == \"no hiss\", \"Test 2 failed.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('amiss') == 'hiss', \"Your solution should return 'hiss'.\"\nassert solution('octopuses') == 'no hiss', \"Your solution should return 'no hiss'.\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\nc++\\nc\\nc#\\n\") == 3\nassert solution(\"5\\ncryptography\\nblockchain\\nArtificial intelligence\\nMachine-Learning\\nLinux\\n\") == 5",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\", \"Expected Output: 3\\nGot: \" + str(solution(stdin))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"3\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"5\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 3, \"Expected 3 similar keywords, got {}.\"\nassert solution(open('input_2.txt', 'r')) == 5, \"Expected 5 similar keywords, got {}.\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"c++\") == \"3\"\nassert solution(\"c\") == \"1\"\nassert solution(\"c#\") == \"1\"\nassert solution(\"cryptography\") == \"5\"\nassert solution(\"blockchain\") == \"1\"\nassert solution(\"Artificial intelligence\") == \"1\"\nassert solution(\"Machine-Learning\") == \"1\"\nassert solution(\"Linux\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"C:\\Users\\Catherine\\Desktop\\sample_input1.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"C:\\Users\\Catherine\\Desktop\\sample_input2.txt\", \"r\").read()) == \"5\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\", \"Expected output: '3', got: '{}'.\".format(solution(stdin))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == '3'\nassert solution(stdin=open('input2.txt', 'r')) == '5'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Expected: {}, got: {}\".format(sample_output_1, solution(sample_input_1))\nassert solution(sample_input_2) == sample_output_2, \"Expected: {}, got: {}\".format(sample_output_2, solution(sample_input_2))\n\nsample_input_1 = \"TCGTTC\"\nsample_output_1 = \"21\"\nsample_input_2 = \"CCC\"\nsample_output_2 = \"9\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"TCGTTC\") == \"21\", \"Test case 1\"\nassert solution(\"CCC\") == \"9\", \"Test case 2\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('TCGTTC') == '21', 'Test 1: Expected output \"21\", but got \"{0}\"'.format(solution('TCGTTC'))\nassert solution('CCC') == '9', 'Test 2: Expected output \"9\", but got \"{0}\"'.format(solution('CCC'))",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"CCC\") == 9",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"TCGTTC\") == \"21\", \"Expected 21 points, got \" + solution(\"TCGTTC\")\nassert solution(\"CCC\") == \"9\", \"Expected 9 points, got \" + solution(\"CCC\")",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"CCC\") == 9\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"TCGTTC\") == 21, \"The number of scientific points earned by player 1 is incorrect.\"\nassert solution(\"CCC\") == 9, \"The number of scientific points earned by player 1 is incorrect.\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"TCGTTC\") == 21, \"Incorrect output for sample input 1\"\nassert solution(\"CCC\") == 9, \"Incorrect output for sample input 2\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"315\") == \"90\", \"Sample Input 1: 315\\nOutput 1: 90\"\nassert solution(\"180\") == \"90\", \"Sample Input 2: 180\\nOutput 2: 90\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('315\\n45\\n') == '90\\n'\nassert solution('180\\n270\\n') == '90\\n'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"315\\n45\") == \"90\"\nassert solution(\"180\\n270\") == \"90\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '90', 'Your function is not correct'\nprint('All assertions passed')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"315\\n45\\n\") == \"90\\n\"\nassert solution(\"180\\n270\\n\") == \"90\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"315\\n45\\n\") == \"90\\n\", \"Expected '90', got '{}'.\".format(solution(\"315\\n45\\n\"))\nassert solution(\"180\\n270\\n\") == \"90\\n\", \"Expected '90', got '{}'.\".format(solution(\"180\\n270\\n\"))",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"315\\n45\\n\") == \"90\\n\"\nassert solution(\"180\\n270\\n\") == \"90\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='315\\n45\\n') == '90\\n'\nassert solution(stdin='180\\n270\\n') == '90\\n'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"90\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('315\\n45\\n') == '90\\n'\nassert solution('180\\n270\\n') == '90\\n'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3\\n', \"The output should be 3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\"\nassert solution(open(\"input2.txt\", \"r\")) == \"1\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Input and Output do not match.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\n\", \"Solution should return 3, but got {}\".format(solution(stdin))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1\\n23\\n18\\n13\\n99\") == \"3\"\nassert solution(\"5\\n11\\n20\\n33\\n40\\n55\") == \"1\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter the number of signatures you need to collect: \")) == \"3\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"WWBWBB\") == \"1\", \"Test 1: Case 1\"\nassert solution(\"WWWWBBW\") == \"0\", \"Test 1: Case 2\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('WWBWBB') == '1'\nassert solution('WWWWBBW') == '0'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"WWBWBB\") == 1\nassert solution(\"WWWWBBW\") == 0",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('WWBWBB') == '1'\nassert solution('WWWWBBW') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('WWBWBB') == '1'\nassert solution('WWWWBBW') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"1\"\nassert solution(sample_input_2) == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\nWWBWBB\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\nWWWWBBW\n\"\"\"\n) == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"WWBWBB\") == \"1\", \"Test case 1 failed\"\nassert solution(\"WWWWBBW\") == \"0\", \"Test case 2 failed\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 3 3\") == 9\nassert solution(\"1 2 1 1\") == 1.299038105676658",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1.299038105676658', \"Your solution should output 1.299038105676658.\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 3 3\") == 9, \"Incorrect output\"\nassert solution(\"1 2 1 1\") == 1.299038105676658, \"Incorrect output\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 3 3\") == \"9\"\nassert solution(\"1 2 1 1\") == \"1.299038105676658\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 3 3\\n1 2 1 1\\n\") == 9",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 3 3\") == 9\nassert solution(\"1 2 1 1\") == 1.299038105676658",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1.299038105676658\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 3 3\") == 9\nassert solution(\"1 2 1 1\") == 1.299038105676658",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == expected1, f\"Test 1 failed: {solution(sample_input1)}!= {expected1}\"\nassert solution(sample_input2) == expected2, f\"Test 2 failed: {solution(sample_input2)}!= {expected2}\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"robert\") == \"robert\", \"Input 1 should return robert\"\nassert solution(\"rooobert\") == \"robert\", \"Input 2 should return robert\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"robert\") == \"robert\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"robert\") == \"robert\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1000 9 7') == '108 4', 'Incorrect Output'\nassert solution('1000 900 7') == 'Impossible', 'Incorrect Output'",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1000 9 7') == '108 4', 'Sample Input 1 failed'\nassert solution('1000 900 7') == 'Impossible', 'Sample Input 2 failed'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 9 7\\n1000 900 7\\n\") == \"108 4\\nImpossible\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Error: Expected {output}, got {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1000 9 7') == '108 4', 'Expected 108 4, got {}.'.format(solution('1000 9 7'))\nassert solution('1000 900 7') == 'Impossible', 'Expected Impossible, got {}.'.format(solution('1000 900 7'))",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, but got: {solution(input())}\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"108 4\"\nassert solution(sample_input_2) == \"Impossible\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test failed for solution({stdin})\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#') == '1\\n1\\n2\\n1\\n0'\nassert solution('4 4\\n....\\n....\\n....\\n....') == '9\\n0\\n0\\n0\\n0'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n\") == \"1\\n1\\n2\\n1\\n0\\n\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\\n\"\n\nassert solution(\"4 4\\n....\\n....\\n....\\n....\") == \"9\\n0\\n0\\n0\\n0\\ndef solution(stdin: str) -> str:    \\n    pass\\n\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\") == \"9\\n0\\n0\\n0\\n0\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n1\\n2\\n1\\n0\", \"Test Case 1\"\nassert solution(stdin) == \"9\\n0\\n0\\n0\\n0\", \"Test Case 2\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 4\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n') == '1\\n1\\n2\\n1\\n0'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n#..#\\n..X. \\n..X. \\n#XX#\") == \"1\\n1\\n2\\n1\\n0\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\\n\", \"Mirko should be able to park on the first parking space.\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\\ndef solution(stdin: str) -> str: pass\", \"Mirko should not be able to park on buildings.\"\n",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n212\\n1253\\n\") == \"1953566\\n\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n\") == \"102\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n212\\n1253\\n\") == \"1953566\\n\", \"Test 1 failed.\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n\") == \"102\\n\", \"Test 2 failed.\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n212\\n1253\\n\") == \"1953566\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n\") == \"102\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n23\\n17\\n43\\n52\\n22\") == \"102\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n212\\n1253\\n\") == \"1953566\\n\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n\") == \"102\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n212\\n1253\") == \"1953566\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\") == \"102\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n212\\n1253\\n') == '1953566'\nassert solution('5\\n23\\n17\\n43\\n52\\n22\\n') == '102'",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1953566\", \"Test case 1 failed\"\nassert solution() == \"102\", \"Test case 2 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n212\\n1253\\n\") == \"1953566\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n\") == \"102\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n\") == \"102\"\nassert solution(\"2\\n212\\n1253\\n\") == \"1953566\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n\") == \"102\"\nassert solution(\"2\\n212\\n1253\\n\") == \"1953566\"",
        "num_ids_2": 63,
        "num_ids_4": 126
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n212\\n1253\\n\") == \"1953566\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n\") == \"102\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == [0.000000, 3.000000, 6.000000]",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\\n\", \"The first line of the input should be 10, 10, and 10.\"\n\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\\n\", \"The second line of the input should be 9, 9, and 9.\"",
        "num_ids_2": 144,
        "num_ids_4": 144
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\\n\"\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\\n\"\n",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.000000 3.000000 6.000000\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '0.000000 3.000000 6.000000', \"Expected output: 0.000000 3.000000 6.000000, got: \" + solution(input())",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.000000 3.000000 6.000000\", \"Solution is incorrect.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.000000 3.000000 6.000000\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 10 10\\n3 3 3\\n') == '0.000000 0.000000 0.000000\\n', 'Sample Input 1'\nassert solution('9 9 9\\n3 2 1\\n') == '0.000000 3.000000 6.000000\\n', 'Sample Input 2'",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('a<bc<') == 'b', \"Test case 1 failed\"\nassert solution('foss<<rritun') == 'forritun', \"Test case 2 failed\"\n\nfrom typing import Any",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"b\"\nassert solution(input()) == \"forritun\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Mirko-Slavko') == 'MS'\nassert solution('KMP') == 'KMP'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\", \"Your solution is incorrect.\"\nassert solution(\"Knuth-Morris-Pratt\") == \"KMP\", \"Your solution is incorrect.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\", \"Your code is not correct.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 1 0') == 'Estate or Copper', 'The output is incorrect.'\nassert solution('2 1 0') == 'Province or Gold', 'The output is incorrect.'\nassert solution('3 2 1') == 'Gold or Silver', 'The output is incorrect.'\nassert solution('1 1 0') == 'Gold or Silver', 'The output is incorrect.'\nassert solution('1 0 1') == 'Gold or Silver', 'The output is incorrect.'",
        "num_ids_2": 46,
        "num_ids_4": 90
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"Estate or Copper\", \"Expected Output: Estate or Copper\"\nassert solution(2) == \"Province or Gold\", \"Expected Output: Province or Gold\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 1 0\\n2 1 0\\n\") == \"Estate or Copper\\n\"\nassert solution(\"2 1 0\\n1 1 0\\n\") == \"Province or Gold\\n\"\nassert solution(\"1 1 1\\n0 0 0\\n\") == \"Gold\\n\"\nassert solution(\"0 0 0\\n0 0 0\\n\") == \"Silver\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 106
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Estate or Copper\\n\", \"Expected output: 'Estate or Copper', got: {}\".format(solution(stdin))",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\", \"Expected 'Estate or Copper', got: {}\".format(solution(\"0 1 0\"))\nassert solution(\"2 1 0\") == \"Province or Gold\", \"Expected 'Province or Gold', got: {}\".format(solution(\"2 1 0\"))",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}, expected: {output()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1\\n70 50\\nSample Output 1\\n90.00\\n\\n10 3\\n80 90\\nSample Output 2\\n75.7142857\\n') == '90.00\\n75.7142857\\n'\nassert solution('10 3\\n80 90\\nSample Output 2\\n75.7142857\\n') == '75.7142857\\n'",
        "num_ids_2": 136,
        "num_ids_4": 136
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"90.00\"\nassert solution() == \"75.7142857\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\\n\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == '90.00'\nassert solution(sample_input_2) == '75.7142857'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data1) == \"90.00\"\nassert solution(input_data2) == \"75.7142857\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"90.00\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"The output '{solution(input())}' is incorrect for the input '{input()}'.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\\n\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\\n\"\n\nfrom typing import List",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'\nassert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n2 3 1 5 4 7 6\") == \"4\\n2 3 5 7\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n1 2 3 4 5\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2 3 5 7\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == expected, f\"Expected {expected}, got {solution()}\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=r'7\\n2 3 1 5 4 7 6') == r'4\\n2 3 5 7'\nassert solution(stdin=r'5\\n1 2 3 4 5') == r'5\\n1 2 3 4 5'",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"7\\n2 3 1 5 4 7 6\") == \"4\\n2 3 5 7\"\nassert solution(stdin=\"5\\n1 2 3 4 5\") == \"5\\n1 2 3 4 5\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\\n2 3 5 7\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\\n2 3 5 7\"\nassert solution() == \"5\\n1 2 3 4 5\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == # Write your solution here.",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 10\\n\") == \"9 25\\n\"\nassert solution(\"0 30\\n\") == \"23 45\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 10\") == \"9 25\\n\", \"Sample Output 1 incorrect\"\nassert solution(\"0 30\") == \"23 45\\n\", \"Sample Output 2 incorrect\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 10') == '9 25', \"Solution 1 failed\"\nassert solution('0 30') == '23 45', \"Solution 2 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 10\") == \"9 25\\n\", \"Solution 1 incorrect\"\nassert solution(\"0 30\") == \"23 45\\n\", \"Solution 2 incorrect\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"9 25\\n23 45\", \"Test case 1 failed.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed.\" for i, (input_, expected_output) in enumerate(zip(input_list, expected_output_list))",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 10') == '9 25\\n'\nassert solution('0 30') == '23 45\\n'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 10\") == \"9 25\\n\", \"Test 1 failed\"\nassert solution(\"0 30\") == \"23 45\\n\", \"Test 2 failed\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.414214\", \"Incorrect answer. Expected 1.414214, got {}.\".format(solution(stdin))\nprint(\"All test cases passed.\")",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1.414214\\n', 'Incorrect output'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2.000000\") == \"1.414214\", \"Test 1\"\nassert solution(\"1.000000\") == \"1.000000\", \"Test 2\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2.000000\") == \"1.414214\"\nassert solution(\"1.000000\") == \"1.000000\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, got: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2.0) == 1.414214\nassert solution(1.0) == 1.0\nassert solution(\"1.0\") == 1.0\nassert solution(\"2.000000\") == 1.414214",
        "num_ids_2": 31,
        "num_ids_4": 67
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='2.000000') == '1.414214'\nassert solution(stdin='1.000000') == '1.000000'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2.000000\") == \"1.414214\", \"Test 1\"\nassert solution(\"1.000000\") == \"1.000000\", \"Test 2\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2.000000) == 1.414214, \"Test case 1 failed\"\nassert solution(1.000000) == 1.0, \"Test case 2 failed\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3:\\n2,1\\n\"\nassert solution(\"50\") == \"50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '3:' + '\\n' + '2,1'\nassert solution(50) == '50:' + '\\n' + '2,1' + '\\n' + '2,2' + '\\n' + '3,2' + '\\n' + '5,4' + '\\n' + '5,5' + '\\n' + '6,5' + '\\n' + '10,10' + '\\n' + '13,12' + '\\n' + '17,16' + '\\n' + '25,25'",
        "num_ids_2": 140,
        "num_ids_4": 140
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n\") == \"3:2,1\\n\"\nassert solution(\"50\\n\") == \"50:2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\"\n",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3:\\n2,1\\n\", \"Test case 1\"\nassert solution(\"50\") == \"50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\", \"Test case 2\"\n",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n') == '3:'\nassert solution('50\\n') == '50:'\nassert solution('1\\n') == '1:'\nassert solution('2\\n') == '2:2'\nassert solution('3\\n') == '3:2,1'\nassert solution('5\\n') == '5:2,2,3,2,5,4'\nassert solution('6\\n') == '6:5,2,2,3,2,5,4'\nassert solution('7\\n') == '7:10,7,7,7,7,7,7,7,7,7,7'\nassert solution('8\\n') == '8:13,12,12,12,12,12,12,12,12,12,12'\nassert solution('9\\n') == '9:17,16,16,16,16,16,16,16,16,16,16'\nassert solution('10\\n') == '10:25,25,25,25,25,25,25,25,25,25,25'\nassert solution('11\\n') == '11:2,1,1,1,1,1,1,1,1,1,1'\nassert solution('12\\n') == '12:6,5,5,5,5,5,5,5,5,5,5'\nassert solution('13\\n') == '13:10,13,12,12,12,12,12,12,12,12,12'\nassert solution('14\\n') == '14:13,12,12,12,12,12,12,12,12,12,12'\nassert solution('15\\n') == '15:17,16,16,16,16,16,16,16,16,16,16'\nassert solution('16\\n') == '16:25,25,25,25,25,25,25,25,25,25,25'\nassert solution('17\\n') == '17:2,1,1,1,1,1,1,1,1,1,1'\nassert solution('18\\n') == '18:5,4,4,4,4,4,4,4,4,4,4'\nassert solution('19\\n') == '19:5,5,5,5,5,5,5,5,5,5,5'\nassert solution('20\\n') == '20:10,10,10,10,10,10,10,10,10,10,10'\nassert solution('21\\n') == '21:13,12,12,12,12,12,12,12,12,12,12'\nassert solution('22\\n') == '22:17,16,16,16,16,16,16,16,16,16,16'\nassert solution('23\\n') == '23:25,25,25,25,25,25,25,25,25,25,25'\nassert solution('24\\n') == '24:2,1,1,1,1,1,1,1,1,1,1'\nassert solution('25\\n') == '25:5,4,4,4,4,4,4,4,4,4,4'\nassert solution('26\\n') == '26:5,5,5,5,5,5,5,5,5,5,5'\nassert solution('27\\n') == '27:10,10,10,10,10,10,10,10,10,10,10'\nassert solution('28\\n') == '28:13,12,12,12,",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3:2,1\"\nassert solution(50) == \"50:2,1,2,2,3,2,5,4,5,5,6,5,10,10,13,12,17,16,25,25\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"3:2,1\\n\"\nassert solution(50) == \"50:2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\"",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('50') == '50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n', \"There are 50 flags of 50 stars.\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"50\") == \"50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\", \"Test 1\"\nassert solution(\"10\") == \"10:\\n1,1\\n1,2\\n1,3\\n1,4\\n1,5\\n1,6\\n1,7\\n1,8\\n1,9\\n1,10\\n2,10\\n3,10\\n4,10\\n5,10\\n6,10\\n7,10\\n8,10\\n9,10\\n10,10\\n\", \"Test 2\"\nassert solution(\"20\") == \"20:\\n2,1\\n2,2\\n2,3\\n2,4\\n2,5\\n2,6\\n2,7\\n2,8\\n2,9\\n2,10\\n3,10\\n4,10\\n5,10\\n6,10\\n7,10\\n8,10\\n9,10\\n10,10\\n\", \"Test 3\"\nassert solution(\"30\") == \"30:\\n3,1\\n3,2\\n3,3\\n3,4\\n3,5\\n3,6\\n3,7\\n3,8\\n3,9\\n3,10\\n4,10\\n5,10\\n6,10\\n7,10\\n8,10\\n9,10\\n10,10\\n\", \"Test 4\"\nassert solution(\"40\") == \"40:\\n4,1\\n4,2\\n4,3\\n4,4\\n4,5\\n4,6\\n4,7\\n4,8\\n4,9\\n4,10\\n5,10\\n6,10\\n7,10\\n8,10\\n9,10\\n10,10\\n\", \"Test 5\"\nprint(\"All tests passed!\")",
        "num_ids_2": 202,
        "num_ids_4": 434
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"no\", \"Test case 1 failed\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"yes\", \"Test case 2 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"Test 1\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"Test 2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n\nimport re",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"no\" # Check for no repeats\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"yes\" # Check for repeats",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"Test 1\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"Test 2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"Sample Input 1: The RAIN IN SPAIN\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"Sample Input 2: IN THE RAIN AND THE SNOW\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"no\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"yes\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 52
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS', \"Expected 'SSKKKHHS', got '{}' instead\".format(solution('RRBBBLLR'))\nassert solution('RBLLLBRR') == 'CHCS', \"Expected 'CHCS', got '{}' instead\".format(solution('RBLLLBRR'))\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Expected Output: 'SSKKKHHS', Actual Output: '{}'\".format(solution(\"RRBBBLLR\"))\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"Expected Output: 'CHCS', Actual Output: '{}'\".format(solution(\"RBLLLBRR\"))",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Test 1 Failed\"\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"Test 2 Failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Sample Input 1\"\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"Sample Input 2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Expected: SSKKKHHS, but got: \" + solution(\"RRBBBLLR\")\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"Expected: CHCS, but got: \" + solution(\"RBLLLBRR\")",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"\nassert solution(\"1\") == \"1\\n\"\nassert solution(\"3 1 5\") == \"1\\nFizz\\n3\\nBuzz\\nFizz\\n5\\n\"\nassert solution(\"3 5 1 3\") == \"1\\nFizz\\n3\\nBuzz\\nFizz\\n5\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 125
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\", \"Test 1\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\", \"Test 2\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\", \"The solution is incorrect.\"\n\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\", \"The solution is incorrect.\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 7\\n2 4 7\\n\") == \"\"\"\n1\nFizz\nBuzz\nFizz\n5\nFizzBuzz\n7\n\"\"\"\n\nassert solution(\"2 4 7\\n2 4 8\\n\") == \"\"\"\n1\nFizz\n3\nFizzBuzz\n5\nFizz\n7\n\"\"\"\n\nassert solution(\"2 5 7\\n2 6 8\\n\") == \"\"\"\n1\nFizz\n5\nFizzBuzz\n7\n\"\"\"\n\nassert solution(\"2 6 7\\n2 5 8\\n\") == \"\"\"\n1\nFizz\n5\nFizzBuzz\n7\n\"\"\"\n\nassert solution(\"2 6 7\\n2 6 8\\n\") == \"\"\"\n1\nFizz\n5\nFizzBuzz\n7\n\"\"\"\n\nassert solution(\"2 6 7\\n2 6 9\\n\") == \"\"\"\n1\nFizz\n5\nFizzBuzz\n7\n\"\"\"\n\nassert solution(\"2 6 7\\n2 6 10\\n\") == \"\"\"\n1\nFizz\n5\nFizzBuzz\n7\n\"\"\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, f\"Expected {output1}, but got {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected {output2}, but got {solution(input2)}\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    2 3 7\n    '''\n) == '''\n1\nFizz\nBuzz\nFizz\n5\nFizzBuzz\n7\n'''\n\nassert solution(\n    '''\n    2 4 7\n    '''\n) == '''\n1\nFizz\n3\nFizzBuzz\n5\nFizz\n7\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected, f\"Expected {expected}, got {solution(input)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n3 3 3 2\\n2 10\\n0 100\\n\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\\n\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n3 3 3 2\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Solution for the given inputs is incorrect. Input: {input()}, Output: {output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed: {solution(input_data)}!= {output_data}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n3 3 3 2\\n') == 'It hadn\\'t snowed this early in 3 years!\\n'\nassert solution('2 10\\n0 100\\n') == 'It hadn\\'t snowed this early in 0 years!\\n'",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"It hadn't snowed this early in 3 years!\\nIt had never snowed this early!\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n3 3 3 2\\n2 10\\n0 100\\n\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\\n\") == \"It hadn't snowed this early in 0 years!\\n\"\n",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n3 3 3 2\\n2 10\\n0 100\\n') == 'It hadn\\'t snowed this early in 3 years!\\n'\nassert solution('2 10\\n0 100\\n') == 'It hadn\\'t snowed this early in 0 years!\\n'",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution() == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(input())) == solution(input()), \"Test case 1 failed\"\nassert solution(solution(input())) == solution(input()), \"Test case 2 failed\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\") == \"2\", \"Test 1\"\nassert solution(\"10 10\") == \"7\", \"Test 2\"\nassert solution(\"2 10\") == \"1\", \"Test 3\"\nassert solution(\"10 2\") == \"2\", \"Test 4\"\nassert solution(\"2 10\") == \"1\", \"Test 5\"",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2\") == \"2\"\nassert solution(\"10 10\") == \"7\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\") == 2\nassert solution(\"10 10\") == 7",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\", \"The expected output should be 2\"\nassert solution() == \"7\", \"The expected output should be 7\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n10 10\\n\") == \"2\\n7\\n\"\nassert solution(\"3 3\\n5 5\\n\") == \"3\\n4\\n\"\nassert solution(\"4 10\\n6 6\\n\") == \"6\\n4\\n\"\nassert solution(\"4 8\\n5 7\\n\") == \"7\\n1\\n\"\nassert solution(\"7 10\\n5 5\\n\") == \"10\\n8\\n\"\nassert solution(\"6 5\\n8 6\\n\") == \"5\\n2\\n\"\nassert solution(\"6 10\\n7 7\\n\") == \"7\\n9\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 100
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\") == \"2\", \"The output of the program should be '2'.\"\nassert solution(\"10 10\") == \"7\", \"The output of the program should be '7'.\"\nassert solution(\"1 2\") == \"2\", \"The output of the program should be '2'.\"\nassert solution(\"3 3\") == \"1\", \"The output of the program should be '1'.\"\nassert solution(\"10 3\") == \"2\", \"The output of the program should be '2'.\"\nassert solution(\"2 10\") == \"7\", \"The output of the program should be '7'.\"",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2', \"Solution should return '2'.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Solution should return {expected}, but got {solution(stdin)} instead.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bok\") == \"bok\", \"Sample Input 1\"\nassert solution(\"koaski\") == \"kakosi\", \"Sample Input 2\"\n\nfrom typing import List",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bok\") == \"bok\", \"Test 1\"\nassert solution(\"koaski\") == \"kakosi\", \"Test 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('bok') == 'bok', \"Test 1 failed\"\nassert solution('koaski') == 'kakosi', \"Test 2 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bok\") == \"bok\", \"Test 1\"\nassert solution(\"koaski\") == \"kakosi\", \"Test 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'def solution(stdin: str) -> str: \\n\\tpass'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bok\") == \"bok\", \"Test 1 failed\"\nassert solution(\"koaski\") == \"kakosi\", \"Test 2 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6') == '8 2', \"Test 1 failed.\"\nassert solution('7') == '8 3', \"Test 2 failed.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test 1 failed\"\nassert solution(sample_input2) == sample_output2, \"Test 2 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"8 2\"\nassert solution(\"7\") == \"8 3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7) == '8 3', 'Input 7 is not valid.'\nassert solution(9) == '11 3', 'Input 9 is not valid.'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6) == \"8 2\", \"The output is incorrect\"\nassert solution(7) == \"8 3\", \"The output is incorrect\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6) == \"8 2\", \"Your code is not correct.\"\nassert solution(7) == \"8 3\", \"Your code is not correct.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6) == 8, \"Expected Output: 8 2\"\nassert solution(7) == 8, \"Expected Output: 8 3\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"8 2\", \"Your solution is not correct\"\nassert solution(5) == \"8 3\", \"Your solution is not correct\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6) == '8 2', \"Solution should return '8 2'.\"\nassert solution(7) == '8 3', \"Solution should return '8 3'.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6) == \"8 2\"\nassert solution(7) == \"8 3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"rotten\") == \"NO\"\n\nendings = [input().split() for _ in range(int(input()))]\nphrases = [input().split() for _ in range(int(input()))]\n\nfor i in range(len(phrases)):\n    if any(word in ending for word in phrases[i]):\n        if i == 0:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        print(\"YES\")\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('tests/sample_input1.txt', 'r')) == ['YES', 'NO']\nassert solution(open('tests/sample_input2.txt', 'r')) == ['YES', 'YES', 'YES', 'YES', 'NO']",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"stairs\", \"2\", \"erres airs ears ares aires\", \"eet eat\", \"2\", \"apples and pears\", \"plates of meat\") == ['YES', 'NO']\nassert solution(\"drought\", \"2\", \"aught ought aut acht\", \"ought oubt outte out oute\", \"5\", \"tasty sprout\", \"difficult route\", \"worried and fraught\", \"forever in doubt\", \"apples and pears\") == ['YES', 'YES', 'YES', 'YES', 'NO']",
        "num_ids_2": 135,
        "num_ids_4": 135
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"YES\"\nassert solution(\"rotten\") == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == [YES, NO]\nassert solution(sample_input_2) == [YES, YES, YES, YES, NO]",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''YES\nNO'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}!= {expected_output}\"\nfor i in range(E):\n    for j in range(P):\n        p_i = input().split()\n        rhyme = solution(p_i)\n        if rhyme == 'YES':\n            print('YES')\n        else:\n            print('NO')",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('rotten') == 'YES'\n\nsolution = lambda: 'YES' if'stairs' in ['erres', 'airs', 'ares', 'ares', 'airs', 'eres', 'airs', 'airs', 'ares', 'eres', 'airs', 'eres'] else 'NO'\n\nsolution = lambda: 'YES' if 'rotten' in ['bales', 'cotton', 'bales', 'cotton', 'bales', 'cotton', 'bales', 'cotton', 'bales', 'cotton', 'bales', 'cotton'] else 'NO'\n\nsolution = lambda: 'YES' if 'apples' in ['and', 'and', 'and', 'and', 'and', 'and', 'and', 'and', 'and', 'and', 'and'] else 'NO'\n\nsolution = lambda: 'YES' if 'tasty' in ['sprout','sprout','sprout','sprout','sprout','sprout','sprout','sprout','sprout','sprout','sprout'] else 'NO'\n\nsolution = lambda: 'YES' if 'difficult' in ['route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route'] else 'NO'\n\nsolution = lambda: 'YES' if 'worried' in ['and', 'and', 'and', 'and', 'and', 'and', 'and', 'and', 'and', 'and', 'and'] else 'NO'\n\nsolution = lambda: 'YES' if 'forever' in ['in', 'in', 'in', 'in', 'in', 'in', 'in', 'in', 'in', 'in', 'in'] else 'NO'\n\nsolution = lambda: 'YES' if 'difficult' in ['route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route'] else 'NO'\n\nsolution = lambda: 'YES' if 'difficult' in ['route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route'] else 'NO'\n\nsolution = lambda: 'YES' if 'difficult' in ['route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route'] else 'NO'\n\nsolution = lambda: 'YES' if 'difficult' in ['route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route'] else 'NO'\n\nsolution = lambda: 'YES' if 'difficult' in ['route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route'] else 'NO'\n\nsolution = lambda: 'YES' if 'difficult' in ['route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route'] else 'NO'\n\nsolution = lambda: 'YES' if 'difficult' in ['route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route'] else 'NO'\n\nsolution = lambda: 'YES' if 'difficult' in ['route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route'] else 'NO'\n\nsolution = lambda: 'YES' if 'difficult' in ['route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route'] else 'NO'\n\nsolution = lambda: 'YES' if 'difficult' in ['route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route'] else 'NO'\n\nsolution = lambda: 'YES' if 'difficult' in ['route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route', 'route'] else 'NO'\n\nsolution = lambda: 'YES' if 'difficult' in ['route', 'route', 'route', 'route', 'route', 'route', 'route', 'route',",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"stairs\") == \"YES\", \"Incorrect result for solution('stairs')\"\nassert solution(\"rotten\") == \"NO\", \"Incorrect result for solution('rotten')\"\n\nE = int(input())\nlists = [input() for _ in range(E)]\nP = int(input())\nphrases = [input() for _ in range(P)]\n\nfor phrase in phrases:\n    if not rhyme(phrase, lists):\n        print(\"NO\")\n    else:\n        print(\"YES\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('stairs\\n2\\nerres airs ears ares aires\\neet eat\\n2\\napplnes and pears\\nplate of meat\\n') == 'YES'\nassert solution('drought\\n2\\naught ought aut acht\\nought oubt outte out oute\\n5\\ntasty sprout\\ndifficult route\\nwored and fracht\\nforever in doubt\\napplnes and pears\\n') == 'YES'\nassert solution('applnes and pears\\nplate of meat\\n') == 'NO'",
        "num_ids_2": 117,
        "num_ids_4": 140
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\\nSample Output 1: WIN\\n\\nSample Input 2: BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\\nSample Output 2: LOSE\") == \"WIN\"\nassert solution(stdin=\"BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\\nSample Output 2: LOSE\\n\\nSample Input 1: HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\\nSample Output 1: WIN\") == \"LOSE\"\n",
        "num_ids_2": 138,
        "num_ids_4": 138
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\", \"Incorrect output for sample case 1\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\", \"Incorrect output for sample case 2\"\n\nfrom typing import List\nimport random",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\", \"Output should be 'WIN'.\"\nassert solution(\"BANANA\") == \"LOSE\", \"Output should be 'LOSE'.\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('HANGMAN', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN', 'Error: Incorrect output'\nassert solution('BANANA', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE', 'Error: Incorrect output'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input_1.txt', 'r')) == 'WIN\\n', \"Solution not correct!\"\nassert solution(open('input_2.txt', 'r')) == 'LOSE\\n', \"Solution not correct!\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('HANGMAN') == 'WIN', \"Expected WIN, but got '{}'.\".format(solution('HANGMAN'))\nassert solution('BANANA') == 'LOSE', \"Expected LOSE, but got '{}'.\".format(solution('BANANA'))",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == \"WIN\", \"Expected WIN, got {}\".format(solution(open('input.txt', 'r')))",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"test_case1.txt\", \"r\")) == \"DECREASING\"\nassert solution(open(\"test_case2.txt\", \"r\")) == \"NEITHER\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(['JOE', 'BOB', 'ANDY', 'AL', 'ADAM']) == 'DECREASING'\nassert solution(['HOPE', 'ALI', 'BECKY', 'JULIE', 'MEGHAN', 'LAUREN', 'MORGAN', 'CARLI', 'MEGAN', 'ALEX', 'TOBIN']) == 'NEITHER'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\") == \"DECREASING\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"NEITHER\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"DECREASING\", \"Test case 1 failed.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\", \"Expected output: 'DECREASING', but got: '{}'\".format(solution(\"5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n\"))\n\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"NEITHER\", \"Expected output: 'NEITHER', but got: '{}'\".format(solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\"))",
        "num_ids_2": 206,
        "num_ids_4": 206
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(['JOE', 'BOB', 'ANDY', 'AL', 'ADAM']) == 'DECREASING'\nassert solution(['HOPE', 'ALI', 'BECKY', 'JULIE', 'MEGHAN', 'LAUREN', 'MORGAN', 'CARLI', 'MEGAN', 'ALEX', 'TOBIN']) == 'NEITHER'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"DECREASING\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"JOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\\n\", \"Test case 1 failed\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"NEITHER\\n\", \"Test case 2 failed\"",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\") == \"DECREASING\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"NEITHER\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([1, \"JOE\", \"BOB\", \"ANDY\", \"AL\", \"ADAM\"]) == \"DECREASING\", \"Solution does not work\"\nassert solution([1, \"HOPE\", \"ALI\", \"BECKY\", \"JULIE\", \"MEGHAN\", \"LAUREN\", \"MORGAN\", \"CARLI\", \"MEGAN\", \"ALEX\", \"TOBIN\"]) == \"NEITHER\", \"Solution does not work\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"George wins!\\nJess wins!\\n\"\nassert solution(input()) == \"Nina wins!\\nJess wins!\\n\"\nassert solution(input()) == \"No winner!\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 51
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\n\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n') == 'George wins!\\n'\nassert solution('4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n') == 'Nina wins!\\nJess wins!\\n'",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == 'George wins!'\nassert solution('''\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!Jess wins!'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"\nNina wins!\nJess wins!\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n') == 'George wins!\\nNina wins!\\nJess wins!\\n', \"Test 1 failed\"\n\nassert solution('4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n') == 'Nina wins!\\nJess wins!\\n', \"Test 2 failed\"",
        "num_ids_2": 245,
        "num_ids_4": 245
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    7 3 0 0 5 4\n    \"\"\"\n) == \"2.0\\n\"\n\nassert solution(\n    \"\"\"\n    6 0 0 2 7 6\n    \"\"\"\n) == \"2.0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Test failed: Expected {output}, got {stdin}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"Sample Output 2: 2.0\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2.0', 'Please provide the input correctly.'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0', \"Test 1 failed\"\nassert solution('6 0 0 2 7 6') == '2.0', \"Test 2 failed\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0', 'Input 1 is invalid'\nassert solution('6 0 0 2 7 6') == '2.0', 'Input 2 is invalid'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\\n\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2.0, \"Solution should return 2.0, but returned {}\".format(solution())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='7 3 0 0 5 4') == 2.0\nassert solution(stdin='6 0 0 2 7 6') == 2.0",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(156) == 165\nassert solution(330) == 0",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(156) == 165, \"Error: Expected 165, but got \" + str(solution(156))\nassert solution(330) == 0, \"Error: Expected 0, but got \" + str(solution(330))",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"156\") == \"165\", \"Test case 1\"\nassert solution(\"330\") == \"0\", \"Test case 2\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Your code is not correct. Expected output: {expected_output}, got: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"156\") == \"165\"\nassert solution(\"330\") == \"0\"\nassert solution(\"1234\") == \"0\"\nassert solution(\"54321\") == \"54321\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(330) == 0, \"The smallest number larger than 330 consists of the same digits as 330 is not 0.\"\nassert solution(156) == 165, \"The smallest number larger than 156 consists of the same digits as 156 is not 165.\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"156\") == \"165\", \"Test failed for sample input 1\"\nassert solution(\"330\") == \"0\", \"Test failed for sample input 2\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"The given test case {input()} and expected output {output()} are not matching.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(156) == 165, \"Test failed\"\nassert solution(330) == 0, \"Test failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(156) == \"165\"\nassert solution(330) == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Testcase {case_num} failed. Expected output: {expected_output}, Actual output: {solution(input())}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == 'Output\\n3'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\nassert solution() == \"3\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\ninput1 = \"\"\"5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\"\"\"\n\ninput2 = \"\"\"4 4\n180000 185000 199999 100000\n199999 180000 170000 120000\"\"\"\n\noutput1 = \"4\"\noutput2 = \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\") == \"4\"\nassert solution(\"4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\") == \"3\"",
        "num_ids_2": 147,
        "num_ids_4": 147
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000') == '4\\n'\nassert solution('4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000') == '3\\n'\n",
        "num_ids_2": 151,
        "num_ids_4": 151
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\" # should return \"4\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution, \"Solution not provided\"\n\nn, m = map(int, stdin.split())\ntimes = list(map(int, stdin.strip().split()))\nintervals = list(map(int, stdin.strip().split()))\n\ntasks = []\nfor i in range(n):\n    tasks.append(times[i])\n\nquiet_intervals = []\nfor i in range(m):\n    quiet_intervals.append(intervals[i])",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 4",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Input {input()} should produce output {expected_output}, but it does not.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '10\\n'\n\nassert solution('''\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126\n''') == '1\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"10\", \"Incorrect output for sample input 1\"\nassert solution(input()) == \"1\", \"Incorrect output for sample input 2\"\nassert solution(input()) == \"6\", \"Incorrect output for sample input 3\"",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\\n\"\nassert solution(stdin=\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n\") == \"1\\n\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '0'\nassert solution('3') == '6'\nassert solution('4') == '4'\nassert solution('5') == '6'\nassert solution('6') == '7'\nassert solution('7') == '8'\nassert solution('8') == '9'\nassert solution('9') == '10'\nassert solution('10') == '10'",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '10', \"Invalid Output\"\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n') == '1', \"Invalid Output\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1') == 10, \"Test failed\"\nassert solution('2') == 0, \"Test failed\"\nassert solution('3') == 6, \"Test failed\"",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\", \"Test 1 Failed\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n\") == \"1\", \"Test 2 Failed\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\", \"Test 3 Failed\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n\") == \"1\", \"Test 4 Failed\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\", \"Test 5 Failed\"",
        "num_ids_2": 108,
        "num_ids_4": 216
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect. Please check the given inputs and try again.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'yes', 'Your solution is not correct.'\nassert solution(stdin) == 'no', 'Your solution is not correct.'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input(1)) == sample_output(1)\nassert solution(sample_input(2)) == sample_output(2)",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"yes\", \"Please implement the solution for the given problem statement.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == 'yes\\n'\nassert solution(open('sample_input2.txt', 'r')) == 'yes\\n'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(13, 3) == \"yes\"\nassert solution(1, 0) == \"yes\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"yes\", \"Please implement the solution\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13 3\") == \"yes\"\nassert solution(\"1 0\") == \"yes\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\nfor i in range(1, len(input())):\n    assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected\nfor input, expected in [\n    (\"P01K02H03H04\", \"12 12 11 13\"),\n    (\"H02H10P11H02\", \"GRESKA\"),\n]:\n    assert solution(input) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13\\n'\nassert solution('H02H10P11H02') == 'GRESKA\\n'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13\\n', \"Your solution is incorrect.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"Your function should return the expected output.\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\", \"Your function should return the expected output.\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13\\n'\nassert solution('H02H10P11H02') == 'GRESKA\\n'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\\n\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input_test_1.txt\", \"r\").read()) == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\nassert solution(open(\"input_test_2.txt\", \"r\").read()) == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 3\\n.....\\n.*.*.\\n.....\\n\\n7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n\") == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\\n2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n3 5 3\n.....\n.*.*.\n.....\n\"\"\".strip()\n) == \"1\"\n\nassert solution(\n    \"\"\"\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n\"\"\".strip()\n) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input1) == \"1\"\nassert solution(solution_input2) == \"2\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\\n.....\\n.*.*. \\n.....\\n\") == \"1\"\nassert solution(\"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\") == \"2\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 5 3\n   .....\n   .*.*.\n   .....\n    \"\"\"\n) == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\n\nassert solution(\n    \"\"\"\n    7 6 4\n   ......\n   .*.*.*\n   ......\n   .*.*..\n   ..*...\n   ..*...\n    *....*\n    \"\"\"\n) == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 5, 3) == 1\nassert solution(7, 6, 4) == 2",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"test_input1.txt\").read()) == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\nassert solution(open(\"test_input2.txt\").read()) == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('AC AD AH AS KD') == '4', \"Expected '4', got '{}'\".format(solution('AC AD AH AS KD'))\nassert solution('2C 4D 4H 2D 2H') == '3', \"Expected '3', got '{}'\".format(solution('2C 4D 4H 2D 2H'))",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\\n\", \"Expected Output 1: '4'\\nGot: '{}'\".format(solution(\"AC AD AH AS KD\"))\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\\n\", \"Expected Output 2: '3'\\nGot: '{}'\".format(solution(\"2C 4D 4H 2D 2H\"))",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4, \"AC AD AH AS KD\"\nassert solution(\"2C 4D 4H 2D 2H\") == 3, \"2C 4D 4H 2D 2H\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('AC AD AH AS KD') == '4', 'Test 1'\nassert solution('2C 4D 4H 2D 2H') == '3', 'Test 2'",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4, \"Test 1 failed\"\nassert solution(\"2C 4D 4H 2D 2H\") == 3, \"Test 2 failed\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\", \"Test case 1 failed\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\", \"Test case 2 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output on a single line the number of different ways to drop the piece in the field.\\n\", \"Function solution() returns incorrect output.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == \"5\"\nassert solution(\"5 1\\n0 0 0 0 0\") == \"7\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"5\", \"Expected output: 5, but got: {}\".format(solution(sample_input_1))\nassert solution(sample_input_2) == \"7\", \"Expected output: 7, but got: {}\".format(solution(sample_input_2))",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1') == '5', 'Your solution is not correct.'\nassert solution('5 1\\n0 0 0 0 0') == '7', 'Your solution is not correct.'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    6 5\n    2 1 1 1 0 1\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    0 0 0 0 0\n    \"\"\"\n) == \"7\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1\\n') == '5\\n'\nassert solution('5 1\\n0 0 0 0 0\\n') == '7\\n'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\", \"Invalid input.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Testcase {case_num} failed: expected '{expected_output}', got '{solution(stdin)}'.\"\nfor case_num in range(1, 3):\n    assert solution(f\"Input {case_num}\") == expected_output, f\"Testcase {case_num} failed.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == \"5\"\nassert solution(\"5 1\\n0 0 0 0 0\") == \"7\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Error: {solution(input())}!= {output}\"\nfor i in range(10):\n    print(f\"Sample Input {i+1}:\")\n    print(\"6 5\")\n    print(\"2 1 1 1 0 1\")\n    print(f\"Sample Output {i+1}:\")\n    print(solution(input()))\n    print()",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"All your base are belong to us.\\nWhat's the Frequency, Kenneth?\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.def solution(stdin: str) -> str:pass\\nAll your base are belong to us.\\nWhat's the Frequency, Kenneth?\"\n\nassert solution(\"What's the Frequency, Kenneth?\") == \"/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?def solution(stdin: str) -> str:pass\\nWhat's the Frequency, Kenneth?\"",
        "num_ids_2": 160,
        "num_ids_4": 160
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"All your base are belong to us.\\n\") == \"3110@23/0|_||Z [email protected]$3 @|Z3 8310[]\\\\[6 ']['0 |_|$. \\n\"\nassert solution(\"What's the Frequency, Kenneth?\\n\") == \"[-]3 #|Z3(,)|_|3[][`(],|<3[]\\\\[[][]\\\\[3]['[-]? \\n\"\nassert solution(\"Hello World!\\n\") == \"[-]3110 \\/\\/0|Z1|)! \\n\"",
        "num_ids_2": 103,
        "num_ids_4": 131
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\nWhat's the Frequency, Kenneth?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\")\nassert solution(\"What's the Frequency, Kenneth
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('All your base are belong to us.') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.'\nassert solution('What\\'s the Frequency, Kenneth?') == '/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\n\nfrom typing import List",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('All your base are belong to us.') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.'\nassert solution('What\\'s the Frequency, Kenneth?') == '/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\n",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\\\[]6 ']['0 |_|$.\\n\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\\\[]\\\\[]3]['[-]?\\\\\\/\\/\\n\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"All your base are belong to us.\"), \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$. \"\nassert solution(\"What's the Frequency, Kenneth?\"), \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]? \"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\\\[]6 ']['0 |_|$.\\\\\\\\\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\\\[][]\\\\[]3']['[-]?\\\\\\\\\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\".replace(\" \", \"\")\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\".replace(\" \", \"\")",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 'Alice'\nassert solution(open('input_2.txt', 'r')) == 'Bob'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"Alice\"\nassert solution(4) == \"Alice\"\nassert solution(5) == \"Alice\"\nassert solution(6) == \"Alice\"\nassert solution(7) == \"Alice\"\nassert solution(8) == \"Alice\"\nassert solution(9) == \"Alice\"\nassert solution(10) == \"Alice\"\nassert solution(11) == \"Alice\"\nassert solution(12) == \"Bob\"\nassert solution(13) == \"Bob\"\nassert solution(14) == \"Bob\"\nassert solution(15) == \"Bob\"\nassert solution(16) == \"Bob\"\nassert solution(17) == \"Bob\"\nassert solution(18) == \"Bob\"\nassert solution(19) == \"Bob\"\nassert solution(20) == \"Bob\"\nassert solution(21) == \"Bob\"\nassert solution(22) == \"Bob\"\nassert solution(23) == \"Bob\"\nassert solution(24) == \"Bob\"\nassert solution(25) == \"Bob\"\nassert solution(26) == \"Bob\"\nassert solution(27) == \"Bob\"\nassert solution(28) == \"Bob\"\nassert solution(29) == \"Bob\"\nassert solution(30) == \"Bob\"\nassert solution(31) == \"Bob\"\nassert solution(32) == \"Bob\"\nassert solution(33) == \"Bob\"\nassert solution(34) == \"Bob\"\nassert solution(35) == \"Bob\"\nassert solution(36) == \"Bob\"\nassert solution(37) == \"Bob\"\nassert solution(38) == \"Bob\"\nassert solution(39) == \"Bob\"\nassert solution(40) == \"Bob\"\nassert solution(41) == \"Bob\"\nassert solution(42) == \"Bob\"\nassert solution(43) == \"Bob\"\nassert solution(44) == \"Bob\"\nassert solution(45) == \"Bob\"\nassert solution(46) == \"Bob\"\nassert solution(47) == \"Bob\"\nassert solution(48) == \"Bob\"\nassert solution(49) == \"Bob\"\nassert solution(50) == \"Bob\"\nassert solution(51) == \"Bob\"\nassert solution(52) == \"Bob\"\nassert solution(53) == \"Bob\"\nassert solution(54) == \"Bob\"\nassert solution(55) == \"Bob\"\nassert solution(56) == \"Bob\"\nassert solution(57) == \"Bob\"\nassert solution(58) == \"Bob\"\nassert solution(59) == \"Bob\"\nassert solution(60) == \"Bob\"\nassert solution(61) == \"Bob\"\nassert solution(62) == \"Bob\"\nassert solution(63) == \"Bob\"\nassert solution(64) == \"Bob\"\nassert solution(65) == \"Bob\"\nassert solution(66) == \"Bob\"\nassert solution(67) == \"Bob\"\nassert solution(68) == \"Bob\"\nassert solution(69) == \"Bob\"\nassert solution(70) == \"Bob\"\nassert solution(71) == \"Bob\"\nassert solution(72) == \"Bob\"\nassert solution(73) == \"Bob\"\nassert solution(74) == \"Bob\"\nassert solution(75) == \"Bob\"\nassert solution(76) == \"Bob\"\nassert solution(77) == \"Bob\"\nassert solution(78) == \"Bob\"\nassert solution(79) == \"Bob\"\nassert solution(80) == \"Bob\"\nassert solution(81) == \"Bob\"\nassert solution(82) == \"Bob\"\nassert solution(83) == \"Bob\"\nassert solution(84) == \"Bob\"\nassert solution(85) == \"Bob\"\nassert solution(86) == \"Bob\"\nassert solution(87) == \"Bob\"\nassert solution(88) == \"Bob\"\nassert solution(89) == \"Bob\"\nassert solution(90) == \"Bob\"\nassert solution(91) == \"Bob\"\nassert solution(92) == \"Bob\"\nassert solution(93) == \"Bob\"\nassert solution(94) == \"Bob\"\nassert solution(95) == \"Bob\"\nassert solution(96) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 'Alice'\nassert solution(2) == 'Bob'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Alice\"\nassert solution() == \"Bob\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"Alice\\n\"\nassert solution(\"2\\n\") == \"Bob\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"Alice\"\nassert solution(4) == \"Bob\"\nassert solution(6) == \"Alice\"\nassert solution(7) == \"Bob\"\nassert solution(8) == \"Alice\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"this sentence has thirtyone letters \", \"Invalid solution for sample input 1\"\nassert solution(sample_input2) == \"thirty is the number of letters here\", \"Invalid solution for sample input 2\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nthis\\nsentence\\nhas\\n$\\nletters\\n\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"7\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\\n\") == \"thirty is the number of letters here\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == solution_output, \"Test case failed!\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"this\") == \"this sentence has $ letters\"\nassert solution(\"this sentence has thirtyone letters\") == \"this sentence has thirtyone letters\"\nassert solution(\"this sentence has $ letters\") == \"this sentence has thirtyone letters\"\nassert solution(\"$ is the number of letters here\") == \"thirty is the number of letters here\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nthis\\nsentence\\nhas\\n$ letters\\n\") == \"this sentence has thirtyone letters \"\nassert solution(\"7\\n$ is the number of letters here\\n\") == \"thirty is the number of letters here\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'this sentence has thirtyone letters '\nassert solution(open('input1.txt', 'r').read()) == 'thirty is the number of letters here'\nassert solution(open('input2.txt', 'r').read()) == 'thirty is the number of letters here'",
        "num_ids_2": 52,
        "num_ids_4": 79
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nthis\\nsentence\\nhas\\n$letters\") == \"this sentence has thirtyone letters \"\nassert solution(\"7\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"thirty is the number of letters here\"\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"this\\nsentence\\nhas\\n$letters\") == \"this sentence has thirtyone letters \"\nassert solution(\"this\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\\n\") == \"thirty is the number of letters here\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"this\") == \"this sentence has thirtyone letters\"\nassert solution(\"this sentence has thirtyone letters\") == \"this sentence has thirtyone letters\"\nassert solution(\"this sentence has $ letters\") == \"this sentence has thirtyone letters\"\nassert solution(\"this sentence has five hundred twenty three letters\") == \"this sentence has fivehundredtwentythree letters\"\nassert solution(\"three hundred ninety one\") == \"threehundredninetyone\"\nassert solution(\"five hundred twenty three\") == \"fivehundredtwentythree\"\nassert solution(\"seventy seven\") == \"seventyseven\"\nassert solution(\"eleven twenty one\") == \"eleventwentyone\"\nassert solution(\"twenty three nine\") == \"twentynine\"\nassert solution(\"one hundred two thirteen\") == \"onehundredtwentythree\"\nassert solution(\"three hundred twenty three and five\") == \"threesentwentyfive\"\nassert solution(\"seven hundred fifty seven\") == \"sevenhundredfiftyseven\"\nassert solution(\"eight hundred one twenty three and nine\") == \"eighthundredonetwentynine\"\nassert solution(\"one hundred one\") == \"onehundredone\"\nassert solution(\"five hundred twenty five\") == \"fiventwentyfive\"\nassert solution(\"one hundred twenty three thousand six hundred forty five\") == \"onehundredtwentythousandsixhundredfortyfive\"\nassert solution(\"seven hundred fifty seventy two\") == \"sevenhundredfiftyseventytwo\"\nassert solution(\"five hundred sixty eight\") == \"fiventwentyeight\"\nassert solution(\"twelve thousand six hundred forty five\") == \"twelvencentwentyfive\"\nassert solution(\"one thousand three hundred and thirty\") == \"onethousandthirty\"\nassert solution(\"one hundred eighty six thousand seven hundred ninety two\") == \"onehundredeightysixthousandseventytwo\"\nassert solution(\"seven thousand eight hundred and one\") == \"seventhousandeighthundredandone\"\nassert solution(\"five thousand one hundred forty\") == \"fivetenthousandonehundredforty\"\nassert solution(\"one hundred twenty one thousand three hundred and forty five\") == \"onehundredtwentyonethousandthirtyhundredfortyfive\"\nassert solution(\"one thousand one hundred twenty three and forty five\") == \"onethousandonehundredtwentythreeandfortyfive\"\nassert solution(\"seven thousand two hundred and two\") == \"seventhousandtwentyeight\"\nassert solution(\"five thousand two hundred forty five\") == \"fivetenthousandtwentyfive\"\nassert solution(\"one thousand one hundred fifty and fifty\") == \"onethousandonehundredfiftyandfifty\"\nassert solution(\"one thousand five hundred and fifty six\") == \"onethousandfivehundredandfiftysix\"\nassert solution(\"four hundred fifty six\") == \"fourhundredfiftysix\"\nassert solution(\"four hundred fifty three\") == \"fourhundredfiftythree\"\nassert solution(\"one million three hundred and forty five\") == \"onethousandthreehundredandfortyfive\"\nassert solution(\"one million four hundred and fifty\") == \"onethousandfourhundredandfifty\"\nassert solution(\"one million three hundred and fifty four\") == \"onethousandthreehundredandfiftyfour\"\nassert solution(\"one million three hundred and forty two\") == \"onethousandthreehundredandfortytwo\"\nassert solution(\"one million six hundred and two\") == \"onethousandsixhundredandtwo\"\nassert solution(\"one million five hundred and eighty six\") == \"onethousandfivetenhundredandeightysix\"\nassert solution(\"one million eight hundred and forty five\") == \"onethousandeighthundredandfortyfive\"\nassert solution(\"one million eight hundred and eighty six\") == \"onethousandeighthundredandeightysix\"\nassert solution(\"one million eight hundred and forty five\") == \"onethousandeighthundredandfortyfive\"\nassert solution(\"one million eight hundred and eighty six\") == \"onethousandeighthundredandeightysix\"\nassert solution(\"one million eight hundred and eighty six\") == \"onethousandeighthundredandeightysix\"\nassert solution(\"one million eight hundred and eighty",
        "num_ids_2": 38,
        "num_ids_4": 85
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Abcd\") == 0, \"Test 1 failed\"\nassert solution(\"EaEbFabG\") == 5, \"Test 2 failed\"\nprint(\"All tests passed\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Abcd') == '0', 'Test case 1 failed'\nassert solution('EaEbFabG') == '5', 'Test case 2 failed'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Abcd\") == 0\nassert solution(\"EaEbFabG\") == 5",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"Abcd\\n\"\n) == 0, \"Test case 1 failed\"\n\nassert solution(\n    \"EaEbFabG\\n\"\n) == 5, \"Test case 2 failed\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('example1.txt', 'r').read()) == '0'\nassert solution(open('example2.txt', 'r').read()) == '5'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Abcd') == 0\nassert solution('EaEbFabG') == 5",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\"\n\nfrom typing import List",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Abcd\") == 0\nassert solution(\"EaEbFabG\") == 5",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Abcd\") == 0, \"The solution should return 0\"\nassert solution(\"EaEbFabG\") == 5, \"The solution should return 5\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\nassert solution(\"4 3\") == \"Not a moose\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n2 3\n3 3\n\"\"\") == \"Even 6\\n\"\n\nassert solution(r\"\"\"\n3 3\n2 3\n\"\"\") == \"Odd 6\\n\"\n\nassert solution(r\"\"\"\n0 0\n0 0\n\"\"\") == \"Not a moose\\n\"\n\nassert solution(r\"\"\"\n1 2\n0 0\n\"\"\") == \"Not a moose\\n\"\n\nassert solution(r\"\"\"\n3 0\n0 0\n\"\"\") == \"Not a moose\\n\"\n\nassert solution(r\"\"\"\n4 1\n0 0\n\"\"\") == \"Not a moose\\n\"\n\nassert solution(r\"\"\"\n3 5\n1 1\n\"\"\") == \"Odd 7\\n\"\n\nassert solution(r\"\"\"\n4 2\n1 0\n\"\"\") == \"Even 7\\n\"\n\nassert solution(r\"\"\"\n3 3\n1 1\n\"\"\") == \"Odd 7\\n\"\n\nassert solution(r\"\"\"\n4 2\n1 1\n\"\"\") == \"Even 7\\n\"\n\nassert solution(r\"\"\"\n3 3\n0 0\n\"\"\") == \"Not a moose\\n\"\n\nassert solution(r\"\"\"\n3 3\n2 2\n\"\"\") == \"Odd 6\\n\"\n\nassert solution(r\"\"\"\n4 2\n1 0\n\"\"\") == \"Even 7\\n\"\n\nassert solution(r\"\"\"\n3 3\n0 0\n\"\"\") == \"Not a moose\\n\"\n\nassert solution(r\"\"\"\n3 3\n1 1\n\"\"\") == \"Odd 7\\n\"\n\nassert solution(r\"\"\"\n3 3\n2 2\n\"\"\") == \"Even 7\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"Odd 6\", \"The output is not as expected\"\nassert solution(\"3 3\") == \"Even 6\", \"The output is not as expected\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}.\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(\"Test Passed\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected {expected}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2 3\") == \"Odd 6\"\nassert solution(stdin=\"3 3\") == \"Even 6\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\", \"1\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3\\ntomo\\nmono\\ndak\\n6666\\n\") == \"1\\n\"\n\nassert solution(stdin=\"2\\nja\\nla\\n52\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\" # Correct output for sample 1\nassert solution(open(\"input2.txt\", \"r\")) == \"2\" # Correct output for sample 2",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1\nassert solution(2) == 2\nassert solution(5) == 4",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 1\nassert solution(2) == 2\nassert solution(4) == 2\nassert solution(5) == 1",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '2'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3\\ntomo\\nmono\\ndak\\n6666\") == 1\nassert solution(stdin=\"2\\nja\\nla\\n52\") == 2",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter the number of words in the dictionary: \")) == 1, \"The number of words in the dictionary should be 1.\"\n\nassert solution(input(\"Enter the array of key presses: \")) == 2, \"The array of key presses should have 2 elements.\"\n\nassert solution(input(\"Enter the string of digits: \")) == 2, \"The string of digits should have 2 elements.\"",
        "num_ids_2": 65,
        "num_ids_4": 93
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\"\n\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"123\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"ABC\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"XYZ\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"PEARL\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"DON\") == \"..*...*...*..\\n.*.*.*.*.*.\\n*.D.*.*.*.*\\n.*.*.*.*.*.\\n..*...*...*..\\ndef solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"DOGF\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"PeterPanFrames\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 84,
        "num_ids_4": 204
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\", \"A\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\n\", \"DOG\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\", \"Test 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\", \"Test 2\"\n",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('A') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\\n'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str: \\n    pass\\n\\n# Testing the solution with sample inputs\\n# Test Case 1\\nA\\nassert solution('A') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\\n\\n# Test Case 2\\nDOG\\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str: \\n    pass\\n\\n# Testing the solution with sample inputs\\n# Test Case 3\\nA\\nA\\nA\\nA\\nassert solution('A') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\\n\\n# Test Case 4\\nDOGG\\nassert solution('DOGG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str: \\n    pass\\n\\n# Testing the solution with sample inputs\\n# Test Case 5\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA",
        "num_ids_2": 1014,
        "num_ids_4": 1014
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"..#..\", \"Sample Input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\", \"Sample Input 2\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\\n\", \"Test Input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\n\", \"Test Input 2\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('A') == '..#..', \"Input 'A' should be..#..\"\nassert solution('DOG') == '..#...#...*..', \"Input 'DOG' should be..#...#...*..\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\", \"Sample Input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\\n\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"3.141593\\n2.000000\\n\", \"Test Input 1 Failed\"\nassert solution(21) == \"1385.442360\\n882.000000\\n\", \"Test Input 2 Failed\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution returned {solution(input())}, but expected {expected_output}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input1.txt')) == '3.141593\\n2.000000\\n'\nassert solution(open('sample_input2.txt')) == '1385.442360\\n882.000000\\n'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3.141593\\n2.000000\\n'\n\nassert solution(stdin) == '1385.442360\\n882.000000\\n'",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 3.141593\nassert solution(21) == 1385.442360",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 3.141593\nassert solution(21) == 1385.442360",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == output, f\"Input {stdin} is incorrect. Expected output: {output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == \"3.141593\\n2.000000\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3.141593\\n2.000000\", \"Incorrect output\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2\\n', \"Sample Input 1 failed\"\nassert solution(stdin) == '0\\n', \"Sample Input 2 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"Your code is incorrect.\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 0",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 2, \"Expected output: 2\"\nassert solution(5) == 0, \"Expected output: 0\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Your solution does not match the expected output. \\nExpected: {expected} \\nGot: {solution(stdin)} \\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 -2 3') == 2\nassert solution('5\\n129 44 394 253 147') == 0",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output the sum of all the expenses Robin has paid for the last month.\\n\", \"Expected output: Output the sum of all the expenses Robin has paid for the last month.\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {tc_num} failed. Expected output: {expected_output}, but got: {solution(input())}\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3\n1 -2 3''') == '2'\nassert solution('''5\n129 44 394 253 147''') == '0'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 -2 3\\n\") == \"2\"\nassert solution(\"5\\n129 44 394 253 147\\n\") == \"0\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 6\nassert solution(2, 2, 2) == 6\nassert solution(3, 4, 1, 2) == 8",
        "num_ids_2": 24,
        "num_ids_4": 42
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 2 2\\n3\\n4 1 2\\n\") == 6\nassert solution(\"3\\n4 1 2\\n2 2 2\\n\") == 8",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 2 2\\n3\\n4 1 2\") == \"6\\n8\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3\\n2 2 2\\n3\\n4 1 2\\n\") == \"6\\n\"\nassert solution(stdin=\"3\\n4 1 2\\n\") == \"8\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2 2 2\\n') == '6\\n', \"Test case 1: Ante and Goran need to understand and implement an algorithm with 2 units of time each.\"\nassert solution('3\\n4 1 2\\n') == '8\\n', \"Test case 2: Ante and Goran need to understand and implement an algorithm with 2 units of time each and a pause between them.\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 2 2\\n\") == \"6\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"8\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '6\\n'\nassert solution(open('sample_input.txt', 'r')) == '8\\n'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\", \"Input 1\"\n\nassert solution(stdin) == \"8\", \"Input 2\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 6, \"Ante should spend 6 units of time understanding and implementing an algorithm for team 1.\"\nassert solution(3) == 8, \"Goran should spend 8 units of time understanding and implementing an algorithm for team 2.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2\") == 6\nassert solution(\"1 2 2\") == 6",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\\n\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\\n\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"NOT POSSIBLE\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"NOT POSSIBLE\"",
        "num_ids_2": 16,
        "num_ids_4": 26
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test case {test_case_number} failed: {solution(input())}!= {output()}\" for test_case_number, (input_, output) in enumerate(zip(test_cases, expected_outputs)):\n    test_cases = [line.strip() for line in input_.splitlines()]\n    expected_outputs = [line.strip() for line in output.splitlines()]\n    solution(test_cases) == expected_outputs\n\ntest_cases = [\n    \"2 4 4\\n1111\\n1S01\\n1011\\n0U11\",\n    \"2 4 4\\n1111\\n1S01\\n1011\\n0L11\",\n]\nexpected_outputs = [\"2\", \"NOT POSSIBLE\"]\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4 4\\n1111\\n1S01\\n1011\\n0U11\") == 2\nassert solution(\"1 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == expected, f\"Test failed. Expected '{expected}', got '{solution(stdin=input())}'\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"NOT POSSIBLE\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution_input) == solution_output, \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please check the output and the function signature.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"For the given input, solution({input()}) should return {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\", \"The solution should return 4\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 5\\n3 1 2 1 1\\n') == '4\\n'\nassert solution('7 5\\n1 5 4 3 2 1 1\\n') == '3\\n'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\", \"The output must be 4.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\"\n\nfor i in range(len(stdin.strip().split())):\n    if len(stdin.strip().split()[i].split())!= 3:\n        raise ValueError(f\"Invalid input. Each line should contain three integers separated by spaces.\")\n\nN, C = [int(x) for x in stdin.strip().split()]\nfruits = [int(x) for x in stdin.strip().split()]\n\nmax_weight = max(fruits)\n\nfor i in range(N):\n    total_weight += fruits[i]",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    5 5\n    3 1 2 1 1\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    7 5\n    1 5 4 3 2 1 1\n    \"\"\"\n) == \"3\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\\n\") == \"4\\n\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\\n\") == \"3\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\\n10\\n\"\nassert solution() == \"10\\n15\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10\", \"Test 1 failed\"\nassert solution() == \"15\", \"Test 2 failed\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\\n10\\n\"\n\nsolution = \"\"\"\nimport sys",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\" for input, output in zip(stdin.readlines(), stdout.readlines())",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 81
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\\n10\\n\"\nassert solution(stdin) == \"10\\n15\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"10\\n15\"\nprint(\"All tests passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"still running\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"still running\", \"Enter valid input.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"still running\"\nassert solution(2) == \"still running\"\nassert solution(3) == \"still running\"\nassert solution(4) == \"still running\"\nassert solution(5) == \"still running\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n7\\n11\\n\") == \"4\\n\"\nassert solution(\"5\\n2\\n5\\n9\\n10\\n17\\n\") == \"still running\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"still running\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please see the examples in the problem statement.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"still running\"\nassert solution(\"abc\") == \"still running\"\nassert solution(1) == \"still running\"\nassert solution(5) == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"still running\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(f\"\"\"\n2\n7\n11\n\"\"\") == \"4\"\n\nassert solution(f\"\"\"\n5\n2\n5\n9\n10\n17\n\"\"\") == \"still running\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 4\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''6\n6 1 3 2 2 3''') == '0.6'\nassert solution('''2\n2 2''') == 'impossible'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"impossible\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == 0.6\nassert solution(\"2\\n2 2\") == \"impossible\"\n\nfrom typing import List",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == \"0.6\"\nassert solution(\"2\\n2 2\") == \"impossible\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1, \"Expected output: {}\\nGot output: {}\".format(sample_output1, solution(sample_input1))\nassert solution(sample_input2) == sample_output2, \"Expected output: {}\\nGot output: {}\".format(sample_output2, solution(sample_input2))",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"0.6\", \"Test 1 failed\"\nassert solution(sample_input_2) == \"impossible\", \"Test 2 failed\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n6\n6 1 3 2 2 3\n\"\"\") == \"0.6\"\n\nassert solution(r\"\"\"\n2\n2 2\n\"\"\") == \"impossible\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6\\n') == 'Emma'\nassert solution('1 8 1 8\\n1 10 2 5\\n') == 'Tie'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'Gunnar', 'Your solution is incorrect'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Tie'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed: Expected {output}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6') == 'Emma\\n'\nassert solution('1 8 1 8\\n1 10 2 5') == 'Tie\\n'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\\n\") == \"Emma\\n\"\nassert solution(\"1 8 1 8\\n1 10 2 5\\n\") == \"Tie\\n\"\nassert solution(\"2 6 1 3\\n2 9 1 5\\n\") == \"Gunnar\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 91
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"makes sense\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"something is fishy\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"8 1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\\n8\\n1 2 3 mumble mumble 7 mumble 8\\n\") == \"makes sense\"\nassert solution(\"5\\n1 2 3 mumble 5\\n8\\n1 2 3 mumble mumble 7 mumble 8\\n\") == \"something is fishy\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"makes sense\"\nassert solution(open(\"input2.txt\", \"r\")) == \"something is fishy\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) =='makes sense'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"makes sense\", \"Please implement the solution.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"8 1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 3 mumble 5') =='makes sense'\nassert solution('8\\n1 2 3 mumble mumble 7 mumble 8') =='something is fishy'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"5\\n1 2 3 mumble 5\\n\") == \"makes sense\"\nassert solution(stdin=\"8\\n1 2 3 mumble mumble 7 mumble 8\\n\") == \"something is fishy\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\\n\", \"Expected output: 1 18\\nGot: \" + solution(\"5 3 6 9 12 15\")",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\\n\", \"Solution 1 incorrect\"\nassert solution(\"4 9 25 49 81\") == \"2 121\\n\", \"Solution 2 incorrect\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\"\nassert solution(\"4 9 25 49 81\") == \"2 121\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\\n\", \"Sample Input 1 failed\"\nassert solution(\"4 9 25 49 81\") == \"2 121\\n\", \"Sample Input 2 failed\"\nprint(\"All tests passed\")",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1 18'\nassert solution(stdin) == '2 121'\n\nfrom typing import List",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\"\nassert solution(\"4 9 25 49 81\") == \"2 121\"\n\nfrom typing import List",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\\n\", \"Solution 1 failed\"\nassert solution(\"4 9 25 49 81\") == \"2 121\\n\", \"Solution 2 failed\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"5 3 6 9 12 15\") == \"1 18\"\nassert solution(stdin=\"4 9 25 49 81\") == \"2 121\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\", \"Test 1 failed\"\nassert solution(\"4 9 25 49 81\") == \"2 121\", \"Test 2 failed\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1 18'\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\") == \"CORRECT\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == 'CORRECT'\nassert solution(sample_input_2) == 'CORRECT'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"The first sample case is incorrect.\"\nassert solution(sample_input_2) == sample_output_2, \"The second sample case is incorrect.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n') == 'CORRECT'\n\nassert solution('4\\n2 3\\n1 0\\n0 2\\n3 1\\n') == 'CORRECT'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\") == \"CORRECT\"\n\nassert solution(\"4\\n2 3\\n1 0\\n0 2\\n3 1\") == \"CORRECT\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n8\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4\n''') == 'CORRECT'\n\nassert solution('''\n4\n2 3\n1 0\n0 2\n3 1\n''') == 'CORRECT'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"CORRECT\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == \"CORRECT\"\nassert solution(input2) == \"CORRECT\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4') == 'CORRECT'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    8\n    1 5\n    6 2\n    3 1\n    5 0\n    4 6\n    0 3\n    2 7\n    7 4\n    \"\"\"\n) == \"CORRECT\"\n\nassert solution(\n    \"\"\"\n    4\n    2 3\n    1 0\n    0 2\n    3 1\n    \"\"\"\n) == \"CORRECT\"\n\nassert solution(\n    \"\"\"\n    6\n    0 1\n    1 0\n    0 1\n    1 0\n    \"\"\"\n) == \"CORRECT\"\n\nassert solution(\n    \"\"\"\n    7\n    0 0\n    0 0\n    0 0\n    0 0\n    \"\"\"\n) == \"CORRECT\"\n\nassert solution(\n    \"\"\"\n    8\n    1 2\n    2 1\n    1 2\n    2 1\n    1 2\n    2 1\n    1 2\n    \"\"\"\n) == \"INCORRECT\"\n\nassert solution(\n    \"\"\"\n    7\n    0 1\n    0 1\n    0 1\n    0 1\n    \"\"\"\n) == \"INCORRECT\"\n\nassert solution(\n    \"\"\"\n    6\n    0 1\n    0 1\n    1 0\n    1 0\n    \"\"\"\n) == \"INCORRECT\"\n\nassert solution(\n    \"\"\"\n    8\n    1 2\n    2 1\n    1 2\n    2 1\n    1 2\n    2 1\n    1 2\n    \"\"\"\n) == \"INCORRECT\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '1 1 1', \"Sample Input 1 failed.\"\nassert solution(sample_input2) == '1 2 3 1 11', \"Sample Input 2 failed.\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n') == '1 1 1'\nassert solution('0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\\n') == '1 2 3 1 11'",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3\n    0 1 1\n    1 0 1\n    1 1 0\n    \"\"\"\n) == \"1 1 1\"\n\nassert solution(\n    \"\"\"\n    5\n    0 0 1 1 1\n    0 0 2 0 2\n    1 2 0 1 3\n    1 0 1 0 1\n    1 2 3 1 0\n    \"\"\"\n) == \"1 2 3 1 11\"\n\nassert solution(\n    \"\"\"\n    10\n    1 2 3 4 5 6 7 8 9 10\n    \"\"\"\n) == \"1 2 3 4 5 6 7 8 9 10\"\n\nassert solution(\n    \"\"\"\n    5\n    0 0 1 1 1\n    0 0 2 0 2\n    1 2 0 1 3\n    1 0 1 0 1\n    1 2 3 1 0\n    \"\"\"\n) == \"1 2 3 1 11\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"3\\n0 1 1\\n1 0 1\\n1 1 0\") == \"1 1 1\\n\"\n\nassert solution(\n\"5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\") == \"1 2 3 1 11\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(data) == expected, f\"Test case failed for input {data}.\"\nfor test_data, expected_output in [\n    (\"3\", \"1 1 1\"),\n    (\"5\", \"1 2 3 11\"),\n]:\n    data = test_data.split()\n    assert solution(data) == expected_output, f\"Test case failed for input {data}.\"\nprint(\"All test cases passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([3, 0, 1, 1, 1]) == [1, 1, 1]\nassert solution([5, 0, 0, 1, 1, 1, 0, 0, 2, 0, 2, 1, 2, 0, 1, 3, 1, 0, 1, 2, 3, 1, 11]) == [1, 2, 3, 1, 11]",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 1 1\\n1 0 1\\n1 1 0\") == \"1 1 1\"\nassert solution(\"5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\") == \"1 2 3 1 11\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"\n\nSolution:\nWe can use the datetime module to convert the date to a datetime object, and then use the datetime.weekday() method to determine the day of the week. We can then convert the datetime object to a string and return it. Here's the code:",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"Thursday\", \"Expected: Thursday, actual: \" + solution(\"1 1\")\nassert solution(\"17 1\") == \"Saturday\", \"Expected: Saturday, actual: \" + solution(\"17 1\")",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"Thursday\", \"Incorrect output for sample input 1\"\nassert solution(\"17 1\") == \"Saturday\", \"Incorrect output for sample input 2\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Thursday\", \"Sample Input 1\"\nassert solution(\"17 1\") == \"Saturday\", \"Sample Input 2\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input(1)) == sample_output(1)\nassert solution(sample_input(2)) == sample_output(2)",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\\n\"\nassert solution(\"100\\n500\\n12\\n\") == \"129\\n480\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''\n4\n40\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"40\", \"Testcase 1\"\nassert solution(7) == \"480\", \"Testcase 2\"\nassert solution(12) == \"129\", \"Testcase 3\"",
        "num_ids_2": 35,
        "num_ids_4": 54
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n40\\n129\\n480\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"First input should return the correct output\"\nassert solution(sample_input_2) == sample_output_2, \"Second input should return the correct output\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n40\\n129\\n480\\n\", \"Sample Input 1 and Output 1\"\nassert solution(stdin) == \"129\\n480\\n\", \"Sample Input 2 and Output 2\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\\n\"\nassert solution(\"100\\n500\\n12\\n\") == \"129\\n480\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\\n\"\nassert solution(\"100\\n500\\n12\\n\") == \"129\\n480\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"L: \")) == \"4\\n40\"\nassert solution(input(\"D: \")) == \"40\\n4\"\nassert solution(input(\"X: \")) == \"40\\n4\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4.0\\n3\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\\n\") == \"4.0\\n3\\n\\n6.0\\n3\\n\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\\n\") == \"6.0\\n3\\n\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4''') == '4.0'\n\nassert solution('''3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3''') == '6.0'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\\n\", \"Test 1\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\\n\", \"Test 2\"\n",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4.0\\n3\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4') == '4.0\\n3'\nassert solution('3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3') == '6.0\\n3'",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"4.0\" and solution == \"3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\\n\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n\") == \"2\\n\"\nassert solution(\"30\\n\") == \"7\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 2, \"Expected: 2, Actual: {}\".format(solution(3))\nassert solution(30) == 7, \"Expected: 7, Actual: {}\".format(solution(30))",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2, \"Test 1\"\nassert solution(30) == 7, \"Test 2\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"2\\n\"\nassert solution(\"30\\n\") == \"7\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 2, \"Sample Input 1 failed\"\nassert solution(30) == 7, \"Sample Input 2 failed\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"30\") == \"7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"HE GOT AWAY!\", \"Expected output: HE GOT AWAY!\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == \"1\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == \"HE GOT AWAY!\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\\n\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1') == ['1']\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1') == ['HE GOT AWAY!']",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\\n\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\\n\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'HE GOT AWAY!', \"Your implementation is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\\n\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == \"HE GOT AWAY!\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\") == \"8.0\\n\"\nassert solution(\"2\\n3 3 3\\n4 5 4\") == \"6.843530573929037\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"8.0\", \"The output should be 8.0, but it is {}\".format(solution(sample_input1))\nassert solution(sample_input2) == \"6.843530573929037\", \"The output should be 6.843530573929037, but it is {}\".format(solution(sample_input2))",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\") == \"8.0\"\nassert solution(\"2\\n3 3 3\\n4 5 4\") == \"6.843530573929037\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\") == \"8.0\"\nassert solution(\"2\\n3 3 3\\n4 5 4\") == \"6.843530573929037\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n3 3 3\\n4 4 5') == '8.0', \"The given output is not correct.\"\nassert solution('2\\n3 3 3\\n4 5 4') == '6.843530573929037', \"The given output is not correct.\"\n\nimport math",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\") == 8.0\nassert solution(\"2\\n3 3 3\\n4 5 4\") == 6.843530573929037",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"8.0\\n\", \"Your solution should return the expected output.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\") == \"8.0\"\nassert solution(\"2\\n3 3 3\\n4 5 4\") == \"6.843530573929037\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\\n\") == \"8.0\"\n\nassert solution(\"2\\n3 3 3\\n4 5 4\\n\") == \"6.843530573929037\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output\"\n\nfrom typing import List",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"24\") == \"24\"\nassert solution(\"25\") == \"27\"\nassert solution(\"156\") == \"157\"\nassert solution(\"100\") == \"100\"\nassert solution(\"500\") == \"501\"\nassert solution(\"1000\") == \"1000\"\nassert solution(\"2000\") == \"2000\"\nassert solution(\"3000\") == \"3001\"\nassert solution(\"4000\") == \"4001\"\nassert solution(\"5000\") == \"5001\"\nassert solution(\"6000\") == \"6002\"\nassert solution(\"7000\") == \"7002\"\nassert solution(\"8000\") == \"8003\"\nassert solution(\"9000\") == \"9003\"\nassert solution(\"10000\") == \"10004\"\nassert solution(\"11000\") == \"11004\"\nassert solution(\"12000\") == \"12005\"\nassert solution(\"13000\") == \"13005\"\nassert solution(\"14000\") == \"14006\"\nassert solution(\"15000\") == \"15006\"\nassert solution(\"16000\") == \"16007\"\nassert solution(\"17000\") == \"17007\"\nassert solution(\"18000\") == \"18008\"\nassert solution(\"19000\") == \"19008\"\nassert solution(\"20000\") == \"20009\"\nassert solution(\"21000\") == \"21009\"\nassert solution(\"22000\") == \"22010\"\nassert solution(\"23000\") == \"23010\"\nassert solution(\"24000\") == \"24011\"\nassert solution(\"25000\") == \"25011\"\nassert solution(\"26000\") == \"26012\"\nassert solution(\"27000\") == \"27012\"\nassert solution(\"28000\") == \"28013\"\nassert solution(\"29000\") == \"29013\"\nassert solution(\"30000\") == \"30014\"\nassert solution(\"31000\") == \"31014\"\nassert solution(\"32000\") == \"32015\"\nassert solution(\"33000\") == \"33015\"\nassert solution(\"34000\") == \"34016\"\nassert solution(\"35000\") == \"35016\"\nassert solution(\"36000\") == \"36017\"\nassert solution(\"37000\") == \"37017\"\nassert solution(\"38000\") == \"38018\"\nassert solution(\"39000\") == \"39018\"\nassert solution(\"40000\") == \"40019\"\nassert solution(\"41000\") == \"41019\"\nassert solution(\"42000\") == \"42020\"\nassert solution(\"43000\") == \"43020\"\nassert solution(\"44000\") == \"44021\"\nassert solution(\"45000\") == \"45021\"\nassert solution(\"46000\") == \"46022\"\nassert solution(\"47000\") == \"47022\"\nassert solution(\"48000\") == \"48023\"\nassert solution(\"49000\") == \"49023\"\nassert solution(\"50000\") == \"50024\"\nassert solution(\"51000\") == \"51024\"\nassert solution(\"52000\") == \"52025\"\nassert solution(\"53000\") == \"53025\"\nassert solution(\"54000\") == \"54026\"\nassert solution(\"550",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(24) == 24 # pass\nassert solution(25) == 27 # pass",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"24\\n\", \"Test 1 Failed\"\nassert solution(stdin) == \"27\\n\", \"Test 2 Failed\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(24) == 24, \"Test 1 failed\"\nassert solution(25) == 27, \"Test 2 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(24) == 24, \"Sample Input 1\"\nassert solution(25) == 27, \"Sample Input 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"The output should be 7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"The output should be 188\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1+9+8+4\") == 7, \"Incorrect output\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == 188, \"Incorrect output\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1+9+8+4') == '7', 'Test 1 failed'\nassert solution('1+2+3+4+5+6+7+8+9') == '188', 'Test 2 failed'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Test 1 failed\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Test 2 failed\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1+9+8+4\") == 7, \"Test 1 failed.\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == 188, \"Test 2 failed.\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1+9+8+4') == '7', 'The correct output for 1+9+8+4 is \"7\"'\nassert solution('1+2+3+4+5+6+7+8+9') == '188', 'The correct output for 1+2+3+4+5+6+7+8+9 is \"188\"'",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Test 1\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Test 2\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Test 1\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Test 2\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Test Case 1\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Test Case 2\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 2\\n2 2 -4 5\") == \"2 5\\n5 -2 4\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(Solution()) == \"2 5\\n5 -2 4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 2\\n2 2 -4 5\") == \"2 5 -2 4\"\nassert solution(\"1 5 1 2\") == \"2 5 3\"\nassert solution(\"1 5 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\") == \"50 -2 4 3 2 1\"",
        "num_ids_2": 49,
        "num_ids_4": 211
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == solution(sample_output1) # sample_output1 should be \"2 5\"\nassert solution(sample_input2) == solution(sample_output2) # sample_output2 should be \"5 -2 4\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2 5\\n5 -2 4\", \"Test case 1 failed.\"\n\nassert solution(stdin) == \"5 -2 4\\n2 5\", \"Test case 2 failed.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == output, f\"Input: {input()}, Output: {output}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1, 5, 2) == 2 5\nassert solution(2, 2, -4, 5) == 5 -2 4",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 5 2\\n') == '2 5\\n'\nassert solution('2 2 -4 5\\n') == '5 -2 4\\n'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == ['2 5', '-2 4']",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\\n\") == \"2 2 2 1 1\\n\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\\n\") == \"1 1 1 3 3 3 2 2 2\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\") == \"1 1 1 3 3 3 2 2 2\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='2\\n2 1 2 1 2') == '2 2 2 1 1\\n'\nassert solution(stdin='9\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2\\n'",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output is {expected_output}, but got {solution(input())}.\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 2 1 2\\n5 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\") == \"1 1 1 3 3 3 2 2 2\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''5 2\n2 1 2 1 2''') == '''2 2 2 1 1'''\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1''') == '''1 1 1 3 3 3 2 2 2'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5 2\n    2 1 2 1 2\n''') == '''\n    2 2 2 1 1\n'''\n\nassert solution('''\n    9 3\n    1 3 3 3 2 2 2 1 1\n''') == '''\n    1 1 1 3 3 3 2 2 2\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    Mirko is a great code breaker. He knows any cipher in the world can be broken by frequency analysis. He has completely the wrong idea what frequency analysis is, however.\n\n    He intercepted an enemy message. The message consists of 5 numbers, smaller than or equal to 1000000000. Mirko believed frequency analysis consists of sorting this sequence so that more frequent numbers appear before less frequent ones.\n\n    Formally, the sequence must be sorted so that given any two numbers X and Y, X appears before Y if the number of times X appears in the original sequence is larger than the number of time Y does. If the number of appearances is equal, the number whose value appears sooner in the input should appear sooner in the sorted sequence.\n    \"\"\"\n) == \"\"\"\n    Sample Input 1:\n    5 2\n    2 1 2 1 2\n    Sample Output 1:\n    2 2 2 1 1\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    Mirko is a great code breaker. He knows any cipher in the world can be broken by frequency analysis. He has completely the wrong idea what frequency analysis is, however.\n\n    He intercepted an enemy message. The message consists of 9 numbers, smaller than or equal to 1000000000. Mirko believed frequency analysis consists of sorting this sequence so that more frequent numbers appear before less frequent ones.\n\n    Formally, the sequence must be sorted so that given any two numbers X and Y, X appears before Y if the number of times X appears in the original sequence is larger than the number of time Y does. If the number of appearances is equal, the number whose value appears sooner in the input should appear sooner in the sorted sequence.\n    \"\"\"\n) == \"\"\"\n    Sample Input 2:\n    9 3\n    1 3 3 3 2 2 2 1 1\n    Sample Output 2:\n    1 1 1 3 3 3 2 2 2\n    \"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 2 1 2\") == \"2 2 2 1 1\"\nassert solution(\"5 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\") == \"1 1 1 3 3 3 2 2 2\"",
        "num_ids_2": 46,
        "num_ids_4": 74
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5 2\n2 1 2 1 2\n''') == '''\n2 2 2 1 1\n'''\n\nassert solution('''\n9 3\n1 3 3 3 2 2 2 1 1\n''') == '''\n1 1 1 3 3 3 2 2 2\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"38 24\") == 875\nassert solution(\"1 100\") == 100",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"38 24\") == 875, \"Expected output: 875, but got: \" + str(solution(\"38 24\"))\n\nassert solution(\"1 100\") == 100, \"Expected output: 100, but got: \" + str(solution(\"1 100\"))",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"875\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('38 24\\n1 100\\n') == '875\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"875\", \"Incorrect Output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"38 24\") == \"875\\n\", \"Sample Output 1\"\nassert solution(\"1 100\") == \"100\\n\", \"Sample Output 2\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"38 24\") == \"875\\n\", \"Test case 1\"\nassert solution(\"1 100\") == \"100\\n\", \"Test case 2\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == solution(stdin), \"Input and Output do not match\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(38, 24) == 875\nassert solution(1, 100) == 100",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"734 893\") == \"437\", \"Input 1\"\nassert solution(\"221 231\") == \"132\", \"Input 2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('734 893') == '437', \"Solution 1: Expected output is 437 but got '{}'\".format(solution('734 893'))\nassert solution('221 231') == '132', \"Solution 2: Expected output is 132 but got '{}'\".format(solution('221 231'))",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"734 893\") == \"437\", \"Test case 1 failed\"\nassert solution(\"221 231\") == \"132\", \"Test case 2 failed\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('734 893') == '437', \"The first input is incorrect.\"\nassert solution('221 231') == '132', \"The second input is incorrect.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"734 893\") == \"437\", \"Solution is not correct\"\nassert solution(\"221 231\") == \"132\", \"Solution is not correct\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"734 893\") == \"437\", \"Expected output: 437, but got: {}\".format(solution(\"734 893\"))\nassert solution(\"221 231\") == \"132\", \"Expected output: 132, but got: {}\".format(solution(\"221 231\"))",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('734 893') == '437', \"Solution 1 should return 437, but it is: {}\".format(solution('734 893'))\nassert solution('221 231') == '132', \"Solution 2 should return 132, but it is: {}\".format(solution('221 231'))",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"734 893\") == \"437\\n\", \"Test 1 Failed\"\nassert solution(\"221 231\") == \"132\\n\", \"Test 2 Failed\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"734 893\") == \"437\", \"Error: The given numbers are not correct.\"\n\nassert solution(\"221 231\") == \"132\", \"Error: The given numbers are not correct.\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    11 131\n    \"\"\"\n) == \"programming\\n\"\n\nassert solution(\n    \"\"\"\n    7 96\n    \"\"\"\n) == \"contest\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('11 131') == 'programming', 'The solution is incorrect.'\nassert solution('7 96') == 'contest', 'The solution is incorrect.'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter the length and weight of the word: \")) == \"programming\" or solution(input(\"Enter the length and weight of the word: \")) == \"contest\" or solution(input(\"Enter the length and weight of the word: \")) == \"definitely\" or solution(input(\"Enter the length and weight of the word: \")) == \"impossible\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"programming\"\nassert solution(input()) == \"contest\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"11 131\\n11 131\\n11 131\\n11 131\\n11 131\") == \"programming\\nprogramming\\nprogramming\\nprogramming\\nprogramming\\n\"\n\nassert solution(stdin=\"7 96\\n7 96\\n7 96\\n7 96\\n7 96\") == \"contest\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == expected_output1, f\"Expected output: {expected_output1}, Received output: {solution(sample_input1)}\"\nassert solution(sample_input2) == expected_output2, f\"Expected output: {expected_output2}, Received output: {solution(sample_input2)}\"\n\nfrom typing import List",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='11 131') == ['programming']\nassert solution(stdin='7 96') == ['contest']",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 'X'\") == \".^\" + \"\\n\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\" + \"\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 'X'\") == '.^' + '\\n'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC' + '\\n'\nassert solution(\"5 12 'Z'\") == 'BABABABABABA' + '\\n'",
        "num_ids_2": 42,
        "num_ids_4": 67
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Test case {i + 1} failed: Expected: {output}, Received: {solution(input)}\" for i, (input, output) in enumerate(zip(stdin.splitlines(), stdout.splitlines()))\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test 1 failed\"\nassert solution(sample_input2) == sample_output2, \"Test 2 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2 2 'X'\nX^\n--\n\n.X\n--\n\"\"\") == \"\"\"\n.^\n--\n\"\"\"\n\nassert solution(\"\"\"\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n\"\"\") == \"\"\"\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 'X'\") == \".^\", \"Expected output:.^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\", \"Expected output: BBABABABABAC\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2 2 'X'\n    X^\n    --\n    \"\"\"\n) == \"\"\"\n   .^\n    --\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    3 12 'A'\n    ABABABABABAC\n    BABABABABABB\n    ABABABABABAB\n    \"\"\"\n) == \"\"\"\n    BBABABABABAC\n    BBBBABABABA\n    BBABABABABAB\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    2 2 'X'\n    X^\n    --\n    \"\"\"\n) == \"\"\"\n   .^\n    --\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    3 12 'A'\n    ABABABABABAC\n    BABABABABABB\n    ABABABABABAB\n    \"\"\"\n) == \"\"\"\n    BBABABABABAC\n    BBBBABABABA\n    BBABABABABAB\n    \"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 'X'\") == 'X^' + '\\n'\nassert solution(\"3 12 'A'\") == 'ABABABABABAC' + '\\n' + 'BABABABABABB' + '\\n' + 'ABABABABABAB' + '\\n'\nassert solution(\"2 12 'A'\") == 'BABABABABABA' + '\\n'\nassert solution(\"2 10 'B'\") == '...' + '\\n'\nassert solution(\"1 1 'B'\") == 'B' + '\\n'\nassert solution(\"1 2 'B'\") == 'B' + '\\n'",
        "num_ids_2": 69,
        "num_ids_4": 112
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\n\nimport sys",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n\"",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\n\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(sample_input2) == \"0 0 4\\n0 3 0\\n1 1 1\\n\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n\"",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\").read()) == \"good job\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 4 5 7 8 9 10 11 13') == '1\\n3\\n6\\n12\\n'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1\\n3\\n6\\n12'\nassert solution('4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14') == '2\\n4\\n6\\n8\\n10\\n12\\n14'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200'\n",
        "num_ids_2": 116,
        "num_ids_4": 1011
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1\\n3\\n6\\n12\"\nassert solution(\"9\\n11\\n14\\n15\\n16\\n17\\n18\\n19\\n20\") == \"16\\n19\"\nassert solution(\"1\") == \"1\"\nassert solution(\"21\") == \"\"",
        "num_ids_2": 97,
        "num_ids_4": 116
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1\\n3\\n6\\n12'\nassert solution('5\\n1\\n2\\n3\\n4\\n5') == '1'\n",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == 'Good job!\\n3\\n6\\n12'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == \"good job\\n3\\n6\\n12\\n\", \"The output should be 'good job\\n3\\n6\\n12\\n'.\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Good job!\\n\", \"The solution should output 'Good job!' correctly.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1\\n3\\n6\\n12\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\n\nThe given code snippet is almost correct, but there is one small issue. The expected output should be \"157079.04857106 15.598261092309\", but the code is giving you \"157079.04857106 15.598261092309.0000000000000000\". To fix this issue, you can use the `round()` function to round off the decimal places to the nearest integer before converting it to a string. Here's the updated code:\n\n```python\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309\\n'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\", \"Test case 1 failed.\"\nassert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\", \"Test case 2 failed.\"\nassert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\", \"Test case 3 failed.\"\nassert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\", \"Test case 4 failed.\"\nassert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\", \"Test case 5 failed.\"",
        "num_ids_2": 134,
        "num_ids_4": 268
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\\n\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"The given solution is incorrect. Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '157079.04857106 15.598261092309\\n', 'The correct output is not provided.'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"20 1.2 30000000 12.4\") == \"170174.54487702 15.098261092309\"\nassert solution(\"5 7.2 10000000 6.8\") == \"182386.11645519 14.017360719512\"\nassert solution(\"100 10.5 40000000 3000\") == \"582379.87480879 13.465565923943\"\nassert solution(\"1000 100.5 40000000 2000\") == \"787780.69190981 12.525547976257\"\nassert solution(\"1000000 1000.0 40000000 10000\") == \"2716958.19326004 10.106278148803\"\nassert solution(\"10000000 10000.0 40000000 50000\") == \"3279256.31783985 9.005047050806\"",
        "num_ids_2": 119,
        "num_ids_4": 237
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"157079.04857106 15.598261092309\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n10 8.9 40075000 272.1\n''') == '''\n157079.04857106 15.598261092309\n'''\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\\n\", \"Invalid input\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"No input provided.\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=None) == \"0\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 0",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"0\\n\"\nassert solution(3) == \"4\\n\"\nassert solution(7) == \"15\\n\"\nassert solution(10) == \"28\\n\"\nassert solution(15) == \"60\\n\"\nassert solution(20) == \"128\\n\"\nassert solution(25) == \"330\\n\"\nassert solution(30) == \"720\\n\"\nassert solution(35) == \"1540\\n\"\nassert solution(40) == \"3300\\n\"\nassert solution(45) == \"6860\\n\"\nassert solution(50) == \"15000\\n\"\nassert solution(55) == \"37440\\n\"\nassert solution(60) == \"75480\\n\"\nassert solution(65) == \"157520\\n\"\nassert solution(70) == \"315040\\n\"\nassert solution(75) == \"630080\\n\"\nassert solution(80) == \"1260160\\n\"\nassert solution(85) == \"2520320\\n\"\nassert solution(90) == \"5160640\\n\"\nassert solution(95) == \"10321280\\n\"\nassert solution(100) == \"20642560\\n\"\nassert solution(105) == \"41285120\\n\"\nassert solution(110) == \"82570240\\n\"\nassert solution(115) == \"165140480\\n\"\nassert solution(120) == \"330280960\\n\"\nassert solution(125) == \"660561920\\n\"\nassert solution(130) == \"1321123840\\n\"\nassert solution(135) == \"2642247680\\n\"\nassert solution(140) == \"5284495360\\n\"\nassert solution(145) == \"10568990720\\n\"\nassert solution(150) == \"21137981440\\n\"\nassert solution(155) == \"42275962880\\n\"\nassert solution(160) == \"84551925760\\n\"\nassert solution(165) == \"169103851520\\n\"\nassert solution(170) == \"348207703040\\n\"\nassert solution(175) == \"696415406080\\n\"\nassert solution(180) == \"1392830812160\\n\"\nassert solution(185) == \"2785661624320\\n\"\nassert solution(190) == \"5571323248640\\n\"\nassert solution(195) == \"11142646497280\\n\"\nassert solution(200) == \"22285292994560\\n\"\nassert solution(205) == \"44570585989120\\n\"\nassert solution(210) == \"89141171978240\\n\"\nassert solution(215) == \"178282343956480\\n\"\nassert solution(220) == \"356564687912960\\n\"\nassert solution(225) == \"713129375825920\\n\"\nassert solution(230) == \"1426258751651840\\n\"\nassert solution(235) == \"285251750",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 0, \"The number of relationships needed is 0 for input 1.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"0\", \"Incorrect solution\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"0\\n\"\nassert solution(2) == \"1\\n\"\nassert solution(3) == \"1\\n1\\n1\\n\"\nassert solution(4) == \"3\\n2\\n2\\n1\\n1\\n1\\n\"\nassert solution(5) == \"12\\n11\\n10\\n7\\n6\\n5\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 69
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"3\\n\") == \"6\\n\"\nassert solution(\"4\\n\") == \"24\\n\"\nassert solution(\"5\\n\") == \"100\\n\"\nassert solution(\"6\\n\") == \"2024\\n\"\nassert solution(\"7\\n\") == \"43504\\n\"\nassert solution(\"8\\n\") == \"1258925819614629174706176\\n\"\nassert solution(\"9\\n\") == \"320276246616872396685479321644016\\n\"\nassert solution(\"10\\n\") == \"72628685128542089248744716743121392540315280\\n\"\nassert solution(\"11\\n\") == \"162250467760469543775158481992277302954700408160\\n\"\nassert solution(\"12\\n\") == \"314572643296854097213194467196995048837636433136000\\n\"\nassert solution(\"13\\n\") == \"67108864315917177427799659304234553893446608128000\\n\"\nassert solution(\"14\\n\") == \"15426976967648316773784686196271423515857108954024000\\n\"\nassert solution(\"15\\n\") == \"3085395393529689073855921855095910247555719598944000\\n\"\nassert solution(\"16\\n\") == \"6170790787059378147711853759917170619628383589888000\\n\"\nassert solution(\"17\\n\") == \"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == 3\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3, \"The final score should be 3.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == \"3\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 3\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"3\"\nassert solution(2) == \"2\"\nassert solution(1) == \"1\"\nassert solution(4) == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 3, \"The output is incorrect\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == 3, \"Incorrect output: Expected 3, got {}.\".format(solution(\"4\\nA\\nA\\nA\\nA\"))",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\nA\\nA\\nA\\nA') == 3",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 3, \"The answer is incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: Solution does not match the expected output.\\nInput: {input()}\\nExpected Output: {expected_output}\\nOutput: {solution(input())}\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 3 1 2\n.x.\nx.x\n.x.\"\"\") == \"\"\"\n..xx..\nxx..xx\n..xx..\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1 2\\nx.x\\nx.x\\nx.x\") == \"..xx..\\nx...x\\nx..xx\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"1 1 1 1\") == \"1111\"\nassert solution(\"1 5 1 2\") == \"1111\"\nassert solution(\"3 3 2 3\") == \".xx..x..\\n.x...x..\\n.x...x..\\n.xx...x..\\n..xx...x..\\n...x....\\n...x....\\n...x....\"",
        "num_ids_2": 69,
        "num_ids_4": 145
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, \"Test case 1 failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2 5 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n\") == \"11111\\n11111\\n11111\\n11111\\n\"\n",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage:\\nprint(solution(\\'3 3 1 2\\n.x.\\nx.x\\n.x.\\'))\\n\\n# Sample Output:\\n#..xx..\\n# xx..xx\\n#..xx..\\n# def solution(stdin: str) -> str:\\n#    pass\\n\\n# Example usage:\\n# print(solution(\\'3 3 1 2\\n#.x.\\nx.x\\n#.x.\\'))'",
        "num_ids_2": 162,
        "num_ids_4": 162
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"..xx..\\nx.xx\\n..xx..\\n.def.\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 3 1 2\n.x.\nx.x\n.x.''') == '''\n..xx..\nxx..xx\n..xx..\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"B 60 13 20\") == \"0 20\"\nassert solution(\"B 60 14 20\") == \"60 20\"\nassert solution(\"F 60 12 20\") == \"12 20\"\nassert solution(\"B 60 12 20\") == \"0 20\"",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed. Output: {solution(stdin)}, Expected output: {expected_output}\" for i, (stdin, expected_output) in enumerate(test_cases)",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\", \"Test 1\"\nassert solution(\"B 60 13 20\") == \"13 20\", \"Test 2\"\nassert solution(\"B 60 13 0\") == \"12 20\", \"Test 3\"\nassert solution(\"F 60 13 20\") == \"14 20\", \"Test 4\"\nassert solution(\"F 60 13 45\") == \"14 45\", \"Test 5\"",
        "num_ids_2": 56,
        "num_ids_4": 111
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\nF 60 13 20\\n') == '14 20\\n'\n\nassert solution('1\\nB 0 13 20\\n') == '13 20\\n'\n\nassert solution('1\\nB 0 60 20\\n') == '14 20\\n'\n\nassert solution('1\\nB 0 180 20\\n') == '14 20\\n'\n\nassert solution('1\\nB 0 0 24\\n') == '0 24\\n'\n\nassert solution('1\\nB 0 0 0\\n') == '0 0\\n'\n\nassert solution('1\\nB 0 -60 20\\n') == '13 20\\n'\n\nassert solution('1\\nB 0 -180 20\\n') == '13 20\\n'",
        "num_ids_2": 58,
        "num_ids_4": 115
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == '14 20'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"F 60 13 20\\n\") == \"14 20\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\", \"Test case 1\"\nassert solution(\"B 60 13 20\") == \"13 20\", \"Test case 2\"\nassert solution(\"F 60 00 00\") == \"00 00\", \"Test case 3\"\nassert solution(\"B 60 00 00\") == \"00 00\", \"Test case 4\"\nassert solution(\"F 120 00 00\") == \"23 00\", \"Test case 5\"\n\nfrom typing import List",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('F 60 13 20') == '14 20', \"Test 1\"\nassert solution('B 60 13 20') == '21 13', \"Test 2\"\nassert solution('B 60 14 20') == '21 14', \"Test 3\"\nassert solution('B 60 13 19') == '21 14', \"Test 4\"\nassert solution('F 60 13 21') == '23 13', \"Test 5\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\nF 60 13 20\\n') == '14 20\\n'\nassert solution('2\\nB 0 -10 30\\n') == '0 -10 30\\n'\nassert solution('3\\nF 60 13 20\\n') == '14 20\\n'\nassert solution('4\\nB 0 -10 30\\n') == '0 -10 30\\n'\nassert solution('5\\nF 60 13 20\\n') == '14 20\\n'",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"14 20\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('OCT 31') == 'yup', 'Solution should return yup'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('OCT 31') == 'yup'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('OCT 31') == 'yup'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"DEC 25\") == \"nope\"\nassert solution(\"FEB 9\") == \"nope\"\nassert solution(\"MAR 21\") == \"yup\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"OCT 31\") == \"yup\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"OCT 31\") == \"yup\", \"Incorrect output.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"DEC 25\") == \"nope\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"OCT 31\") == \"yup\\n\", \"The solution does not match the expected output.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\n\nfrom datetime import datetime",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"####..#.\\n#.#.o.o.#\\n.honi.#\\n#.o.o.o#\\n#.#o.o.#\\n.nera.#\\n#.o.o.o#\\n#.#o.o.#\\n.irak.#\\n###...\"\n\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"####..#.\\n#.#.o.o.#\\n.honi.#\\n#.o.o.o#\\n#.#o.o.#\\n.nera.#\\n#.o.o.o#\\n#.#o.o.#\\n.irak.#\\n###...\"",
        "num_ids_2": 198,
        "num_ids_4": 198
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == '#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n    4 4\n    2 2 2 2\nhoni\noker\nnera\nirak\n\"\"\") == r\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 188,
        "num_ids_4": 376
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Solution should return {output()}, but got {solution(input())}.\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"#.#.#.#.\n.#.#.#.#\n#.honi#.\n.#oker.#\n#.nera#.\n.#irak.#\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nera\\nirak\\n\") == \"#.#.#.#.\n.#.#.#.#\n#.honi#.\n.#oker.#\n#.nera#.\n.#irak.#\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"#.#.#.#. \\n.#.#.#.#\\n#.honi#. \\n.#oker.#\\n#.nera#. \\n.#irak.#\\n#.#.#.#. \\n.#.#.#.#\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\"\n\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\"",
        "num_ids_2": 160,
        "num_ids_4": 160
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\"",
        "num_ids_2": 408,
        "num_ids_4": 816
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\n\"",
        "num_ids_2": 360,
        "num_ids_4": 360
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+",
        "num_ids_2": 226,
        "num_ids_4": 339
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:||\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:||\\n+---+---+---+---+---+---+---+---+\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(\\\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\\\n\\\"))",
        "num_ids_2": 486,
        "num_ids_4": 486
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\n\"\n",
        "num_ids_2": 358,
        "num_ids_4": 358
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\\") == \\\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\ndef solution(stdin: str) -> str:\\n    pass\\\"\\\"\"",
        "num_ids_2": 744,
        "num_ids_4": 744
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\n\"\nassert solution(\"White: A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z\\nBlack: A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z\\n\") == \"Black: A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z\\nWhite: A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z\\n\"\nassert solution(\"White: 1,2,3,4,5,6,7,8,9,10,J,Q,K,A,J,T,9\\nBlack: 1,2,3,4,5,6,7,8,9,10,J,Q,K,A,J,T,9\\n\") == \"Black: 1,2,3,4,5,6,7,8,9,10,J,Q,K,A,J,T,9\\nWhite: 1,2,3,4,5,6,7,8,9,10,J,Q,K,A,J,T,9\\n\"\nassert solution(\"White: 1,2,3,4,5,6,7,8,9,10,J,Q,K,A,J,T,9\\nBlack: 1,2,3,4,5,6,7,8,9,10,J,Q,K,A,J,T,9\\n\") == \"Black: 1,2,3,4,5,6,7,8,9,10,J,Q,K,A,J,T,9\\nWhite: 1,2,3,4,5,6,7,8,9,10,J,Q,K,A,J,T,9\\n\"",
        "num_ids_2": 432,
        "num_ids_4": 760
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n\"The output must be a valid input for the problem \\\"Help Me With The Game\\\", corresponding to the given input data.\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1.000000, 4.000000) == \"Diablo is happy!\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Diablo is happy!\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"1.000000 4.000000\") == \"Diablo is happy!\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Diablo is happy!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(\"2.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(\"3.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(\"1.000000 8.000000\") == \"Diablo is happy!\"\nassert solution(\"1.000000 1.000000\") == \"Need more materials!\"\nassert solution(\"2.000000 1.000000\") == \"Need more materials!\"\nassert solution(\"3.000000 1.000000\") == \"Need more materials!\"\nassert solution(\"1.000000 5.000000\") == \"Need more materials!\"\nassert solution(\"2.000000 5.000000\") == \"Need more materials!\"\nassert solution(\"3.000000 5.000000\") == \"Need more materials!\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Diablo is happy!', \"The solution is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Diablo is happy!', \"The given input is not valid.\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"Diablo is happy!\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Diablo is happy!\", \"Test failed!\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Diablo is happy!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\\n\"\nassert solution(\"5 5 5 5 5\") == \"use the stairs\\n\"\nassert solution(\"1 1 1 1 1\") == \"use the stairs\\n\"\nassert solution(\"0 0 0 0 0\") == \"use the stairs\\n\"\nassert solution(\"101 100 100 101 100\") == \"use the stairs\\n\"\nassert solution(\"10 10 10 10 10\") == \"6\\n\"\nassert solution(\"1 1 1 1 1\") == \"6\\n\"\nassert solution(\"0 0 0 0 0\") == \"6\\n\"\nassert solution(\"101 100 100 101 100\") == \"6\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 1 10 2 1\") == 6\nassert solution(\"2 2 3 4 5\") == 7\nassert solution(\"3 2 3 4 5\") == 8\nassert solution(\"4 2 3 4 5\") == \"use the stairs\"\nassert solution(\"5 2 3 4 5\") == \"use the stairs\"\nassert solution(\"6 2 3 4 5\") == \"use the stairs\"\nassert solution(\"7 2 3 4 5\") == \"use the stairs\"\nassert solution(\"8 2 3 4 5\") == \"use the stairs\"\nassert solution(\"9 2 3 4 5\") == \"use the stairs\"\nassert solution(\"10 2 3 4 5\") == \"use the stairs\"",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\\n\"\nassert solution(\"15 1 15 2 1\") == \"6\\n\"\nassert solution(\"20 1 20 2 1\") == \"6\\n\"\nassert solution(\"10 10 10 1 1\") == \"use the stairs\\n\"\nassert solution(\"20 20 20 1 1\") == \"use the stairs\\n\"\nassert solution(\"100 1 100 2 1\") == \"use the stairs\\n\"\nassert solution(\"10 1 10 1 100\") == \"use the stairs\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\\n\"\nassert solution(\"10 1 10 2 1\") == \"6\\n\"\nassert solution(\"10 10 10 2 1\") == \"6\\n\"\nassert solution(\"10 1 10 100 1\") == \"use the stairs\\n\"\nassert solution(\"10 1 10 1 100\") == \"use the stairs\\n\"\nassert solution(\"10 1 10 2 100\") == \"use the stairs\\n\"\nassert solution(\"10 1 10 100 100\") == \"use the stairs\\n\"\nassert solution(\"10 1 10 1000 1\") == \"use the stairs\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 84
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"5 10 20 5 1\") == \"10\"\nassert solution(\"1 1 1 1 1\") == \"use the stairs\"\n",
        "num_ids_2": 41,
        "num_ids_4": 62
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"6\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 1 10 2 1\") == 6",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\\n\"\nassert solution(\"10 10 5 2 1\") == \"use the stairs\\n\"\nassert solution(\"10 10 1 2 1\") == \"use the stairs\\n\"\nassert solution(\"1 1 10 2 1\") == \"6\\n\"\nassert solution(\"10 1 10 2 1000000\") == \"use the stairs\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 93
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"89.06666666666666\", \"Your code is incorrect.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8\\n89.06666666666666'\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"89.06666666666666\", \"Expected output: 89.06666666666666, but got: {}\".format(solution())",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"128.8\"\nassert solution() == \"89.06666666666666\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Expected output not found.\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '89.06666666666666', \"The correct output should be 89.06666666666666, but it is: {}\".format(solution(3))",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n500\\n120\\n75\\n\") == \"128.8\\n89.06666666666666\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"128.8\\n89.06666666666666\", \"Incorrect solution\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8\\n89.06666666666666'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"89.06666666666666\", \"Your solution is incorrect\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4, \"Invalid solution\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"\nassert solution(\"5\\n1 45 65 84 347\") == \"2\"\nassert solution(\"5\\n1 45 65 84 345\") == \"1\"\nassert solution(\"5\\n1 45 65 84 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345 345",
        "num_ids_2": 52,
        "num_ids_4": 1027
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Test failed. Expected '{output}', but got '{solution(stdin)}'.\" for stdin, output in [\n    (input, output) for input, output in [\n        (\"5\", \"4\"),\n        (\"1 45 65 84 346\", \"4\"),\n        (\"3 40 50 60 70 80 90 100\", \"2\"),\n        (\"100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\", \"4\"),\n        (\"1000 999 998 997 996 995 994 993 992 991 990 989 988 987 986 985 984 983 982 981 980 979 978 977 976 975 974 973 972 971 970 969 968 967 966 965 964 963 962 961 960 959 958 957 956 955 954 953 952 951 950 949 948 947 946 945 944 943 942 941 940 939 938 937 936 935 934 933 932 931 930 929 928 927 926 925 924 923 922 921 920 919 918 917 916 915 914 913 912 911 910 909 908 907 906 905 904 903 902 901 900\", \"2\"),\n        (\"10000 9999 9998 9997 9996 9995 9994 9993 9992 9991 9990 9989 9988 9987 9986 9985 9984 9983 9982 9981 9980 9979 9978 9977 9976 9975 9974 9973 9972 9971 9970 9969 9968 9967 9966 9965 9964 9963 9962 9961 9960 9959 9958 9",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 1, 2, 5, 2, 3, 4, 5) == 4, \"The output should be 4.\"\n\nassert solution(6, 3, 1, 4, 2, 6, 7, 8) == 6, \"The output should be 6.\"\n\nassert solution(10, 3, 1, 5, 6, 9, 10, 11) == 8, \"The output should be 8.\"",
        "num_ids_2": 78,
        "num_ids_4": 120
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n\nfrom typing import List\nfrom collections import defaultdict",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1 45 65 84 346') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"\nassert solution(\"10\\n100 500 1000 2000 3000\") == \"2\"\nassert solution(\"10\\n100 500 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000 16000 17000 18000 19000 20000\") == \"4\"\n\nfrom typing import List\nfrom collections import defaultdict\nfrom datetime import datetime, timedelta",
        "num_ids_2": 61,
        "num_ids_4": 192
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\"\n\nassert solution(\"7 4\\n#######\\n#..TGG#\\n#P.GTG#\\n#######\") == \"0\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == 1, \"Expected output 1, got {}\".format(solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\"))",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, \"The solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\", \"Expected output 1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\", \"The solution is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test failed for input {input}, expected output {output}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"The function should return {output}, but returned {solution(input)}.\" for input, output in [(stdin, output) for stdin, output in test_cases]",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"Solution for {input_str} is incorrect. Expected output: {output_str}, but got: {solution(input_str)}\"\nfor input_str, output_str in [(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\", \"1\"), (\"7 4\\n#######\\n#..TGG#\\n#..TGG#\\n#######\", \"1\"), (\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\", \"0\"), (\"7 4\\n#######\\n#..TGG#\\n#..TGG#\\n#######\", \"0\"), (\"7 4\\n#######\\n#P.GTG#\\n#P.GTG#\\n#######\", \"0\")]:\n    assert solution(input_str) == output_str, f\"Solution for {input_str} is incorrect. Expected output: {output_str}, but got: {solution(input_str)}\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"1\", \"Your solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    13 50\n     ____$$$_______$$$______$$$________$$$______$$$____\n     ____$$$_______$$$______$$$________$$$______$$$____\n     _____$_________$________$__________$________$_____\n    ___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n    __$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n    _$____$$____$__$__$___$$____$___$__$__$___$$____$_\n    $_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n    _____$_$______$_$_____$_$_________$_$_____$_$_____\n    ____$___$____$___$____$___$______$___$____$___$___\n    ___$____$___$_____$___$____$____$_____$___$____$__\n    __$_____$___$_____$___$_____$___$_____$___$_____$_\n    __$_____$___$_____$___$_____$___$_____$___$_____$_\n    _$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n    \"\"\"\n) == \"5\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$') == 5, \"The solution for the given input is incorrect.\"",
        "num_ids_2": 294,
        "num_ids_4": 294
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$') == 5\nprint(\"All tests passed!\")",
        "num_ids_2": 283,
        "num_ids_4": 283
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\\n\") == 5, \"Test 1 Failed\"\n\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\\n\") == 5, \"Test 2 Failed\"\n\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\\n\") == 5, \"Test 3 Failed\"\n\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\\n_$____$$____$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$",
        "num_ids_2": 583,
        "num_ids_4": 1021
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == \"5\", \"Test 1 Failed\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == \"5\", \"Test 2 Failed\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == \"5\", \"Test 3 Failed\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\\n_$____$$____$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____",
        "num_ids_2": 579,
        "num_ids_4": 1023
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"abc\") == \"\"\nassert solution(\"$$$\") == \"\"\nassert solution(\"$$$abc\") == \"\"\nassert solution(\"$$$__\") == \"\"\nassert solution(\"$$$_____\") == \"\"\nassert solution(\"$$$_____$\") == \"\"\nassert solution(\"$$$_________\") == \"\"\nassert solution(\"$$$__________\") == \"\"\nassert solution(\"$$$__________$$$\") == \"\"\nassert solution(\"$$$__________$$$abc\") == \"\"\nassert solution(\"$$$__________$$$__\") == \"\"\nassert solution(\"$$$__________$$$_____\") == \"\"\nassert solution(\"$$$__________$$$_____$\") == \"\"\nassert solution(\"$$$__________$$$_________\") == \"\"\nassert solution(\"$$$__________$$$__________\") == \"\"\nassert solution(\"$$$__________$$$__________$$$\") == \"\"\nassert solution(\"$$$__________$$$__________$$$abc\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__\") == \"\"\nassert solution(\"$$$__________$$$__________$$$_____\") == \"\"\nassert solution(\"$$$__________$$$__________$$$_____$\") == \"\"\nassert solution(\"$$$__________$$$__________$$$_________\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$abc\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$_____\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$_____$\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$_________\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$abc\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$__\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$_____\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$_____$\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$_________\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$__________\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$__________$$$\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$__________$$$abc\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$__________$$$__\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$__________$$$_____\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$__________$$$_____$\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$__________$$$_________\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$__________$$$__________\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$__________$$$__________$$$\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$__________$$$__________$$$abc\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$__________$$$__________$$$__\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$__________$$$__________$$$__________$$$_____\") == \"\"\nassert solution(\"$$$__________$$$__________$$$__________$$$",
        "num_ids_2": 14,
        "num_ids_4": 31
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == '5'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n\") == 5, \"Expected 5, got {}\".format(solution(\"13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n\"))",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 5, \"The solution is not correct.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\", \"Your solution is incorrect.\"\nassert solution(\"your friend is frustrated with everyone writing in pig latin\") == \"yay antday ebay osay indkay otay oday ityay\", \"Your solution is incorrect.\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\", \"Test Case 1\"\n\nassert solution(\"i speak pig latin\") == \"iyay antcay eakspay igpay atinlay\", \"Test Case 2\"\n\nassert solution(\"i'm not sure\") == \"iyay antcay eakspay igpay atinlay\", \"Test Case 3\"\n\nassert solution(\"good afternoon\") == \"oday ityay ebay oday ityay\", \"Test Case 4\"\n\nassert solution(\"hello world\") == \"oday ityay ebay oday ityay\", \"Test Case 5\"",
        "num_ids_2": 67,
        "num_ids_4": 129
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay', \"Expected output: 'iyay antcay eakspay igpay atinlay', but got: {}.\".format(solution('i cant speak pig latin'))\n\nassert solution('oare') == 'oareay', \"Expected output: 'oareay', but got: {}.\".format(solution('oare'))\n\nassert solution('educate') == 'educateay', \"Expected output: 'educateay', but got: {}.\".format(solution('educate'))\n\nassert solution('tectate') == 'tectateay', \"Expected output: 'tectateay', but got: {}.\".format(solution('tectate'))\n\nassert solution('anceay') == 'anceayay', \"Expected output: 'anceayay', but got: {}.\".format(solution('anceay'))",
        "num_ids_2": 98,
        "num_ids_4": 174
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"and could speak pig latin\") == \"and could speak yay igpay atinlay\"\nassert solution(\"ordinary people go to the store\") == \"ordinary people go to yay storay otay oday\"\nassert solution(\"when the cat lays on the mat\") == \"when the cat lay yay on yay matay\"",
        "num_ids_2": 52,
        "num_ids_4": 108
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"youyay eakspay igpay atinlay\") == \"yay eakspay igpay atinlay\"\nassert solution(\"and youyay ebay osay indkay otay oday ityay\") == \"andyay ebay osay indkay otay oday ityay\"\nassert solution(\"frustrated friend\") == \"yufrated friend\"",
        "num_ids_2": 59,
        "num_ids_4": 117
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"A friend of yours was frustrated with everyone writing in Pig Latin and has asked you to write a program to translate to Pig Latin for him. Ouldway youyay ebay osay indkay otay oday ityay?\") == \"ayay eryay osay indkay otay oday ityay\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\nassert solution(\"i am an old man\") == \"iyay amantay olyway amay oday amay\"\n\nassert solution(\"i cannot understand pig latin\") == \"iyay antcanay eakspay igpay atinlay\"\n\nassert solution(\"i would like to learn python\") == \"iyay antlieway laywalyay tpalyay ekpyay\"\n\nassert solution(\"i am in love with your cat\") == \"iyay aminlay otay otay otay otay otay otay otay odyway with otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay ot",
        "num_ids_2": 55,
        "num_ids_4": 113
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n2\\nq\\npizza\\n10\\n6 pizza peppers\\npasta peppers\\n2\\n3\\napple\\nbanana\\npapaya\\n') == 'nymble'\nassert solution('3\\nnarwhal\\n5\\napple\\nbanana\\npapaya\\n') == 'Anywhere is fine I guess'",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\nq\\npanada\\npanada\\npanada\\npanada\") == \"nymble\"\nassert solution(\"3\\nnymble\\npanada\\npanada\\npanada\") == \"nymble\"\nassert solution(\"2\\n1\\nq\\npanada\\npanada\\npanada\\npanada\") == \"Anywhere is fine I guess\"\nassert solution(\"4\\nnymble\\npanada\\npanada\\npanada\\npanada\\npanada\") == \"Anywhere is fine I guess\"",
        "num_ids_2": 61,
        "num_ids_4": 136
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\nq\\npan\\ncurries\\nsandwiches\\n\") == \"nymble\\n\"\nassert solution(\"3\\nn\\npan\\ncurries\\nsandwiches\\n\") == \"Anywhere is fine I guess\\n\"\nassert solution(\"2\\n3\\nspaghetti\\nquinoa\\nshredded lettuce\\n\") == \"Anywhere is fine I guess\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 107
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''2\n    2\n    q\n    potatoes\n    salad\n    3\n    nymble\n    pancakes\n    pea soup\n    punch\n    ''') == 'nymble\\n'\n\nassert solution(\n    '''2\n    2\n    q\n    potatoes\n    salad\n    3\n    nymble\n    pancakes\n    pea soup\n    punch'''\n) == 'nymble\\n'\n\nassert solution(\n    '''2\n    2\n    q\n    potatoes\n    salad\n    3\n    nymble\n    pancakes\n    pea soup\n    punch'''\n) == 'nymble\\n'\n\nassert solution(\n    '''2\n    2\n    q\n    potatoes\n    salad\n    3\n    nymble\n    pancakes\n    pea soup\n    punch'''\n) == 'nymble\\n'\n\nassert solution(\n    '''2\n    2\n    q\n    potatoes\n    salad\n    3\n    nymble\n    pancakes\n    pea soup\n    punch'''\n) == 'Anywhere is fine I guess\\n'\n\nassert solution(\n    '''2\n    2\n    q\n    potatoes\n    salad\n    3\n    nymble\n    pancakes\n    pea soup\n    punch'''\n) == 'Anywhere is fine I guess\\n'\n\nassert solution(\n    '''2\n    2\n    q\n    potatoes\n    salad\n    3\n    nymble\n    pancakes\n    pea soup\n    punch'''\n) == 'Anywhere is fine I guess\\n'\n\nassert solution(\n    '''2\n    2\n    q\n    potatoes\n    salad\n    3\n    nymble\n    pancakes\n    pea soup\n    punch'''\n) == 'Anywhere is fine I guess\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\\nq\\npasta\\nsalad\\n3\\nnymble\\npancakes\\npasta\\npancakes\\n\") == \"nymble\\n\"\nassert solution(\"2\\n2\\nq\\npasta\\nsalad\\n3\\nnymble\\npancakes\\npasta\\npancakes\\n\") == \"Anywhere is fine I guess\"\n\nfrom typing import List",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch\\n\") == \"nymble\\n\"\nassert solution(\"3\\nnymble\\npancakes\\npea soup\\npunsch\\n\") == \"Anywhere is fine I guess\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n2\\nq\\npasta\\nsandwich\\n3\\nchicken\\nmushrooms\\npasta\\nshredded\\nbanana\\nsweet potato\\n3\\nnybbles\\npea soup\\npancakes\\n1\\nsweet pepper\\n1\\nsweet chili powder\\n2\\nsweet paprika\\n4\\nsweet avocado\\n5\\nblueberry\\n6\\norange\\n7\\nstrawberry\\n8\\nmelon\\n9\\nkiwi\\n10\\npeach\\nAnywhere is fine I guess') == 'nymble\\n'\nassert solution('2\\n2\\n\\npasta\\nsandwich\\n3\\nchicken\\nmushrooms\\npasta\\nshredded\\nbanana\\nsweet potato\\n3\\nnybbles\\npea soup\\npancakes\\n1\\nsweet pepper\\n1\\nsweet chili powder\\n2\\nsweet paprika\\n4\\nsweet avocado\\n5\\nblueberry\\n6\\norange\\n7\\nstrawberry\\n8\\nmelon\\n9\\nkiwi\\n10\\npeach\\nAnywhere is fine I guess') == 'Anywhere is fine I guess'\nassert solution('2\\n2\\n\\npasta\\nsandwich\\n3\\nchicken\\nmushrooms\\npasta\\nshredded\\nbanana\\nsweet potato\\n3\\nnybbles\\npea soup\\npancakes\\n1\\nsweet pepper\\n1\\nsweet chili powder\\n2\\nsweet paprika\\n4\\nsweet avocado\\n5\\nblueberry\\n6\\norange\\n7\\nstrawberry\\n8\\nmelon\\n9\\nkiwi\\n10\\npeach\\nAnywhere is fine I guess') == 'Anywhere is fine I guess'",
        "num_ids_2": 319,
        "num_ids_4": 479
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"nymble\", \"The solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('test_case.txt').read()) == 'nymble'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('q\\npotatoes\\nsalad\\npancakes\\npancakes\\n') == 'nymble\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('2\\n2\\nq\\npotatoes\\nsalad\\npancakes\\npancakes\\n') == 'nymble\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('2\\n2\\nq\\npotatoes\\nsalad\\npancakes\\npancakes\\n') == 'nymble\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('2\\n2\\nq\\npotatoes\\nsalad\\npancakes\\npancakes\\n') == 'nymble\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('2\\n2\\nq\\npotatoes\\nsalad\\npancakes\\npancakes\\n') == 'nymble\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'",
        "num_ids_2": 103,
        "num_ids_4": 211
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 0 15\") == \"3\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 0 15\") == \"3\\n\" # expected output: 3\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5 0 15\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    5 1 100000\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    3 0 100000\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 100000\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    0 2 100000\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    100001 100000 0\n    \"\"\"\n) == \"3\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"The solution of the problem is {solution(input())}, but the expected output is {output}.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 0 15\") == 3, \"The output should be 3\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5, 0, 15) == 3, \"Test case 1 failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\", \"Test case 1 failed\"\n\nfrom typing import List",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5, 0, 15) == 3, \"Test case not passing.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 0 15\") == 3",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\", \"Your code is not correct.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 15\") == \"19\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 15\") == \"19\", \"Test case 1 failed\"\nprint(\"Test case 1 passed\")\n\nassert solution(\"10 5\") == \"8\", \"Test case 2 failed\"\nprint(\"Test case 2 passed\")\n\nassert solution(\"20 10\") == \"20\", \"Test case 3 failed\"\nprint(\"Test case 3 passed\")\n\nassert solution(\"-10 5\") == \"5\", \"Test case 4 failed\"\nprint(\"Test case 4 passed\")\n\nassert solution(\"0 1000\") == \"0\", \"Test case 5 failed\"\nprint(\"Test case 5 passed\")",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"19\", \"Incorrect solution\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 15\") == \"19\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 15\") == \"19\", \"Test failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"19\\n\", \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 15\") == \"19\", \"Test Failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 15\") == \"19\", \"Incorrect result\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('11 15') == '19', 'The solution is incorrect.'\nprint(\"All test cases passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 15\") == \"19\", \"Solution should return 19, but it returned {}\".format(solution(\"11 15\"))\nassert solution(\"20 -1\") == \"19\", \"Solution should return 19, but it returned {}\".format(solution(\"20 -1\"))\nassert solution(\"1 2\") == \"2\", \"Solution should return 2, but it returned {}\".format(solution(\"1 2\"))\nassert solution(\"300 1\") == \"1\", \"Solution should return 1, but it returned {}\".format(solution(\"300 1\"))\n",
        "num_ids_2": 72,
        "num_ids_4": 138
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('South West East') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"South West East\") == \"Yes\"\n\nassert solution(\"East South West\") == \"Yes\"\n\nassert solution(\"East West North\") == \"No\"\n\nassert solution(\"South West East\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"South West East\") == \"Yes\", \"Sample Input 1 failed.\"\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('South West East') == 'Yes', \"Your code is not correct\"\nassert solution('North East South') == 'Yes', \"Your code is not correct\"\nassert solution('South East West') == 'No', \"Your code is not correct\"\nassert solution('North West East') == 'No', \"Your code is not correct\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('South West East') == 'Yes', 'Input: South West East\\nOutput: Yes'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"South West East\") == \"Yes\", \"Solution should return 'Yes' for the given input.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"South West East\") == \"Yes\"\nassert solution(\"East West South\") == \"No\"\nassert solution(\"North West South\") == \"No\"\nassert solution(\"South East North\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"South West East\") == \"Yes\"\nassert solution(\"North South East\") == \"Yes\"\nassert solution(\"East South West\") == \"No\"\nassert solution(\"West North East\") == \"No\"\nassert solution(\"South West North\") == \"No\"\nassert solution(\"South East West\") == \"No\"\nassert solution(\"East West North\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 16\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"John likes simple ciphers. He had been using the \\\"Caesar\\\" cipher to encrypt his diary until recently, when he learned a hard lesson about its strength by catching his sister Mary browsing through the diary without any problems.\\nRapidly searching for an alternative, John found a solution: the famous \\\"Autokey\\\" cipher. He uses a version that takes the $26$ lower-case letters 'a'-'z' and internally translates them in alphabetical order to the numbers $0$ to $25$. The encryption key k begins with a secret prefix of n letters. Each of the remaining letters of the key is copied from the letters of the plaintext 'a', so that k_{n+i} = a_{i} for i >= 1. Encryption of the plaintext 'a' to the ciphertext 'b' follows the formula b_ i = a_ i + k_ i \\bmod 26. Mary is not easily discouraged. She was able to get a peek at the last n letters John typed into his diary on the family computer before he noticed her, quickly encrypted the text document with a click, and left. This could be her chance.\") == \"marywasnosyagain\"\nassert solution(\"John likes simple ciphers. He had been using the \\\"Caesar\\\" cipher to encrypt his diary until recently, when he learned a hard lesson about its strength by catching his sister Mary browsing through the diary without any problems.\\nRapidly searching for an alternative, John found a solution: the famous \\\"Autokey\\\" cipher. He uses a version that takes the $26$ lower-case letters 'a'-'z' and internally translates them in alphabetical order to the numbers $0$ to $25$. The encryption key k begins with a secret prefix of n letters. Each of the remaining letters of the key is copied from the letters of the plaintext 'a', so that k_{n+i} = a_{i} for i >= 1. Encryption of the plaintext 'a' to the ciphertext 'b' follows the formula b_ i = a_ i + k_ i \\bmod 26. Mary is not easily discouraged. She was able to get a peek at the last n letters John typed into his diary on the family computer before he noticed her, quickly encrypted the text document with a click, and left. This could be her chance.\") == \"def solution(stdin: str) -> str:\\npass\\n\"",
        "num_ids_2": 543,
        "num_ids_4": 543
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n5 16\nagain\npirpumsemoystoal\n''') == '''\nmarywasnosyagain\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"John likes simple ciphers. He had been using the \\\"Caesar\\\" cipher to encrypt his diary until recently, when he learned a hard lesson about its strength by catching his sister Mary browsing through the diary without any problems. Rapidly searching for an alternative, John found a solution: the famous \\\"Autokey\\\" cipher. He uses a version that takes the $26$ lower-case letters 'a'-'z' and internally translates them in alphabetical order to the numbers $0$ to $25$. The encryption key k begins with a secret prefix of n letters. Each of the remaining letters of the key is copied from the letters of the plaintext a, so that k_{n+i} = a_{i} for i >= 1. Encryption of the plaintext a to the ciphertext b follows the formula b_ i = a_ i + k_ i \\bmod 26. Mary is not easily discouraged. She was able to get a peek at the last n letters John typed into his diary on the family computer before he noticed her, quickly encrypted the text document with a click, and left. This could be her chance.\") == \"marywasnosyagain\"\nassert solution(\"def solution(stdin: str) -> str:\\n    pass\") == \" \"\n",
        "num_ids_2": 282,
        "num_ids_4": 282
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('John likes simple ciphers. He had been using the \"Caesar\" cipher to encrypt his diary until recently, when he learned a hard lesson about its strength by catching his sister Mary browsing through the diary without any problems.') =='marywasnosyagain'\nassert solution('Rapidly searching for an alternative, John found a solution: the famous \"Autokey\" cipher. He uses a version that takes the $26$ lower-case letters \\'a\\'\u2013\\'z\\' and internally translates them in alphabetical order to the numbers $0$ to $25$. The encryption key $k$ begins with a secret prefix of $n$ letters. Each of the remaining letters of the key is copied from the letters of the plaintext $a$, so that $k_{n+i} = a_{i}$ for $i \\geq 1$. Encryption of the plaintext $a$ to the ciphertext $b$ follows the formula $b_ i = a_ i + k_ i \\bmod 26$. Mary is not easily discouraged. She was able to get a peek at the last $n$ letters John typed into his diary on the family computer before he noticed her, quickly encrypted the text document with a click, and left. This could be her chance.') == 'def solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 297,
        "num_ids_4": 297
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 16\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"John likes simple ciphers. He had been using the \\\"Caesar\\\" cipher to encrypt his diary until recently, when he learned a hard lesson about its strength by catching his sister Mary browsing through the diary without any problems.\") == \"marywasnosyagain\"\nassert solution(\"Rapidly searching for an alternative, John found a solution: the famous \\\"Autokey\\\" cipher. He uses a version that takes the $26$ lower-case letters 'a'-'z' and internally translates them in alphabetical order to the numbers $0$ to $25$. The encryption key $k$ begins with a secret prefix of $n$ letters. Each of the remaining letters of the key is copied from the letters of the plaintext 'a', so that 'k_{n+i} = a_{i}'. Encryption of the plaintext 'a' to the ciphertext 'b' follows the formula 'b_ i = a_ i + k_ i \\bmod 26'. Mary is not easily discouraged. She was able to get a peek at the last n letters John typed into his diary on the family computer before he noticed her, quickly encrypted the text document with a click, and left. This could be her chance.\") == \"marywasnosyagain\"",
        "num_ids_2": 278,
        "num_ids_4": 278
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('test_inputs/test_input1.txt').read()) =='marywasnosyagain'\nassert solution(open('test_inputs/test_input2.txt').read()) == 'abcdefg'\nassert solution(open('test_inputs/test_input3.txt').read()) == 'lmao'",
        "num_ids_2": 51,
        "num_ids_4": 76
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"johnlikessimpleciphershehadbeenusingthecaesarciphertoencrypthisdiaryuntilrecentlywhenhelearnedahardlessonaboutitsstrengthbycatchinghissistermarybrowsingthroughthediarywithoutanyproblems.rapidlysearchingforanalternativejohnfoundathingsimplekey.thefamousautokeycipherheusesaversionthattakesthe26lowercaselettersac-zandinternallytranslatestheminalphabeticalordertothenumbers0to25.theencryptionkeykbeginswithasecretprefixofnletters.eachoftheremaininglettersofthekeyiscopiedfromthelettersoftheplaintexta.encryptionofthereadplaintexta2totheciphertextbfollowstheformulabib_i = a_i + k_i % 26.maryisnoteasilydiscouraged.shesabletopeekatthelastnnlettersjostypedinthefamilycomputerbeforeshibeingnoticedherquicklyencryptedthetextdocumentwithaclickandleft.thisthiscouldbesherchances.\") == \"marywasnosyagain\"\n",
        "num_ids_2": 243,
        "num_ids_4": 243
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"marywasnosyagain\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 'Either', 'Test case 1 failed.'\nassert solution(5) == 'Either', 'Test case 2 failed.'\nassert solution(100) == 'Either', 'Test case 3 failed.'\nassert solution(101) == 'Even', 'Test case 4 failed.'\nassert solution(99) == 'Odd', 'Test case 5 failed.'",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Even'\nassert solution(3) == 'Odd'\nassert solution(4) == 'Even'\nassert solution(5) == 'Either'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Even'\nassert solution(3) == 'Either'\nassert solution(4) == 'Odd'\nassert solution(5) == 'Even'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 'Either'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 'Either', 'Your code is incorrect.'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 'Either', \"The input should be 1, but it is: {}\".format(solution(1))  # Test 1\nassert solution(2) == 'Either', \"The input should be 2, but it is: {}\".format(solution(2))  # Test 2\nassert solution(10) == 'Either', \"The input should be 10, but it is: {}\".format(solution(10))  # Test 3\nassert solution(11) == 'Even', \"The input should be 11, but it is: {}\".format(solution(11))  # Test 4\nassert solution(21) == 'Odd', \"The input should be 21, but it is: {}\".format(solution(21))  # Test 5",
        "num_ids_2": 68,
        "num_ids_4": 142
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 'Either', 'The solution should return \"Either\" for N = 1'\nassert solution(2) == 'Either', 'The solution should return \"Either\" for N = 2'\nassert solution(3) == 'Even', 'The solution should return \"Even\" for N = 3'\nassert solution(4) == 'Odd', 'The solution should return \"Odd\" for N = 4'\nassert solution(5) == 'Either', 'The solution should return \"Either\" for N = 5'",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 'Either', \"The function should return 'Either', not '{}'\".format(solution(1))\n\nassert solution(2) == 'Even', \"The function should return 'Even', not '{}'\".format(solution(2))\n\nassert solution(3) == 'Odd', \"The function should return 'Odd', not '{}'\".format(solution(3))\n\nassert solution(4) == 'Either', \"The function should return 'Either', not '{}'\".format(solution(4))\n\nassert solution(5) == 'Even', \"The function should return 'Even', not '{}'\".format(solution(5))\n\nassert solution(6) == 'Odd', \"The function should return 'Odd', not '{}'\".format(solution(6))\n\nassert solution(7) == 'Either', \"The function should return 'Either', not '{}'\".format(solution(7))\n\nassert solution(8) == 'Even', \"The function should return 'Even', not '{}'\".format(solution(8))\n\nassert solution(9) == 'Odd', \"The function should return 'Odd', not '{}'\".format(solution(9))\n\nassert solution(10) == 'Either', \"The function should return 'Either', not '{}'\".format(solution(10))",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Either'\nassert solution(3) == 'Either'\nassert solution(4) == 'Either'\nassert solution(5) == 'Even'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Even'\nassert solution(3) == 'Odd'\nassert solution(4) == 'Either'\nassert solution(5) == 'Even'\nassert solution(6) == 'Odd'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == ['1', '2', '3', '4', '5']\nassert solution(input()) == ['10', '20', '30', '40', '50']\nassert solution(input()) == ['100', '200', '300', '400', '500']\nassert solution(input()) == ['1000', '2000', '3000', '4000', '5000']\nassert solution(input()) == ['10000', '20000', '30000', '40000', '50000']\nassert solution(input()) == ['100000', '200000', '300000', '400000', '500000']",
        "num_ids_2": 49,
        "num_ids_4": 118
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\", \"Test case 1 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\", \"Test 1 failed\"\n\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\", \"Test 2 failed\"\n\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\", \"Test 3 failed\"\n\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\", \"Test 4 failed\"\n\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\", \"Test 5 failed\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 104,
        "num_ids_4": 208
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed. Please check your code.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test 1 failed\"\n\nimport math",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for input {sample_input} and output {sample_output}\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test case 1 failed\"\n\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test case 2 failed\"\n\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test case 3 failed\"\n\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test case 4 failed\"\n\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test case 5 failed\"",
        "num_ids_2": 110,
        "num_ids_4": 220
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test Case 1\"\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test Case 2\"\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test Case 3\"\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test Case 4\"\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test Case 5\"",
        "num_ids_2": 112,
        "num_ids_4": 224
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == [\"no\", \"no\", \"no\", \"yes\", \"yes\"], \"Test Failed\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\\n\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\n    pass\\n\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"yes\", \"Incorrect output for sample input\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 'yes' and solution(open('input2.txt', 'r')) == 'no' and solution(open('input3.txt', 'r')) == 'no' and solution(open('input4.txt', 'r')) == 'yes' and solution(open('input5.txt', 'r')) == 'yes' and solution(open('input6.txt', 'r')) == 'no' and solution(open('input7.txt', 'r')) == 'no' and solution(open('input8.txt', 'r')) == 'no' and solution(open('input9.txt', 'r')) == 'yes'",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    m, n = map(int, stdin.split())\\n    translations = [set(map(str.lower, input().split())) for _ in range(m)]\\n    pairs = []\\n    for i in range(n):\\n        word1, word2 = input().split()\\n        pairs.append((word1, word2))\\n    for pair in pairs:\\n        word1, word2 = pair\\n        if word1 == word2:\\n            for translation in translations:\\n                if set(word1) == translation:\\n                    return 'yes'\\n        else:\\n            for i in range(len(word1)):\\n                if not any(set(word1).issubset(t) for t in translations):\\n                    return 'no'\\n    return 'no'\\n\\n# Test cases\\nprint(solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\tw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the')) # Output: \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    m, n = map(int, stdin.split())\\n    translations = [set(map(str.lower, input().split())) for _ in range(m)]\\n    pairs = []\\n    for i in range(n):\\n        word1, word2 = input().split()\\n        pairs.append((word1, word2))\\n    for pair in pairs:\\n        word1, word2 = pair\\n        if word1 == word2:\\n            for translation in translations:\\n                if set(word1) == translation:\\n                    return 'yes'\\n        else:\\n            for i in range(len(word1)):\\n                if not any(set(word1).issubset(t) for t in translations):\\n                    return 'no'\\n    return 'no'\\n\\n# Test cases\\nprint(solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\tw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the')) # Output: \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    m, n = map(int, stdin.split())\\n    translations = [set(map(str.lower, input().split())) for _ in range(m)]\\n    pairs = []\\n    for i in range(n):\\n        word1, word2 = input().split()\\n        pairs.append((word1, word2))\\n    for pair in pairs:\\n        word1, word2 = pair\\n        if word1 == word2:\\n            for translation in translations:\\n                if set(word1) == translation:\\n                    return 'yes'\\n        else:\\n            for i in range(len(word1)):\\n                if not any(set(word1).issubset(t) for t in translations):\\n                    return 'no'\\n    return 'no'\\n\\n# Test cases\\nprint(solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\tw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the')) # Output: \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    m, n = map(int, stdin.split())\\n    translations = [set(map(str.lower, input().split())) for _ in range(m)]\\n    pairs = []\\n    for i in range(n):\\n        word1, word2 = input().split()\\n        pairs.append((word1, word2))\\n    for pair in pairs:\\n        word1, word2 = pair\\n        if word1 == word2:\\n            for translation in translations:\\n                if set(word1) == translation:\\n                    return 'yes'\\n        else:\\n            for i in range(len(word1)):\\n                if not any(set(word1).issubset(t) for t in translations):\\n                    return 'no'\\n    return 'no'\\n\\n# Test",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"c t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\np",
        "num_ids_2": 170,
        "num_ids_4": 340
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n\"\"\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\\n\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 1, \"The output should be 1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1\\ncarrots?\\nbunnies\\n') == 1, \"Expected 1, got {}\".format(solution('2 1\\ncarrots?\\nbunnies\\n'))\nassert solution('2 1\\ncarrots?\\nbunnies\\n') == 1, \"Expected 1, got {}\".format(solution('2 1\\ncarrots?\\nbunnies\\n'))\nassert solution('2 1\\ncarrots?\\nbunnies\\n') == 1, \"Expected 1, got {}\".format(solution('2 1\\ncarrots?\\nbunnies\\n'))\nassert solution('2 1\\ncarrots?\\nbunnies\\n') == 1, \"Expected 1, got {}\".format(solution('2 1\\ncarrots?\\nbunnies\\n'))\nassert solution('2 1\\ncarrots?\\nbunnies\\n') == 1, \"Expected 1, got {}\".format(solution('2 1\\ncarrots?\\nbunnies\\n'))",
        "num_ids_2": 102,
        "num_ids_4": 204
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\") == \"1\"\nassert solution(\"2 2\\nsheep?\\n\") == \"0\"\nassert solution(\"2 3\\nchickens?\\n\") == \"0\"\nassert solution(\"3 4\\nbees?\\n\") == \"0\"\nassert solution(\"4 5\\n\") == \"0\"",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\ncarrots?\\nbunnies') == '1\\ndef solution(stdin: str) -> str:\\n\\tpass'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\\n\") == \"1\"\nassert solution(\"2 1\\ncarrots?\\nbunnies\\n\") == \"1\"\nassert solution(\"2 1\\ncarrots?\\nbunnies\\n\") == \"1\"\nassert solution(\"2 1\\ncarrots?\\nbunnies\\n\") == \"1\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"The output is incorrect. Expected: {output_data}, Received: {solution(input_data)}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\", \"Your implementation of the solution is incorrect.\"\nassert solution(stdin) == \"1\", \"Your implementation of the solution is incorrect.\"\nassert solution(stdin) == \"1\", \"Your implementation of the solution is incorrect.\"\nassert solution(stdin) == \"1\", \"Your implementation of the solution is incorrect.\"\nassert solution(stdin) == \"1\", \"Your implementation of the solution is incorrect.\"\nassert solution(stdin) == \"1\", \"Your implementation of the solution is incorrect.\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1\\ncarrots?\\nbunnies') == 1\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?') == 2\nassert solution('2 1\\ncarrots?\\nb",
        "num_ids_2": 52,
        "num_ids_4": 114
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\".. +...::: |...::.. |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::.. |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...::... |...",
        "num_ids_2": 1026,
        "num_ids_4": 1026
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 224,
        "num_ids_4": 448
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n''') == '''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 224,
        "num_ids_4": 448
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"..+---+---+---+---+---+---+---+---+...|:::|...|:::|.P.|:::|...|:::|...|:::|...|:P:|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\"",
        "num_ids_2": 137,
        "num_ids_4": 137
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\":::|...|:::|...|:::|...|:::|...|\") == \"White: :::|.N.|:B:|.Q:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P:|:::|.P:|.P",
        "num_ids_2": 1025,
        "num_ids_4": 1025
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('...|:::|.n.|:::|...|:::|...|:p:|') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('...|:::|...|:::|...|:::|...|') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('...|:::|.p.|:::|...|:::|...|:P:|') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('...|:::|...|:::|...|:::|...|') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('...|:::|.P.|:::|...|:::|...|:P:|') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('...|:::|...|:::|...|:::|...|') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('...|:::|.P.|:::|...|:::|...|:P:|') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'",
        "num_ids_2": 231,
        "num_ids_4": 465
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed: \\nInput: {input_string}\\nExpected Output: {expected_output}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 224,
        "num_ids_4": 448
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Your wish is granted!\\n\", \"Expected output: 'Your wish is granted!'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"Your wish is granted!\"\nassert solution(4) == \"You will become a flying monkey!\"\nassert solution(10) == \"Your wish is granted!\"\nassert solution(11) == \"You will become a flying monkey!\"\nassert solution(100) == \"Your wish is granted!\"\nassert solution(101) == \"You will become a flying monkey!\"\nassert solution(1000) == \"Your wish is granted!\"\nassert solution(1001) == \"You will become a flying monkey!\"\nassert solution(1000000) == \"Your wish is granted!\"\nassert solution(1000001) == \"You will become a flying monkey!\"\nassert solution(1000000000) == \"Your wish is granted!\"\nassert solution(1000000001) == \"You will become a flying monkey!\"",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass', 'Test case 1 failed'\n\nassert solution(input()) == 'You will become a flying monkey!\\ndef solution(stdin: str) -> str:\\n    pass', 'Test case 2 failed'",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\nassert solution(\"9 3\") == \"You will become a flying monkey!\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"8 3\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\nassert solution(\"10 10\") == \"You will become a flying monkey!\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\npass\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\n\"\n\nassert solution(\"1 2\") == \"You will become a flying monkey!\\n\"\n\nassert solution(\"2 3\") == \"You will become a flying monkey!\\n\"\n\nassert solution(\"3 3\") == \"Your wish is granted!\\n\"\n\nassert solution(\"5 3\") == \"Your wish is granted!\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('16') == '16\\n', \"Test Case 1 failed.\"\nassert solution('17') == '16\\n', \"Test Case 2 failed.\"\nassert solution('18') == '17\\n', \"Test Case 3 failed.\"\nassert solution('19') == '17\\n', \"Test Case 4 failed.\"\nassert solution('20') == '17\\n', \"Test Case 5 failed.\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(16) == \"16\"\n\nfrom typing import List",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(16) == 16, \"The output is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"16\", \"Expected '16', but got '{}'\".format(solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(16) == 16",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(16) == \"16\\n\"\n\nSolution:\n\nTo calculate the total length of the fence, we need to consider the area of the pasture and the fence material.\n\n- The area of the pasture can be estimated by multiplying the area of the pasture with the length of the fence material.\n- The fence material can be considered a solid material that grows slowly, like paper or plastic.\n\nSo, we can calculate the area of the pasture as follows:\n\nArea of the pasture = 16 * fence material length\n\nwhere fence material length is the length of the fence material.\n\nNow, we can calculate the length of the fence as follows:\n\nFence length = sqrt(Area of the pasture)\n\nNow, we can calculate the total length of the fence as follows:\n\nTotal length of the fence = sqrt(Area of the pasture)\n\nWe can use the built-in `math` module to calculate the square root of the given area of the pasture.\n\nFinally, we can format the output string to avoid unnecessary decimal points and increase the precision to at most $10^{-6}$.\n\nHere's the code:\n\n```python\nimport math",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(16) == 16",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(16) == \"16\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(16) == 16, \"The expected output should be 16, but it is currently: \" + solution(16)",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\\n\", \"Expected output: 4, Actual output: \" + solution(stdin)",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 180\\n45 30 55 20 80 20') == '4'\nassert solution('6 180\\n45 30 55 20 80 40') == '1'\nassert solution('6 180\\n45 30 55 20 80 20') == '4'\nassert solution('6 180\\n45 30 55 20 80 40') == '1'\nassert solution('6 180\\n45 30 55 20 80 20') == '4'",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\\n\"\nassert solution(input()) == \"5\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"5\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 180\\n45 30 55 20 80 20') == 4\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"\nassert solution(\"6 120\\n45 30 55 20 80 20\") == \"4\"\nassert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"\nassert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"\nassert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4', \"The output should be 4, but it's {}\".format(solution(stdin))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\\n\"\nassert solution(\"6 360\") == \"1\\n\"\nassert solution(\"6 180\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 20\\n45 30 55 20 80 ",
        "num_ids_2": 51,
        "num_ids_4": 1027
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 79",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"79\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"example.in\", \"r\")) == \"79\", \"Your code is incorrect.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\") == 79\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\") == 79\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\") == 79\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 79, \"Jessica wants to become a javelin thrower, moreover she wants to become a famous one. However, she doesn\u2019t want to train $40$ hours a day. To avoid much training while still becoming famous, she has concocted a plan: make all her javelins gigantic.\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"79\"\nassert solution(open(\"input_2.txt\", \"r\")) == \"92\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string, f\"Test Case {test_case} failed. Expected output: {output_string}, but got: {solution(input_string)}\" for test_case, input_string, output_string in [\n    (0, \"\", \"\"),\n    (1, \"\", \"1\"),\n    (2, \"21\", \"21\"),\n    (3, \"34\", \"56\"),\n    (4, \"18\", \"36\"),\n    (5, \"9\", \"18\"),\n]",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=test_input) == expected_output, \"Expected output: {}, but got: {}\".format(expected_output, solution(stdin=test_input))",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\\n\") == \"2 3 0\\n\"\nassert solution(\"5 2 3 4\\n0 1 4\\n\") == \"2 3 0\\n\"\nassert solution(\"5 3 4 4\\n0 1 4\\n\") == \"2 3 0\\n\"\nassert solution(\"5 3 3 3\\n0 1 4\\n\") == \"2 3 0\\n\"\nassert solution(\"5 3 3 4\\n0 2 4\\n\") == \"2 3 0\\n\"\nassert solution(\"5 3 3 4\\n0 2 3\\n\") == \"impossible\\n\"\nassert solution(\"5 3 3 4\\n0 1 4\\n\") == \"impossible\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5, 3, 3, 4) == \"2 3 0\"\nassert solution(5, 3, 2, 4) == \"1 2 0\"\nassert solution(5, 3, 3, 1) == \"impossible\"\nassert solution(5, 3, 2, 1) == \"impossible\"\nassert solution(5, 3, 3, 2) == \"1 1 0\"\nassert solution(5, 3, 2, 2) == \"2 2 0\"\nassert solution(5, 3, 3, 3) == \"2 2 0\"\nassert solution(5, 3, 2, 3) == \"2 2 0\"\nassert solution(5, 3, 3, 4) == \"2 2 0\"\nassert solution(5, 3, 2, 4) == \"1 2 0\"\nassert solution(5, 3, 3, 5) == \"impossible\"\nassert solution(5, 3, 2, 5) == \"impossible\"\nassert solution(5, 3, 3, 6) == \"impossible\"\nassert solution(5, 3, 2, 6) == \"impossible\"\nassert solution(5, 3, 3, 7) == \"impossible\"\nassert solution(5, 3, 2, 7) == \"impossible\"\nassert solution(5, 3, 3, 8) == \"impossible\"\nassert solution(5, 3, 2, 8) == \"impossible\"\nassert solution(5, 3, 3, 9) == \"impossible\"\nassert solution(5, 3, 2, 9) == \"impossible\"\nassert solution(5, 3, 3, 10) == \"impossible\"\nassert solution(5, 3, 2, 10) == \"impossible\"\nassert solution(5, 3, 3, 11) == \"impossible\"\nassert solution(5, 3, 2, 11) == \"impossible\"\nassert solution(5, 3, 3, 12) == \"impossible\"\nassert solution(5, 3, 2, 12) == \"impossible\"\nassert solution(5, 3, 3, 13) == \"impossible\"\nassert solution(5, 3, 2, 13) == \"impossible\"\nassert solution(5, 3, 3, 14) == \"impossible\"\nassert solution(5, 3, 2, 14) == \"impossible\"\nassert solution(5, 3, 3, 15) == \"impossible\"\nassert solution(5, 3, 2, 15) == \"impossible\"\nassert solution(5, 3, 3, 16) == \"impossible\"\nassert solution(5, 3, 2, 16) == \"impossible\"\nassert solution(5, 3, 3, 17) == \"impossible\"\nassert solution(5, 3, 2, 17) == \"impossible\"\nassert solution(5, 3, 3, 18) == \"impossible\"\nassert solution(5, 3, 2, 18) == \"impossible\"\nassert solution(5, 3, 3, 19) == \"impossible\"\nassert solution(5, 3, 2, 19) == \"impossible\"\nassert solution(5, 3, 3, 20) == \"impossible\"\nassert solution(5, 3, 2, 20) == \"impossible\"\nassert solution(5, 3, 3, 21) == \"impossible\"\nassert solution(5, 3, 2, 21) == \"impossible\"\nassert solution(5, 3, 3, 22) == \"impossible\"\nassert solution(5, 3, 2, 22) == \"impossible\"\nassert solution(5, 3, 3, 23) == \"impossible\"\nassert solution(5, 3, 2, 23) == \"impossible\"\nassert solution(5, 3, 3, 24",
        "num_ids_2": 46,
        "num_ids_4": 86
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"100 5 10 20\") == \"impossible\"\nassert solution(\"5 0 3 4\") == \"impossible\"\nassert solution(\"5 3 0 4\") == \"impossible\"\nassert solution(\"5 3 3 0\") == \"impossible\"",
        "num_ids_2": 48,
        "num_ids_4": 82
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Testcase {test_case} failed: expected output {output}, got {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3 3 4\\n0 1 4') == '2 3 0\\n'\nassert solution('5 3 3 4\\n1 1 4') == 'impossible\\n'\nassert solution('5 3 3 4\\n1 1 1') == '3 3 0\\n'\nassert solution('5 3 3 4\\n0 1 4\\n1 1 4\\n1 1 1') == 'impossible\\n'\n",
        "num_ids_2": 55,
        "num_ids_4": 124
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 3 3 4\n0 1 4\n\"\"\") == \"2 3 0\"\n\nassert solution(\"\"\"\n5 3 4 4\n0 1 4\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n5 3 3 4\n1 4 0\n\"\"\") == \"2 3 0\"\n\nassert solution(\"\"\"\n5 3 4 4\n1 4 0\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n5 3 3 4\n0 1 5\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n5 3 4 4\n0 1 5\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n5 3 3 4\n0 1 4\n\"\"\") == \"2 3 0\"\n\nassert solution(\"\"\"\n5 3 4 4\n0 1 4\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n5 3 3 4\n0 1 3\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n5 3 4 4\n0 1 3\n\"\"\") == \"impossible\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case {test_case} failed: {output}!= {output}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\\nimpossible\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\\n\") == \"2 3 0\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"1 1 2 2 2 2\") == \"1 0 0 0 0 1\"\nassert solution(\"1 1 2 2 2 1\") == \"1 0 0 0 0 1\"\nassert solution(\"1 1 2 2 2 0\") == \"0 0 0 0 0 0\"\nassert solution(\"1 1 2 2 2 -1\") == \"0 0 0 0 0 0\"\nassert solution(\"1 1 2 2 2 3\") == \"0 0 0 0 0 0\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\", \"Expected Output: 1 0 0 0 0 1, but got {}\".format(solution(\"0 1 2 2 2 7\"))\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\", \"Test case 1 failed\"\nassert solution(\"0 0 0 0 0 0\") == \"0 0 0 0 0 0\", \"Test case 2 failed\"\nassert solution(\"0 1 2 3 2 1\") == \"0 1 0 0 0 0\", \"Test case 3 failed\"\nassert solution(\"0 0 1 2 2 1\") == \"0 0 1 0 0 0\", \"Test case 4 failed\"\nassert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\", \"Test case 5 failed\"",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\\n\", \"The output should consist of 1 integer on each line.\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\", \"Sample Input Error\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\", \"The output should be '1 0 0 0 0 1'.\"\n\nassert solution(\"0 1 1 1 1 2\") == \"1 0 0 0 0 1\", \"The output should be '1 0 0 0 0 1'.\"\n\nassert solution(\"0 0 0 0 0 0\") == \"0 0 0 0 0 0\", \"The output should be '0 0 0 0 0 0'.\"\n\nassert solution(\"0 0 0 0 0 1\") == \"0 0 0 0 0 1\", \"The output should be '0 0 0 0 0 1'.\"\n\nassert solution(\"0 0 0 0 0 2\") == \"0 0 0 0 0 2\", \"The output should be '0 0 0 0 0 2'.\"",
        "num_ids_2": 98,
        "num_ids_4": 196
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\", \"The output should be: 1 0 0 0 0 1\"\nassert solution(\"1 2 2 2 7\") == \"1 0 0 0 0 1\", \"The output should be: 1 0 0 0 0 1\"\nassert solution(\"0 1 2 3 7\") == \"0 1 0 0 0 1\", \"The output should be: 0 1 0 0 0 1\"\nassert solution(\"0 2 3 2 7\") == \"0 1 0 0 0 1\", \"The output should be: 0 1 0 0 0 1\"\nassert solution(\"0 2 2 2 7\") == \"0 1 0 0 0 1\", \"The output should be: 0 1 0 0 0 1\"",
        "num_ids_2": 96,
        "num_ids_4": 190
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n123456 0.6666\\nqwerty 0.3334\\n\") == 1.3334",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123456 0.6666\\nqwerty 0.3334\\n\") == \"1.3334\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1.3334\", \"Incorrect Output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1.3334\", \"Expected output: 1.3334\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected_output\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n123456 0.6666\\nqwerty 0.3334\\n\") == \"1.3334\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n123456 0.6666\\nqwerty 0.3334\") == 1.3334\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1.3334\nassert solution(10) == 2.0000\nassert solution(500) == 2.0000\nassert solution(5000) == 1.0000\nassert solution(1000000) == 0.0000",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == '1.3334'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1.3334\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed. Output: {solution(sample_input)}, Expected: {sample_output}\" for i, (sample_input, sample_output) in enumerate(test_cases)",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 1) == \"1\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\n1 2 4') == '1\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"2\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1\\n1 2 4') == '1\\n'\nassert solution('5 3\\n1 5 2 4 6') == '2\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1\\n1 2 4') == '1'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == 'G:\\nF:-------------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *        \\ng: -----------------------------------------------*----------\\nf:                                                           \\ne: ----------------------------------------------------------\\nd:                                                           \\nc:                                                           \\nb:                                                           \\na: ----------------------------------------------------------'",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input) == solution_output, f\"The solution provided is not correct. Please check the output and the input given.\" for solution_input, solution_output in [(solution_input1, solution_output1), (solution_input2, solution_output2), (solution_input3, solution_output3), (solution_input4, solution_output4), (solution_input5, solution_output5)]",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == 'G:                                                           \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------'\n\nassert solution('5\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\",
        "num_ids_2": 906,
        "num_ids_4": 906
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Incorrect output: {solution(input())}\\nExpected output: {expected}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter the number of notes: \")) == expected_output, \"Test case not passed\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution) == '''G:  \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"G:                                                           \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"G:\\nF: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nE: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nD: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nC: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nB: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nA: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\ng: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nf: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\ne: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nd: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nc: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nb: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\na: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\n\"\n\nassert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"G:\\nF: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nE: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nD: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nC: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nB: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nA: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\ng: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nf: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\ne: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nd: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nc: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\nb: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\na: * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\n",
        "num_ids_2": 1024,
        "num_ids_4": 1024
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"G:                                                           \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == 'G:\\nF: -------------------------------------\\nE:       *   *          *             *   *                   \\nD: ----*-------**-----*-------------*-------*---------------- \\nC: * *     *      * *     **    * *           *         ** ** \\nB: --------------------------**-----------------*-----*------ \\nA:                                                  *         \\ng: -----------------------------------------------*---------- \\nF:                                                            \\nE: ---------------------------------------------------------- \\nD:                                                            \\nC:                                                            \\nB:                                                            \\nA: ---------------------------------------------------------- \\n'",
        "num_ids_2": 158,
        "num_ids_4": 158
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"possible\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 'possible'\nassert solution(4) == 'possible'\nassert solution(6) == 'possible'\nassert solution(10) == 'possible'\nassert solution(15) == 'possible'\nassert solution(20) == 'possible'\nassert solution(25) == 'impossible'\nassert solution(26) == 'impossible'\nassert solution(27) == 'impossible'\nassert solution(28) == 'impossible'\nassert solution(29) == 'impossible'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"possible\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"possible\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 1\") == \"possible\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"possible\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([3, 1, 1]) == \"possible\"\nassert solution([3, 1, 2, 3, 4]) == \"possible\"\nassert solution([3, 1, 2, 3, 100]) == \"definitely impossible\"\n\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 64
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"possible\"\nassert solution(5) == \"impossible\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"possible\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"definitely_not_possible\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'possible', 'Your code is incorrect'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == '3'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == 3, \"Incorrect output\"\nassert solution('10\\n4 3 4 2 1 2 2 1 1 3') == 4, \"Incorrect output\"\nassert solution('10\\n4 3 3 2 1 2 2 1 1 3') == 4, \"Incorrect output\"",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == 3",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == 3, \"Incorrect output.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed: expected {output}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == 3, \"Test 1 Failed\"\nassert solution(\"10\\n4 3 3 2 1 2 2 1 1 10\") == 5, \"Test 2 Failed\"\nassert solution(\"10\\n1 3 3 2 1 2 2 1 1 10\") == 10, \"Test 3 Failed\"\nassert solution(\"10\\n2 2 3 2 1 2 2 1 1 10\") == 7, \"Test 4 Failed\"\nassert solution(\"10\\n1 3 3 2 1 2 2 1 1 10\") == 3, \"Test 5 Failed\"",
        "num_ids_2": 77,
        "num_ids_4": 156
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == 3",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4, 3, 3, 2, 1, 2, 2, 1, 1, 3) == 3\nprint(\"Test passed\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == 3\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n\", \"The solution should return the correct output.\"",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE'\n",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    6\n    ASHMEADE 9.90 8.85\n    BLAKE 9.69 8.72\n    BOLT 9.58 8.43\n    CARTER 9.78 8.93\n    FRATER 9.88 8.92\n    POWELL 9.72 8.61\n    \"\"\"\n) == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"\n\nassert solution(\n    \"\"\"\n    6\n    ASHMEADE 9.90 8.85\n    BLAKE 9.69 8.72\n    BOLT 9.58 8.43\n    CARTER 9.78 8.93\n    FRATER 9.88 8.92\n    POWELL 9.72 8.61\n    \"\"\"\n) == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=None) == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n\", \"Test failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\\n\") == \"CARTER\\n\"\nassert solution(\"BLAKE 9.69 8.72\\nCARTER 9.78 8.93\\n\") == \"CARTER\\n\"\nassert solution(\"BOLT 9.58 8.43\\nPOWELL 9.72 8.61\\n\") == \"BOLT\\n\"\nassert solution(\"CARTER 9.78 8.93\\nFRATER 9.88 8.92\\n\") == \"CARTER\\n\"\nassert solution(\"FRATER 9.88 8.92\\nASHMEADE 9.90 8.85\\n\") == \"ASHMEADE\\n\"",
        "num_ids_2": 111,
        "num_ids_4": 194
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('inputs/national_athletics.txt', 'r')) == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"\n",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2\\n2 4\\n5 6\") == \"2\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"Expected output: 2, but got: {}\".format(solution())",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2\\n2 4\\n5 6') == 2",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 2, \"Please fix the temperature preferences of at least one minion and then solve the problem.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([3, 1, 2, 2, 4, 5, 6]) == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2\\n2 4\\n5 6') == '2'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"hey\") == \"heey\", \"Test Case 1: Should return 'heey'.\"\n\nassert solution(\"heeeey\") == \"heeeey\", \"Test Case 2: Should return 'heeeey'.\"\n\nassert solution(\"heeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
        "num_ids_2": 52,
        "num_ids_4": 1025
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('hey') == 'heey', \"Error: Test Failed\"\nassert solution('heey') == 'heey', \"Error: Test Failed\"\nassert solution('heeeeey') == 'heeeey', \"Error: Test Failed\"",
        "num_ids_2": 35,
        "num_ids_4": 55
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hey\") == \"heey\", \"The solution should be 'heey'.\"\nassert solution(\"he\u2026ey\") == \"heeeey\", \"The solution should be 'heeeey'.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"hey\") == \"heey\"\nprint(\"All tests passed.\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"hey\") == \"heey\"\n\nassert solution(\"heey\") == \"heey\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hey\") == \"heey\"\nprint(\"All tests passed\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heey\") == \"heey\"\nassert solution(\"heeeeeeeeeey\") == \"heeeeeeeeeey\"",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hey\") == \"heey\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('hey') == 'heey'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"Hello\") == \"helo\"\nassert solution(\"Bonjour\") == \"hbonjour\"\nassert solution(\"Ahoj\") == \"ahoj\"\nassert solution(\"A\") == \"ae\"",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"1 2\n1 3\n1 4\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1 2\\n1 3\\n1 4\\n', \"Please provide the correct solution\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 1 2 3\\n1 0 1 4\\n1 2 2 3\\n2 3 1 4') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 2 3 0\\n1 0 1 3\\n1 2 2 3\\n2 3 1 3') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 1 2 3\\n1 0 1 4\\n1 2 2 3\\n2 3 1 4') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 2 3 0\\n1 0 1 3\\n1 2 2 3\\n2 3 1 3') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 1 2 3\\n1 0 1 4\\n1 2 2 3\\n2 3 1 4') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 2 3 0\\n1 0 1 3\\n1 2 2 3\\n2 3 1 3') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 1 2 3\\n1 0 1 4\\n1 2 2 3\\n2 3 1 4') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 2 3 0\\n1 0 1 3\\n1 2 2 3\\n2 3 1 3') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 1 2 3\\n1 0 1 4\\n1 2 2 3\\n2 3 1 4') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 2 3 0\\n1 0 1 3\\n1 2 2 3\\n2 3 1 3') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 1 2 3\\n1 0 1 4\\n1 2 2 3\\n2 3 1 4') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 2 3 0\\n1 0 1 3\\n1 2 2 3\\n2 3 1 3') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 1 2 3\\n1 0 1 4\\n1 2 2 3\\n2 3 1 4') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 2 3 0\\n1 0 1 3\\n1 2 2 3\\n2 3 1 3') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 1 2 3\\n1 0 1 4\\n1 2 2 3\\n2 3 1 4') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 2 3 0\\n1 0 1 3\\n1 2 2 3\\n2 3 1 3') == '1 2\\n1 3\\n1 4\\n'\nassert solution('0 1 2 3\\n1 0 1 4\\n1 2 2 3\\n2 3 1 4') == '1 2\\n1 3\\n1 4\\n'\n",
        "num_ids_2": 114,
        "num_ids_4": 228
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\\n\") == \"1 2\\n1 3\\n1 4\\n\", \"Test Case 1 failed\"\n\nassert solution(\"5\\n1 0 2\\n1 2 0\\n1 2 4\\n2 3 4\\n3 4 5\\n\") == \"1 2\\n1 3\\n1 4\\n\", \"Test Case 2 failed\"\n\nassert solution(\"10\\n0 1 1\\n1 0 2\\n1 2 0\\n2 3 1\\n3 0 2\\n3 2 0\\n\") == \"0 1\\n1 0\\n2 0\\n3 1\\n\", \"Test Case 3 failed\"\n\nassert solution(\"20\\n10 15 10\\n15 10 15\\n10 15 10\\n15 10 15\\n10 15 10\\n15 10 15\\n\") == \"10 15\\n10 15\\n10 15\\n10 15\\n10 15\\n10 15\\n\", \"Test Case 4 failed\"\n\nassert solution(\"20\\n10 15 10\\n15 10 15\\n10 15 10\\n15 10 15\\n10 15 10\\n15 10 15\\n\") == \"10 15\\n10 15\\n10 15\\n10 15\\n10 15\\n10 15\\n\", \"Test Case 5 failed\"",
        "num_ids_2": 134,
        "num_ids_4": 336
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1 2\\n1 3\\n1 4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1 2\\n1 3\\n1 4\\n\", \"Solution should return the correct output.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\", \"Solution should return the decrypted message.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"ABCD\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\nassert solution(\"def\") == \"def\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\", \"Test failed for the given DRM message.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"defg\") == 3\nassert solution(\"hello\") == 4\nassert solution(\"world\") == 0",
        "num_ids_2": 19,
        "num_ids_4": 37
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abc\") == \"2\", \"The function should return the expected output.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"def\") == 3\nassert solution(\"abcd\") == 2\nassert solution(\"hello\") == 3\nassert solution(\"world\") == 3\nassert solution(\"aaaaa\") == 4",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abc\") == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abc\") == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abc\") == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abc\") == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == 2, \"Expected: 2, got: {}\".format(solution(\"abc\"))\n\nassert solution(\"leetcode\") == 3, \"Expected: 3, got: {}\".format(solution(\"leetcode\"))\n\nassert solution(\"abba\") == 2, \"Expected: 2, got: {}\".format(solution(\"abba\"))\n\nassert solution(\"zyxwvutsrqponmlkjihgfedcba\") == 0, \"Expected: 0, got: {}\".format(solution(\"zyxwvutsrqponmlkjihgfedcba\"))\n\nassert solution(\"\") == 0, \"Expected: 0, got: {}\".format(solution(\"\"))",
        "num_ids_2": 50,
        "num_ids_4": 126
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abc\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"abcdefg\") == 5\nassert solution(\"hello world\") == 0\nassert solution(\"abccccde\") == 2",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaaah\") == \"go\"\nassert solution(\"aaaaaah1\") == \"go\"\nassert solution(\"aaaaaah1a\") == \"go\"\nassert solution(\"aaaaaah1ah\") == \"go\"\nassert solution(\"aaaaaah1ah1\") == \"no\"",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaah\") == \"go\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aaah') == 'no'\nassert solution('aaaaah') == 'go'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaah\") == \"go\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaah\") == \"go\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaah\") == \"go\", \"Solution is incorrect. Expected 'go', but got '{}'\".format(solution(\"aaah\"))\nassert solution(\"aaaaah\") == \"no\", \"Solution is incorrect. Expected 'no', but got '{}'\".format(solution(\"aaaaah\"))",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaah\") == \"no\", \"Test Case 1\"\nassert solution(\"aaaaah\") == \"go\", \"Test Case 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaah\\naaaaah\") == \"go\"\nassert solution(\"aaaah\") == \"no\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaah\") == \"go\", \"The input should return 'go'\"\nassert solution(\"aaaaah\") == \"no\", \"The input should return 'no'\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A1B2B3B4B5B6B7B8\") == \"A\"\nassert solution(\"A1B1B1B1B1B1B1B1\") == \"A\"\nassert solution(\"A2B1A2B2A1A1A1A1\") == \"B\"\nassert solution(\"A1B1B1B1B1B1B1B1B1\") == \"B\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B2A1A2A1A2B2A2A2') == 'A'\nassert solution('A1B2A1A2A2A2A2A2A2A2A2') == 'A'\nassert solution('A2B1A2A1B1A2A2A2A2') == 'B'\nassert solution('B1A2B2A1A2A2A2A2A1A1B2B2A2B1') == 'B'",
        "num_ids_2": 52,
        "num_ids_4": 110
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('B2A1B1A2A1A2A2') == 'A'\nassert solution('AB123456789012345678901234567890123456789012345678901234567890') == 'B'\nassert solution('AA23456789012345678901234567890123456789012345678901234567890') == 'B'\nassert solution('A123456789012345678901234567890123456789012345678901234567890') == 'A'",
        "num_ids_2": 48,
        "num_ids_4": 187
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='A2B1A2B2A1A2A2A2') == 'A'\nprint('Correct')",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A', 'Test 1 failed'\nassert solution('AB1B2B1B2AB2AB1B2') == 'B', 'Test 2 failed'\nassert solution('BA1B2B1B2AB2AB1B2') == 'B', 'Test 3 failed'\nassert solution('AA1B2B1B2AB2AB1B2') == 'B', 'Test 4 failed'\nassert solution('BB1B2B1B2AB2AB1B2') == 'A', 'Test 5 failed'",
        "num_ids_2": 60,
        "num_ids_4": 118
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\", \"Expected output: A, got: {}\".format(solution(\"A2B1A2B2A1A2A2A2\"))",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A', \"The solution should return A.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"TODO: Implement solution\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 21\nassert solution(open(\"test_case.txt\", \"r\")) == 21\nassert solution(open(\"example.txt\", \"r\")) == 21\nassert solution(open(\"sample_input.txt\", \"r\")) == 21\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 21, \"The output should be 21, but it is not.\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n') == '21'",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n\") == \"21\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '21'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '21', 'Test Case 1 Failed'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n') == '21'\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 21\nprint(\"All test cases passed.\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"\n\nfrom typing import List",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"E HHHeellloWooorrrrlld!!\")) == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(input(\"D H3e2l3o1W1o3r4l2d1!2\")) == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"Alice\\n\"\nassert solution(\"3\\n\") == \"Bob\\n\"\nassert solution(\"4\\n\") == \"Alice\\n\"\nassert solution(\"5\\n\") == \"Bob\\n\"\nassert solution(\"6\\n\") == \"Alice\\n\"\nassert solution(\"7\\n\") == \"Bob\\n\"\nassert solution(\"8\\n\") == \"Alice\\n\"\nassert solution(\"9\\n\") == \"Bob\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Alice\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'2') == 'Alice'\nassert solution(b'3') == 'Alice'\nassert solution(b'4') == 'Bob'\nassert solution(b'5') == 'Alice'\nassert solution(b'6') == 'Bob'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Alice\", \"Solution is incorrect\"\nassert solution() == \"Bob\", \"Solution is incorrect\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n') == 'Alice\\n'\nassert solution('1\\n') == 'Bob\\n'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Alice\"\nassert solution(input()) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Alice'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n\") == \"Alice\\n1\\n\"\nassert solution(\"3\\n\") == \"Bob\\n1\\n\"\nassert solution(\"4\\n\") == \"Alice\\n2\\n\"\nassert solution(\"5\\n\") == \"Bob\\n2\\n\"\nassert solution(\"6\\n\") == \"Alice\\n3\\n\"\nassert solution(\"7\\n\") == \"Bob\\n3\\n\"\nassert solution(\"8\\n\") == \"Alice\\n4\\n\"\nassert solution(\"9\\n\") == \"Bob\\n4\\n\"\nassert solution(\"10\\n\") == \"Alice\\n5\\n\"\nassert solution(\"11\\n\") == \"Bob\\n5\\n\"\nassert solution(\"12\\n\") == \"Alice\\n6\\n\"\nassert solution(\"13\\n\") == \"Bob\\n6\\n\"\nassert solution(\"14\\n\") == \"Alice\\n7\\n\"\nassert solution(\"15\\n\") == \"Bob\\n7\\n\"\nassert solution(\"16\\n\") == \"Alice\\n8\\n\"\nassert solution(\"17\\n\") == \"Bob\\n8\\n\"\nassert solution(\"18\\n\") == \"Alice\\n9\\n\"\nassert solution(\"19\\n\") == \"Bob\\n9\\n\"\nassert solution(\"20\\n\") == \"Alice\\n10\\n\"\nassert solution(\"21\\n\") == \"Bob\\n10\\n\"\nassert solution(\"22\\n\") == \"Alice\\n11\\n\"\nassert solution(\"23\\n\") == \"Bob\\n11\\n\"\nassert solution(\"24\\n\") == \"Alice\\n12\\n\"\nassert solution(\"25\\n\") == \"Bob\\n12\\n\"\nassert solution(\"26\\n\") == \"Alice\\n13\\n\"\nassert solution(\"27\\n\") == \"Bob\\n13\\n\"\nassert solution(\"28\\n\") == \"Alice\\n14\\n\"\nassert solution(\"29\\n\") == \"Bob\\n14\\n\"\nassert solution(\"30\\n\") == \"Alice\\n15\\n\"\nassert solution(\"31\\n\") == \"Bob\\n15\\n\"\nassert solution(\"32\\n\") == \"Alice\\n16\\n\"\nassert solution(\"33\\n\") == \"Bob\\n16\\n\"\nassert solution(\"34\\n\") == \"Alice\\n17\\n\"\nassert solution(\"35\\n\") == \"Bob\\n17\\n\"\nassert solution(\"36\\n\") == \"Alice\\n18\\n\"\nassert solution(\"37\\n\") == \"Bob\\n18\\n\"\nassert solution(\"38\\n\") == \"Alice\\n19\\n\"\nassert solution(\"39\\n\") == \"Bob\\n19\\n\"\nassert solution(\"40\\n\") == \"Alice\\n20\\n\"\nassert solution(\"41\\n\") == \"Bob\\n20\\n\"\nassert solution(\"42\\n\") == \"Alice\\n21\\n\"\nassert solution(\"43\\n\") == \"Bob\\n21\\n\"\nassert solution(\"44\\n\") == \"Alice\\n22\\n\"\nassert solution(\"45\\n\") == \"Bob\\n22\\n\"\nassert solution(\"46\\n\") == \"Alice\\n23\\n\"\nassert solution(\"47\\n\") == \"Bob\\n23\\n\"\nassert solution(\"48\\n\") == \"Alice\\n24\\n\"\nassert solution(\"49\\n\") == \"Bob\\n24\\n\"\nassert solution(\"50\\n\") == \"Alice\\n25\\n\"\nassert solution(\"51\\n\") == \"Bob\\n25\\n\"\nassert solution(\"52\\n\") == \"Alice\\n26\\n\"\nassert solution(\"53\\n\") == \"Bob\\n26\\n\"\nassert solution(\"54\\n\") == \"Alice\\n27\\n\"\nassert solution(\"55\\n\") == \"Bob\\n27\\n\"\nassert solution(\"56\\n\") == \"Alice\\n28\\n\"\nassert solution(\"57\\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"Alice\"\nassert solution(4) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n\") == \"Alice\\n1\"\nassert solution(\"3\\n\") == \"Alice\\n2\"\nassert solution(\"4\\n\") == \"Bob\\n1\"\nassert solution(\"1\\n\") == \"Bob\\n1\"\nassert solution(\"5\\n\") == \"Alice\\n1\"\nassert solution(\"6\\n\") == \"Bob\\n2\"\nassert solution(\"7\\n\") == \"Alice\\n2\"\nassert solution(\"8\\n\") == \"Alice\\n3\"\nassert solution(\"9\\n\") == \"Bob\\n2\"\nassert solution(\"10\\n\") == \"Alice\\n3\"\nassert solution(\"11\\n\") == \"Alice\\n4\"\nassert solution(\"12\\n\") == \"Bob\\n2\"\nassert solution(\"13\\n\") == \"Alice\\n4\"\nassert solution(\"14\\n\") == \"Alice\\n5\"\nassert solution(\"15\\n\") == \"Bob\\n3\"\nassert solution(\"16\\n\") == \"Alice\\n5\"\nassert solution(\"17\\n\") == \"Alice\\n6\"\nassert solution(\"18\\n\") == \"Bob\\n3\"\nassert solution(\"19\\n\") == \"Alice\\n6\"\nassert solution(\"20\\n\") == \"Alice\\n7\"\nassert solution(\"21\\n\") == \"Bob\\n3\"\nassert solution(\"22\\n\") == \"Alice\\n7\"\nassert solution(\"23\\n\") == \"Alice\\n8\"\nassert solution(\"24\\n\") == \"Bob\\n3\"\nassert solution(\"25\\n\") == \"Alice\\n8\"\nassert solution(\"26\\n\") == \"Alice\\n9\"\nassert solution(\"27\\n\") == \"Bob\\n3\"\nassert solution(\"28\\n\") == \"Alice\\n9\"\nassert solution(\"29\\n\") == \"Alice\\n10\"\nassert solution(\"30\\n\") == \"Bob\\n4\"\nassert solution(\"31\\n\") == \"Alice\\n10\"\nassert solution(\"32\\n\") == \"Alice\\n11\"\nassert solution(\"33\\n\") == \"Bob\\n4\"\nassert solution(\"34\\n\") == \"Alice\\n11\"\nassert solution(\"35\\n\") == \"Alice\\n12\"\nassert solution(\"36\\n\") == \"Bob\\n4\"\nassert solution(\"37\\n\") == \"Alice\\n12\"\nassert solution(\"38\\n\") == \"Alice\\n13\"\nassert solution(\"39\\n\") == \"Bob\\n5\"\nassert solution(\"40\\n\") == \"Alice\\n13\"\nassert solution(\"41\\n\") == \"Alice\\n14\"\nassert solution(\"42\\n\") == \"Bob\\n5\"\nassert solution(\"43\\n\") == \"Alice\\n14\"\nassert solution(\"44\\n\") == \"Alice\\n15\"\nassert solution(\"45\\n\") == \"Bob\\n5\"\nassert solution(\"46\\n\") == \"Alice\\n15\"\nassert solution(\"47\\n\") == \"Alice\\n16\"\nassert solution(\"48\\n\") == \"Bob\\n5\"\nassert solution(\"49\\n\") == \"Alice\\n16\"\nassert solution(\"50\\n\") == \"Alice\\n17\"\nassert solution(\"51\\n\") == \"Bob\\n5\"\nassert solution(\"52\\n\") == \"Alice\\n17\"\nassert solution(\"53\\n\") == \"Alice\\n18\"\nassert solution(\"54\\n\") == \"Bob\\n5\"\nassert solution(\"55\\n\") == \"Alice\\n18\"\nassert solution(\"56\\n\") == \"Alice\\n19\"\nassert solution(\"57\\n\") == \"Bob\\n6\"\nassert solution(\"58\\n\") == \"Alice\\n19\"\nassert solution(\"59\\n\") == \"Alice\\n20\"\nassert solution(\"60\\n\") == \"Bob\\n6\"\nassert solution(\"61\\n\") == \"Alice\\n20\"\nassert solution(\"62\\n\") == \"Alice\\n21\"\nassert solution(\"63\\n\") == \"Bob\\n6\"\nassert solution(\"6",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5+3=8\", \"Input does not match the expected output.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\", \"The equation is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\\n\", \"Your solution is incorrect. Please provide the correct input.\"\n\nassert solution(\"3 1 2\") == \"3-1=2\\n\", \"Your solution is incorrect. Please provide the correct input.\"\n\nassert solution(\"9 1 2\") == \"9+1=10\\n\", \"Your solution is incorrect. Please provide the correct input.\"\n\nassert solution(\"2 4 6\") == \"2*4=8\\n\", \"Your solution is incorrect. Please provide the correct input.\"\n\nassert solution(\"4 2 6\") == \"4-2=2\\n\", \"Your solution is incorrect. Please provide the correct input.\"",
        "num_ids_2": 64,
        "num_ids_4": 129
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\\n\", \"The given input is not correct\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\\n\") == \"YES\\n\"\n\nsolution(\"8\\n3 2 2 1 1 3 1 1\\n\") == \"YES\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 2 1 1 3 1 1\") == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'YES'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, [2, 2, 2, 1, 1, 3, 1, 1]) == \"YES\"\nassert solution(8, [3, 2, 2, 1, 1, 3, 1, 1]) == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'YES'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8\\n3 2 2 1 1 3 1 1') == 'YES'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"YES\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon') == 'ghost'\nassert solution('10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\nwitch') == 'witch'\nassert solution('10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon') =='mummy'\nassert solution('10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon') == 'witch'\nassert solution('10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon') == 'def'",
        "num_ids_2": 95,
        "num_ids_4": 224
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n\"\n                \"ghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n\"\n                ) == \"mummy\\n\"\n\nassert solution(\"10\\n\"\n                \"witch\\nmummy\\ndemon\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n\"\n                ) == \"witch\\n\"\n\nassert solution(\"10\\n\"\n                \"demon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n\"\n                ) == \"mummy\\n\"\n\nassert solution(\"10\\n\"\n                \"demon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n\"\n                ) == \"demon\\n\"\n\nassert solution(\"10\\n\"\n                \"mummy\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n\"\n                ) == \"mummy\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) =='mummy', 'Your code is not correct. Please make sure to implement the function solution(stdin: str) -> str.'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"ghost\"\nassert solution(\"10\\nmummy\\nghost\\ndemon\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"demon\"\nassert solution(\"10\\ndemon\\nmummy\\nwitch\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"witch\"\nassert solution(\"10\\ndemon\\ndemon\\ndemon\\nmummy\\nwitch\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"demon\"",
        "num_ids_2": 93,
        "num_ids_4": 194
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'ghost'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'def solution(stdin: str) -> str:', 'Your code is incorrect. The output should be \"def solution(stdin: str) -> str:\"'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"mummy\"\n\nfrom collections import Counter",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"ghost\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == 'def solution(stdin: str) -> str: \\n\\tpass'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\ndemon\\nmummy\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"mummy\\n\"\nassert solution(\"10\\nghost\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"demon\\n\"\nassert solution(\"10\\nghost\\ndemon\\nmummy\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"mummy\\n\"\nassert solution(\"10\\nghost\\nmummy\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"demon\\n\"\nassert solution(\"10\\nghost\\nmummy\\ndemon\\nmummy\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"demon\\n\"\nassert solution(\"10\\nghost\\nmummy\\ndemon\\ndemon\\nmummy\\ndemon\\ndemon\\ndemon\\ndemon\") == \"mummy\\n\"\nassert solution(\"10\\nghost\\nmummy\\ndemon\\ndemon\\ndemon\\nmummy\\ndemon\\ndemon\\ndemon\") == \"demon\\n\"\nassert solution(\"10\\nghost\\nmummy\\ndemon\\ndemon\\ndemon\\ndemon\\nmummy\\ndemon\\ndemon\") == \"demon\\n\"\nassert solution(\"10\\nghost\\nmummy\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\nmummy\\ndemon\") == \"mummy\\n\"\nassert solution(\"10\\nghost\\nmummy\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\nmummy\") == \"demon\\n\"\nassert solution(\"10\\nghost\\nmummy\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"mummy\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 194
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\nfor i in range(n):\n    name = input()\n    if name not in attributes:\n        raise ValueError(f\"Attribute '{name}' is not in the input\")\n    attributes.remove(name)",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\"",
        "num_ids_2": 257,
        "num_ids_4": 257
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\nArtist Album Song_Title Length_seconds\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n\"\"\"\n) == \"\"\"\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\"\n\nassert solution(\n    \"\"\"\nArtist\nAlbum\nSong_Title\n\"\"\"\n) == \"\"\"\nArtist\nAlbum\nSong_Title\n\"\"\"\n\nassert solution(\n    \"\"\"\nArtist\nAlbum\nSong_Title\n\"\"\"\n) == \"\"\"\nArtist\nAlbum\nSong_Title\n\"\"\"\n\nassert solution(\n    \"\"\"\nArtist\nAlbum\nSong_Title\n\"\"\"\n) == \"\"\"\nArtist\nAlbum\nSong_Title\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\\nArtist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\\nArtist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nGeorge_Winston Summer Lullaby 215\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\"\n\nassert solution(\"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\\nArtist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\\nArtist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nGeorge_Winston Summer Lullaby 215\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\"\n\nassert solution(\"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work",
        "num_ids_2": 948,
        "num_ids_4": 1025
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}\\nActual output: {solution(input())}\"\nfor testcase in test_cases:\n    assert solution(testcase[0]) == testcase[1], f\"Test failed for testcase: {testcase}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\"\nassert solution(\"Artist\") == \"Artist\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\"\nassert solution(\"Album\") == \"Album\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\"\nassert solution(\"Song_Title\") == \"Song_Title\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\"\nassert solution(\"Length_seconds\") == \"Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\"\n\nprint(\"All test cases pass\")",
        "num_ids_2": 250,
        "num_ids_4": 490
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"\"\"\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\"\n\nassert solution(\"Artist\\nAlbum\\nSong_Title\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\n\") == \"\"\"\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\"\n\nassert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"\"\"\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\"\n\nassert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\n\\nArtist\\nAlbum\\nSong_Title\\n\") == \"\"\"\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\"\n\nassert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times ",
        "num_ids_2": 270,
        "num_ids_4": 532
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\"\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"\"\"\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n\"\"\".strip()",
        "num_ids_2": 137,
        "num_ids_4": 137
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\"",
        "num_ids_2": 436,
        "num_ids_4": 436
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5 5\") == \"NO\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES', \"Test failed\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 10 7\\n5 5 5 5 5 5 5') == 'YES'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'YES\\n', \"The solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'YES'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"2 10 15\\n5 5 5 5 5 5 5\") == \"NO\\n\"\nassert solution(\"2 10 10\\n5 5 5 5 5 5 5\") == \"NO\\n\"\nassert solution(\"2 10 5\\n5 5 5 5 5 5 5\") == \"NO\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 130
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 10 7\\n5 5 5 5 5 5 5\\n') == 'YES\\n'\nassert solution('2 10 8\\n5 5 5 5 5 5 5\\n') == 'NO\\n'\nassert solution('10 2 7\\n5 5 5 5 5 5 5\\n') == 'NO\\n'",
        "num_ids_2": 68,
        "num_ids_4": 102
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Not Effective\\n\", \"Expected 'Not Effective', got {}\".format(solution())",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\"\nassert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"66.666667\"\n",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Not Effective\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    10\n    NYNY\n    NNYY\n    NYYY\n    NYYN\n    NNNY\n    YYNN\n    YYYN\n    YYNY\n    YYNN\n    YYNY\n    \"\"\"\n) == \"66.666667\\n50.000000\\n\"\n\nassert solution(\n    \"\"\"\n    10\n    NYNY\n    NNYY\n    NYYY\n    NYYN\n    NNNY\n    YYNN\n    YYYN\n    YYNY\n    YYNN\n    YYNY\n    \"\"\"\n) == \"Not Effective\\n66.666667\\n50.000000\\n\"\n\nassert solution(\n    \"\"\"\n    10\n    NYNY\n    NNYY\n    NYYY\n    NYYN\n    NNNY\n    YYNN\n    YYYN\n    YYNY\n    YYNN\n    YYNY\n    \"\"\"\n) == \"Not Effective\\nNot Effective\\n50.000000\\n\"\n\nassert solution(\n    \"\"\"\n    10\n    NYNY\n    NNYY\n    NYYY\n    NYYN\n    NNNY\n    YYNN\n    YYYN\n    YYNY\n    YYNN\n    YYNY\n    \"\"\"\n) == \"Not Effective\\nNot Effective\\nNot Effective\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY') == 'Not Effective\\n66.666667\\n50.000000'\nassert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\\nNYNY\\nNYNY\\nNYYN\\nNYYN\\nNYNY\\nNYYN\\nNYNY\\nNYYN\\nNYYN\\nNYNY\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYYN\\nNYY",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed!\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == \"Not Effective\", \"Enter the correct input\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\\n66.666667\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\nNYNY\\nnnyy\\nnyyy\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nnyny\\nn",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\\n\") == \"Not Effective\\n66.666667\\n50.000000\"\nassert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\\n\") == \"66.666667\\n50.000000\"",
        "num_ids_2": 151,
        "num_ids_4": 151
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3\\nBruno'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Bruno\", \"Solution should return Bruno\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: {expected_output}!= {solution(stdin)}\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\"\nassert solution(\"5\\nCAACB\") == \"1\\nAdrian\"\nassert solution(\"5\\nABCDA\") == \"3\\nGoran\"\nassert solution(\"5\\nXCAAC\") == \"0\\n\"\nassert solution(\"5\\nABCCD\") == \"1\\nBruno\"",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\nBAACC') == 'Bruno\\n'\nassert solution('5\\nAABC') == 'Adrian\\n'\nassert solution('5\\nACBC') == 'Bruno\\n'\nassert solution('5\\nBABC') == 'Goran\\n'\nassert solution('5\\nCBAC') == 'Adrian\\n'\nassert solution('5\\nABCD') == 'Goran\\n'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: '{expected_output}', but got: '{solution(stdin)}'\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3 543\", \"Your implementation is wrong.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n\") == \"3 543\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\\n\", \"Solution not correct\"\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    3 E right\n    10 A wrong\n    30 C wrong\n    50 B wrong\n    100 A wrong\n    200 A right\n    250 C wrong\n    300 D right\n    3 E right\n    10 A wrong\n    30 C wrong\n    50 B wrong\n    100 A wrong\n    200 A right\n    250 C wrong\n    300 D right\n    -1\n    ''') == '3 543'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3 543\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n\") == \"3 543\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n\") == \"3 543\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n\") == \"3 543\"",
        "num_ids_2": 136,
        "num_ids_4": 204
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"",
        "num_ids_2": 132,
        "num_ids_4": 264
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == 3, \"Invalid output\"\nassert solution(\"-1\") == -1, \"Invalid output\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n\") == \"3 543\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5, \"Test 1 failed\"\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5, \"Test 2 failed\"\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5, \"Test 3 failed\"\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5, \"Test 4 failed\"\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2",
        "num_ids_2": 462,
        "num_ids_4": 924
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5\nprint(\"All tests passed\")",
        "num_ids_2": 224,
        "num_ids_4": 224
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n10 10\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10, 5)<|im_sep|>",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == 5, \"The shortest possible total distance over a complete game of Hopscotch should be 5.\"",
        "num_ids_2": 245,
        "num_ids_4": 245
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\") == 5\nprint(\"All tests passed\")",
        "num_ids_2": 222,
        "num_ids_4": 222
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected, f\"Got: {solution(input)}, expected: {expected}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == -1\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 0\n",
        "num_ids_2": 448,
        "num_ids_4": 672
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5\n\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == -1\n\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == -1\n\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == -1\n\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 ",
        "num_ids_2": 448,
        "num_ids_4": 896
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 7\\n5 5\") == \"gunilla has a point\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 7\\n5 5') == 'gunilla has a point'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"gunilla has a point\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == 'gunilla has a point'\n\nimport math",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'gunilla has a point', 'Your solution is incorrect'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 7\\n5 5\\n\") == \"gunilla has a point\"\nassert solution(\"3\\n1 10\\n5 5\\n\") == \"edward is right\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(\"A watched pot never boils\"))))))\nassert not solution(solution(solution(solution(solution(solution(\"A watched pot never boils\"))))))",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 7\\n5 5\\n\") == \"gunilla has a point\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10''') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\n\nassert solution('''10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10''') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\n\nassert solution('''10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10''') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"\n4\n4\n4\n1\n2\n2\n4\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"4\n4\n4\n1\n2\n2\n4\"\"\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"",
        "num_ids_2": 172,
        "num_ids_4": 172
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == expected_output, f\"Input: {input_str}\\nOutput: {expected_output}\" for input_str, expected_output in [\n    # Examples 1\n    (\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\", \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"),\n    # Examples 2\n    (\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\", \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"),\n    # Examples 3\n    (\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\", \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"),\n    # Examples 4\n    (\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\", \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"),\n    # Examples 5\n    (\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\", \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"),\n    # Examples 6\n    (\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\", \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"),\n    # Examples 7\n    (\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\", \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"),\n    # Examples 8\n    (\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\", \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"),\n    # Examples 9\n    (\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\", \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"),\n    # Examples 10\n    (\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\", \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"),\n]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 5\nassert solution == 5",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"t 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\\n\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\", \"Sample Input\"\nassert solution(\"t 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\\n\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\", \"Sample Input 2\"\nassert solution(\"t 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\\n\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\", \"Sample Input 3\"\nassert solution(\"t 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\\n\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\", \"Sample Input 4\"",
        "num_ids_2": 178,
        "num_ids_4": 358
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"\nassert solution(\"5 6\\nt 5 6\\ns 1 1\\ns 1 2\\ns 1 3\\ns 1 4\\ns 2 5\\ns 2 6\\ns 3 7\\ns 3 8\\ns 4 9\\ns 4 10\\ns 5 11\\ns 5 12\\ns 6 13\\ns 6 14\\ns 7 15\\ns 7 16\\ns 8 17\\ns 8 18\\ns 9 19\\ns 9 20\\ns 10 21\\ns 10 22\\ns 11 23\\ns 11 24\\ns 12 25\\ns 12 26\\ns 13 27\\ns 13 28\\ns 14 29\\ns 14 30\\ns 15 31\\ns 15 32\\ns 16 33\\ns 16 34\\ns 17 35\\ns 17 36\\ns 18 37\\ns 18 38\\ns 19 39\\ns 19 40\\ns 20 41\\ns 20 42\\ns 21 43\\ns 21 44\\ns 22 45\\ns 22 46\\ns 23 47\\ns 23 48\\ns 24 49\\ns 24 50\\ns 25 51\\ns 25 52\\ns 26 53\\ns 26 54\\ns 27 55\\ns 27 56\\ns 28 57\\ns 28 58\\ns 29 59\\ns 29 60\\ns 30 61\\ns 30 62\\ns 31 63\\ns 31 64\\ns 32 65\\ns 32 66\\ns 33 67\\ns 33 68\\ns 34 69\\ns 34 70\\ns 35 71\\ns 35 72\\ns 36 73\\ns 36 74\\ns 37 75\\ns 37 76\\ns 38 77\\ns 38 78\\ns 39 79\\ns 39 80\\ns 40 81\\ns 40 82\\ns 41 83\\ns 41 84\\ns 42 85\\ns 42 86\\ns 43 87\\ns 43 88\\ns 44 89\\ns 44 90\\ns 45 91\\ns 45 92\\ns 46 93\\ns 46 94\\ns 47 95\\ns 47 96\\ns 48 97\\ns 48 98\\ns 49 99\\ns 49 100\\ns 50 101\\ns 50 102\\ns 51 103\\ns 51 104\\ns 52 105\\ns 52 106\\ns 53 107\\ns 53 108\\ns 54 109\\ns 54 110\\ns 55 111\\ns 55 112\\ns 56 113\\ns 56 114\\ns 57 115\\ns 57 116\\ns 58 117\\ns ",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\") == \"2015\\n1982\\n2016\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2015\\n1982\\n2016'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected, f\"Test failed: expected {expected}, got {solution(input)}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\"\nassert solution(\"5\\nCanada 2000\\nSpain 2001\\nPortugal 1999\\nArgentina 2001\\n1\\nBrazil 1\\nBrazil 2\\nBrazil 3\") == \"2001\"\nassert solution(\"5\\nUnited Kingdom 2000\\nFrance 1999\\nGermany 2001\\nPoland 1999\\n4\\nFrance 1\\nSpain 1\\nSweden 2\\nTurkey 1\") == \"2000\"\nassert solution(\"6\\nIndia 2000\\nPakistan 1999\\nIndia 2001\\nBahrain 2000\\nJapan 2001\\nUnited States 1998\") == \"2001\"\nassert solution(\"10\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\nUnited Kingdom 2000\\nFrance 1999\\nGermany 2001\\nPoland 1999\\nArgentina 2001\\nBrazil 1\\nBrazil 2\\nBrazil 3\\nIndia 2000\\nPakistan 1999\\nIndia 2001\\nBahrain 2000\\nJapan 2001\\nUnited States 1998\") == \"2001\"",
        "num_ids_2": 157,
        "num_ids_4": 301
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\") == \"2015\\n1982\\n2016\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2015\\n1982\\n2016\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution) == solution",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\\n\"\n\nassert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\\n\"\n\nassert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\\n\"",
        "num_ids_2": 170,
        "num_ids_4": 255
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\"\n",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\", \"The solution should return 10\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == '10\\n'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\", \"The solution is not correct.\"\nassert solution(\"bb\") == \"1\", \"The solution is not correct.\"\nassert solution(\"zz\") == \"0\", \"The solution is not correct.\"\nassert solution(\"\") == \"0\", \"The solution is not correct.\"\n\nfrom typing import List",
        "num_ids_2": 39,
        "num_ids_4": 71
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abbcccddddeeeee\") == 10, \"Incorrect output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abbcccddddeeeee\") == 10",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abbcccddddeeeee\") == 10\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abbcccddddeeeee\") == 10, \"Test case not passed\"\nprint(\"Test case passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\", \"Test failed.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == solution(sample_output)",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nSample Output:Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\n\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\n\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity') == 'Engineering will save the world from inefficiency\\nInefficiency is a.. and its humanity'\nassert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity') == 'Engineering will save the world from inefficiency\\nInefficiency is a.. and its humanity'\nassert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nEngineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity') == 'Engineering will save the world from inefficiency\\nInefficiency is a.. and its humanity'\nassert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nEngineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity') == 'Engineering will save the world from inefficiency\\nInefficiency is a.. and its humanity'\nassert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nEngineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and",
        "num_ids_2": 144,
        "num_ids_4": 424
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\n\"\n\nassert solution(\"This is a sample input\") == \"This is a sample input\\n\"\n\nassert solution(\"This is another sample input\") == \"This is another sample input\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 106
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\nSample Input\\nSample Output\\n\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\n\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\nSample Input\\nSample Output\\n\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\n\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\nSample Input\\nSample Output\\n\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\n\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\nSample Input\\nSample Output\\n\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\n\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\nSample Input\\nSample Output\\n\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\n\"",
        "num_ids_2": 142,
        "num_ids_4": 284
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"\nassert solution(\"The dog eats the cat, but the cat eats the dog.\") == \"The dog eats the cat, but the cat eats the dog.\"\nassert solution(\"The quick brown fox jumps over the lazy dog.\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"Hello world! This is a sample text book with duplicated words.\") == \"Hello world! This is a sample text book with duplicated words.\"\nassert solution(\"  This text has only 1 sentence.  \") == \"  This text has only 1 sentence.  \"\nassert solution(\"The quick brown fox jumps over the lazy dog.\") == \"The quick brown fox jumps over the lazy dog.\"\n",
        "num_ids_2": 100,
        "num_ids_4": 160
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\ndef solution(stdin: str) -> str:\\npass\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\n\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\n\"\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"\nassert solution(\"ExampleInput\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nEngineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nEngineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nEngineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nEngineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nEngineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nEngineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nEngineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"\nassert solution(\"DuplicateWords\") == \"Eric will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"",
        "num_ids_2": 102,
        "num_ids_4": 414
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\"\nassert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\\n\") == \"satisfactory\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\"\nassert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"satisfactory\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') == 'unsatisfactory'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"satisfactory\", \"Incorrect output for the given problem.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'unsatisfactory'\nprint('satisfactory')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\"\nassert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"satisfactory\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    5 3\n    1 -2 3\n    1 -2 -3\n    1 2 -3\n    1 2 -3\n    \"\"\") == \"unsatisfactory\"\n\nassert solution(\"\"\"\n    5 3\n    1 -2 3\n    1 -2 -3\n    1 2 -3\n    1 2 -3\n    \"\"\") == \"satisfactory\"\n\nassert solution(\"\"\"\n    6 4\n    1 -2 3 4\n    1 -2 -3 4\n    1 2 -3 4\n    1 2 -3 4\n    1 2 -3 4\n    \"\"\") == \"satisfactory\"\n\nassert solution(\"\"\"\n    6 4\n    1 -2 3 4\n    1 -2 -3 4\n    1 2 -3 4\n    1 2 -3 4\n    1 2 -3 4\n    \"\"\") == \"unsatisfactory\"\n\nassert solution(\"\"\"\n    3 1\n    1 -2\n    1 -2\n    1 2\n    \"\"\") == \"unsatisfactory\"\n\nassert solution(\"\"\"\n    3 1\n    1 -2\n    1 -2\n    1 2\n    \"\"\") == \"satisfactory\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\"\nprint(\"satisfactory\")",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    5 3\n    -1 2 3\n    -1 -2 3\n    1 -2 3\n    1 -2 -3\n    1 2 -3\n    \"\"\"\n) == \"unsatisfactory\"\n\nassert solution(\n    \"\"\"\n    3 4\n    0 1 2\n    0 1 3\n    0 2 4\n    0 3 4\n    1 2 3\n    1 2 4\n    1 3 4\n    \"\"\"\n) == \"unsatisfactory\"\n\nassert solution(\n    \"\"\"\n    3 5\n    0 1 2 3 4\n    0 1 3 4 5\n    0 2 3 4 5\n    0 3 4 5\n    1 2 3 4 5\n    1 2 4 5\n    1 3 4 5\n    \"\"\"\n) == \"satisfactory\"\n\nassert solution(\n    \"\"\"\n    5 3\n    0 1 2 3 4\n    0 1 3 4 5\n    0 2 3 4 5\n    0 3 4 5\n    1 2 3 4 5\n    1 2 4 5\n    1 3 4 5\n    \"\"\"\n) == \"satisfactory\"\n\nassert solution(\n    \"\"\"\n    2 3\n    0 1\n    0 2\n    0 3\n    1 2\n    1 3\n    2 3\n    \"\"\"\n) == \"satisfactory\"\n\nassert solution(\n    \"\"\"\n    5 4\n    0 1 2 3\n    0 1 3 4\n    0 2 3 4\n    0 3 4 5\n    1 2 3 4\n    1 2 4 5\n    1 3 4 5\n    \"\"\"\n) == \"unsatisfactory\"\n\nassert solution(\n    \"\"\"\n    4 5\n    0 1 2 3\n    0 1 3 4\n    0 2 3 4\n    0 3 4 5\n    1 2 3 4\n    1 2 4 5\n    1 3 4 5\n    \"\"\"\n) == \"unsatisfactory\"\n\nassert solution(\n    \"\"\"\n    6 7\n    0 1 2 3 4 5\n    0 1 3 4 5 6\n    0 2 3 4 5 6\n    0 3 4 5 6\n    0 4 5 6 7\n    0 5 6 7 8\n    0 6 7 8 9\n    0 7 8 9 10\n    0 8 9 10 11\n    0 9 10 11 12\n    0 10 11 12 13\n    0 11 12 13 14\n    0 12 13 14 15\n    0 13 14 15 16\n    0 14 15 16 17\n    0 15 16 17 18\n    0 16 17 18 19\n    0 17 18 19 20\n    0 18 19 20 21\n    0 19 20 21 22\n    0 20 21 22 23\n    0 21 22 23 24\n    0 22 23 24 25\n    0 23 24 25 26\n    0 24 25 26 27\n    0 25 26 27 28\n    0 26 27 28 29\n    0 27 28 29 30\n    0 28 29 30 31\n    0 29 30 31 32\n    0 30 31 32 33\n    0 31 32 33 34\n    0 32 33 34 35\n    0 33 34 35 36\n    0 34 35 36 37\n    0 35 36 37 38\n    0 36 37 38 39\n    0 37 38 39 40\n    0 38 39 40 41\n    0 39 40 41 42",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '4'\nprint('All tests passed.')",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '4'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='8\\n1 1 1 5 3 4 6 6\\n') == '4'\nassert solution(stdin='8\\n1 2 3 6 6 5 4 1\\n') == '3'\nassert solution(stdin='8\\n1 2 3 6 5 6 4 1\\n') == 'none'",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == '4'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\" # example input\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\\n\") == \"4\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == 4, \"The output is incorrect.\"\nassert solution('10\\n1 1 1 1 2 3 4 5 6') == \"none\", \"The output is incorrect.\"\nassert solution('12\\n1 1 1 1 1 1 1 1 1') == \"none\", \"The output is incorrect.\"",
        "num_ids_2": 69,
        "num_ids_4": 105
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\"\nassert solution(\"04:00:00\") == \"16:00:00\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('20:00:00') == '08:00:00', 'Your solution is incorrect!'\nassert solution('04:00:00') == '08:00:00', 'Your solution is incorrect!'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('20:00:00') == '08:00:00'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20:00:00 04:00:00\") == \"08:00:00\"\nassert solution(\"00:00:00 00:00:00\") == \"00:00:00\"\nassert solution(\"24:00:00 00:00:00\") == \"12:00:00\"\nassert solution(\"00:00:00 23:59:59\") == \"23:59:59\"\nassert solution(\"24:00:00 59:59:59\") == \"23:59:59\"\nassert solution(\"24:00:00 60:00:00\") == \"24:00:00\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"08:00:00\", \"Your solution is incorrect\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='20:00:00\\n04:00:00') == '08:00:00\\n'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '08:00:00'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '08:00:00\\n', \"Your solution is incorrect.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"31 6\") == \"4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"31 6\") == \"4\"\nassert solution(\"50 3\") == \"2\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('31 6') == '4'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Output: 4\\n'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"31 6\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"31 6\") == \"4\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"31 6\") == \"4\"\nassert solution(\"20 1\") == \"2\"\nassert solution(\"10 10\") == \"5\"\nassert solution(\"50 100\") == \"15\"\nassert solution(\"100 1000\") == \"25\"\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('31 6') == '4\\n'\nassert solution('1000000000 1000000000') == '1000000000\\n'\nassert solution('1000000000 1') == '1\\n'\nassert solution('200 3') == '3\\n'\nassert solution('1000000000 1000000000') == '1000000000\\n'\nassert solution('1000000000 1') == '1\\n'\nassert solution('200 3') == '3\\n'\nassert solution('1000000000 1000000000') == '1000000000\\n'\nassert solution('1000000000 1') == '1\\n'\nassert solution('200 3') == '3\\n'\nassert solution('1000000000 1000000000') == '1000000000\\n'\nassert solution('1000000000 1') == '1\\n'\nassert solution('200 3') == '3\\n'\nassert solution('1000000000 1000000000') == '1000000000\\n'\nassert solution('1000000000 1') == '1\\n'\nassert solution('200 3') == '3\\n'\nassert solution('1000000000 1000000000') == '1000000000\\n'\nassert solution('1000000000 1') == '1\\n'\nassert solution('200 3') == '3\\n'\nassert solution('1000000000 1000000000') == '1000000000\\n'\nassert solution('1000000000 1') == '1\\n'\nassert solution('200 3') == '3\\n'\nassert solution('1000000000 1000000000') == '1000000000\\n'\nassert solution('1000000000 1') == '1\\n'\nassert solution('200 3') == '3\\n'\nassert solution('1000000000 1000000000') == '1000000000\\n'\nassert solution('1000000000 1') == '1\\n'\nassert solution('200 3') == '3\\n'\nassert solution('1000000000 1000000000') == '1000000000\\n'\nassert solution('1000000000 1') == '1\\n'\nassert solution('200 3') == '3\\n'\nassert solution('1000000000 1000000000') == '1000000000\\n'\nassert solution('1000000000 1') == '1\\n'\nassert solution('200 3') == '3\\n'\nassert solution('1000000000 1000000000') == '1000000000\\n'\nassert solution('1000000000 1') == '1\\n'\nassert solution('200 3') == '3\\n'\nassert solution('1000000000 1000000000') == '1000000000\\n'\nassert solution('1000000",
        "num_ids_2": 56,
        "num_ids_4": 95
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"31 6\") == \"4\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"31 6\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '2.6666666666666665'\nassert solution(1000) == '2.718281828459045'\nassert solution(10000) == '2.718281828459046'\nassert solution(100000) == '2.7182818284590459'\nassert solution(1000000) == '2.7182818284590458'",
        "num_ids_2": 56,
        "num_ids_4": 118
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"2.6666666666666665\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2.6666666666666665, \"Test 1\"\nassert solution(4) == 2.7777777777777777, \"Test 2\"\nassert solution(5) == 2.8888888888888889, \"Test 3\"\nassert solution(10) == 3.1622776601683795, \"Test 4\"\nassert solution(11) == 3.2702702702702703, \"Test 5\"",
        "num_ids_2": 64,
        "num_ids_4": 129
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"2.6666666666666665\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == '2.6666666666666665'\nassert solution(10) == '2.718281828459045'\nassert solution(100) == '3.4163416341634164'\nassert solution(1000) == '2.718281828459045'\nassert solution(10000) == '2.718281828459045'\nassert solution(100000000) == '2.718281828459045'",
        "num_ids_2": 54,
        "num_ids_4": 112
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 2.6666666666666665\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"2.6666666666666665\", \"The given input is incorrect.\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"2.6666666666666665\"\nassert solution(10) == \"7.316227766016837\"\nassert solution(10000) == \"7.316227766016837\"\nassert solution(10000000) == \"1.7976931348623157e+308\"\nassert solution(100000000) == \"1.7976931348623157e+308\"",
        "num_ids_2": 54,
        "num_ids_4": 123
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 2.6666666666666665\nassert solution(10) == 3.1622776601683795\nassert solution(10000) == 7.169384621190452\n\nfrom typing import List",
        "num_ids_2": 53,
        "num_ids_4": 82
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"2.6666666666666665\"\nassert solution(10) == \"7.333333333333333\"\nassert solution(100) == \"20.19841249669155\"\nassert solution(1000) == \"100.00000000000000\"\nassert solution(10000) == \"366.0959195042429\"",
        "num_ids_2": 54,
        "num_ids_4": 112
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"paul\"\nassert solution(stdin=\"5 3 7\") == \"paul\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"10 20 15\") == \"opponent\"\nassert solution(\"0 100 0\") == \"opponent\"\nassert solution(\"2 2 2\") == \"opponent\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 7, 5) == \"paul\"\nassert solution(3, 7, 6) == \"opponent\"\nassert solution(3, 7, 3) == \"opponent\"\nassert solution(3, 7, 4) == \"paul\"\nassert solution(3, 7, 1) == \"opponent\"",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5, 3, 7) == 'paul'\nassert solution(1, 0, 1) == 'def'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"2 3 7\") == \"opponent\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5, 3, 7) == \"paul\"\nassert solution(4, 2, 6) == \"opponent\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"5 7 3\") == \"def\"\nassert solution(\"1 1 1\") == \"def\"\nassert solution(\"1 2 1\") == \"paul\"\nassert solution(\"1000 1000 1000\") == \"def\"\nassert solution(\"1000 2000 1000\") == \"paul\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"10 3 7\") == \"opponent\"\nassert solution(\"5 100 7\") == \"opponent\"\nassert solution(\"2 2 2\") == \"opponent\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5, 3, 7) == \"paul\"\nprint(\"All Tests Passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3 7') == 'paul'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"2\\n\"\nassert solution(stdin=input()) == \"3\\n\"\nassert solution(stdin=input()) == \"3\\n\"\nassert solution(stdin=input()) == \"4\\n\"\nassert solution(stdin=input()) == \"5\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"2\\n\", \"Test failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 2\nassert solution(10) == 11",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n\"  # expected output: \"2\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"1234\") == \"Yes\"\nassert solution(\"abcdefg\") == \"No\"\nassert solution(\"abcdefg123\") == \"Yes\"\nassert solution(\"abcdefg1234\") == \"No\"\nassert solution(\"abcdefg12345\") == \"Yes\"\nassert solution(\"ABCDEFG\") == \"No\"\nassert solution(\"ABCDEFG123\") == \"Yes\"\nassert solution(\"ABCDEFG1234\") == \"No\"\nassert solution(\"ABCDEFG12345\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"aaaa\") == \"No\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"Yes\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"Yes\"\nassert solution(\"0123456789\") == \"Yes\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\") == \"No\"\nassert solution(\"C0deninja5\") == \"Yes\"\nassert solution(\"c0deninja5\") == \"Yes\"\nassert solution(\"c0deninja51\") == \"Yes\"\n",
        "num_ids_2": 25,
        "num_ids_4": 55
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('123') == 'No', 'Input 1: Invalid input'\nassert solution('123a') == 'Yes', 'Input 2: Acceptable password'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"abcdefg\") == \"Yes\"\nassert solution(\"AbCdEfG\") == \"Yes\"\nassert solution(\"123456\") == \"No\"\nassert solution(\"c0deninja5\") == \"Yes\"\nassert solution(\"C0deninja5\") == \"Yes\"\nassert solution(\"c0deninja51\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"No\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    123\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    123a\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    12345\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    123456\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    12345678\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    123456789\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    abc123\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    abc1234\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    abc12345\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    abc123456\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    abc1234567\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    abc12345678\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    abc123456789\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890\n    \"\"\"\n) == \"Yes\"\n\nassert solution(\n    \"\"\"\n    1234567890ABCDEF\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890abcdef\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890ABCDEFGH\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890abcdefg\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890ABCDEFGHIJ\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890abcdefgij\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890ABCDEFGHIJKL\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890abcdefgijkl\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890ABCDEFGHIJKLMN\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890abcdefgijklmn\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890ABCDEFGHIJKLMNOP\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890abcdefgijklmnopq\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890ABCDEFGHIJKLMNOPQ\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890ABCDEFGHIJKLMNOPQR\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890ABCDEFGHIJKLMNOPQRST\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890ABCDEFGHIJKLMNOPQRSTU\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890ABCDEFGHIJKLMNOPQRSTUV\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890ABCDEFGHIJKLMNOPQRSTUVW\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789012345",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"123abc\") == \"No\"\nassert solution(\"123xyz\") == \"No\"\nassert solution(\"abcdef\") == \"No\"\nassert solution(\"ABCDEF\") == \"No\"\nassert solution(\"a1b2c3d4e5f6g7h8i9j\") == \"No\"\nassert solution(\"a1B2c3d4e5F6g7H8I9J\") == \"No\"\nassert solution(\"123456\") == \"No\"\nassert solution(\"1234567890\") == \"No\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"No\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"No\"\nassert solution(\"123456789\") == \"No\"\nassert solution(\"12345678901234567890\") == \"Yes\"\nassert solution(\"1234567890123456789\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"123\") == \"No\", \"Invalid input\"\nassert solution(\"123a\") == \"No\", \"Invalid input\"\nassert solution(\"abcde\") == \"Yes\", \"123456\"\nassert solution(\"abcdef\") == \"No\", \"c0deninja5\"\nassert solution(\"C0DENINJA5\") == \"No\", \"c0deninja51\"\nassert solution(\"c0deninja5\") == \"No\", \"c0deninja51\"\nassert solution(\"C0DENINJA51\") == \"Yes\", \"c0deninja51\"\nassert solution(\"c0deninja51\") == \"Yes\", \"c0deninja51\"",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n\nsolution = '''\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\nassert solution(\"papuunepa pilubapa\") == \"papula pilula\"\nassert solution(\"bocypilakapa bocypilakapa\") == \"bocula bocula\"\nassert solution(\"napa pimepa pimepa\") == \"napa pimepa pimepa\"\nassert solution(\"na uapuunepa pimepa\") == \"na uapepimepa pimepa\"",
        "num_ids_2": 46,
        "num_ids_4": 96
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"32 2\") == \"-32\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"32 2\") == \"0\"\nassert solution(\"10 20\") == \"ALL GOOD\"\nassert solution(\"0 50\") == \"ALL GOOD\"\nassert solution(\"-32 2\") == \"-32\"\nassert solution(\"0 -5\") == \"IMPOSSIBLE\"\n\nprint(\"All tests passed.\")",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"32 2\") == \"IMPOSSIBLE\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(32, 2) == '-32'\nassert solution(55, 40) == 'ALL GOOD'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"32 2\") == \"-32\"\nprint(\"All Good\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(32, 2) == -32\nassert solution(50, 3) == 50\nassert solution(32, 2) == 32\nassert solution(50, 3) == \"ALL GOOD\"\nassert solution(32, 1) == \"IMPOSSIBLE\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"32 2\") == \"-32\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"32 2\") == \"-32\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('32 2') == '-32', \"Hello from the future. I am a time traveller. You would think that in the future we have agreed to use a single scale for measuring temperature. This is not so. In fact, we have all sorts of scales now. All the big brands have made their own. This is a bit confusing. Please help me figure it out. In my day to day work I have to relate to two different scales A and B. Help me find a temperature where the two scales are the same, so I don\u2019t have to worry about it.\"",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"32 2\") == \"32\"\nassert solution(\"48 2\") == \"ALL GOOD\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt')) == 'both\\none\\none\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'both'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, \"The solution is incorrect.\"\n\nsample_input = \"2 2 3 3\\n1 3 4\"\nexpected_output = \"both\\none\\none\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\none\"\nassert solution(\"1 2 3 4\") == \"both\\one\\none\"\nassert solution(\"4 1 2 3\") == \"both\\none\\none\"\nassert solution(\"1 2 3 4\\n1 2 3 4\") == \"both\\none\\none\"",
        "num_ids_2": 47,
        "num_ids_4": 96
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\none\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\"\nassert solution(\"2 2 3 3\\n1 4 4\") == \"one\"\nassert solution(\"2 2 3 3\\n1 3 2\") == \"none\"",
        "num_ids_2": 48,
        "num_ids_4": 71
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 3 3\\n1 3 4\\n') == 'both\\none\\none'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\none\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"both\", \"Output should consist of three lines; each containing 'both', 'one' or 'none', depending on how many dogs attack each of our heroes.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Wrong output\\nExpected: {expected_output}\\nGot: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '10', 'Your solution is not correct.'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6 8\") == \"10\", \"Test Failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 10, \"Output should be 10\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 10, \"The given solution is incorrect.\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6 8\") == 10, \"The fourth number in the sequence should be 10.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 10, \"Your code is not correct\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6 8\") == 10, \"The output should be 10\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6 8\") == 10, \"Solution is not correct\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"500 70\") == \"533\"\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"500 70\") == \"533\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"500 70\") == \"533\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"500 70\") == 533, \"Incorrect output.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"500 70\") == \"533\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"500 70\") == \"533\", \"Test failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"500 70\") == \"533\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"500 70\") == \"533\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('500 70') == '533'\nassert solution('10000 20') == '533'\nassert solution('10000 1000') == '533'\nassert solution('1000 1000') == '533'\nassert solution('1000 1000 20') == '533'",
        "num_ids_2": 36,
        "num_ids_4": 77
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"500 70\") == \"533\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"\nassert solution(\"1 100 60 9 69 30\\n1 30 30 30 30 30\") == \"241.0\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 9\\n69 60\\n100 60') == '39.0\\n30.0\\n'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2 9\n    69 60\n    100 60\n    \"\"\"\n) == \"\"\"\n    39.0\n    30.0\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    2 9\n    69 60\n    100 60\n    ''') == '39.0\\n30.0\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 9\\n69 60\\n100 60') == '39.0\\n30.0'\nprint('All tests passed!')",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    2 9\n    69 60\n    100 60''') == \"39.0\\n30.0\\n\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\\n\"\nassert solution(\"5\\n23 27 31 28 30\\n25 29 30 32 29\") == \"1 28\\n\"\nassert solution(\"5\\n23 27 31 28 30\\n25 29 30 32 29\\n28 29 30 32 28\") == \"2 28\\n\"\nassert solution(\"5\\n23 27 31 28 30\\n25 29 30 32 29\\n28 29 30 32 28\\n29 30 31 32 29\") == \"3 29\\n\"\nassert solution(\"5\\n23 27 31 28 30\\n25 29 30 32 29\\n28 29 30 32 28\\n29 30 31 32 29\\n30 31 31 31 30\") == \"3 29\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 220
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n23 27 31 28 30\") == \"2 28\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2 28', \"The function is not correct. Please see the examples provided.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n23 27 31 28 30\\n\") == \"2 28\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\", \"Test failed\"\n\nimport math",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2 28\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n23 27 31 28 30\\n') == '2 28'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data, \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\nprint(\"Correct\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\n1 2 3\") == \"2\\n\"\nassert solution(\"3 6\\n1 3 3\") == \"1\\n\"\nassert solution(\"3 6\\n2 1 2\") == \"2\\n\"\nassert solution(\"3 6\\n2 1 4\") == \"3\\n\"\nassert solution(\"3 6\\n2 1 6\") == \"1\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"4 4\\n2 3 2\\n\") == \"2\\n\"\nassert solution(\"4 6\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"5 5\\n1 2 3\\n\") == \"1\\n\"\nassert solution(\"6 6\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"7 7\\n1 2 3\\n\") == \"3\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\n1 2 3\") == \"2\\n\"\nassert solution(\"4 2\\n1 2 3\") == \"1\\n\"\nassert solution(\"5 7\\n1 2 3 4 5 6\") == \"5\\n\"\nassert solution(\"6 7\\n1 2 3 4 5 6\") == \"6\\n\"\nassert solution(\"7 8\\n1 2 3 4 5 6\") == \"7\\n\"\nassert solution(\"8 9\\n1 2 3 4 5 6\") == \"8\\n\"\nassert solution(\"9 10\\n1 2 3 4 5 6\") == \"9\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 96
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 6\\n1 2 3\\nSample Output:\\n2\\n') == '2\\n'\nprint('All test cases passed!')",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n3 2 1\\n\") == \"2\"\nassert solution(\"5 4\\n0 1\\n0 0\\n\") == \"0\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='1\\nMWWMWMMWM') == '9'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\nMWWMWMMWM') == 9, \"The solution is incorrect\"\nassert solution('2\\nWMWMWMWMW') == 2, \"The solution is incorrect\"\nassert solution('3\\nWMWMW') == 2, \"The solution is incorrect\"\nassert solution('4\\nWMWM') == 1, \"The solution is incorrect\"\nassert solution('5\\nWWMW') == 2, \"The solution is incorrect\"\nassert solution('6\\nWMW') == 1, \"The solution is incorrect\"\nassert solution('7\\nWM') == 0, \"The solution is incorrect\"\nassert solution('8\\nW') == 1, \"The solution is incorrect\"\nassert solution('9\\n') == 0, \"The solution is incorrect\"\nassert solution('10\\nWWMWWMWWM') == 12, \"The solution is incorrect\"",
        "num_ids_2": 46,
        "num_ids_4": 87
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nMWWMWMMWM\\n\") == \"9\"\nassert solution(\"2\\nWMWWMWMMWM\\n\") == \"9\"\nassert solution(\"3\\nWMWWMWMWWM\\n\") == \"9\"\nassert solution(\"4\\nWMWWMWMWWM\\n\") == \"9\"\nassert solution(\"5\\nWMWWMWMWWM\\n\") == \"9\"\nassert solution(\"6\\nWMWWMWMWWM\\n\") == \"9\"\nassert solution(\"7\\nWMWWMWMWWM\\n\") == \"9\"\nassert solution(\"8\\nWMWWMWMWWM\\n\") == \"9\"\nassert solution(\"9\\nWMWWMWMWWM\\n\") == \"9\"\nassert solution(\"10\\nWMWWMWMWWM\\n\") == \"9\"\nassert solution(\"11\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"12\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"13\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"14\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"15\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"16\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"17\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"18\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"19\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"20\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"21\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"22\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"23\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"24\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"25\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"26\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"27\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"28\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"29\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"30\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"31\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"32\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"33\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"34\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"35\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"36\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"37\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"38\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"39\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"40\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"41\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"42\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"43\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"44\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"45\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"46\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"47\\nWMWWMWMWWM\\n\") == \"10\"\nassert solution(\"48\\nWMWWMWMW",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1\\nMWWMWMMWM\\n\") == \"9\\n\"\nassert solution(stdin=\"2\\nWMWMMMMW\\n\") == \"8\\n\"\nassert solution(stdin=\"3\\nWMWMMWMW\\n\") == \"7\\n\"\nassert solution(stdin=\"4\\nWMWMMWWM\\n\") == \"6\\n\"\nassert solution(stdin=\"5\\nWMWMMWWM\\n\") == \"5\\n\"\nassert solution(stdin=\"6\\nWMWMMWWM\\n\") == \"4\\n\"\nassert solution(stdin=\"7\\nWMWMMWWM\\n\") == \"3\\n\"\nassert solution(stdin=\"8\\nWMWMMWWM\\n\") == \"2\\n\"\nassert solution(stdin=\"9\\nWMWMMWWM\\n\") == \"1\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nMWWMWMMWM\\n\") == \"9\\n\"\nassert solution(\"2\\nWWMWMMWM\\n\") == \"1\\n\"\nassert solution(\"3\\nWWMWWMW\\n\") == \"0\\n\"\nassert solution(\"4\\nWMWWMWM\\n\") == \"1\\n\"\nassert solution(\"5\\nWWMWWMW\\n\") == \"1\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 83
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 9",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\nMWWMWMMWM\\n\") == 9, \"Test failed\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == '9'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1\\nMWWMWMMWM\") == \"9\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\\n\"\nassert solution(input()) == \"1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\nassert solution(\"5 4\\n8 2 undo 1\") == \"4\"\nassert solution(\"5 4\\n8 undo 3\") == \"1\"\nassert solution(\"5 4\\n8 -2 undo 2\") == \"2\"\nassert solution(\"5 4\\n8 2 3 undo 2\") == \"3\"\nassert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\n",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\\n\", \"Test 1 failed\"\n\nassert solution(\"5 4\\n0 -2 3 undo 2\") == \"0\\n\", \"Test 2 failed\"\n\nassert solution(\"5 4\\n2n 3 undo 2\") == \"1\\n\", \"Test 3 failed\"\n\nassert solution(\"5 4\\n-2n 3 undo 2\") == \"4\\n\", \"Test 4 failed\"\n\nassert solution(\"5 4\\n0 -2 3 undo 0\") == \"0\\n\", \"Test 5 failed\"\n\nassert solution(\"5 4\\n0 -2 3 undo 2\") == \"3\\n\", \"Test 6 failed\"\n\nassert solution(\"5 4\\n2n 3 undo 0\") == \"0\\n\", \"Test 7 failed\"\n\nassert solution(\"5 4\\n2n 3 undo 2\") == \"1\\n\", \"Test 8 failed\"\n\nassert solution(\"5 4\\n-2n 3 undo 0\") == \"4\\n\", \"Test 9 failed\"\n\nassert solution(\"5 4\\n0 -2 3 undo 2\") == \"3\\n\", \"Test 10 failed\"\n\nassert solution(\"5 4\\n-2n 3 undo 0\") == \"4\\n\", \"Test 11 failed\"\n\nassert solution(\"5 4\\n0 -2 3 undo 0\") == \"0\\n\", \"Test 12 failed\"\n\nassert solution(\"5 4\\n0 -2 3 undo 2\") == \"3\\n\", \"Test 13 failed\"\n\nassert solution(\"5 4\\n2n 3 undo 0\") == \"0\\n\", \"Test 14 failed\"\n\nassert solution(\"5 4\\n2n 3 undo 2\") == \"1\\n\", \"Test 15 failed\"\n\nassert solution(\"5 4\\n-2n 3 undo 0\") == \"4\\n\", \"Test 16 failed\"\n\nassert solution(\"5 4\\n0 -2 3 undo 0\") == \"0\\n\", \"Test 17 failed\"\n\nassert solution(\"5 4\\n0 -2 3 undo 2\") == \"3\\n\", \"Test 18 failed\"\n\nassert solution(\"5 4\\n2n 3 undo 0\") == \"0\\n\", \"Test 19 failed\"\n\nassert solution(\"5 4\\n2n 3 undo 2\") == \"1\\n\", \"Test 20 failed\"\n\nassert solution(\"5 4\\n-2n 3 undo 0\") == \"4\\n\", \"Test 21 failed\"\n\nassert solution(\"5 4\\n0 -2 3 undo 0\") == \"0\\n\", \"Test 22 failed\"\n\nassert solution(\"5 4\\n0 -2 3 undo 2\") == \"3\\n\", \"Test 23 failed\"\n\nassert solution(\"5 4\\n2n 3 undo 0\") == \"0\\n\", \"Test 24 failed\"\n\nassert solution(\"5 4\\n2n 3 undo 2\") == \"1\\n\", \"Test 25 failed\"\n\nassert solution(\"5 4\\n-2n 3 undo 0\") == \"4\\n\", \"Test 26 failed\"\n\nassert solution(\"5 4\\n0 -2 3 undo 0\") == \"0\\n\", \"Test 27 failed\"\n\nassert solution(\"5 4\\n0 -2 3 undo 2\") == \"3\\n\", \"Test 28 failed\"\n\nassert solution(\"5 4\\n2n 3 undo 0\") == \"0\\n\", \"Test 29 failed\"\n\nassert solution(\"5 4\\n2n 3 undo 2\") == \"1\\n\", \"Test 30 failed\"\n\nassert solution(\"5 4\\n-2n 3 undo 0\") == \"4\\n\", \"Test 31 failed\"\n\nassert solution(\"5 4\\n0 -2 3 undo 0\") == \"0\\n\", \"Test 32 failed\"\n\nassert solution(\"5 4\\n0 -2 3 undo 2\") == \"3\\n",
        "num_ids_2": 60,
        "num_ids_4": 119
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Test failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, got: {solution(input())}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"10 1\") == \"10\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"0 -10\") == \"9\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5 5\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 125
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Test case failed for input {input}, expected {output}, but got {solution(input)}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6 7\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 2 3\\n3 2 1\") == [\"6\", \"7\"]\nassert solution(\"1 3\\n2 4 5\\n1 2 3\\n1 1 2\") == [\"6\", \"7\"]\nassert solution(\"3 2\\n1 4 5\\n1 2 3\\n2 2 3\") == [\"5\", \"6\"]",
        "num_ids_2": 65,
        "num_ids_4": 101
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6\nassert solution() == 7",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 2 3\\n3 2 1\") == [\"6 7\"]",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 2 3\\n3 2 1\") == \"6 7\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2 3\\n3 2 1') == '6 7\\n'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 2 3\\n3 2 1\") == \"6 7\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 2 3\\n3 2 1\") == \"6 7\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n\") == \"64 correct\\n665 incorrect\\ndef solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"8\\nalas als als als als als als\\n3\\naas aas aas\\n2\\naas aas aas\\n2\\naas aas aas\\n1\\naas aas aas\\n\") == \"5 correct\\n1 incorrect\\ndef solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"9\\nals als als als als als als als\\n3\\naas aas aas\\n2\\naas aas aas\\n2\\naas aas aas\\n1\\naas aas aas\\n\") == \"6 correct\\n2 incorrect\\ndef solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"10\\nals als als als als als als als\\n3\\naas aas aas\\n2\\naas aas aas\\n2\\naas aas aas\\n1\\naas aas aas\\n\") == \"5 correct\\n3 incorrect\\ndef solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 149,
        "num_ids_4": 304
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"\n64 correct\n665 incorrect\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Sample Input\") == \"64 correct\\n665 incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7\\nals mollen mollen mollen mollen mollen mollen') == '64 correct'\nassert solution('4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect') == '665 incorrect'",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n\"\"\") == \"64 correct\\n665 incorrect\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7\\nalsmollenmollenmollenmollenmollenmollen') == '64 correct'\nassert solution('4\\nalscorrect') == '665 incorrect'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\nalsmollenmollenmollenmollenmollenmollen\") == \"64 correct\"\nassert solution(\"4\\nalsmollenmolescorrect\\nalsmollendestroycorrect\\nalsmollenmillsincorrect\") == \"665 incorrect\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\") == \"64 correct\\n665 incorrect\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\") == \"64 correct\\n665 incorrect\\ndef solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\n2\\nmollen moles correct\\n2\\nmollen destroy correct\\n1\\nmollen mills incorrect\\n\") == \"64 correct\\n665 incorrect\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n2 3 4 3') == 7, 'Test Case 1 failed'\nassert solution('4\\n2 3 5 3') == 7, 'Test Case 2 failed'\nassert solution('4\\n2 3 3 4') == 7, 'Test Case 3 failed'\nassert solution('4\\n2 2 2 3') == 7, 'Test Case 4 failed'",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n2 3 4 3') == 7, 'Your implementation is incorrect'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n2 3 4 3') == '7'\nassert solution('5\\n2 3 5 4') == '7'\nassert solution('6\\n3 2 4 3') == '5'\nassert solution('7\\n1 2 3 4') == '1'\nassert solution('8\\n1 2 4 3') == '5'\nassert solution('9\\n2 1 3 4') == '4'\nassert solution('10\\n2 3 4 1') == '4'",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 4 3\\n\") == \"7\\n\", \"Incorrect output\"\nprint(\"All test cases passed\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"7\", \"The output should be 7\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([4]) == \"7\\n\"\nassert solution([2, 3, 4, 3]) == \"7\\n\"\nassert solution([2, 4, 3, 2]) == \"1\\n\"\nassert solution([2, 4, 3, 5]) == \"2\\n\"\nassert solution([2, 4, 3, 2, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ",
        "num_ids_2": 33,
        "num_ids_4": 75
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 4 3\") == 7\nprint(\"All test cases passed.\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"7\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n2 3 4 3') == '7\\n'\nassert solution('5\\n5 5 5 5 5') == '1\\n'\nassert solution('6\\n3 3 3 3 3 3 3 3') == '7\\n'\nassert solution('7\\n3 3 3 3 3 3 3 3') == '1\\n'\n\nfrom typing import List",
        "num_ids_2": 44,
        "num_ids_4": 102
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n1 2\\n2 0\\n2 1\\n1 3\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n1.0 2.0\\n2.0 0.0\\n2.0 1.0\\n1.0 3.0\"",
        "num_ids_2": 160,
        "num_ids_4": 160
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"3\\n0.0 0.0\\n1.0 1.0\\n0.0 2.0\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"3\\n0.0001 0.0001\\n1.0001 1.0001\\n0.0002 2.0002\\n4\") == \"0.0001 0.0001\\n2.0001 2.0001\\n0.0004 4.0004\\n\"\nassert solution(\"3\\n0.000001 0.000001\\n1.000001 1.000001\\n0.000002 2.000002\\n4\") == \"0.000001 0.000001\\n2.000001 2.000001\\n0.000004 4.000004\\n\"\nassert solution(\"3\\n0.00000001 0.00000001\\n1.00000001 1.00000001\\n0.00000002 2.00000002\\n4\") == \"0.00000001 0.00000001\\n2.00000001 2.00000001\\n0.00000004 4.00000004\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n2 2\\n3 3\\n\") == \"0.0 0.0\\n1.0 1.0\\n2.0 2.0\\n3.0 3.0\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n1.0 1.0\\n0.0 2.0\\n4.0 4.0\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 348
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '''0.0 0.0\n2.0 2.0\n0.0 4.0\n'''",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"0.0 0.0\n2.0 2.0\n0.0 4.0\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n1\\n0\\n1\\n1\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n0.0 1.0\\n0.0 0.0\\n0.0 0.0\\n\"",
        "num_ids_2": 151,
        "num_ids_4": 151
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == 1",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\\n\"\n\nfrom typing import List",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == 1",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'1\\n') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"12\"\nassert solution(\"5\") == \"24\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1') == 1\nassert solution('10001') == 10000\nassert solution('100000') == 366\nassert solution('1000000') == 3651\nassert solution('10000000') == 36509\nassert solution('100000000') == 365090",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1') == '1\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n12 16\") == \"34\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='3 1\\n12 16\\n') == '34\\n'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n12 16\\nSample Output:34\") == \"34\"\nassert solution(\"4 2\\n16 14\\nSample Output:14\" == \"14\")\nassert solution(\"1 1\\n1 1\\nSample Output:1\" == \"1\")\nassert solution(\"1 1\\n1 1\\nSample Output:1\" == \"1\")\nassert solution(\"1 1\\n1 1\\nSample Output:1\" == \"1\")\nassert solution(\"1 1\\n1 1\\nSample Output:1\" == \"1\")\n",
        "num_ids_2": 54,
        "num_ids_4": 100
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n12 16\\n\") == \"34\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n12 16\\n\") == \"34\"\\",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1\\n12 16') == '34\\n'\nassert solution('0 0') == '0\\n'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"34\"\n\nimport math",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n12 16\\n\") == \"34\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"34\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == \"34\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3 1\") == \"3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"6\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"7\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"8\"",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"The result is {solution(stdin)}, but the expected output is {expected}.\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 3 1\") == 3\nassert solution(\"5\\n1 2 3 1\\n2 3 1 2\\n3 1 2 3\\n1 2 3 1\") == 1\nassert solution(\"6\\n1 2 3 1\\n2 3 1 2\\n3 1 2 3\\n1 2 3 1\\n2 3 1 2\\n3 1 2 3\") == 2",
        "num_ids_2": 63,
        "num_ids_4": 126
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 3 1\\n\") == 3\nassert solution(\"5\\n1 2 3 1 4\\n\") == 4\nassert solution(\"6\\n1 2 3 1 4 5\\n\") == 5\nassert solution(\"7\\n1 2 3 1 4 5 6\\n\") == 6\nassert solution(\"8\\n1 2 3 1 4 5 6 7\\n\") == 7\nassert solution(\"9\\n1 2 3 1 4 5 6 7 8\\n\") == 8\nassert solution(\"10\\n1 2 3 1 4 5 6 7 8 9\\n\") == 9\nassert solution(\"11\\n1 2 3 1 4 5 6 7 8 9 10\\n\") == 10\nassert solution(\"12\\n1 2 3 1 4 5 6 7 8 9 10 11\\n\") == 11\nassert solution(\"13\\n1 2 3 1 4 5 6 7 8 9 10 11 12\\n\") == 12\nassert solution(\"14\\n1 2 3 1 4 5 6 7 8 9 10 11 12 13\\n\") == 13\nassert solution(\"15\\n1 2 3 1 4 5 6 7 8 9 10 11 12 13 14\\n\") == 14\nassert solution(\"16\\n1 2 3 1 4 5 6 7 8 9 10 11 12 13 14 15\\n\") == 15\nassert solution(\"17\\n1 2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16\\n\") == 16\nassert solution(\"18\\n1 2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n\") == 17\nassert solution(\"19\\n1 2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n\") == 18\nassert solution(\"20\\n1 2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\") == 19\nassert solution(\"21\\n1 2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\") == 20\nassert solution(\"22\\n1 2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\\n\") == 21\nassert solution(\"23\\n1 2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\\n\") == 22\nassert solution(\"24\\n1 2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\\n\") == 23\nassert solution(\"25\\n1 2 3 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 1",
        "num_ids_2": 42,
        "num_ids_4": 92
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 3 1\") == 3, \"Output must be 3\"\nassert solution(\"5\\n1 2 3 1 2\") == 2, \"Output must be 2\"\nassert solution(\"3\\n1 2 1 2\") == 1, \"Output must be 1\"\nassert solution(\"1\\n1 1 1 1\") == 0, \"Output must be 0\"\nassert solution(\"1\\n1 2 3 1 2\") == 3, \"Output must be 3\"\nassert solution(\"1\\n1 2 3 1 2\") == 3, \"Output must be 3\"",
        "num_ids_2": 54,
        "num_ids_4": 106
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 3\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 3, \"The correct answer is 3\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1.0\") == \"1088\"\n\nfrom math import ceil",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1088'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1.0\") == \"1088\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1088\"\nprint(\"Sample Output:\", solution(input()))",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1.0\") == 1088\n\nimport math",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='1.0') == '1088'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='1.0') == 1088\n\nSolution:",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1088) == 1088, \"Test 1 failed\"\nassert solution(5280) == 1088, \"Test 2 failed\"\nassert solution(4854) == 1088, \"Test 3 failed\"\n\nfrom math import floor",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1088\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 4\") == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n\"\nassert solution(\"0 2\") == \"12.500000000\\n12.500000000\\n12.500000000\\n12.500000000\\n\"\nassert solution(\"1 100 500 1000 2000\") == \"100.000000000\\n500.000000000\\n1000.000000000\\n2000.000000000\\n\"\nassert solution(\"2 100 500 1000 2000\") == \"100.000000000\\n500.000000000\\n1000.000000000\\n2000.000000000\\n\"",
        "num_ids_2": 134,
        "num_ids_4": 312
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 4\\n1 100 100 100\\n2 200 200 200\\n3 300 300 300\\n4 400 400 400\") == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n\"\n",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 4\\n' +\n                 '25 25 25 25\\n' +\n                 '50 50 50 50\\n' +\n                 '75 75 75 75\\n' +\n                 '100 100 100 100') == '25.000000000,25.000000000,25.000000000,25.000000000\\n'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n'\nprint(\"Test Passed\")",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_string=\"0 4\\n\") == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n\", \"Test 1 failed\"\nassert solution(input_string=\"0 0\\n\") == \"0.000000000\\n\", \"Test 2 failed\"\nassert solution(input_string=\"0 100000\\n\") == \"1000.000000000\\n\", \"Test 3 failed\"\nassert solution(input_string=\"1 1000 0 0 0\\n\") == \"100.000000000\\n\", \"Test 4 failed\"\nassert solution(input_string=\"1 0 1000 0 0\\n\") == \"100.000000000\\n\", \"Test 5 failed\"\n",
        "num_ids_2": 115,
        "num_ids_4": 206
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"25.000000000\", \"The solution is incorrect.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, f\"Expected '{output_str}', but got '{solution(input_str)}'.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_string=None) == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\"\n",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Input:\\n{stdin}\\nOutput:\\n{output}\"\nfor _ in range(10):\n    test_case()",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 4\\n25.000000000 25.000000000 25.000000000 25.000000000\\n\") == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 122,
        "num_ids_4": 122
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3 4\\n3\\n4\\n5\\n6\\n7\\n') == 'DA\\nDA\\nDA\\nNE\\nNE'\nassert solution('1 1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n') == 'DA\\nDA\\nDA\\nNE\\nNE'\nassert solution('10 20 30\\n15 25 35\\n20 30 40\\n') == 'DA\\nDA\\nDA\\nNE\\nNE'\nassert solution('10 20 30\\n15 25 35\\n20 30 40\\n15 30 35\\n') == 'NE\\nNE\\nNE\\nNE'\nassert solution('10 20 30\\n15 25 35\\n20 30 40\\n15 30 35\\n20 30 35\\n') == 'DA\\nDA\\nDA\\nNE\\nNE'\n\nfrom typing import List",
        "num_ids_2": 91,
        "num_ids_4": 200
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'DA', \"The solution should return 'DA', but it returned '{}'.\".format(solution(input()))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\\n\") == \"DA\\nDA\\nDA\\nNE\\nNE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"DA\", \"Incorrect output.\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\") == \"DA\\nDA\\nDA\\nNE\\nNE\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Solution failed: expected '{expected}', got '{solution(input())}'\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed.\" for i, sample_input, sample_output in enumerate(TEST_CASES)",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"DA\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n7 42\\n\") == \"6\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0\\n7 42\\n\") == 6",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"The output {solution(input())} is incorrect. Expected {expected}, got {solution(input())}.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected output: '{expected}', got: '{solution(input())}'\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n7 42\") == 6, \"Your implementation is incorrect. Please check your code.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n0 0\n7 42\n\"\"\") == \"6\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n7 42\") == \"6\\n\"\nassert solution(\"3\\n5 8\\n12 25\") == \"13\\n\"\nassert solution(\"4\\n3 6\\n9 12\") == \"15\\n\"\nassert solution(\"5\\n1 4\\n2 7\\n5 10\") == \"16\\n\"\nassert solution(\"6\\n2 5\\n4 8\\n7 11\") == \"18\\n\"\nassert solution(\"7\\n6 9\\n12 15\\n16 19\") == \"20\\n\"\nassert solution(\"8\\n1 4\\n5 8\\n9 12\") == \"22\\n\"\nassert solution(\"9\\n7 10\\n13 16\\n18 20\") == \"24\\n\"\nassert solution(\"10\\n6 9\\n14 17\\n21 24\") == \"27\\n\"\nassert solution(\"11\\n5 8\\n15 18\\n22 25\") == \"30\\n\"\nassert solution(\"12\\n4 7\\n16 19\\n23 26\") == \"33\\n\"\nassert solution(\"13\\n3 6\\n17 20\\n24 27\") == \"36\\n\"\nassert solution(\"14\\n2 5\\n18 21\\n25 28\") == \"39\\n\"\nassert solution(\"15\\n1 4\\n20 23\\n26 29\") == \"42\\n\"\nassert solution(\"16\\n0 3\\n21 24\\n30 33\") == \"45\\n\"\nassert solution(\"17\\n1 4\\n22 25\\n31 34\") == \"48\\n\"\nassert solution(\"18\\n2 5\\n23 26\\n32 35\") == \"51\\n\"\nassert solution(\"19\\n3 6\\n24 27\\n33 36\") == \"54\\n\"\nassert solution(\"20\\n4 7\\n25 28\\n34 37\") == \"57\\n\"\nassert solution(\"21\\n5 8\\n26 29\\n35 38\") == \"60\\n\"\nassert solution(\"22\\n6 9\\n27 30\\n36 39\") == \"63\\n\"\nassert solution(\"23\\n7 10\\n28 31\\n37 40\") == \"66\\n\"\nassert solution(\"24\\n8 11\\n29 32\\n38 41\") == \"69\\n\"\nassert solution(\"25\\n9 12\\n30 33\\n39 42\") == \"72\\n\"\nassert solution(\"26\\n10 13\\n31 34\\n40 43\") == \"75\\n\"\nassert solution(\"27\\n11 14\\n32 35\\n41 44\") == \"78\\n\"\nassert solution(\"28\\n12 15\\n33 36\\n42 45\") == \"81\\n\"\nassert solution(\"29\\n13 16\\n34 37\\n43 46\") == \"84\\n\"\nassert solution(\"30\\n14 17\\n35 38\\n44 47\") == \"87\\n\"\nassert solution(\"31\\n15 18\\n36 39\\n45 48\") == \"90\\n\"\nassert solution(\"32\\n16 19\\n37 40\\n46 49\") == \"93\\n\"\nassert solution(\"33\\n17 20\\n38 41\\n47 50",
        "num_ids_2": 48,
        "num_ids_4": 101
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 6\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\") == \"correct\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3\n    -> Alice\n    -> Bob\n    Alice Bob -> Carl\n    \"\"\"\n) == \"correct\"\n\nassert solution(\n    \"\"\"\n    3\n    -> Alice\n    -> Bob\n    Alice Bob -> Carl\n    \"\"\"\n) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    -> ALICE\n    -> BOB\n    Alice Bob -> CARL\n    \"\"\"\n) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    -> ALICE\n    -> BOB\n    Alice Bob -> CARL\n    \"\"\"\n) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\n\") == \"correct\"\nassert solution(\"1\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\n\") == \"1\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"correct\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\") == \"correct\"\nassert solution(\"1\\n-> 1\\n\") == \"correct\"\nassert solution(\"2\\n-> ALICE\\n-> BOB\\n-> BOB\\nALICE BOB -> CARL\") == \"correct\"\nassert solution(\"2\\n-> ALICE\\n-> BOB\\n-> BOB\\nALICE BOB -> CARL\\n-> BOB\\nALICE BOB -> CARL\") == \"correct\"\nassert solution(\"2\\n-> ALICE\\n-> BOB\\n-> BOB\\nALICE BOB -> CARL\\n-> BOB\\nALICE BOB -> CARL\\n-> BOB\\nALICE BOB -> CARL\") == \"correct\"\nassert solution(\"3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\n-> BOB\\nALICE BOB -> CARL\\n-> BOB\\nALICE BOB -> CARL\\n-> BOB\\nALICE BOB -> CARL\\n-> BOB\\nALICE BOB -> CARL\") == \"correct\"",
        "num_ids_2": 47,
        "num_ids_4": 131
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'correct'\nassert solution(stdin) == 'correct'\nassert solution(stdin) == 'correct'\nassert solution(stdin) == 'correct'\nassert solution(stdin) == 'correct'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'correct'\nprint('def solution(stdin: str) -> str:')\nprint('    pass')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"correct\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n-> Alice\\n-> Bob\\nALICE BOB -> Carl') == 'correct'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-> Alice\\n-> Bob\\nALICE BOB -> Carl\") == \"correct\"\nassert solution(\"3\\n-> Alice\\n-> Bob\\nALICE BOB -> Carl\\n-> Alice\\n-> Bob\\n-> Carl\") == \"1\"\nassert solution(\"3\\n-> Alice\\n-> Bob\\nALICE BOB -> Carl\\n-> Alice\\n-> Bob\\n-> Carl\\n-> Alice\\n-> Bob\\n-> Carl\\n\") == \"1\"",
        "num_ids_2": 67,
        "num_ids_4": 122
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt\\n'",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\\ndef solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"The given output is not correct. Expected {output}, but got {solution(input())}.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\\ndef solution(stdin: str) -> str: pass\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\\n\") == \"Runoff!\"",
        "num_ids_2": 174,
        "num_ids_4": 174
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Connie Froggatt\"\nassert solution(input()) == \"Runoff!\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"Connie Froggatt\\nRunoff!\"\nassert solution(sample_input2) == \"Runoff!\"\n\nfrom typing import List",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Penny Franklin\") == \"Connie Froggatt\"\nassert solution(\"Marti Graham\") == \"Marti Graham\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\"\nassert solution(\"Joseph Ivers\") == \"Joseph Ivers\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\"\nassert solution(\"Bruce Stanger\") == \"Barbara Skinner\"\n",
        "num_ids_2": 33,
        "num_ids_4": 71
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Expected output: Connie Froggatt'\nassert solution('**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n**\\n",
        "num_ids_2": 1026,
        "num_ids_4": 1026
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: expected output '{expected_output}', but got '{solution(input())}'\" for i, expected_output in enumerate(expected_output_list)",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\"\nassert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\"\nassert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\"\nassert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\"\nassert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\"\nassert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\"\nassert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\"",
        "num_ids_2": 190,
        "num_ids_4": 380
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\"\"\") == 2",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Jabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n\"\"\") == \"2\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n\") == 2\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Incorrect solution\"\n\nsample_input = \"\"\"\n7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == 900",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"  # expected output: \"900\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\" # pass",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"Your solution is incorrect. Please submit the correct function signature and examples.\\n\\nFunction Signature: solution(stdin: str) -> str\\n\\nExample Input:\\n{example_input}\\n\\nExample Output:\\n{example_output}\"\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\\n\") == \"900\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\" # expected output: \"900\"\nassert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n100 5 10\") == \"stay home\" # expected output: \"stay home\"\nassert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\\n300 0 10\") == \"stay home\" # expected output: \"stay home\"\nassert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n100 5 10\\n1000 0 100\") == \"900\" # expected output: \"900\"\nassert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n100 5 10\\n1000 0 100\\n1000 0 100\") == \"900\" # expected output: \"900\"",
        "num_ids_2": 113,
        "num_ids_4": 248
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\nC D F D C D F F F C\\n\") == \"A# C D# F\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"5\\nG A D C E F B A \") == \"G C E\"\nassert solution(\"7\\nC D F G A D C E F B A \") == \"G C E F\"\nassert solution(\"4\\nG A D C E F B A \") == \"G C E\"\nassert solution(\"1\\nC D F G A D C E F B A \") == \"G C E F B A\"\nassert solution(\"100\\nC D F G A D C E F B A \") == \"none\"",
        "num_ids_2": 50,
        "num_ids_4": 98
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == \"A# C D# F\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"A# C D# F\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\nC D F D C D F F F C ') == 'A# C D# F'\nprint('All tests pass!')",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"A# C D# F\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == \"A# C D# F\"\nassert solution(5) == \"C D D E F# F#\"\nassert solution(1) == \"A# C\"\nassert solution(10) == \"A# C D# F# G# A# C D# F#\"\nassert solution(7) == \"C D E F# G# A\"\nassert solution(3) == \"C# D F# G\"\nassert solution(11) == \"C# D F# G# A\"",
        "num_ids_2": 31,
        "num_ids_4": 68
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\nC D F D C D F F F C\\n') == 'A# C D# F\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"h\u00e4t talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4",
        "num_ids_2": 50,
        "num_ids_4": 541
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"foo bar\") == \"haer talar vi rikssvenska\"\nassert solution(\"haer talar vi dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"\u00e5\") == \"haer talar vi dae ae ju traeligt va\"\nassert solution(\"\u00e6\") == \"haer talar vi dae ae ju traeligt va\"\nassert solution(\"ae ae\") == \"dae ae ju traeligt va\"\nassert solution(\"\u00e4\u00e4\u00e4\u00e4\u00e4\") == \"dae ae ju traeligt va\"",
        "num_ids_2": 42,
        "num_ids_4": 92
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\n\nassert solution(\"definitely not in \u00f6stg\u00f6tska\") == \"definitely not in \u00f6stg\u00f6tska\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\n\nassert solution('def solution(stdin: str) -> str: pass') == 'haer talar vi rikssvenska'\n\nassert solution('sample input') == 'haer talar vi rikssvenska'\n\nassert solution('sample output') == 'haer talar vi rikssvenska'",
        "num_ids_2": 51,
        "num_ids_4": 91
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"Haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00f6') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00f6\u00e4') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00f6\u00e4\u00df') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00f6\u00e4\u00df\u00f6') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00f6\u00e4\u00df\u00f6\u00e4') == 'haer talar vi rikssvenska'\nassert solution('\u00e4ro\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00e4\u00df\u00f6\u00f6\u00e4\u00df\u00f6\u00df') == 'haer talar vi rik",
        "num_ids_2": 50,
        "num_ids_4": 91
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"definitely not in \u00f6stg\u00f6tska\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4",
        "num_ids_2": 49,
        "num_ids_4": 540
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('def solution(stdin: str) -> str: pass') == 'haer talar vi rikssvenska'\nassert solution('ae ae ae ae ae') == 'dae ae ju traeligt va'\nassert solution('def solution(stdin: str) -> str: pass') == 'haer talar vi rikssvenska'\nassert solution('def solution(stdin: str) -> str: pass') == 'haer talar vi rikssvenska'\nassert solution('def solution(stdin: str) -> str: pass') == 'haer talar vi rikssvenska'",
        "num_ids_2": 51,
        "num_ids_4": 100
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"The sample input {sample_input} is incorrect. Expected output: {sample_output}, got: {solution(sample_input)}\"\n\nfrom typing import List",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n') == 'E..E#. \\n..E.#E \\n#..E.. \\n.E...E \\n##E.E# \\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n') == 'E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n....#.\n....#.\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n') == 'E..E#. \\n..E.#E\\n#..E.. \\n.E...E\\n##E.E# \\ndef solution(stdin: str) -> str: \\n    pass'",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n') == 'E..E#.E..E#.E..E#E..E..E.#E..E..E.E...E.E.#E.E.#E..E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.#E.E.#E..E.#E..E..E.",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"\n\nn, m = map(int, stdin.split())\ngrid = [list(line) for line in input().split()]\n\nfor i in range(n):\n    for j in range(m):\n        if grid[i][j] == '#':\n            grid[i][j] = 'E'\n\nprint(\"\".join(grid))",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\\n\"\nassert solution(stdin=\"12 10 3 8 4 2\") == \"12 10 3 8 4 2\\n\"\nassert solution(stdin=\"5 6 3 8 4 1 7\") == \"5 7 1 6 3 8\\n\"\nassert solution(stdin=\"4 3 2 1 7 8 6 5\") == \"4 5 6 7 8 1\\n\"\nassert solution(stdin=\"1 2 3 4 5 6 7 8\") == \"1 2 3 4 5 6 7 8\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 156
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"12 10 3 8 4 2\", \"Incorrect output.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2', \"The solution is incorrect.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"\nassert solution(\"10 10 10 10 10 10 10 10\") == \"10 10 10 10 10 10\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\\n\"\nassert solution(\"16 32 48 64 80 96 128 160\") == \"16 96 64 48 32 24\\n\"\nassert solution(\"24 64 96 128 160 192 224 256\") == \"24 128 96 64 48 32\\n\"\nassert solution(\"32 64 96 128 160 192 224 256\") == \"24 128 96 64 48 32\\n\"\nassert solution(\"32 64 96 128 160 192 224 256 288\") == \"24 128 96 64 48 32 192\\n\"\nassert solution(\"32 64 96 128 160 192 224 256 288 320\") == \"24 128 96 64 48 32 192\\n\"\nassert solution(\"32 64 96 128 160 192 224 256 288 320 352\") == \"24 128 96 64 48 32 192 352\\n\"",
        "num_ids_2": 94,
        "num_ids_4": 206
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"12 8 2 4 10 3 25 14\\n\") == \"12 10 3 8 4 2\"\nassert solution(stdin=\"1 2 3 4 5 6 7 8\\n\") == \"1 6 5 8 7 4\"\nassert solution(stdin=\"10 20 30 40 50 60 70 80\\n\") == \"70 60 50 40 30 20 10 80\"\nassert solution(stdin=\"100 200 300 400 500 600 700 800\\n\") == \"100 800 700 600 500 400 300 200\"\nassert solution(stdin=\"1000 2000 3000 4000 5000 6000 7000 8000\\n\") == \"1000 8000 7000 6000 5000 4000 3000 2000\"",
        "num_ids_2": 82,
        "num_ids_4": 214
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Test 1\"\nassert solution(\"12 10 3 8 4 2\") == \"12 10 3 8 4 2\", \"Test 2\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Incorrect solution\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 0 3\\n\") == \"4\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 0 3\") == \"4\", \"Test case failed.\"\nprint(\"Test case passed.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 0 3\") == 4, \"Tim did not drink enough sodas on his extra thirsty day.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Solution returned {solution(input())}, but expected {expected_output}\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('9 0 3') == '4\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 0 3') == 4",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 0 3\") == \"4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"How many sodas did Tim drink on his extra thirsty day?\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 0 3\\n\") == 4, \"Test case 1 failed\"\nassert solution(\"10 0 3\\n\") == 0, \"Test case 2 failed\"\nassert solution(\"10 5 3\\n\") == 5, \"Test case 3 failed\"\nassert solution(\"15 0 3\\n\") == 0, \"Test case 4 failed\"\nassert solution(\"15 5 3\\n\") == 10, \"Test case 5 failed\"",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1010\") == \"12\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1010\") == \"12\", \"Test failed!\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1010\") == \"12\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1010\") == \"12\", \"Slavko's octal conversion is incorrect.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1010\") == \"12\", \"The solution should return 12 but it returns {}\".format(solution(\"1010\"))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1010\") == \"12\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1010\") == \"12\" # pass",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1010\") == \"12\", \"Test Case 1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1010\") == \"12\", \"Your code is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1010\") == \"12\"\nprint(\"Test Passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == 2\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\", \"\\n\".join(input().split()) + \"\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\", \"The correct number of handshakes was not found.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    2 3\n..o\no..''') == '2'\n\nfrom typing import List",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n\", \"Test failed: solution() should return '2'.\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == 2\nassert solution(\"2 3\\n..o\\no..\") == 2\nassert solution(\"3 3\\n..o\\no..\") == 1\nassert solution(\"5 3\\n..o\\no..\") == 0",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == 2, \"Output should be 2.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2') == 'LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n'",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Your code is not correct. Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"\nassert solution(\"3 5\\n1 2\\n1 3\\n1 2\\n1 3\") == \"LADICA\\nLADICA\\nSMECE\\nSMECE\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n1 2\\n1 3\") == \"LADICA\\nSMECE\\nSMECE\\n\"\nassert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 4\") == \"SMECE\\nSMECE\\nSMECE\\nSMECE\\nSMECE\\n\"\nassert solution(\"3 5\\n1 2\\n1 3\\n1 2\\n1 4\") == \"SMECE\\nSMECE\\nSMECE\\nSMECE\\nSMECE\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n1 2\\n1 4\") == \"SMECE\\nSMECE\\nSMECE\\nSMECE\\nSMECE\\n\"",
        "num_ids_2": 112,
        "num_ids_4": 214
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed: {sample_input}!= {sample_output}\"\n\nsample_input = \"\"\"\n5 3\n1 2\n1 3\n1 2\n1 3\n\"\"\"\nsample_output = \"\"\"\nLADICA\nLADICA\nLADICA\nSMECE\nSMECE\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    5 3\n    1 2\n    1 3\n    1 2\n    1 3\n    ''') == 'LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE'\nassert solution('''\n    5 3\n    1 2\n    2 3\n    1 3\n    1 2\n    ''') == 'LADICA\\nLADICA\\nSMECE\\nSMECE'\nassert solution('''\n    5 3\n    1 2\n    3 2\n    1 3\n    1 2\n    ''') == 'LADICA\\nSMECE\\nSMECE'\nassert solution('''\n    5 3\n    1 2\n    1 3\n    2 3\n    1 2\n    ''') == 'SMECE\\nSMECE'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(sample_input)) == solution(sample_input) == \"1 2\", \"Incorrect solution\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0\") == \"1 2\\n\"\nassert solution(\"10\\n2 4 6 8 10\") == \"1 2 4 6 8 10\\n\"\nassert solution(\"5\\n1 1 2 3 3\") == \"1 2 3 3\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 82
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\n1\n0\n1\n0\n1\n0\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n') == '1 2\\n'",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0\") == \"1 2\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0\\n\") == \"1 2\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\\n2\") == \"1 2\"\nassert solution(\"1\\n2\") == \"2 1\"\nassert solution(\"2\\n0\") == \"1 2\"\nassert solution(\"2\\n2\") == \"1 2\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1 2\\n\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1 2\\n\", \"Input should be '2' and '1 2'\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 2\\n\", \"Please provide the correct implementation for the solution\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t} failed. Expected output: {expected_output}, got: {solution(input())}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'",
        "num_ids_2": 92,
        "num_ids_4": 184
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"1\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\n\nfrom typing import List",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == 1\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == 4\nassert solution(\"0 0 0 0 0 0\") == 0\nassert solution(\"\") == 0\n",
        "num_ids_2": 72,
        "num_ids_4": 98
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == 1",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1', 'Your solution is incorrect. Please provide the correct solution.'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"1\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"1\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"1\\n\"\n\nfrom typing import List",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4 3 1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"impossible\" # wrong input\nassert solution(input()) == \"impossible\" # wrong input\nassert solution(input()) == \"impossible\" # wrong input\nassert solution(input()) == \"impossible\" # wrong input\nassert solution(input()) == \"impossible\" # wrong input\nassert solution(input()) == \"impossible\" # wrong input\nassert solution(input()) == \"impossible\" # wrong input",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 4\") == \"4 3 1\"\nassert solution(\"2 3 4 5\") == \"4 3 2 1\"\nassert solution(\"1 2 3 4\") == \"4 3 1 2\"\nassert solution(\"1 1 1 1\") == \"impossible\"\nassert solution(\"5 5 5 5\") == \"impossible\"\nassert solution(\"1 2 3 4 5\") == \"impossible\"\nassert solution(\"1 2 3 4 5 6\") == \"impossible\"",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected '{sample_output}', but got '{solution(sample_input)}'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4 3 1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 3 4\") == \"4 3 1\"\nassert solution(\"5\\n1 3 4 5 6\") == \"4 3 1 5 6\"\nassert solution(\"6\\n1 2 3 4 5\") == \"4 2 5 3 1\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"4 2 5 3 1 6 7\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"4 2 5 3 1 6 7 8\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"4 2 5 3 1 6 7 8 9\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"4 2 5 3 1 6 7 8 9 10\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\") == \"4 2 5 3 1 6 7 8 9 10 11\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"4 2 5 3 1 6 7 8 9 10 11 12\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"4 2 5 3 1 6 7 8 9 10 11 12 13\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"4 2 5 3 1 6 7 8 9 10 11 12 13 14\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"4 2 5 3 1 6 7 8 9 10 11 12 13 14 15\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"4 2 5 3 1 6 7 8 9 10 11 12 13 14 15 16\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"4 2 5 3 1 6 7 8 9 10 11 12 13 14 15 16 17\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"4 2 5 3 1 6 7 8 9 10 11 12 13 14 15 16 17 18\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"4 2 5 3 1 6 7 8 9 10 11 12 13 14 15 16 17 18 19\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 ",
        "num_ids_2": 50,
        "num_ids_4": 116
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"4 3 1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {sample_index + 1} failed: {sample_output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 3 4\") == \"4 3 1\"\nassert solution(\"2\\n1 2 3\") == \"2 3 1\"\nassert solution(\"3\\n5 2 1\") == \"impossible\"\nassert solution(\"4\\n1 2 3 4\") == \"impossible\"",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4 3 1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 20 15') == '18.400'\nassert solution('3 10') == '3.000'\nassert solution('4 5 10') == '12.500'\nassert solution('5 20 50') == '100.000'\nassert solution('1 100 10') == '10.000'\nassert solution('2 100 50') == '50.000'\nassert solution('3 100 400') == '1200.000'\nassert solution('4 200 1000') == '5000.000'\nassert solution('5 1000 10000') == '100000.000'\nassert solution('6 100 50') == '55.000'",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 20 15\\n3 10\") == \"18.400\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == '18.400'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    2 20 15\n    3 10\n''') == '18.4'\nassert solution('''\n    3 10 10\n    1 2 3\n''') == '11.4'\nassert solution('''\n    10 20 10\n    5 20 20\n    25 15 30\n''') == '36.0'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 20 15\\n3 10\") == \"18.400\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"18.400\", \"The output should be 18.400\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 18.400\nprint(\"All test cases passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 20 15\\n3 10\") == \"18.400\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 18.400, \"Test failed for solution.\"\nprint(\"Test passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 20 15') == 18.4\nassert solution('3 10') == 10\n\nimport math",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 0\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n3\\n....H\\n.....\\nS....\\n....H\\n.....\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n3\\n....H\\n.....\\nS....\\n....H\\n.....\\n4\") == 4\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n3\\n....H\\n.....\\nS....\\n....H\\n.....\\n4\\n....H\\n.....\\nS....\\n....H\\n.....\") == 5",
        "num_ids_2": 56,
        "num_ids_4": 155
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n') == 5, \"The maximum Manhattan distance that any spy has to travel in order to reach the nearest safe house is 5\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\") == 5, \"Incorrect solution\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == \"5\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n') == '5'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    5\n   ....H\n  .....\n    S....\n   ....H\n  .....\n    \"\"\"\n) == 5",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '5\\n5\\n5\\n5\\n5\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == 0, \"Solution is incorrect\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    5 2 3\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    5 2 3\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    5 2 3\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    5 2 3\n    \"\"\"\n) == \"0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2 3\\n2 4\\n1 3 5') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\\n\"\nassert solution(\"5 2 3\\n2 4\\n1 3 5\\n1 3\") == \"1\\n\"\nassert solution(\"5 2 3\\n2 4\\n1 3 5\\n1 3 5\") == \"2\\n\"\nassert solution(\"5 2 3\\n2 4\\n1 3 5\\n1 3 5\\n1 3 5\") == \"3\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 138
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2 3\\n2 4\\n1 3 5') == '0\\n'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2 3\\n2 4\\n1 3 5\\n') == '0'\nassert solution('5 2 3\\n2 4\\n1 3\\n') == '1'\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == '2'\n\nfrom typing import List",
        "num_ids_2": 54,
        "num_ids_4": 82
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\\n\"\n\nassert solution(\"5 3 2\\n3 3 2\\n2 2 2\") == \"0\\n\"\n\nassert solution(\"5 2 1\\n2 4\\n1 3 5\") == \"0\\n\"\n\nassert solution(\"5 1 2\\n2 4\\n1 3 5\") == \"3\\n\"\n\nassert solution(\"5 3 2\\n3 3 2\\n2 2 2\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 114
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\\n\", \"Please implement the solution.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0.000000000\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\n\nfrom typing import List",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 0.000000000\n\nprint(\"Solution passed!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0.000000000\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"0.000000000\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0.000000000'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0.000000000, \"The solution should return 0.000000000\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == 0.000000000\nassert solution(\"2 2\") == 0.0\nassert solution(\"3 3\") == 0.0\nassert solution(\"4 4\") == 0.0\nassert solution(\"5 5\") == 0.0",
        "num_ids_2": 34,
        "num_ids_4": 60
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test case failed for input: {stdin}\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 2\nassert solution(2) == 1\nassert solution(4) == 1\nassert solution(1) == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n''') == '2\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n') == '2\\n'\n\nprint(solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n'))",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n\") == \"2\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for input {input_str}, expected {output_str}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n100\\n101\\n102\\n103\\n488\\n\\n100\\n200\\n300\\n101\\n102\\n\\n103\\n102\\n101\\n488\\n100\") == \"2\\n\"\nassert solution(\"1\\n100\\n101\\n102\\n103\\n488\\n\\n100\\n200\\n300\\n101\\n102\\n\\n103\\n102\\n101\\n488\\n100\") == \"2\\n\"\nassert solution(\"1\\n100\\n101\\n102\\n103\\n488\\n\\n100\\n200\\n300\\n101\\n102\\n\\n103\\n102\\n101\\n488\\n100\") == \"2\\n\"",
        "num_ids_2": 182,
        "num_ids_4": 273
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\\n2\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Solution is {solution(input())}, but should be {output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n') == '2\\n'\nassert solution(stdin='5\\n1 2 3 4 5\\n\\n\\n\\n\\n\\n') == '5\\n'\nassert solution(stdin='5\\n1 2 3 4 5\\n1 2 3 4 5\\n\\n\\n\\n\\n') == '0\\n'\nassert solution(stdin='3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n') == '5\\n'",
        "num_ids_2": 116,
        "num_ids_4": 304
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1729', 'The output is not correct'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1729\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1730\") == \"1729\"  # expected output: \"1729\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == '1729\\n', 'The solution is incorrect'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1730') == '1729'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1730\") == \"1729\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1729\", \"Your solution is not correct.\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1729'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1730\") == \"1729\", \"Test 1 failed\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1730\") == \"1729\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"16\", \"Please enter a positive integer X.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"65536\") == \"16\", \"Incorrect output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(65536) == 16, \"The output is incorrect.\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"65536\") == \"16\\n\"\nassert solution(\"12345\") == \"5\\n\"\nassert solution(\"65536\") == \"16\\n\"\nassert solution(\"12345\") == \"5\\n\"\nassert solution(\"12345\") == \"5\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"65536\") == \"16\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"16\", \"Incorrect output. Please see the examples given.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"65536\") == \"16\" # should return 16\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(65536) == 16",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(65536) == 16",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"65536\") == \"16\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n....\\n....\\n....\\n...K\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(['4\\n....\\n....\\n....\\n...K']) == '2'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(N=4, stdin='4\\n....\\n....\\n....\\n...K\\n') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n....\\n....\\n....\\n...K\") == 2",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == '2'\nassert solution(8) == '2'\nassert solution(16) == '2'\nassert solution(20) == '2'\nassert solution(24) == '2'\nassert solution(28) == '2'\nassert solution(32) == '2'\nassert solution(36) == '2'\nassert solution(40) == '2'\nassert solution(44) == '2'\nassert solution(48) == '2'\nassert solution(52) == '2'\nassert solution(56) == '2'\nassert solution(60) == '2'\nassert solution(64) == '2'\nassert solution(68) == '2'\nassert solution(72) == '2'\nassert solution(76) == '2'\nassert solution(80) == '2'\nassert solution(84) == '2'\nassert solution(88) == '2'\nassert solution(92) == '2'\nassert solution(96) == '2'\nassert solution(100) == '2'\nassert solution(104) == '2'\nassert solution(108) == '2'\nassert solution(112) == '2'\nassert solution(116) == '2'\nassert solution(120) == '2'\nassert solution(124) == '2'\nassert solution(128) == '2'\nassert solution(132) == '2'\nassert solution(136) == '2'\nassert solution(140) == '2'\nassert solution(144) == '2'\nassert solution(148) == '2'\nassert solution(152) == '2'\nassert solution(156) == '2'\nassert solution(160) == '2'\nassert solution(164) == '2'\nassert solution(168) == '2'\nassert solution(172) == '2'\nassert solution(176) == '2'\nassert solution(180) == '2'\nassert solution(184) == '2'\nassert solution(188) == '2'\nassert solution(192) == '2'\nassert solution(196) == '2'\nassert solution(200) == '2'\nassert solution(204) == '2'\nassert solution(208) == '2'\nassert solution(212) == '2'\nassert solution(216) == '2'\nassert solution(220) == '2'\nassert solution(224) == '2'\nassert solution(228) == '2'\nassert solution(232) == '2'\nassert solution(236) == '2'\nassert solution(240) == '2'\nassert solution(244) == '2'\nassert solution(248) == '2'\nassert solution(252) == '2'\nassert solution(256) == '2'\nassert solution(260) == '2'\nassert solution(264) == '2'\nassert solution(268) == '2'\nassert solution(272) == '2'\nassert solution(276) == '2'\nassert solution(280) == '2'\nassert solution(284) == '2'\nassert solution(288) == '2'\nassert solution(292) == '2'\nassert solution(296) == '2'\nassert solution(300) == '2'\nassert solution(304) == '2'\nassert solution(308) == '2'\nassert solution(312) == '2'\nassert solution(316) == '2'\nassert solution(320) == '2'\nassert solution(324) == '2'\nassert solution(328) == '2'\nassert solution(332) == '2'\nassert solution(336) == '2'\nassert solution(340) == '2'\nassert solution(344) == '2'\nassert solution(348) == '2'\nassert solution(352) == '2'\nassert solution(356)",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n....\\n....\\n....\\n...K') == '2'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"The output is incorrect. Expected '{expected}', but got '{solution(input())}'\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n....\\n....\\n....\\n...K\\n\") == \"2\"\nassert solution(\"7\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\") == \"23\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\\n\"\nassert solution(\"100 4\\n32\\n3\\n2\\n99\\n1\\n\") == \"too late\\n\"\nassert solution(\"100 4\\n32\\n3\\n1\\n2\\n99\\n1\\n\") == \"32\\n\"\nassert solution(\"100 3\\n32\\n3\\n2\\n99\\n1\\n\") == \"32\\n\"\nassert solution(\"100 2\\n32\\n3\\n2\\n99\\n1\\n\") == \"32\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 147
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\") == \"23\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n100 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"too late\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\") == \"23\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\"\nprint(\"All tests passed!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\") == \"23\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output. \\nInput: {input()}\\nExpected output: {expected_output}\\nSolution: {solution(input())}\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    100 5\n    42\n    3\n    2\n    99\n    1\n''') == \"23\"\n\nfrom typing import List",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n') == '23\\n'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"The solution is incorrect.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"The solution is incorrect. Please check your code.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"The solution is incorrect.\"\nassert solution(\"hide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"The solution is incorrect.\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Your solution should return the correct encrypted text.\"\n\nfrom collections import defaultdict",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Sample Input\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Sample Input: playfair example\\nSample Output: BMNDZBXDKYBEJVDMUIXMMNUVIF\\nExpected: BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"hide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Sample Input: hide the gold in the tree stump\\nSample Output: BMNDZBXDKYBEJVDMUIXMMNUVIF\\nExpected: BMNDZBXDKYBEJVDMUIXMMNUVIF\"",
        "num_ids_2": 150,
        "num_ids_4": 150
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Test failed for input 'playfair example'.\"\nassert solution(\"hide the gold in the tree stump\") == \"DKYBEJVDMUIXMMNUVIFBMPLYH\", \"Test failed for input 'hide the gold in the tree stump'.\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Test failed for solution(stdin: str) -> str:\\nPlayfair cipher test failed\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Invalid output\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter the gopher's coordinates: \")) == \"The gopher cannot escape.\\n\"\nassert solution(input(\"Enter the gopher's coordinates: \")) == \"The gopher can escape through the hole at (1.500, 1.500).\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (1.500, 1.500).\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.000 2.000\") == \"The gopher can escape through the hole at (1.000, 1.000).\"\nassert solution(\"1.000 1.000 2.000 2.000\\n0.000 2.000\") == \"The gopher can escape through the hole at (0.000, 1.000).\"\nassert solution(\"1.000 1.000 2.000 2.000\\n-1.000 2.000\") == \"The gopher can escape through the hole at (0.000, 0.000).\"\n",
        "num_ids_2": 134,
        "num_ids_4": 269
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"The gopher can escape through the hole at (1.5,1.5).\\n\"\n\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"The gopher can escape through the hole at (1.500, 1.500).\", \"The solution does not match the expected output.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''1.000 1.000 2.000 2.000\n1.500 1.500''') == '''The gopher can escape through the hole at (1.500, 1.500).'''\n\nassert solution('''-1.000 -1.000 -1.000 -1.000\n0.000 0.000''') == '''The gopher can escape through the hole at (0.000, 0.000).'''\n\nassert solution('''-1.000 -1.000 -1.000 -1.000\n0.000 0.000''') == '''The gopher can escape through the hole at (0.000, 0.000).'''\n\nassert solution('''-1.000 -1.000 -1.000 -1.000\n0.000 0.000''') == '''The gopher can escape through the hole at (0.000, 0.000).'''\n\nassert solution('''-1.000 -1.000 -1.000 -1.000\n0.000 0.000''') == '''The gopher can escape through the hole at (0.000, 0.000).'''\n\nassert solution('''-1.000 -1.000 -1.000 -1.000\n0.000 0.000''') == '''The gopher can escape through the hole at (0.000, 0.000).'''\n\nassert solution('''-1.000 -1.000 -1.000 -1.000\n0.000 0.000''') == '''The gopher can escape through the hole at (0.000, 0.000).'''",
        "num_ids_2": 55,
        "num_ids_4": 111
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.500 1.500\") == \"The gopher can escape through the hole at (1.5, 1.5).\\n\"\nassert solution(\"1.500 1.500 2.500 2.500\") == \"The gopher can escape through the hole at (1.5, 1.5), the gopher can escape through the hole at (2.5, 2.5), and the gopher can escape through the hole at (2.5, 2.5).\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 172
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500 1.800 2.000\") == \"The gopher can escape through the hole at (1.500, 1.500).\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500 1.800 2.000 1.600 1.500\") == \"The gopher cannot escape.\"",
        "num_ids_2": 129,
        "num_ids_4": 203
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.500 1.500\") == \"The gopher can escape through the hole at (1.5, 1.5).\\n\"\nassert solution(\"1.000 1.000\") == \"The gopher can escape through the hole at (0.0, 0.0).\\n\"\nassert solution(\"1.000 2.000\") == \"The gopher can escape through the hole at (1.0, 2.0).\\n\"\n",
        "num_ids_2": 79,
        "num_ids_4": 159
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher cannot escape.\"\nassert solution(\"1.500 1.500\") == \"The gopher can escape through the hole at (1.500, 1.500).\"\n",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at (1.5, 1.5).\\n\"\nassert solution(\"1.500 1.500\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.000 1.000 2.000 2.000 3.000 3.000\") == \"The gopher can escape through the hole at (1.5, 1.5).\\nThe gopher cannot escape.\\nThe gopher can escape through the hole at (3.5, 3.5).\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 172
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y\\n'\nassert solution('2 2\\n1 1\\n2') == 'N\\n'\nassert solution('0 0\\n0 0\\n0') == 'Y\\n'\nassert solution('5 5\\n5 5\\n0') == 'N\\n'\nassert solution('10 10\\n10 10\\n0') == 'Y\\n'\nassert solution('10 10\\n0 0\\n0') == 'Y\\n'",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\"\nassert solution(\"4 2\\n2 4\") == \"N\"\nassert solution(\"5 4\\n3 2\") == \"N\"\nassert solution(\"1 1\\n5 5\") == \"N\"\nassert solution(\"2 2\\n5 5\") == \"N\"\nassert solution(\"1 1\\n2 2\") == \"N\"",
        "num_ids_2": 37,
        "num_ids_4": 71
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Test {i+1} failed: solution({input})!= {output}\" for i, (input, output) in enumerate(zip(inputs, outputs))\nprint(\"All tests passed!\")",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\"\nassert solution(\"3 4\\n2 3\\n3\") == \"Y\"\nassert solution(\"2 3\\n3 4\\n3\") == \"N\"\nassert solution(\"3 4\\n3 2\\n3\") == \"N\"\nassert solution(\"3 4\\n3 3\\n2\") == \"N\"\nassert solution(\"3 4\\n3 3\\n4\") == \"N\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y'\n\nassert solution('1 2\\n4 5\\n3') == 'N'\n\nassert solution('3 3\\n3 4\\n5') == 'N'\n\nassert solution('0 0\\n0 0\\n0') == 'Y'\n\nassert solution('3 4\\n2 4\\n1') == 'N'\n\nassert solution('3 3\\n3 4\\n6') == 'N'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y\\n'\nassert solution('1 1\\n2 2\\n3') == 'N\\n'\nassert solution('1 1\\n2 1\\n2') == 'Y\\n'\nassert solution('1 1\\n2 2\\n4') == 'Y\\n'\nassert solution('1 1\\n2 3\\n4') == 'N\\n'\nassert solution('1 1\\n2 4\\n4') == 'Y\\n'\nassert solution('1 1\\n2 5\\n4') == 'N\\n'",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3 4) == 'Y'\n\nsolution(3 4)",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3 4\n3 3\n3''') == 'Y'\n\nassert solution('''2 3\n2 2\n1''') == 'N'\n\nassert solution('''10 10\n0 0\n100''') == 'Y'\n\nassert solution('''1000 1000\n0 0\n1000''') == 'N'",
        "num_ids_2": 14,
        "num_ids_4": 36
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y'\n\nassert solution('5 6\\n4 4\\n3') == 'N'\n\nassert solution('2 2\\n5 5\\n1') == 'N'\n\nassert solution('7 7\\n-3 3\\n0') == 'Y'\n\nassert solution('1000 1000\\n-1000 -1000\\n10000') == 'Y'\n\nassert solution('0 0\\n0 0\\n10000') == 'N'",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed. Input:\\n{input()}\\nOutput:\\n{output()}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..') == ['...V...', '...V...', '..VVV..', '.VV#VV.', '.V###V.']",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == expected, f\"Expected '{expected}', got '{solution(stdin: str)}'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n') == '\\n...V...\\n...V...\\n..VVV..\\n.VV#VV. \\n.V###V. \\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example Input\\n#assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n') == '\\n...V...\\n...V...\\n..VVV..\\n.VV#VV. \\n.V###V. \\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example Output\\n#assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n') == '\\n...V...\\n...V...\\n..VVV..\\n.VV#VV. \\n.V###V. \\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 229,
        "num_ids_4": 229
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for solution. Expected output: {expected_output}, but got: {solution(input())}\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") == \\\n\"\"\"...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..') == '\\n...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:pass\\n'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 7\") == [\"...V...\",\"...V...\",\"..VVV..\",\".VV#VV.\",\".V###V.\"], \"Incorrect output for example 1\"\nassert solution(\"5 7\") == [\"...V...\",\"...V...\",\"..VVV..\",\".VV#VV.\",\".V###V.\"], \"Incorrect output for example 2\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\") == \"11\", \"Your solution is not correct!\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13\") == \"11\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13\") == \"11\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\") == \"11\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\") == \"11\" # The output should be \"11\".\nassert solution(\"5\") == \"101\" # The output should be \"101\".\nassert solution(\"10\") == \"100\" # The output should be \"100\".\nassert solution(\"24\") == \"11000\" # The output should be \"11000\".\nassert solution(\"90\") == \"101000\" # The output should be \"101000\".",
        "num_ids_2": 43,
        "num_ids_4": 93
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"11\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('13') == '11'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('13') == '11'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(13) == 11",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('13') == '11' # Correct solution",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"I must watch Star Wars with my daughter\"\nassert solution(\"12\") == \"9\"\nassert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\") == \"9\"\n\nfrom typing import List",
        "num_ids_2": 30,
        "num_ids_4": 101
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\\npink\\nturqrose\\nbabypink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nroSee\\nJETblack\\npink\\ngray\") == \"9\"\nassert solution(\"12\\npink\\nbabypink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nroSee\\nJETblack\\npink\\npInKpinkPinK\") == \"9\"\nassert solution(\"12\\npink\\npInKpinkPinK\\npink\\nroSee\\nbabypink\\npink\\ngray\") == \"9\"\nassert solution(\"12\\npink\\npInKpinkPinK\\npink\\npInKpinkPinK\\nroSee\\npInKpinkPinK\\ngray\") == \"9\"\nassert solution(\"12\\npink\\npInKpinkPinK\\npink\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\npInKpinkPinK\\np",
        "num_ids_2": 117,
        "num_ids_4": 201
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon') == 9\nprint('All tests passed!')",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\") == \"9\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == 9, \"Output does not match expected result\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == \"9\\nI must watch Star Wars with my daughter\"\n",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution mismatch. Expected {output}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabyPink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\") == \"9\\nI must watch Star Wars with my daughter\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == \"9\\nI must watch Star Wars with my daughter\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\") == \"9\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nfrom typing import List",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\npass\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1 3 5\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 5 3\\nABC') == '1 3 5', \"The solution should return '1 3 5' but instead returned '{}'.\".format(solution('1 5 3\\nABC'))\nassert solution('1 3 5\\nDEF') == '1 3 5', \"The solution should return '1 3 5' but instead returned '{}'.\".format(solution('1 3 5\\nDEF'))\nassert solution('1 5 3\\nGHI') == '1 3 5', \"The solution should return '1 3 5' but instead returned '{}'.\".format(solution('1 5 3\\nGHI'))\nassert solution('1 3 5\\nJKL') == '1 3 5', \"The solution should return '1 3 5' but instead returned '{}'.\".format(solution('1 3 5\\nJKL'))\nassert solution('1 5 3\\nMNO') == '1 3 5', \"The solution should return '1 3 5' but instead returned '{}'.\".format(solution('1 5 3\\nMNO'))",
        "num_ids_2": 104,
        "num_ids_4": 212
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"\nassert solution(\"1 3 5\\nABC\") == \"1 3 5\"\nassert solution(\"1 3 5\\nDEF\") == \"DEF\"\nassert solution(\"1 5 3\\nDEF\") == \"DEF\"\nassert solution(\"1 3 5\\nGHI\") == \"GHI\"",
        "num_ids_2": 42,
        "num_ids_4": 76
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 5 3\\nABC') == '1 3 5'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\", \"The output should be 1 3 5\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\\ndef solution(stdin: str) -> str: \\npass\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"8.00000000\", \"Incorrect output\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    buy 1 15\n    split 3\n    sell 1 5\n    die 4\n    \"\"\"\n) == \"8.00000000\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\\nsell 3 1\\nbuy 2 10\\nsell 2 5\\nsell 1 4\\nsell 2 3\\nbuy 3 10\\nsell 3 7\\nsell 2 5\\nsell 1 4\\nsell 3 4\\nbuy 4 10\\nsell 4 7\\nsell 3 5\\nsell 2 4\\nsell 1 3\\nsell 4 4\\nsell 3 3\\nsell 2 2\\nsell 1 1\\nsell 4 1\\nsell 3 2\\nsell 2 1\\nsell 1 0\\nsell 4 0\\nsell 3 1\\nsell 2 0\\nsell 1 1\\nsell 4 1\\nsell 3 0\\nsell 2 1\\nsell 1 0\\nsell 4 0\\nsell 3 1\\nsell 2 0\\nsell 1 1\\nsell 4 1\\nsell 3 0\\nsell 2 1\\nsell 1 0\\nsell 4 0\\nsell 3 1\\nsell 2 0\\nsell 1 1\\nsell 4 1\\nsell 3 0\\nsell 2 1\\nsell 1 0\\nsell 4 0\\nsell 3 1\\nsell 2 0\\nsell 1 1\\nsell 4 1\\nsell 3 0\\nsell 2 1\\nsell 1 0\\nsell 4 0\\nsell 3 1\\nsell 2 0\\nsell 1 1\\nsell 4 1\\nsell 3 0\\nsell 2 1\\nsell 1 0\\nsell 4 0\\nsell 3 1\\nsell 2 0\\nsell 1 1\\nsell 4 1\\nsell 3 0\\nsell 2 1\\nsell 1 0\\nsell 4 0\\nsell 3 1\\nsell 2 0\\nsell 1 1\\nsell 4 1\\nsell 3 0\\nsell 2 1\\nsell 1 0\\nsell 4 0\\nsell 3 1\\nsell 2 0\\nsell 1 1\\nsell 4 1\\nsell 3 0\\nsell 2 1\\nsell 1 0\\nsell 4 0\\nsell 3 1\\nsell 2 0\\nsell 1 1\\nsell 4 1\\nsell 3 0\\nsell 2 1\\nsell 1 0\\nsell 4 0\\nsell 3 1\\nsell 2 0\\nsell 1 1\\nsell 4 1\\nsell 3 0\\nsell 2 1\\nsell 1 0\\nsell 4 0\\nsell 3 1\\nsell 2 0\\nsell 1 1\\nsell 4 1\\nsell 3 0\\nsell 2 1\\nsell 1 0\\nsell 4 0\\nsell 3 1\\nsell 2 0\\nsell 1 1\\nsell 4 1\\nsell 3 0\\nsell 2 1\\nsell 1 0\\nsell 4 0\\nsell 3 1\\nsell 2 0\\nsell 1 1\\nsell 4 1\\nsell 3 0\\nsell 2 1\\nsell 1 0\\nsell 4 0\\nsell 3 1\\nsell 2 0\\nsell 1 1\\nsell 4 1\\nsell 3 0\\nsell 2 1\\nsell 1 0\\nsell 4 0\\nsell 3 1\\nsell 2 0\\nsell 1 1\\nsell 4 1\\nsell 3 0\\nsell 2 1\\nsell 1 0\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\") == \"8.00000000\\n\"\nassert solution(\"buy 5 10\\nsell 3 6\\nsplit 2\\nmerge 5\\ndie 2\") == \"30.00000000\\n\"\nassert solution(\"buy 3 10\\nsell 2 7\\nsplit 4\\nsplit 6\\nmerge 3\\nmerge 2\\ndie 6\") == \"85.00000000\\n\"\nassert solution(\"buy 2 10\\nsell 5 12\\nsplit 6\\nmerge 4\\nsplit 8\\ndie 9\") == \"120.00000000\\n\"\nassert solution(\"buy 4 10\\nsell 4 10\\nsplit 2\\nmerge 3\\ndie 1\") == \"40.00000000\\n\"\nassert solution(\"buy 3 10\\nsell 2 7\\nsplit 4\\nsplit 6\\nmerge 3\\nmerge 2\\ndie 6\") == \"85.00000000\\n\"",
        "num_ids_2": 87,
        "num_ids_4": 202
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n''') == '8.00000000'\n\nfrom typing import List",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\") == 8.0\nassert solution(\"buy 2 5\\nsell 1 4\\nsell 2 6\\nsell 1 3\\nsell 1 2\\nmerge 2\\nbuy 1 6\\nsell 1 3\\nsell 1 2\\nsell 1 1\\nsell 1 0\\ndie 5\\nbuy 2 3\\nsell 2 2\\nsell 2 1\\nsell 2 0\\nsell 1 1\\nsell 1 0\\nmerge 2\\nsell 1 1\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nbuy 1 5\\nsell 1 4\\nsell 1 3\\nsell 1 2\\nsell 1 1\\nsell 1 0\\nmerge 2\\nbuy 2 2\\nsell 2 1\\nsell 2 0\\nsell 1 1\\nsell 1 0\\nmerge 2\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nbuy 2 3\\nsell 2 2\\nsell 2 1\\nsell 2 0\\nsell 1 1\\nsell 1 0\\nmerge 2\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nbuy 1 5\\nsell 1 4\\nsell 1 3\\nsell 1 2\\nsell 1 1\\nsell 1 0\\nmerge 2\\nbuy 2 2\\nsell 2 1\\nsell 2 0\\nsell 1 1\\nsell 1 0\\nmerge 2\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nbuy 1 5\\nsell 1 4\\nsell 1 3\\nsell 1 2\\nsell 1 1\\nsell 1 0\\nmerge 2\\nbuy 2 2\\nsell 2 1\\nsell 2 0\\nsell 1 1\\nsell 1 0\\nmerge 2\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nbuy 1 5\\nsell 1 4\\nsell 1 3\\nsell 1 2\\nsell 1 1\\nsell 1 0\\nmerge 2\\nbuy 2 2\\nsell 2 1\\nsell 2 0\\nsell 1 1\\nsell 1 0\\nmerge 2\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nbuy 1 5\\nsell 1 4\\nsell 1 3\\nsell 1 2\\nsell 1 1\\nsell 1 0\\nmerge 2\\nbuy 2 2\\nsell 2 1\\nsell 2 0\\nsell 1 1\\nsell 1 0\\nmerge 2\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nbuy 1 5\\nsell 1 4\\nsell 1 3\\nsell 1 2\\nsell 1 1\\nsell 1 0\\nmerge 2\\nbuy 2 2\\nsell 2 1\\nsell 2 0\\nsell 1 1\\nsell 1 0\\nmerge 2\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nsell 1 0\\nbuy 1 5\\nsell 1 4\\nsell 1 3",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\") == \"8.00000000\"\nassert solution(\"buy 2 20\\nbuy 1 10\\nsell 2 20\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1 10\\nsell 2 10\\nsell 1",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('buy 1 15\\nsell 1 5\\ndie 4\\nbuy 2 30\\nbuy 5 25\\nsell 2 10\\nsell 5 25\\nsell 1 7\\nbuy 1 10\\nsell 5 4\\nbuy 1 15\\nsell 2 10\\nsell 5 4\\nsell 1 7\\nsell 2 20\\nbuy 1 10\\nsell 5 4\\nbuy 1 15\\nsell 2 10\\nsell 5 4\\nsell 1 7\\nsell 2 20\\nsell 5 4\\nsell 1 7\\nsell 1 20\\nbuy 1 10\\nsell 5 4\\nbuy 1 15\\nsell 2 10\\nsell 5 4\\nsell 1 7\\nsell 2 20\\nsell 5 4\\nsell 1 7\\nsell 1 20\\nsell 1 10\\nsell 5 4\\nbuy 1 15\\nsell 2 10\\nsell 5 4\\nsell 1 7\\nsell 2 20\\nsell 5 4\\nsell 1 7\\nsell 1 20\\nsell 1 10\\nsell 5 4\\nbuy 1 15\\nsell 2 10\\nsell 5 4\\nsell 1 7\\nsell 2 20\\nsell 5 4\\nsell 1 7\\nsell 1 20\\nsell 1 10\\nsell 5 4\\nbuy 1 15\\nsell 2 10\\nsell 5 4\\nsell 1 7\\nsell 2 20\\nsell 5 4\\nsell 1 7\\nsell 1 20\\nsell 1 10\\nsell 5 4\\nbuy 1 15\\nsell 2 10\\nsell 5 4\\nsell 1 7\\nsell 2 20\\nsell 5 4\\nsell 1 7\\nsell 1 20\\nsell 1 10\\nsell 5 4\\nbuy 1 15\\nsell 2 10\\nsell 5 4\\nsell 1 7\\nsell 2 20\\nsell 5 4\\nsell 1 7\\nsell 1 20\\nsell 1 10\\nsell 5 4\\nbuy 1 15\\nsell 2 10\\nsell 5 4\\nsell 1 7\\nsell 2 20\\nsell 5 4\\nsell 1 7\\nsell 1 20\\nsell 1 10\\nsell 5 4\\nbuy 1 15\\nsell 2 10\\nsell 5 4\\nsell 1 7\\nsell 2 20\\nsell 5 4\\nsell 1 7\\nsell 1 20\\nsell 1 10\\nsell 5 4\\nbuy 1 15\\nsell 2 10\\nsell 5 4\\nsell 1 7\\nsell 2 20\\nsell 5 4\\nsell 1 7\\nsell 1 20\\nsell 1 10\\nsell 5 4\\nbuy 1 15\\nsell 2 10\\nsell 5 4\\nsell 1 7\\nsell 2 20\\nsell 5 4\\nsell 1 7\\nsell 1 20\\nsell 1 10\\nsell 5 4\\nbuy 1 15\\nsell 2 10\\nsell 5 4\\nsell 1 7\\nsell 2 20\\nsell 5 4\\nsell 1 7\\nsell 1 20\\nsell 1 10\\nsell 5",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\") == \"8.00000000\\n\"\nassert solution(\"buy 3 2\\nbuy 4 3\\nsell 1 7\\nsell 2 6\\nsplit 2\\nsell 1 10\\nmerge 2\\nsell 1 5\\ndie 7\") == \"27.00000000\\n\"\nassert solution(\"buy 1 10\\nsell 3 20\\nsell 1 5\\ndie 8\") == \"17.00000000\\n\"",
        "num_ids_2": 115,
        "num_ids_4": 162
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"buy 1 15\\nsplit 3\\nsell 1 5\\ndie 4\") == 8.0\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(808) == 8, \"Incorrect solution for sample input 808.\"\n\nassert solution(2) == 2, \"Incorrect solution for sample input 2.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(808) == \"8\"\nassert solution(2) == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"808\") == \"8\"\nassert solution(\"2\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(808) == 8, \"Solution should return 8 for sample input 808\"\nassert solution(2) == 2, \"Solution should return 2 for sample input 2\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(808) == 8",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(808) == 8, \"The correct output should be 8\"\nassert solution(2) == 2, \"The correct output should be 2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(808) == 8, \"The solution is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(808) == 8\nassert solution(2) == 2",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"808\") == \"8\", \"Test failed\"\n\nprint(\"Test Passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(808) == 8, \"Sample Input: 808\\nSample Output: 8\"\n\nprint(\"Sample Input: 808\\nSample Output: {}\".format(solution(808)))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0\nassert solution(\"5 5\\nLWLWLW\\nLWLWLW\\nLWLWLW\\nLWLWLW\") == 3\nassert solution(\"5 5\\nLLLLLL\\nLLLLLL\\nLLLLLL\\nLLLLLL\") == 0\nassert solution(\"5 5\\nLCLCLC\\nLWLWLW\\nLCLCLC\\nLWLWLW\") == 2\nassert solution(\"5 5\\nLLLLLL\\nLWLWLW\\nLLLLLL\\nLWLWLW\") == 4\nassert solution(\"1 1\\nL\\nL\\nL\\nL\") == 1\nassert solution(\"5 5\\nLWLWLW\\nLWLWLW\\nLWLWLW\\nLWLWLW\") == 2",
        "num_ids_2": 62,
        "num_ids_4": 126
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\", \"Test Case 1 Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0, \"Test case 1 failed\"\nassert solution(\"5 5\\nWWWWWW\\nWWWWWW\\nWWWWWW\\nWWWWWW\") == 1, \"Test case 2 failed\"\nassert solution(\"4 3\\nLLL\\nLLL\\nLLL\\nLLL\") == 2, \"Test case 3 failed\"\nassert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 1, \"Test case 4 failed\"\nassert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0, \"Test case 5 failed\"\n",
        "num_ids_2": 74,
        "num_ids_4": 144
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 0, \"Please implement the solution\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC') == 0\nassert solution(r'4 5\\nLCCCC\\nCCCCC\\nCCCCC\\nCCCCC') == 1\nassert solution(r'4 5\\nWCCCC\\nCCCCC\\nCCCCC\\nCCCCC') == 1\nassert solution(r'4 5\\nCCCCC\\nWCCCC\\nCCCCC\\nCCCCC') == 2\nassert solution(r'4 5\\nCCCCC\\nCCCCC\\nWCCCC\\nCCCCC') == 3\nassert solution(r'4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nWCCCC') == 4\nassert solution(r'4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC') == 0\n",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\\n') == 0\nassert solution('5 5\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\n') == 1\nassert solution('5 5\\nLLLLL\\nCCCCC\\nCCCCC\\nLLLLL\\n') == 1\nassert solution('5 5\\nLLLLL\\nCCCCC\\nCCCCC\\nCCCCC\\n') == 0",
        "num_ids_2": 62,
        "num_ids_4": 123
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0, \"Expected output is 0, but got {}\".format(solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\"))",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 0, \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0, \"The correct result is 0\"\nassert solution(\"3 5\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\") == 2, \"The correct result is 2\"\nassert solution(\"5 5\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\") == 1, \"The correct result is 1\"\nassert solution(\"5 5\\nLLLLL\\nWLLLL\\nLLLLL\\nLLLLL\") == 1, \"The correct result is 1\"\nassert solution(\"5 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0, \"The correct result is 0\"",
        "num_ids_2": 76,
        "num_ids_4": 156
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == 60\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == 60, \"The output is not as expected\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == 60, \"The correct number of points is not returned.\"\n\nfrom typing import List",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\") == \"60\\n\", \"The output is incorrect. Please check your code.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 60, \"The solution is incorrect\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"60\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 60, \"The output should be 60, but it is {}\".format(solution())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == 60, \"The output is incorrect.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == 60, \"Your solution is incorrect.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"60\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('this is very annoying') == ['se']\nassert solution('thiss iss veery annoying') == ['def']",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"this is very annoying\") == \"se\", \"Invalid output: %s\" % solution(\"this is very annoying\")\nassert solution(\"thiss iss veery annoying\") == \"def\", \"Invalid output: %s\" % solution(\"thiss iss veery annoying\")",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('this is very annoying\\nthiss iss veery annoying') == ['s', 'e', 'v', 'e', 'r', 'y', 'a', 'n', 'o', 'i','s', 'n', 'g']\nassert solution('The quick brown fox jumps over the lazy dog') == ['e', 'q', 'u', 'i', 'c', 'k', 'b', 'r', 'w', 'n', 'o', 'x', 'j','m', 'p', 'v', 'l', 'z', 'd', 'g', 'o', 'v', 'j', 'k', 'h', 'q', 'c','m']",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3 0\\n0 0 1 1 2') == 3, \"Sample Input should give Output: 3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n\", \"The output should be 3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\\n\") == \"3\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == 3",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3 0\\n0 0 1 1 2\\n') == 3\nassert solution('5 3 0\\n0 0 1 1 3\\n') == 3\nassert solution('5 3 0\\n0 0 1 1 4\\n') == 4\nassert solution('5 3 0\\n0 0 1 1 5\\n') == 5\nassert solution('5 3 0\\n0 0 1 1 6\\n') == 5",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == 3\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3, \"Incorrect output\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"1\"\nassert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"1\\n\"\nassert solution(\"2\\n1\\n3\\n\") == \"1\\n\"\nassert solution(\"10\\n\") == \"6\\n\"\nassert solution(\"5\\n6\\n7\\n8\\n9\\n10\\n\") == \"6\\n\"\nassert solution(\"10\\n11\\n12\\n13\\n14\\n15\\n\") == \"6\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 85
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"6\\n\"\nassert solution(1) == \"1\\n\"\nassert solution(2) == \"2\\n\"\nassert solution(3) == \"6\\n\"\nassert solution(4) == \"0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n2\\n3\\n\") == \"1\\n2\\n6\"\nassert solution(\"5\\n\") == \"5\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n\") == \"6\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n1\\n\") == \"2\"\n",
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 6, \"The factorial of 3 is 6.\"\nassert solution(1) == 1, \"The factorial of 1 is 1.\"\nassert solution(2) == 2, \"The factorial of 2 is 2.\"\nassert solution(3) == 6, \"The factorial of 3 is 6.\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n2\\n3\\n\") == \"1\\n2\\n6\\n\"\nassert solution(\"5\\n10\\n15\\n20\\n25\\n\") == \"6\\n\"\nassert solution(\"10\\n\") == \"10\\n\"\nassert solution(\"10\\n\") == \"10\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 91
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n2\\n3\\n\") == \"1\\n2\\n6\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"5\\n\") == \"5\"\nassert solution(\"10\\n\") == \"10\"\nassert solution(\"1000000000\\n\") == \"1\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 39,
        "num_ids_4": 65
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\nfor i in range(T):\n    N = int(input())\n    print(last_digit(factorial(N)))",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 2') == '4 2\\n'\nassert solution('5\\n1 2 3 4 5') == '6 4\\n'\nassert solution('6\\n1 1 1 1 1') == '6 6\\n'\nassert solution('7\\n1 1 1 1 1 1 1 1 1') == '14 10\\n'",
        "num_ids_2": 46,
        "num_ids_4": 106
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 2\\n\") == \"4 2\\n\", \"Incorrect output\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"4 2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\", \"The solution is not correct\"\nassert solution(\"5\\n2 3 4 5 6\") == \"21 23\", \"The solution is not correct\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 2\\n\") == \"4 2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"15 10\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"21 14\"",
        "num_ids_2": 44,
        "num_ids_4": 71
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n3 1 2\\n') == '4 2\\n'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\"\nassert solution(\"10\\n3 4 5 6 7 8 9 10\") == \"60 40\"\nassert solution(\"2\\n1 2\") == \"2 2\"\nassert solution(\"5\\n1 1 2 2 3\") == \"9 4\"",
        "num_ids_2": 52,
        "num_ids_4": 92
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 2\\n\") == \"4 2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == output, f\"Test Case {test_case_num} failed: {output}!= {expected}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 1\") == \"2\"\nassert solution(\"1000 100 3\") == \"16\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 1\") == 2, \"Expected Output: 2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"The output is not as expected\"\nfor i in range(3):\n    assert input().split()[i] == output().split()[i], \"The input is not as expected\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 1\") == 2, \"Incorrect output for example 1\"\nassert solution(\"5 3 2\") == 3, \"Incorrect output for example 2\"\nassert solution(\"10 3 5\") == 15, \"Incorrect output for example 3\"\nassert solution(\"10 10 10\") == 55, \"Incorrect output for example 4\"\nassert solution(\"10 10 10\") == 55, \"Incorrect output for example 5\"\n",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2 1') == 2, \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 1\") == \"2\\n\"\nassert solution(\"1000 50 2\") == \"2\\n\"\nassert solution(\"1000 1000 1\") == \"2\\n\"\nassert solution(\"100 2 10\") == \"12\\n\"\nassert solution(\"10 1 1\") == \"1\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2, \"Test failed\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == 36, \"Incorrect solution\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"36\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 36, \"Incorrect solution\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"36\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == 36\nassert solution(7) == 288\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == 36, \"Your solution does not pass the test.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"36\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 36\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '36'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == 36, \"The sum of all the values in h(5) is incorrect.\"\nassert solution(7) == 288, \"The sum of all the values in h(7) is incorrect.\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n3\\n3\\n1') == '2 3 4 1'\nassert solution('4\\n2\\n3\\n1') == '2 3 4 1'\nassert solution('3\\n2\\n3\\n1') == '2 3 4 1'\nassert solution('1\\n2\\n3\\n1') == '2 3 4 1'\nassert solution('5\\n3\\n3\\n1') == 'impossible'",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"5\\n2 3 2 2 1\") == \"2 2 4 1\"\nassert solution(\"6\\n2 2 2 2 2 1\") == \"2 1 4 1\"\nassert solution(\"7\\n2 1 1 1 1 1 1 1\") == \"2 1 1 1 1 1 2 2\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"1 1 1 1 1 1 1 1\"\nassert solution(\"9\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2",
        "num_ids_2": 52,
        "num_ids_4": 122
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Sample Output: {sample_output}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3 1\\n4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"4\\n2 3 3 1\") == \"impossible\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 3 1\\n\") == \"2 3 4 1\"\nassert solution(\"5\\n2 3 1 4\\n\") == \"2 1 4 3\"\nassert solution(\"6\\n2 2 2 2\\n\") == \"2 3 4 5\"\nassert solution(\"7\\n2 2 1 1\\n\") == \"1 2 3 4\"\nassert solution(\"8\\n2 3 1 1\\n\") == \"1 2 3 4\"\nassert solution(\"9\\n2 1 1 2\\n\") == \"2 3 4 1\"\nassert solution(\"10\\n2 2 1 1\\n\") == \"1 2 3 4\"\nassert solution(\"11\\n2 1 2 1\\n\") == \"2 3 4 1\"\nassert solution(\"12\\n2 2 1 2\\n\") == \"2 1 4 3\"\nassert solution(\"13\\n2 2 2 2\\n\") == \"2 3 4 5\"\nassert solution(\"14\\n2 2 1 1\\n\") == \"1 2 3 4\"\nassert solution(\"15\\n2 2 1 1\\n\") == \"1 2 3 4\"\nassert solution(\"16\\n2 2 1 1\\n\") == \"1 2 3 4\"\nassert solution(\"17\\n2 2 1 1\\n\") == \"1 2 3 4\"\nassert solution(\"18\\n2 2 1 1\\n\") == \"1 2 3 4\"\nassert solution(\"19\\n2 2 1 1\\n\") == \"1 2 3 4\"\nassert solution(\"20\\n2 2 1 1\\n\") == \"1 2 3 4\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\\n\"\nassert solution(\"5\\n2 3 3 1\\n3 4 4 1\\n\") == \"2 3 4 1\\n3 4 5 1\\n\"\nassert solution(\"2\\n1 2\\n2 1\\n\") == \"1 2\\n1 2\\n\"\nassert solution(\"3\\n2 3\\n1 2\\n\") == \"1 2\\n2 3\\n\"\nassert solution(\"4\\n2 3\\n1 2\\n1 2\\n\") == \"1 2\\n2 3\\n1 2\\n\"\nassert solution(\"5\\n2 3\\n1 2\\n1 2\\n1 2\\n\") == \"1 2\\n2 3\\n1 2\\n1 2\\n\"\nassert solution(\"6\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n\") == \"1 2\\n2 3\\n1 2\\n1 2\\n1 2\\n2 3\\n\"\nassert solution(\"7\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n\") == \"1 2\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n2 3\\n1 2\\n\"\nassert solution(\"8\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n\") == \"1 2\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n2 3\\n1 2\\n\"\nassert solution(\"9\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n\") == \"1 2\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n2 3\\n1 2\\n\"\nassert solution(\"10\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n\") == \"1 2\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n2 3\\n1 2\\n\"\nassert solution(\"11\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n\") == \"1 2\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n2 3\\n1 2\\n\"\nassert solution(\"12\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n\") == \"1 2\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n2 3\\n1 2\\n\"\nassert solution(\"13\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n\") == \"1 2\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n2 3\\n1 2\\n\"\nassert solution(\"14\\n2 3\\n1 2\\n1 2\\n1 2\\",
        "num_ids_2": 74,
        "num_ids_4": 136
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 3 1\") == \"2 3 4 1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"4 2 3 1\") == \"2 3 4 1\"\nassert solution(\"5 2 2 1\") == \"2 2 3 4\"\nassert solution(\"6 2 2 1\") == \"2 2 3 4\"\nassert solution(\"7 2 2 1\") == \"2 2 3 4\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2 3 4 1\"\nassert solution(stdin) == \"3 4 1 2\"\nassert solution(stdin) == \"4 1 2 3\"\nassert solution(stdin) == \"1 2 3 4\"\nassert solution(stdin) == \"impossible\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 3 3 1\\n\") == \"2 3 4 1\"\nassert solution(\"4\\n3 2 1 3\\n\") == \"3 2 3 1\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"1 2 3 4\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\") == \"3\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\") == \"2\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\") == \"1\"",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4\\ndef solution(stdin: str) -> str:\\n\\tpass'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input) == expected_output, f\"Expected output: {expected_output}, got {solution(solution_input)}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\") == \"4\\ndef solution(stdin: str) -> str:\n    return f\"1\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, but got: {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output the day Theseus ended up replacing the last existing part from the previous season, or paradox avoided if Theseus never ended up replacing all the different parts.\", \"Testcase failed\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7\\n'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\"\nprint(\"All tests pass\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n7 5\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5 5\n5 7\n7 5\n''') == '''\n7 7\n'''\n\nassert solution('''\n100 100\n200 200\n''') == '''\n180 180\n'''\n\nassert solution('''\n1 1\n1 500\n501 501\n''') == '''\n1 1\n'''\n\nassert solution('''\n0 0\n1000 1000\n''') == '''\n0 0\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\\n\"\nassert solution(\"10 10\\n10 20\\n20 10\\n\") == \"20 10\\n\"\nassert solution(\"5 5\\n5 6\\n6 5\\n\") == \"6 5\\n\"\nassert solution(\"5 5\\n5 6\\n6 7\\n\") == \"7 5\\n\"\nassert solution(\"5 5\\n5 6\\n6 7\\n7 5\\n\") == \"7 5\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 120
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"7 7\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"measurement error\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"measurement error\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1.016666667\", \"Test failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"\nprint(\"All test cases passed\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\\n\"\nassert solution(\"2\\n1 61\") == \"measurement error\\n\"\nassert solution(\"3\\n1 61\") == \"measurement error\\n\"\nassert solution(\"4\\n1 61\") == \"measurement error\\n\"\nassert solution(\"5\\n1 61\") == \"measurement error\\n\"\nassert solution(\"6\\n1 61\") == \"measurement error\\n\"\nassert solution(\"7\\n1 61\") == \"measurement error\\n\"\nassert solution(\"8\\n1 61\") == \"measurement error\\n\"\nassert solution(\"9\\n1 61\") == \"measurement error\\n\"\nassert solution(\"10\\n1 61\") == \"measurement error\\n\"\nassert solution(\"11\\n1 61\") == \"measurement error\\n\"\nassert solution(\"12\\n1 61\") == \"measurement error\\n\"\nassert solution(\"13\\n1 61\") == \"measurement error\\n\"\nassert solution(\"14\\n1 61\") == \"measurement error\\n\"\nassert solution(\"15\\n1 61\") == \"measurement error\\n\"\nassert solution(\"16\\n1 61\") == \"measurement error\\n\"\nassert solution(\"17\\n1 61\") == \"measurement error\\n\"\nassert solution(\"18\\n1 61\") == \"measurement error\\n\"\nassert solution(\"19\\n1 61\") == \"measurement error\\n\"\nassert solution(\"20\\n1 61\") == \"measurement error\\n\"\nassert solution(\"21\\n1 61\") == \"measurement error\\n\"\nassert solution(\"22\\n1 61\") == \"measurement error\\n\"\nassert solution(\"23\\n1 61\") == \"measurement error\\n\"\nassert solution(\"24\\n1 61\") == \"measurement error\\n\"\nassert solution(\"25\\n1 61\") == \"measurement error\\n\"\nassert solution(\"26\\n1 61\") == \"measurement error\\n\"\nassert solution(\"27\\n1 61\") == \"measurement error\\n\"\nassert solution(\"28\\n1 61\") == \"measurement error\\n\"\nassert solution(\"29\\n1 61\") == \"measurement error\\n\"\nassert solution(\"30\\n1 61\") == \"measurement error\\n\"\nassert solution(\"31\\n1 61\") == \"measurement error\\n\"\nassert solution(\"32\\n1 61\") == \"measurement error\\n\"\nassert solution(\"33\\n1 61\") == \"measurement error\\n\"\nassert solution(\"34\\n1 61\") == \"measurement error\\n\"\nassert solution(\"35\\n1 61\") == \"measurement error\\n\"\nassert solution(\"36\\n1 61\") == \"measurement error\\n\"\nassert solution(\"37\\n1 61\") == \"measurement error\\n\"\nassert solution(\"38\\n1 61\") == \"measurement error\\n\"\nassert solution(\"39\\n1 61\") == \"measurement error\\n\"\nassert solution(\"40\\n1 61\") == \"measurement error\\n\"\nassert solution(\"41\\n1 61\") == \"measurement error\\n\"\nassert solution(\"42\\n1 61\") == \"measurement error\\n\"\nassert solution(\"43\\n1 61\") == \"measurement error\\n\"\nassert solution(\"44\\n1 61\") == \"measurement error\\n\"\nassert solution(\"45\\n1 61\") == \"measurement error\\n\"\nassert solution(\"46\\n1 61\") == \"measurement error\\n\"\nassert solution(\"47\\n1 61\") == \"measurement error\\n\"\nassert solution(\"48\\n1 61\") == \"measurement error\\n\"\nassert solution(\"49\\n1 61\") == \"measurement error\\n\"\nassert solution(\"50\\n1 61\") == \"measurement error\\n\"\nassert solution(\"51\\n1 61\") == \"measurement error\\n\"\nassert solution(\"52\\",
        "num_ids_2": 47,
        "num_ids_4": 85
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"\nassert solution(\"2\\n2 15\") == \"0.05\"\nassert solution(\"3\\n61 123\") == \"0.00833333333\"\nassert solution(\"4\\n61 259\") == \"0.000833333333\"\nassert solution(\"5\\n101 229\") == \"0.000500000000\"",
        "num_ids_2": 45,
        "num_ids_4": 106
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1.016666667\", \"Output should be 1.016666667\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {sample_case} failed\"\n\nsample_input = '''\n1\n1 61\n'''\nsample_output = '''\n1.016666667\n'''\n\nsample_input = '''\n2\n60 3600\n'''\nsample_output = '''\n0.0\n'''\n\nsample_input = '''\n3\n60 3600 60\n'''\nsample_output = '''\n1.0\n'''\n\nsample_input = '''\n4\n60 3600 60 3600\n'''\nsample_output = '''\n1.0\n'''\n\nsample_input = '''\n5\n60 3600 60 3600 60\n'''\nsample_output = '''\n1.016666667\n'''\n\nsample_input = '''\n6\n60 3600 60 3600 60 3600\n'''\nsample_output = '''\n1.016666667\n'''\n\nsample_input = '''\n7\n60 3600 60 3600 60 3600 60\n'''\nsample_output = '''\n1.016666667\n'''\n\nsample_input = '''\n8\n60 3600 60 3600 60 3600 60 60\n'''\nsample_output = '''\n1.016666667\n'''\n\nsample_input = '''\n9\n60 3600 60 3600 60 3600 60 60 60\n'''\nsample_output = '''\n1.016666667\n'''\n\nsample_input = '''\n10\n60 3600 60 3600 60 3600 60 60 60 60\n'''\nsample_output = '''\n1.016666667\n'''\n\nsample_input = '''\n11\n60 3600 60 3600 60 3600 60 60 60 60 60\n'''\nsample_output = '''\n1.016666667\n'''\n\nsample_input = '''\n12\n60 3600 60 3600 60 3600 60 60 60 60 60 60\n'''\nsample_output = '''\n1.016666667\n'''\n\nsample_input = '''\n13\n60 3600 60 3600 60 3600 60 60 60 60 60 60 60\n'''\nsample_output = '''\n1.016666667\n'''\n\nsample_input = '''\n14\n60 3600 60 3600 60 3600 60 60 60 60 60 60 60 60\n'''\nsample_output = '''\n1.016666667\n'''\n\nsample_input = '''\n15\n60 3600 60 3600 60 3600 60 60 60 60 60 60 60 60 60\n'''\nsample_output = '''\n1.016666667\n'''\n\nsample_input = '''\n16\n60 3600 60 3600 60 3600 60 60 60 60 60 60 60 60 60 60\n'''\nsample_output = '''\n1.016666667\n'''\n\nsample_input = '''\n17\n60 3600 60 3600 60 3600 6",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1 61\") == 1.016666667\nassert solution(\"2\\n1 3600\") == 0\nassert solution(\"3\\n1 60\") == 1.0\nassert solution(\"4\\n1 60\") == 2.0\nassert solution(\"5\\n1 3600\") == 0\nassert solution(\"6\\n1 60\") == 0\nassert solution(\"7\\n1 61\") == 0.983333333\nassert solution(\"8\\n1 3600\") == 0.016666667\nassert solution(\"9\\n1 60\") == 1.16666667\nassert solution(\"10\\n1 61\") == 0.983333333\nassert solution(\"11\\n1 60\") == 0.983333333\nassert solution(\"12\\n1 61\") == 0.983333333\nassert solution(\"13\\n1 60\") == 0.983333333\nassert solution(\"14\\n1 60\") == 0.983333333\nassert solution(\"15\\n1 3600\") == 0.016666667\nassert solution(\"16\\n1 61\") == 0.983333333\nassert solution(\"17\\n1 60\") == 0.983333333\nassert solution(\"18\\n1 60\") == 0.983333333\nassert solution(\"19\\n1 61\") == 0.983333333\nassert solution(\"20\\n1 60\") == 0.983333333\nassert solution(\"21\\n1 60\") == 0.983333333\nassert solution(\"22\\n1 60\") == 0.983333333\nassert solution(\"23\\n1 61\") == 0.983333333\nassert solution(\"24\\n1 60\") == 0.983333333\nassert solution(\"25\\n1 60\") == 0.983333333\nassert solution(\"26\\n1 60\") == 0.983333333\nassert solution(\"27\\n1 60\") == 0.983333333\nassert solution(\"28\\n1 60\") == 0.983333333\nassert solution(\"29\\n1 60\") == 0.983333333\nassert solution(\"30\\n1 60\") == 0.983333333\nassert solution(\"31\\n1 60\") == 0.983333333\nassert solution(\"32\\n1 60\") == 0.983333333\nassert solution(\"33\\n1 60\") == 0.983333333\nassert solution(\"34\\n1 60\") == 0.983333333\nassert solution(\"35\\n1 60\") == 0.983333333\nassert solution(\"36\\n1 60\") == 0.983333333\nassert solution(\"37\\n1 60\") == 0.983333333\nassert solution(\"38\\n1 60\") == 0.983333333\nassert solution(\"39\\n1 60\") == 0.983333333\nassert solution(\"40\\n1 60\") == 0.983333333\nassert solution(\"41\\n1 60\") == 0.983333333\nassert solution(\"42\\n1",
        "num_ids_2": 42,
        "num_ids_4": 76
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=r'CPMCRYY\\nALBERTA') == 'CALGARY'\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\", \"Test failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CPMCRYY\\nALBERTA\") == \"CALGARY\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CPMCRYY\\nALBERTA\") == \"CALGARY\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"CPMCRYY\\nALBERTA\") == \"CALGARY\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CPMCRYYALBERTA\") == \"CALGARY\"\nassert solution(\"PPQRSLCMY\") == \"NYPLQ\"\nassert solution(\"AIFJYDUB\") == \"DJYAFNE\"\nassert solution(\"EOJWSFGH\") == \"WGEFIDH\"",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('CPMCRYYALBERTA') == 'CALGARY'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"\nassert solution(\"ALBERTA\") == \"CALGARY\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"CPMCRYY\", \"ALBERTA\") == \"CALGARY\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AB\") == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AB\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AB\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AB\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AB\") == \"3\", \"Jealous of Mirko's position as head of the village, Borko stormed into his tent and tried to demonstrate Mirko's incompetence for leadership with a trick.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AB\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AB\") == 3\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('AB') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AB\") == 3\nassert solution(\"AC\") == 2\nassert solution(\"BC\") == 1\nassert solution(\"ABC\") == 3\nassert solution(\"ABCD\") == 3",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AB\") == 3",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == 3\nassert solution(\"5 6 7 8\") == 12\nassert solution(\"9 10 11 12\") == 33\nassert solution(\"13 14 15 16\") == 64\nassert solution(\"17 18 19 20\") == 95",
        "num_ids_2": 31,
        "num_ids_4": 70
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"1 2 3 2\") == \"0\"\nassert solution(\"1 1 3 2\") == \"4\"\nassert solution(\"5 5 5 5\") == \"10\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"3\\n\", \"Test 1 failed\"\nassert solution(\"1 3 4 2\") == \"3\\n\", \"Test 2 failed\"\nassert solution(\"2 3 4 1\") == \"3\\n\", \"Test 3 failed\"\nassert solution(\"4 3 2 1\") == \"3\\n\", \"Test 4 failed\"\nassert solution(\"3 4 1 2\") == \"3\\n\", \"Test 5 failed\"\nassert solution(\"10 10 10 10\") == \"3\\n\", \"Test 6 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"3\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"1 2 3 4\") == \"3\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\\n\") == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '3\\n'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '3', 'Incorrect output'\nassert solution('5 6 7 8') == '4', 'Incorrect output'\nassert solution('9 10 11 12') == '5', 'Incorrect output'\nassert solution('13 14 15 16') == '6', 'Incorrect output'\n\nfrom typing import List",
        "num_ids_2": 40,
        "num_ids_4": 87
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"103 27\") == 4, \"The correct answer is 4.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 4, \"Expected output: 4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"103 27\") == \"4\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('103 27') == '4'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"103 27\") == 4",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"103 27\") == \"4\", \"The solution should return 4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"103 27\") == \"4\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"103 27\") == 4, \"Test failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    }
]